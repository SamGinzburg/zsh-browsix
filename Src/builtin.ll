; ModuleID = 'builtin.c'
source_filename = "builtin.c"
target datalayout = "e-p:32:32-i64:64-v128:32:128-n32-S128"
target triple = "asmjs-unknown-emscripten"

%struct.hashtable = type { i32, i32, %struct.hashnode**, i8*, i32 (i8*)*, void (%struct.hashtable*)*, void (%struct.hashtable*)*, i32 (i8*, i8*)*, void (%struct.hashtable*, i8*, i8*)*, %struct.hashnode* (%struct.hashtable*, i8*)*, %struct.hashnode* (%struct.hashtable*, i8*)*, %struct.hashnode* (%struct.hashtable*, i8*)*, void (%struct.hashnode*, i32)*, void (%struct.hashnode*, i32)*, void (%struct.hashnode*)*, void (%struct.hashnode*, i32)*, void (%struct.hashtable*, void (%struct.hashnode*, i32)*, i32)* }
%struct.hashnode = type { %struct.hashnode*, i8*, i32 }
%struct.builtin = type { %struct.hashnode, i32 (i8*, i8**, %struct.options*, i32)*, i32, i32, i32, i8*, i8* }
%struct.options = type { [128 x i8], i8**, i32, i32 }
%struct._IO_FILE = type opaque
%struct.__sigset_t = type { [32 x i32] }
%union.linkroot = type { %struct.linklist }
%struct.linklist = type { %struct.linknode*, %struct.linknode*, i32 }
%struct.linknode = type { %struct.linknode*, %struct.linknode*, i8* }
%struct.histent = type { %struct.hashnode, %struct.histent*, %struct.histent*, i8*, i32, i32, i16*, i32, i32 }
%struct.eprog = type { i32, i32, i32, i32, %struct.patprog**, i32*, i8*, %struct.shfunc*, %struct.funcdump* }
%struct.patprog = type { i32, i32, i32, i32, i32, i32, i32, i32, i8 }
%struct.shfunc = type { %struct.hashnode, i8*, i32, %struct.eprog*, %struct.eprog*, %struct.emulation_options* }
%struct.emulation_options = type { i32, i32, i32, i8*, i8* }
%struct.funcdump = type { %struct.funcdump*, i32, i32, i32, i32*, i32*, i32, i32, i8* }
%struct.mathfunc = type { %struct.mathfunc*, i8*, i32, void (%struct.mnumber*, i8*, i32, %struct.mnumber*, i32)*, void (%struct.mnumber*, i8*, i8*, i32)*, i8*, i32, i32, i32 }
%struct.mnumber = type { %union.anon.2, i32 }
%union.anon.2 = type { double }
%struct.funcstack = type { %struct.funcstack*, i8*, i8*, i8*, i32, i32, i32 }
%struct.hookdef = type { %struct.hookdef*, i8*, {}*, i32, %union.linkroot* }
%struct.ttyinfo = type { %struct.termios, %struct.winsize }
%struct.termios = type { i32, i32, i32, i32, i8, [32 x i8], i32, i32 }
%struct.winsize = type { i16, i16, i16, i16 }
%struct.asgment = type { %struct.linknode, i8*, i32, %union.anon }
%union.anon = type { i8* }
%struct.gsu_scalar = type { i8* (%struct.param*)*, void (%struct.param*, i8*)*, void (%struct.param*, i32)* }
%struct.param = type { %struct.hashnode, %union.anon.0, %union.anon.1, i32, i32, i8*, i8*, %struct.param*, i32 }
%union.anon.0 = type { double }
%union.anon.1 = type { %struct.gsu_scalar* }
%struct.job = type { i32, i32, i32, i8*, %struct.process*, %struct.process*, %union.linkroot*, i32, %struct.ttyinfo* }
%struct.process = type { %struct.process*, i32, [80 x i8], i32, %struct.rusage, %struct.timeval, %struct.timeval }
%struct.rusage = type { %struct.timeval, %struct.timeval, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [16 x i32] }
%struct.timeval = type { i32, i32 }
%struct.stat = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.timespec = type { i32, i32 }
%struct.tm = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8* }
%struct.tieddata = type { i8***, i32 }
%struct.gsu_array = type { i8** (%struct.param*)*, void (%struct.param*, i8**)*, void (%struct.param*, i32)* }
%struct.gsu_integer = type { i32 (%struct.param*)*, void (%struct.param*, i32)*, void (%struct.param*, i32)* }
%struct.gsu_float = type { double (%struct.param*)*, void (%struct.param*, double)*, void (%struct.param*, i32)* }
%struct.gsu_hash = type { %struct.hashtable* (%struct.param*)*, void (%struct.param*, %struct.hashtable*)*, void (%struct.param*, i32)* }
%struct.value = type { i32, %struct.param*, i32, i32, i32, i8** }
%struct.cmdnam = type { %struct.hashnode, %union.anon.3 }
%union.anon.3 = type { i8** }
%struct.nameddir = type { %struct.hashnode, i8*, i32 }
%struct.alias = type { %struct.hashnode, i8*, i32 }
%struct.__mbstate_t = type { i32, i32 }
%struct.estate = type { %struct.eprog*, i32*, i8* }
%struct.tms = type { i32, i32, i32, i32 }
%struct.dirsav = type { i32, i32, i8*, i32, i32 }

@.str = private unnamed_addr constant [11 x i8] c"builtintab\00", align 1
@builtintab = common global %struct.hashtable* null, align 4
@.str.1 = private unnamed_addr constant [4 x i8] c"zsh\00", align 1
@builtins = internal global [77 x %struct.builtin] [%struct.builtin { %struct.hashnode { %struct.hashnode* null, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.44, i32 0, i32 0), i32 96 }, i32 (i8*, i8**, %struct.options*, i32)* null, i32 0, i32 0, i32 0, i8* null, i8* null }, %struct.builtin { %struct.hashnode { %struct.hashnode* null, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.168, i32 0, i32 0), i32 160 }, i32 (i8*, i8**, %struct.options*, i32)* null, i32 0, i32 0, i32 0, i8* null, i8* null }, %struct.builtin { %struct.hashnode { %struct.hashnode* null, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.169, i32 0, i32 0), i32 288 }, i32 (i8*, i8**, %struct.options*, i32)* null, i32 0, i32 0, i32 0, i8* null, i8* null }, %struct.builtin { %struct.hashnode { %struct.hashnode* null, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.170, i32 0, i32 0), i32 544 }, i32 (i8*, i8**, %struct.options*, i32)* null, i32 0, i32 0, i32 0, i8* null, i8* null }, %struct.builtin { %struct.hashnode { %struct.hashnode* null, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.171, i32 0, i32 0), i32 1056 }, i32 (i8*, i8**, %struct.options*, i32)* null, i32 0, i32 0, i32 0, i8* null, i8* null }, %struct.builtin { %struct.hashnode { %struct.hashnode* null, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.172, i32 0, i32 0), i32 262144 }, i32 (i8*, i8**, %struct.options*, i32)* @bin_test, i32 0, i32 -1, i32 21, i8* null, i8* null }, %struct.builtin { %struct.hashnode { %struct.hashnode* null, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.29, i32 0, i32 0), i32 2048 }, i32 (i8*, i8**, %struct.options*, i32)* @bin_dot, i32 1, i32 -1, i32 0, i8* null, i8* null }, %struct.builtin { %struct.hashnode { %struct.hashnode* null, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.122, i32 0, i32 0), i32 2048 }, i32 (i8*, i8**, %struct.options*, i32)* @bin_true, i32 0, i32 -1, i32 0, i8* null, i8* null }, %struct.builtin { %struct.hashnode { %struct.hashnode* null, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.173, i32 0, i32 0), i32 18 }, i32 (i8*, i8**, %struct.options*, i32)* @bin_alias, i32 0, i32 -1, i32 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.174, i32 0, i32 0), i8* null }, %struct.builtin { %struct.hashnode { %struct.hashnode* null, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.175, i32 0, i32 0), i32 2 }, i32 (i8*, i8**, %struct.options*, i32)* @bin_functions, i32 0, i32 -1, i32 0, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.176, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.177, i32 0, i32 0) }, %struct.builtin { %struct.hashnode { %struct.hashnode* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.178, i32 0, i32 0), i32 0 }, i32 (i8*, i8**, %struct.options*, i32)* @bin_fg, i32 0, i32 -1, i32 1, i8* null, i8* null }, %struct.builtin { %struct.hashnode { %struct.hashnode* null, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.179, i32 0, i32 0), i32 2048 }, i32 (i8*, i8**, %struct.options*, i32)* @bin_break, i32 0, i32 1, i32 6, i8* null, i8* null }, %struct.builtin { %struct.hashnode { %struct.hashnode* null, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.180, i32 0, i32 0), i32 0 }, i32 (i8*, i8**, %struct.options*, i32)* @bin_break, i32 0, i32 1, i32 8, i8* null, i8* null }, %struct.builtin { %struct.hashnode { %struct.hashnode* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.181, i32 0, i32 0), i32 53248 }, i32 (i8*, i8**, %struct.options*, i32)* @bin_cd, i32 0, i32 2, i32 10, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.182, i32 0, i32 0), i8* null }, %struct.builtin { %struct.hashnode { %struct.hashnode* null, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.183, i32 0, i32 0), i32 53248 }, i32 (i8*, i8**, %struct.options*, i32)* @bin_cd, i32 0, i32 2, i32 10, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.182, i32 0, i32 0), i8* null }, %struct.builtin { %struct.hashnode { %struct.hashnode* null, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.184, i32 0, i32 0), i32 2048 }, i32 (i8*, i8**, %struct.options*, i32)* @bin_break, i32 0, i32 1, i32 7, i8* null, i8* null }, %struct.builtin { %struct.hashnode { %struct.hashnode* null, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.185, i32 0, i32 0), i32 526354 }, i32 (i8*, i8**, %struct.options*, i32)* bitcast (i32 (i8*, i8**, %union.linkroot*, %struct.options*, i32)* @bin_typeset to i32 (i8*, i8**, %struct.options*, i32)*), i32 0, i32 -1, i32 0, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.186, i32 0, i32 0), i8* null }, %struct.builtin { %struct.hashnode { %struct.hashnode* null, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.187, i32 0, i32 0), i32 0 }, i32 (i8*, i8**, %struct.options*, i32)* @bin_dirs, i32 0, i32 -1, i32 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.188, i32 0, i32 0), i8* null }, %struct.builtin { %struct.hashnode { %struct.hashnode* null, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.189, i32 0, i32 0), i32 0 }, i32 (i8*, i8**, %struct.options*, i32)* @bin_enable, i32 0, i32 -1, i32 24, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.190, i32 0, i32 0), i8* null }, %struct.builtin { %struct.hashnode { %struct.hashnode* null, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.191, i32 0, i32 0), i32 0 }, i32 (i8*, i8**, %struct.options*, i32)* @bin_fg, i32 0, i32 -1, i32 5, i8* null, i8* null }, %struct.builtin { %struct.hashnode { %struct.hashnode* null, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.192, i32 0, i32 0), i32 4096 }, i32 (i8*, i8**, %struct.options*, i32)* @bin_print, i32 0, i32 -1, i32 23, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.193, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.44, i32 0, i32 0) }, %struct.builtin { %struct.hashnode { %struct.hashnode* null, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.194, i32 0, i32 0), i32 0 }, i32 (i8*, i8**, %struct.options*, i32)* @bin_emulate, i32 0, i32 -1, i32 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.195, i32 0, i32 0), i8* null }, %struct.builtin { %struct.hashnode { %struct.hashnode* null, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.196, i32 0, i32 0), i32 0 }, i32 (i8*, i8**, %struct.options*, i32)* @bin_enable, i32 0, i32 -1, i32 25, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.190, i32 0, i32 0), i8* null }, %struct.builtin { %struct.hashnode { %struct.hashnode* null, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.197, i32 0, i32 0), i32 2048 }, i32 (i8*, i8**, %struct.options*, i32)* @bin_eval, i32 0, i32 -1, i32 14, i8* null, i8* null }, %struct.builtin { %struct.hashnode { %struct.hashnode* null, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.198, i32 0, i32 0), i32 2048 }, i32 (i8*, i8**, %struct.options*, i32)* @bin_break, i32 0, i32 1, i32 8, i8* null, i8* null }, %struct.builtin { %struct.hashnode { %struct.hashnode* null, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.199, i32 0, i32 0), i32 526354 }, i32 (i8*, i8**, %struct.options*, i32)* bitcast (i32 (i8*, i8**, %union.linkroot*, %struct.options*, i32)* @bin_typeset to i32 (i8*, i8**, %struct.options*, i32)*), i32 0, i32 -1, i32 0, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.200, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.201, i32 0, i32 0) }, %struct.builtin { %struct.hashnode { %struct.hashnode* null, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.202, i32 0, i32 0), i32 0 }, i32 (i8*, i8**, %struct.options*, i32)* @bin_false, i32 0, i32 -1, i32 0, i8* null, i8* null }, %struct.builtin { %struct.hashnode { %struct.hashnode* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.35, i32 0, i32 0), i32 0 }, i32 (i8*, i8**, %struct.options*, i32)* @bin_fc, i32 0, i32 -1, i32 16, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.203, i32 0, i32 0), i8* null }, %struct.builtin { %struct.hashnode { %struct.hashnode* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.204, i32 0, i32 0), i32 0 }, i32 (i8*, i8**, %struct.options*, i32)* @bin_fg, i32 0, i32 -1, i32 2, i8* null, i8* null }, %struct.builtin { %struct.hashnode { %struct.hashnode* null, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.205, i32 0, i32 0), i32 526354 }, i32 (i8*, i8**, %struct.options*, i32)* bitcast (i32 (i8*, i8**, %union.linkroot*, %struct.options*, i32)* @bin_typeset to i32 (i8*, i8**, %struct.options*, i32)*), i32 0, i32 -1, i32 0, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.206, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.207, i32 0, i32 0) }, %struct.builtin { %struct.hashnode { %struct.hashnode* null, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.208, i32 0, i32 0), i32 2 }, i32 (i8*, i8**, %struct.options*, i32)* @bin_functions, i32 0, i32 -1, i32 0, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.209, i32 0, i32 0), i8* null }, %struct.builtin { %struct.hashnode { %struct.hashnode* null, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.210, i32 0, i32 0), i32 0 }, i32 (i8*, i8**, %struct.options*, i32)* @bin_read, i32 0, i32 -1, i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.211, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.212, i32 0, i32 0) }, %struct.builtin { %struct.hashnode { %struct.hashnode* null, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.213, i32 0, i32 0), i32 0 }, i32 (i8*, i8**, %struct.options*, i32)* @bin_getopts, i32 2, i32 -1, i32 0, i8* null, i8* null }, %struct.builtin { %struct.hashnode { %struct.hashnode* null, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.84, i32 0, i32 0), i32 16 }, i32 (i8*, i8**, %struct.options*, i32)* @bin_hash, i32 0, i32 -1, i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.214, i32 0, i32 0), i8* null }, %struct.builtin { %struct.hashnode { %struct.hashnode* null, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.215, i32 0, i32 0), i32 0 }, i32 (i8*, i8**, %struct.options*, i32)* @bin_fc, i32 0, i32 -1, i32 16, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.216, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.217, i32 0, i32 0) }, %struct.builtin { %struct.hashnode { %struct.hashnode* null, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.218, i32 0, i32 0), i32 526354 }, i32 (i8*, i8**, %struct.options*, i32)* bitcast (i32 (i8*, i8**, %union.linkroot*, %struct.options*, i32)* @bin_typeset to i32 (i8*, i8**, %struct.options*, i32)*), i32 0, i32 -1, i32 0, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.219, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.220, i32 0, i32 0) }, %struct.builtin { %struct.hashnode { %struct.hashnode* null, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.221, i32 0, i32 0), i32 0 }, i32 (i8*, i8**, %struct.options*, i32)* @bin_fg, i32 0, i32 -1, i32 3, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.222, i32 0, i32 0), i8* null }, %struct.builtin { %struct.hashnode { %struct.hashnode* null, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.223, i32 0, i32 0), i32 262144 }, i32 (i8*, i8**, %struct.options*, i32)* @bin_kill, i32 0, i32 -1, i32 0, i8* null, i8* null }, %struct.builtin { %struct.hashnode { %struct.hashnode* null, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.224, i32 0, i32 0), i32 0 }, i32 (i8*, i8**, %struct.options*, i32)* @bin_let, i32 1, i32 -1, i32 0, i8* null, i8* null }, %struct.builtin { %struct.hashnode { %struct.hashnode* null, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.225, i32 0, i32 0), i32 526354 }, i32 (i8*, i8**, %struct.options*, i32)* bitcast (i32 (i8*, i8**, %union.linkroot*, %struct.options*, i32)* @bin_typeset to i32 (i8*, i8**, %struct.options*, i32)*), i32 0, i32 -1, i32 0, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.226, i32 0, i32 0), i8* null }, %struct.builtin { %struct.hashnode { %struct.hashnode* null, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.227, i32 0, i32 0), i32 0 }, i32 (i8*, i8**, %struct.options*, i32)* @bin_log, i32 0, i32 0, i32 0, i8* null, i8* null }, %struct.builtin { %struct.hashnode { %struct.hashnode* null, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.228, i32 0, i32 0), i32 0 }, i32 (i8*, i8**, %struct.options*, i32)* @bin_break, i32 0, i32 1, i32 19, i8* null, i8* null }, %struct.builtin { %struct.hashnode { %struct.hashnode* null, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.229, i32 0, i32 0), i32 53248 }, i32 (i8*, i8**, %struct.options*, i32)* @bin_cd, i32 0, i32 1, i32 11, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.230, i32 0, i32 0), i8* null }, %struct.builtin { %struct.hashnode { %struct.hashnode* null, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.231, i32 0, i32 0), i32 4 }, i32 (i8*, i8**, %struct.options*, i32)* @bin_print, i32 0, i32 -1, i32 13, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.232, i32 0, i32 0), i8* null }, %struct.builtin { %struct.hashnode { %struct.hashnode* null, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.233, i32 0, i32 0), i32 20480 }, i32 (i8*, i8**, %struct.options*, i32)* @bin_print, i32 1, i32 -1, i32 26, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.234, i32 0, i32 0), i8* null }, %struct.builtin { %struct.hashnode { %struct.hashnode* null, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.235, i32 0, i32 0), i32 53248 }, i32 (i8*, i8**, %struct.options*, i32)* @bin_cd, i32 0, i32 2, i32 12, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.182, i32 0, i32 0), i8* null }, %struct.builtin { %struct.hashnode { %struct.hashnode* null, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.236, i32 0, i32 0), i32 0 }, i32 (i8*, i8**, %struct.options*, i32)* @bin_print, i32 0, i32 -1, i32 13, i8* null, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.237, i32 0, i32 0) }, %struct.builtin { %struct.hashnode { %struct.hashnode* null, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.238, i32 0, i32 0), i32 0 }, i32 (i8*, i8**, %struct.options*, i32)* @bin_pwd, i32 0, i32 0, i32 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.239, i32 0, i32 0), i8* null }, %struct.builtin { %struct.hashnode { %struct.hashnode* null, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.240, i32 0, i32 0), i32 0 }, i32 (i8*, i8**, %struct.options*, i32)* @bin_fc, i32 0, i32 -1, i32 17, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.241, i32 0, i32 0), i8* null }, %struct.builtin { %struct.hashnode { %struct.hashnode* null, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.242, i32 0, i32 0), i32 0 }, i32 (i8*, i8**, %struct.options*, i32)* @bin_read, i32 0, i32 -1, i32 0, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.243, i32 0, i32 0), i8* null }, %struct.builtin { %struct.hashnode { %struct.hashnode* null, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.244, i32 0, i32 0), i32 526354 }, i32 (i8*, i8**, %struct.options*, i32)* bitcast (i32 (i8*, i8**, %union.linkroot*, %struct.options*, i32)* @bin_typeset to i32 (i8*, i8**, %struct.options*, i32)*), i32 0, i32 -1, i32 22, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.245, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.240, i32 0, i32 0) }, %struct.builtin { %struct.hashnode { %struct.hashnode* null, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.246, i32 0, i32 0), i32 0 }, i32 (i8*, i8**, %struct.options*, i32)* @bin_hash, i32 0, i32 0, i32 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.247, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.240, i32 0, i32 0) }, %struct.builtin { %struct.hashnode { %struct.hashnode* null, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.248, i32 0, i32 0), i32 2048 }, i32 (i8*, i8**, %struct.options*, i32)* @bin_break, i32 0, i32 1, i32 9, i8* null, i8* null }, %struct.builtin { %struct.hashnode { %struct.hashnode* null, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.249, i32 0, i32 0), i32 264192 }, i32 (i8*, i8**, %struct.options*, i32)* @bin_set, i32 0, i32 -1, i32 0, i8* null, i8* null }, %struct.builtin { %struct.hashnode { %struct.hashnode* null, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.250, i32 0, i32 0), i32 0 }, i32 (i8*, i8**, %struct.options*, i32)* @bin_setopt, i32 0, i32 -1, i32 0, i8* null, i8* null }, %struct.builtin { %struct.hashnode { %struct.hashnode* null, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.251, i32 0, i32 0), i32 2048 }, i32 (i8*, i8**, %struct.options*, i32)* @bin_shift, i32 0, i32 -1, i32 0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.102, i32 0, i32 0), i8* null }, %struct.builtin { %struct.hashnode { %struct.hashnode* null, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.252, i32 0, i32 0), i32 2048 }, i32 (i8*, i8**, %struct.options*, i32)* @bin_dot, i32 1, i32 -1, i32 0, i8* null, i8* null }, %struct.builtin { %struct.hashnode { %struct.hashnode* null, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.253, i32 0, i32 0), i32 0 }, i32 (i8*, i8**, %struct.options*, i32)* @bin_suspend, i32 0, i32 0, i32 0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.254, i32 0, i32 0), i8* null }, %struct.builtin { %struct.hashnode { %struct.hashnode* null, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.255, i32 0, i32 0), i32 262144 }, i32 (i8*, i8**, %struct.options*, i32)* @bin_test, i32 0, i32 -1, i32 20, i8* null, i8* null }, %struct.builtin { %struct.hashnode { %struct.hashnode* null, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.256, i32 0, i32 0), i32 0 }, i32 (i8*, i8**, %struct.options*, i32)* @bin_ttyctl, i32 0, i32 0, i32 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.257, i32 0, i32 0), i8* null }, %struct.builtin { %struct.hashnode { %struct.hashnode* null, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.258, i32 0, i32 0), i32 2048 }, i32 (i8*, i8**, %struct.options*, i32)* @bin_times, i32 0, i32 0, i32 0, i8* null, i8* null }, %struct.builtin { %struct.hashnode { %struct.hashnode* null, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.259, i32 0, i32 0), i32 264192 }, i32 (i8*, i8**, %struct.options*, i32)* @bin_trap, i32 0, i32 -1, i32 0, i8* null, i8* null }, %struct.builtin { %struct.hashnode { %struct.hashnode* null, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.260, i32 0, i32 0), i32 0 }, i32 (i8*, i8**, %struct.options*, i32)* @bin_true, i32 0, i32 -1, i32 0, i8* null, i8* null }, %struct.builtin { %struct.hashnode { %struct.hashnode* null, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.261, i32 0, i32 0), i32 0 }, i32 (i8*, i8**, %struct.options*, i32)* @bin_whence, i32 0, i32 -1, i32 0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.262, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.263, i32 0, i32 0) }, %struct.builtin { %struct.hashnode { %struct.hashnode* null, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.264, i32 0, i32 0), i32 526354 }, i32 (i8*, i8**, %struct.options*, i32)* bitcast (i32 (i8*, i8**, %union.linkroot*, %struct.options*, i32)* @bin_typeset to i32 (i8*, i8**, %struct.options*, i32)*), i32 0, i32 -1, i32 0, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.265, i32 0, i32 0), i8* null }, %struct.builtin { %struct.hashnode { %struct.hashnode* null, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.266, i32 0, i32 0), i32 0 }, i32 (i8*, i8**, %struct.options*, i32)* @bin_umask, i32 0, i32 1, i32 0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.267, i32 0, i32 0), i8* null }, %struct.builtin { %struct.hashnode { %struct.hashnode* null, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.268, i32 0, i32 0), i32 0 }, i32 (i8*, i8**, %struct.options*, i32)* @bin_unhash, i32 0, i32 -1, i32 29, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.269, i32 0, i32 0), i8* null }, %struct.builtin { %struct.hashnode { %struct.hashnode* null, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.270, i32 0, i32 0), i32 0 }, i32 (i8*, i8**, %struct.options*, i32)* @bin_unhash, i32 1, i32 -1, i32 30, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.271, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.254, i32 0, i32 0) }, %struct.builtin { %struct.hashnode { %struct.hashnode* null, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.272, i32 0, i32 0), i32 0 }, i32 (i8*, i8**, %struct.options*, i32)* @bin_unhash, i32 1, i32 -1, i32 28, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.273, i32 0, i32 0), i8* null }, %struct.builtin { %struct.hashnode { %struct.hashnode* null, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.274, i32 0, i32 0), i32 2048 }, i32 (i8*, i8**, %struct.options*, i32)* @bin_unset, i32 1, i32 -1, i32 31, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.275, i32 0, i32 0), i8* null }, %struct.builtin { %struct.hashnode { %struct.hashnode* null, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.276, i32 0, i32 0), i32 0 }, i32 (i8*, i8**, %struct.options*, i32)* @bin_setopt, i32 0, i32 -1, i32 1, i8* null, i8* null }, %struct.builtin { %struct.hashnode { %struct.hashnode* null, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.277, i32 0, i32 0), i32 0 }, i32 (i8*, i8**, %struct.options*, i32)* @bin_fg, i32 0, i32 -1, i32 4, i8* null, i8* null }, %struct.builtin { %struct.hashnode { %struct.hashnode* null, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.278, i32 0, i32 0), i32 0 }, i32 (i8*, i8**, %struct.options*, i32)* @bin_whence, i32 0, i32 -1, i32 0, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.279, i32 0, i32 0), i8* null }, %struct.builtin { %struct.hashnode { %struct.hashnode* null, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.280, i32 0, i32 0), i32 0 }, i32 (i8*, i8**, %struct.options*, i32)* @bin_whence, i32 0, i32 -1, i32 0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.281, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.282, i32 0, i32 0) }, %struct.builtin { %struct.hashnode { %struct.hashnode* null, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.283, i32 0, i32 0), i32 0 }, i32 (i8*, i8**, %struct.options*, i32)* @bin_whence, i32 0, i32 -1, i32 0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.284, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.285, i32 0, i32 0) }, %struct.builtin { %struct.hashnode { %struct.hashnode* null, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.286, i32 0, i32 0), i32 0 }, i32 (i8*, i8**, %struct.options*, i32)* @bin_zmodload, i32 0, i32 -1, i32 0, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.287, i32 0, i32 0), i8* null }, %struct.builtin { %struct.hashnode { %struct.hashnode* null, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.288, i32 0, i32 0), i32 0 }, i32 (i8*, i8**, %struct.options*, i32)* @bin_zcompile, i32 0, i32 -1, i32 0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.289, i32 0, i32 0), i8* null }], align 4
@emulation = external global i32, align 4
@reswdtab = external global %struct.hashtable*, align 4
@.str.2 = private unnamed_addr constant [7 x i8] c"repeat\00", align 1
@opts = external global [181 x i8], align 1
@typtab = external global [256 x i16], align 2
@.str.3 = private unnamed_addr constant [3 x i8] c"--\00", align 1
@.str.4 = private unnamed_addr constant [23 x i8] c"argument expected: -%c\00", align 1
@.str.5 = private unnamed_addr constant [26 x i8] c"too many option arguments\00", align 1
@.str.6 = private unnamed_addr constant [17 x i8] c"bad option: %c%c\00", align 1
@.str.7 = private unnamed_addr constant [3 x i8] c"+-\00", align 1
@.str.8 = private unnamed_addr constant [3 x i8] c"ne\00", align 1
@errflag = external global i32, align 4
@.str.9 = private unnamed_addr constant [21 x i8] c"not enough arguments\00", align 1
@.str.10 = private unnamed_addr constant [19 x i8] c"too many arguments\00", align 1
@xtrerr = external global %struct._IO_FILE*, align 4
@.str.11 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.12 = private unnamed_addr constant [3 x i8] c"=(\00", align 1
@stderr = external constant %struct._IO_FILE*, align 4
@.str.13 = private unnamed_addr constant [3 x i8] c"]=\00", align 1
@.str.14 = private unnamed_addr constant [3 x i8] c" )\00", align 1
@shfunctab = external global %struct.hashtable*, align 4
@sufaliastab = external global %struct.hashtable*, align 4
@aliastab = external global %struct.hashtable*, align 4
@queueing_enabled = external global i32, align 4
@queue_front = external global i32, align 4
@queue_rear = external global i32, align 4
@signal_mask_queue = external global [128 x %struct.__sigset_t], align 4
@signal_queue = external global [128 x i32], align 4
@.str.15 = private unnamed_addr constant [17 x i8] c"bad pattern : %s\00", align 1
@.str.16 = private unnamed_addr constant [31 x i8] c"no such hash table element: %s\00", align 1
@.str.17 = private unnamed_addr constant [19 x i8] c"no such option: %s\00", align 1
@.str.18 = private unnamed_addr constant [24 x i8] c"can't change option: %s\00", align 1
@.str.19 = private unnamed_addr constant [16 x i8] c"bad option: -%c\00", align 1
@.str.20 = private unnamed_addr constant [25 x i8] c"can't change option: -%c\00", align 1
@paramtab = external global %struct.hashtable*, align 4
@pparams = external global i8**, align 4
@doprintdir = global i32 0, align 4
@.str.21 = private unnamed_addr constant [4 x i8] c"%s\0A\00", align 1
@pwd = external global i8*, align 4
@stdout = external constant %struct._IO_FILE*, align 4
@.str.22 = private unnamed_addr constant [3 x i8] c"0\09\00", align 1
@.str.23 = private unnamed_addr constant [5 x i8] c"\0A%d\09\00", align 1
@.str.24 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.25 = private unnamed_addr constant [2 x i8] c" \00", align 1
@dirstack = common global %union.linkroot* null, align 4
@.str.26 = private unnamed_addr constant [4 x i8] c"PWD\00", align 1
@.str.27 = private unnamed_addr constant [7 x i8] c"OLDPWD\00", align 1
@oldpwd = external global i8*, align 4
@.str.28 = private unnamed_addr constant [11 x i8] c"restricted\00", align 1
@chasinglinks = internal global i32 0, align 4
@.str.29 = private unnamed_addr constant [2 x i8] c".\00", align 1
@.str.30 = private unnamed_addr constant [24 x i8] c"unable to chdir(%s): %e\00", align 1
@.str.31 = private unnamed_addr constant [3 x i8] c"''\00", align 1
@.str.32 = private unnamed_addr constant [5 x i8] c"'\5C''\00", align 1
@.str.33 = private unnamed_addr constant [6 x i8] c" -%c \00", align 1
@.str.34 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@locallevel = external global i32, align 4
@.str.35 = private unnamed_addr constant [3 x i8] c"fc\00", align 1
@.str.36 = private unnamed_addr constant [28 x i8] c"HISTSIZE must be an integer\00", align 1
@.str.37 = private unnamed_addr constant [28 x i8] c"SAVEHIST must be an integer\00", align 1
@histsiz = external global i32, align 4
@savehistsiz = external global i32, align 4
@.str.38 = private unnamed_addr constant [22 x i8] c"invalid match pattern\00", align 1
@zleactive = external global i32, align 4
@.str.39 = private unnamed_addr constant [34 x i8] c"no interactive history within ZLE\00", align 1
@.str.40 = private unnamed_addr constant [33 x i8] c"invalid replacement pattern: =%s\00", align 1
@curhist = external global i32, align 4
@curline = external global %struct.histent, align 4
@hist_ring = external global %struct.histent*, align 4
@.str.41 = private unnamed_addr constant [2 x i8] c"w\00", align 1
@.str.42 = private unnamed_addr constant [25 x i8] c"can't open temp file: %e\00", align 1
@.str.43 = private unnamed_addr constant [54 x i8] c"current history line would recurse endlessly, aborted\00", align 1
@.str.44 = private unnamed_addr constant [2 x i8] c"-\00", align 1
@.str.45 = private unnamed_addr constant [7 x i8] c"FCEDIT\00", align 1
@.str.46 = private unnamed_addr constant [7 x i8] c"EDITOR\00", align 1
@.str.47 = private unnamed_addr constant [3 x i8] c"vi\00", align 1
@.str.48 = private unnamed_addr constant [7 x i8] c"%e: %s\00", align 1
@lastval = external global i32, align 4
@.str.49 = private unnamed_addr constant [20 x i8] c"aiEFALRZlurtxUhHTkz\00", align 1
@.str.50 = private unnamed_addr constant [23 x i8] c"bad argument to -p: %s\00", align 1
@.str.51 = private unnamed_addr constant [28 x i8] c"incompatible options for -T\00", align 1
@.str.52 = private unnamed_addr constant [38 x i8] c"-T requires names of scalar and array\00", align 1
@.str.53 = private unnamed_addr constant [26 x i8] c"too many arguments for -T\00", align 1
@.str.54 = private unnamed_addr constant [41 x i8] c"first argument of tie must be scalar: %s\00", align 1
@.str.55 = private unnamed_addr constant [41 x i8] c"second argument of tie must be array: %s\00", align 1
@.str.56 = private unnamed_addr constant [35 x i8] c"can't tie a variable to itself: %s\00", align 1
@.str.57 = private unnamed_addr constant [29 x i8] c"can't tie array elements: %s\00", align 1
@.str.58 = private unnamed_addr constant [43 x i8] c"only one tied parameter can have value: %s\00", align 1
@.str.59 = private unnamed_addr constant [45 x i8] c"third argument of tie must be join character\00", align 1
@.str.60 = private unnamed_addr constant [31 x i8] c"already tied as non-scalar: %s\00", align 1
@.str.61 = private unnamed_addr constant [34 x i8] c"can't tie already tied scalar: %s\00", align 1
@.str.62 = private unnamed_addr constant [35 x i8] c"use unset to remove tied variables\00", align 1
@realparamtab = external global %struct.hashtable*, align 4
@.str.63 = private unnamed_addr constant [21 x i8] c"no such variable: %s\00", align 1
@dummy_eprog = external global %struct.eprog, align 4
@.str.64 = private unnamed_addr constant [5 x i8] c"\22$@\22\00", align 1
@scriptname = external global i8*, align 4
@.str.65 = private unnamed_addr constant [18 x i8] c"invalid option(s)\00", align 1
@.str.66 = private unnamed_addr constant [25 x i8] c"number expected after -x\00", align 1
@mathfuncs = external global %struct.mathfunc*, align 4
@.str.67 = private unnamed_addr constant [29 x i8] c"+M %s: is a library function\00", align 1
@.str.68 = private unnamed_addr constant [30 x i8] c"-M %s: bad math function name\00", align 1
@.str.69 = private unnamed_addr constant [40 x i8] c"-M: invalid min number of arguments: %s\00", align 1
@.str.70 = private unnamed_addr constant [40 x i8] c"-Ms: must take a single string argument\00", align 1
@.str.71 = private unnamed_addr constant [40 x i8] c"-M: invalid max number of arguments: %s\00", align 1
@.str.72 = private unnamed_addr constant [23 x i8] c"-M: too many arguments\00", align 1
@.str.73 = private unnamed_addr constant [23 x i8] c"-X: too many arguments\00", align 1
@funcstack = external global %struct.funcstack*, align 4
@.str.74 = private unnamed_addr constant [13 x i8] c"bad autoload\00", align 1
@.str.75 = private unnamed_addr constant [5 x i8] c"TRAP\00", align 1
@.str.76 = private unnamed_addr constant [2 x i8] c"/\00", align 1
@.str.77 = private unnamed_addr constant [27 x i8] c"%s: invalid parameter name\00", align 1
@.str.78 = private unnamed_addr constant [15 x i8] c"%s: restricted\00", align 1
@.str.79 = private unnamed_addr constant [30 x i8] c"%s: invalid element for unset\00", align 1
@cmdnamtab = external global %struct.hashtable*, align 4
@matchednodes = internal global %union.linkroot* null, align 4
@path = external global i8**, align 4
@.str.80 = private unnamed_addr constant [13 x i8] c"%s: command\0A\00", align 1
@.str.81 = private unnamed_addr constant [5 x i8] c" is \00", align 1
@.str.82 = private unnamed_addr constant [7 x i8] c": none\00", align 1
@.str.83 = private unnamed_addr constant [11 x i8] c" not found\00", align 1
@nameddirtab = external global %struct.hashtable*, align 4
@.str.84 = private unnamed_addr constant [5 x i8] c"hash\00", align 1
@.str.85 = private unnamed_addr constant [15 x i8] c"bad assignment\00", align 1
@.str.86 = private unnamed_addr constant [15 x i8] c"restricted: %s\00", align 1
@.str.87 = private unnamed_addr constant [40 x i8] c"invalid character in directory name: %s\00", align 1
@.str.88 = private unnamed_addr constant [27 x i8] c"no such directory name: %s\00", align 1
@.str.89 = private unnamed_addr constant [20 x i8] c"no such command: %s\00", align 1
@.str.90 = private unnamed_addr constant [23 x i8] c"-a: too many arguments\00", align 1
@.str.91 = private unnamed_addr constant [31 x i8] c"illegal combination of options\00", align 1
@.str.92 = private unnamed_addr constant [7 x i8] c"'0+- #\00", align 1
@.str.93 = private unnamed_addr constant [38 x i8] c"only one of -s, -S, -v, or -z allowed\00", align 1
@.str.94 = private unnamed_addr constant [40 x i8] c"-c or -C not allowed with -s, -S, or -z\00", align 1
@.str.95 = private unnamed_addr constant [44 x i8] c"-p or -u not allowed with -s, -S, -v, or -z\00", align 1
@.str.96 = private unnamed_addr constant [30 x i8] c"number expected after -%c: %s\00", align 1
@.str.97 = private unnamed_addr constant [30 x i8] c"invalid number of columns: %s\00", align 1
@.str.98 = private unnamed_addr constant [21 x i8] c"no pattern specified\00", align 1
@.str.99 = private unnamed_addr constant [16 x i8] c"bad pattern: %s\00", align 1
@.str.100 = private unnamed_addr constant [6 x i8] c"~%s%s\00", align 1
@coprocout = external global i32, align 4
@.str.101 = private unnamed_addr constant [17 x i8] c"-p: no coprocess\00", align 1
@.str.102 = private unnamed_addr constant [2 x i8] c"p\00", align 1
@.str.103 = private unnamed_addr constant [29 x i8] c"number expected after -u: %s\00", align 1
@.str.104 = private unnamed_addr constant [20 x i8] c"bad file number: %d\00", align 1
@.str.105 = private unnamed_addr constant [18 x i8] c"bad mode on fd %d\00", align 1
@.str.106 = private unnamed_addr constant [22 x i8] c"open_memstream failed\00", align 1
@zterm_columns = external global i32, align 4
@.str.107 = private unnamed_addr constant [16 x i8] c"write error: %e\00", align 1
@bufstack = common global %union.linkroot* null, align 4
@.str.108 = private unnamed_addr constant [34 x i8] c"option -S takes a single argument\00", align 1
@histtab = external global %struct.hashtable*, align 4
@.str.109 = private unnamed_addr constant [40 x i8] c"positive integer expected after -%c: %s\00", align 1
@.str.110 = private unnamed_addr constant [36 x i8] c"%d: argument specifier out of range\00", align 1
@.str.111 = private unnamed_addr constant [4 x i8] c"%*c\00", align 1
@.str.112 = private unnamed_addr constant [22 x i8] c"%s: invalid directive\00", align 1
@.str.113 = private unnamed_addr constant [4 x i8] c"nan\00", align 1
@.str.114 = private unnamed_addr constant [5 x i8] c"-inf\00", align 1
@.str.115 = private unnamed_addr constant [4 x i8] c"inf\00", align 1
@.str.116 = private unnamed_addr constant [14 x i8] c"i/o error: %e\00", align 1
@.str.117 = private unnamed_addr constant [39 x i8] c"argument to shift must be non-negative\00", align 1
@.str.118 = private unnamed_addr constant [26 x i8] c"shift count must be <= $#\00", align 1
@bin_getopts.optbuf = private unnamed_addr constant [2 x i8] c" \00", align 1
@zoptind = external global i32, align 4
@optcind = common global i32 0, align 4
@.str.119 = private unnamed_addr constant [2 x i8] c"?\00", align 1
@zoptarg = external global i8*, align 4
@.str.120 = private unnamed_addr constant [36 x i8] c"argument expected after %c%c option\00", align 1
@.str.121 = private unnamed_addr constant [4 x i8] c"?-+\00", align 1
@.str.122 = private unnamed_addr constant [2 x i8] c":\00", align 1
@.str.123 = private unnamed_addr constant [29 x i8] c"argument is not positive: %d\00", align 1
@loops = external global i32, align 4
@.str.124 = private unnamed_addr constant [44 x i8] c"not in while, until, select, or repeat loop\00", align 1
@contflag = external global i32, align 4
@breaks = external global i32, align 4
@sourcelevel = external global i32, align 4
@retflag = external global i32, align 4
@trap_state = external global i32, align 4
@trap_return = external global i32, align 4
@.str.125 = private unnamed_addr constant [16 x i8] c"not login shell\00", align 1
@forklevel = external global i32, align 4
@shell_exiting = common global i32 0, align 4
@stopmsg = common global i32 0, align 4
@exit_pending = common global i32 0, align 4
@exit_level = common global i32 0, align 4
@nohistsave = external global i32, align 4
@subsh = external global i32, align 4
@.str.126 = private unnamed_addr constant [9 x i8] c".zlogout\00", align 1
@.str.127 = private unnamed_addr constant [13 x i8] c"/etc/zlogout\00", align 1
@intrap = external global i32, align 4
@sigtrapped = external global [34 x i32], align 4
@.str.128 = private unnamed_addr constant [8 x i8] c"zshexit\00", align 1
@zshhooks = external global [0 x %struct.hookdef], align 4
@SHTTY = external global i32, align 4
@mypid = external global i32, align 4
@argzero = external global i8*, align 4
@.str.129 = private unnamed_addr constant [4 x i8] c"csh\00", align 1
@.str.130 = private unnamed_addr constant [4 x i8] c"ksh\00", align 1
@.str.131 = private unnamed_addr constant [3 x i8] c"sh\00", align 1
@.str.132 = private unnamed_addr constant [26 x i8] c"too many arguments for -l\00", align 1
@keyboardhackchar = external global i8, align 1
@.str.133 = private unnamed_addr constant [20 x i8] c"unknown argument %s\00", align 1
@.str.134 = private unnamed_addr constant [31 x i8] c"option -L incompatible with -c\00", align 1
@sticky = external global %struct.emulation_options*, align 4
@term = external global i8*, align 4
@.str.135 = private unnamed_addr constant [6 x i8] c"emacs\00", align 1
@.str.136 = private unnamed_addr constant [6 x i8] c"reply\00", align 1
@.str.137 = private unnamed_addr constant [6 x i8] c"REPLY\00", align 1
@.str.138 = private unnamed_addr constant [32 x i8] c"only one array argument allowed\00", align 1
@compctlreadptr = external global i32 (i8*, i8**, %struct.options*, i8*)*, align 4
@.str.139 = private unnamed_addr constant [9 x i8] c"/dev/tty\00", align 1
@shout = external global %struct._IO_FILE*, align 4
@.str.140 = private unnamed_addr constant [41 x i8] c"not interactive and can't open terminal\0A\00", align 1
@shttyinfo = external global %struct.ttyinfo, align 4
@mypgrp = external global i32, align 4
@readfd = internal global i32 0, align 4
@coprocin = external global i32, align 4
@zero_mnumber = external global %struct.mnumber, align 8
@zbuf = internal global i8* null, align 4
@sigchld_mask = external global %struct.__sigset_t, align 4
@tok = external global i32, align 4
@testargs = common global i8** null, align 4
@curtestarg = common global i8** null, align 4
@tokstr = external global i8*, align 4
@.str.141 = private unnamed_addr constant [3 x i8] c"-o\00", align 1
@.str.142 = private unnamed_addr constant [3 x i8] c"-a\00", align 1
@.str.143 = private unnamed_addr constant [2 x i8] c"!\00", align 1
@.str.144 = private unnamed_addr constant [2 x i8] c"(\00", align 1
@.str.145 = private unnamed_addr constant [2 x i8] c")\00", align 1
@.str.146 = private unnamed_addr constant [2 x i8] c"]\00", align 1
@.str.147 = private unnamed_addr constant [13 x i8] c"']' expected\00", align 1
@condlex = external global void ()*, align 4
@.str.148 = private unnamed_addr constant [12 x i8] c"parse error\00", align 1
@.str.149 = private unnamed_addr constant [18 x i8] c"argument expected\00", align 1
@.str.150 = private unnamed_addr constant [15 x i8] c"%ldm%ld.%02lds\00", align 1
@siglists = external global [34 x %struct.eprog*], align 4
@.str.151 = private unnamed_addr constant [15 x i8] c"trap -- '' %s\0A\00", align 1
@.str.152 = private unnamed_addr constant [9 x i8] c"trap -- \00", align 1
@.str.153 = private unnamed_addr constant [5 x i8] c" %s\0A\00", align 1
@.str.154 = private unnamed_addr constant [21 x i8] c"undefined signal: %s\00", align 1
@.str.155 = private unnamed_addr constant [28 x i8] c"couldn't parse trap command\00", align 1
@sigs = external global [35 x i8*], align 4
@.str.156 = private unnamed_addr constant [4 x i8] c"SIG\00", align 1
@ttyfrozen = external global i32, align 4
@.str.157 = private unnamed_addr constant [17 x i8] c"tty is %sfrozen\0A\00", align 1
@.str.158 = private unnamed_addr constant [5 x i8] c"not \00", align 1
@.str.159 = private unnamed_addr constant [4 x i8] c"ugo\00", align 1
@.str.160 = private unnamed_addr constant [4 x i8] c"rwx\00", align 1
@.str.161 = private unnamed_addr constant [4 x i8] c"%c=\00", align 1
@.str.162 = private unnamed_addr constant [6 x i8] c"%03o\0A\00", align 1
@.str.163 = private unnamed_addr constant [10 x i8] c"bad umask\00", align 1
@.str.164 = private unnamed_addr constant [31 x i8] c"bad symbolic mode operator: %c\00", align 1
@.str.165 = private unnamed_addr constant [33 x i8] c"bad symbolic mode permission: %c\00", align 1
@.str.166 = private unnamed_addr constant [35 x i8] c"bad character in symbolic mode: %c\00", align 1
@.str.167 = private unnamed_addr constant [29 x i8] c"not available on this system\00", align 1
@ineval = common global i32 0, align 4
@.str.168 = private unnamed_addr constant [8 x i8] c"builtin\00", align 1
@.str.169 = private unnamed_addr constant [8 x i8] c"command\00", align 1
@.str.170 = private unnamed_addr constant [5 x i8] c"exec\00", align 1
@.str.171 = private unnamed_addr constant [7 x i8] c"noglob\00", align 1
@.str.172 = private unnamed_addr constant [2 x i8] c"[\00", align 1
@.str.173 = private unnamed_addr constant [6 x i8] c"alias\00", align 1
@.str.174 = private unnamed_addr constant [6 x i8] c"Lgmrs\00", align 1
@.str.175 = private unnamed_addr constant [9 x i8] c"autoload\00", align 1
@.str.176 = private unnamed_addr constant [13 x i8] c"dmktrRTUwWXz\00", align 1
@.str.177 = private unnamed_addr constant [2 x i8] c"u\00", align 1
@.str.178 = private unnamed_addr constant [3 x i8] c"bg\00", align 1
@.str.179 = private unnamed_addr constant [6 x i8] c"break\00", align 1
@.str.180 = private unnamed_addr constant [4 x i8] c"bye\00", align 1
@.str.181 = private unnamed_addr constant [3 x i8] c"cd\00", align 1
@.str.182 = private unnamed_addr constant [5 x i8] c"qsPL\00", align 1
@.str.183 = private unnamed_addr constant [6 x i8] c"chdir\00", align 1
@.str.184 = private unnamed_addr constant [9 x i8] c"continue\00", align 1
@.str.185 = private unnamed_addr constant [8 x i8] c"declare\00", align 1
@.str.186 = private unnamed_addr constant [38 x i8] c"AE:%F:%HL:%R:%TUZ:%afghi:%klmp:%rtuxz\00", align 1
@.str.187 = private unnamed_addr constant [5 x i8] c"dirs\00", align 1
@.str.188 = private unnamed_addr constant [5 x i8] c"clpv\00", align 1
@.str.189 = private unnamed_addr constant [8 x i8] c"disable\00", align 1
@.str.190 = private unnamed_addr constant [7 x i8] c"afmprs\00", align 1
@.str.191 = private unnamed_addr constant [7 x i8] c"disown\00", align 1
@.str.192 = private unnamed_addr constant [5 x i8] c"echo\00", align 1
@.str.193 = private unnamed_addr constant [4 x i8] c"neE\00", align 1
@.str.194 = private unnamed_addr constant [8 x i8] c"emulate\00", align 1
@.str.195 = private unnamed_addr constant [4 x i8] c"lLR\00", align 1
@.str.196 = private unnamed_addr constant [7 x i8] c"enable\00", align 1
@.str.197 = private unnamed_addr constant [5 x i8] c"eval\00", align 1
@.str.198 = private unnamed_addr constant [5 x i8] c"exit\00", align 1
@.str.199 = private unnamed_addr constant [7 x i8] c"export\00", align 1
@.str.200 = private unnamed_addr constant [32 x i8] c"E:%F:%HL:%R:%TUZ:%afhi:%lp:%rtu\00", align 1
@.str.201 = private unnamed_addr constant [3 x i8] c"xg\00", align 1
@.str.202 = private unnamed_addr constant [6 x i8] c"false\00", align 1
@.str.203 = private unnamed_addr constant [22 x i8] c"aAdDe:EfiIlLmnpPrRt:W\00", align 1
@.str.204 = private unnamed_addr constant [3 x i8] c"fg\00", align 1
@.str.205 = private unnamed_addr constant [6 x i8] c"float\00", align 1
@.str.206 = private unnamed_addr constant [27 x i8] c"E:%F:%HL:%R:%Z:%ghlp:%rtux\00", align 1
@.str.207 = private unnamed_addr constant [2 x i8] c"E\00", align 1
@.str.208 = private unnamed_addr constant [10 x i8] c"functions\00", align 1
@.str.209 = private unnamed_addr constant [13 x i8] c"kmMstTuUWx:z\00", align 1
@.str.210 = private unnamed_addr constant [6 x i8] c"getln\00", align 1
@.str.211 = private unnamed_addr constant [7 x i8] c"ecnAlE\00", align 1
@.str.212 = private unnamed_addr constant [3 x i8] c"zr\00", align 1
@.str.213 = private unnamed_addr constant [8 x i8] c"getopts\00", align 1
@.str.214 = private unnamed_addr constant [7 x i8] c"Ldfmrv\00", align 1
@.str.215 = private unnamed_addr constant [8 x i8] c"history\00", align 1
@.str.216 = private unnamed_addr constant [15 x i8] c"adDEfiLmnpPrt:\00", align 1
@.str.217 = private unnamed_addr constant [2 x i8] c"l\00", align 1
@.str.218 = private unnamed_addr constant [8 x i8] c"integer\00", align 1
@.str.219 = private unnamed_addr constant [24 x i8] c"HL:%R:%Z:%ghi:%lp:%rtux\00", align 1
@.str.220 = private unnamed_addr constant [2 x i8] c"i\00", align 1
@.str.221 = private unnamed_addr constant [5 x i8] c"jobs\00", align 1
@.str.222 = private unnamed_addr constant [7 x i8] c"dlpZrs\00", align 1
@.str.223 = private unnamed_addr constant [5 x i8] c"kill\00", align 1
@.str.224 = private unnamed_addr constant [4 x i8] c"let\00", align 1
@.str.225 = private unnamed_addr constant [6 x i8] c"local\00", align 1
@.str.226 = private unnamed_addr constant [33 x i8] c"AE:%F:%HL:%R:%TUZ:%ahi:%lp:%rtux\00", align 1
@.str.227 = private unnamed_addr constant [4 x i8] c"log\00", align 1
@.str.228 = private unnamed_addr constant [7 x i8] c"logout\00", align 1
@.str.229 = private unnamed_addr constant [5 x i8] c"popd\00", align 1
@.str.230 = private unnamed_addr constant [2 x i8] c"q\00", align 1
@.str.231 = private unnamed_addr constant [6 x i8] c"print\00", align 1
@.str.232 = private unnamed_addr constant [32 x i8] c"abcC:Df:ilmnNoOpPrRsSu:v:x:X:z-\00", align 1
@.str.233 = private unnamed_addr constant [7 x i8] c"printf\00", align 1
@.str.234 = private unnamed_addr constant [3 x i8] c"v:\00", align 1
@.str.235 = private unnamed_addr constant [6 x i8] c"pushd\00", align 1
@.str.236 = private unnamed_addr constant [7 x i8] c"pushln\00", align 1
@.str.237 = private unnamed_addr constant [4 x i8] c"-nz\00", align 1
@.str.238 = private unnamed_addr constant [4 x i8] c"pwd\00", align 1
@.str.239 = private unnamed_addr constant [4 x i8] c"rLP\00", align 1
@.str.240 = private unnamed_addr constant [2 x i8] c"r\00", align 1
@.str.241 = private unnamed_addr constant [6 x i8] c"IlLnr\00", align 1
@.str.242 = private unnamed_addr constant [5 x i8] c"read\00", align 1
@.str.243 = private unnamed_addr constant [22 x i8] c"cd:ek:%lnpqrst:%zu:AE\00", align 1
@.str.244 = private unnamed_addr constant [9 x i8] c"readonly\00", align 1
@.str.245 = private unnamed_addr constant [32 x i8] c"AE:%F:%HL:%R:%TUZ:%afghi:%lptux\00", align 1
@.str.246 = private unnamed_addr constant [7 x i8] c"rehash\00", align 1
@.str.247 = private unnamed_addr constant [3 x i8] c"df\00", align 1
@.str.248 = private unnamed_addr constant [7 x i8] c"return\00", align 1
@.str.249 = private unnamed_addr constant [4 x i8] c"set\00", align 1
@.str.250 = private unnamed_addr constant [7 x i8] c"setopt\00", align 1
@.str.251 = private unnamed_addr constant [6 x i8] c"shift\00", align 1
@.str.252 = private unnamed_addr constant [7 x i8] c"source\00", align 1
@.str.253 = private unnamed_addr constant [8 x i8] c"suspend\00", align 1
@.str.254 = private unnamed_addr constant [2 x i8] c"f\00", align 1
@.str.255 = private unnamed_addr constant [5 x i8] c"test\00", align 1
@.str.256 = private unnamed_addr constant [7 x i8] c"ttyctl\00", align 1
@.str.257 = private unnamed_addr constant [3 x i8] c"fu\00", align 1
@.str.258 = private unnamed_addr constant [6 x i8] c"times\00", align 1
@.str.259 = private unnamed_addr constant [5 x i8] c"trap\00", align 1
@.str.260 = private unnamed_addr constant [5 x i8] c"true\00", align 1
@.str.261 = private unnamed_addr constant [5 x i8] c"type\00", align 1
@.str.262 = private unnamed_addr constant [8 x i8] c"ampfsSw\00", align 1
@.str.263 = private unnamed_addr constant [2 x i8] c"v\00", align 1
@.str.264 = private unnamed_addr constant [8 x i8] c"typeset\00", align 1
@.str.265 = private unnamed_addr constant [38 x i8] c"AE:%F:%HL:%R:%TUZ:%afghi:%klp:%rtuxmz\00", align 1
@.str.266 = private unnamed_addr constant [6 x i8] c"umask\00", align 1
@.str.267 = private unnamed_addr constant [2 x i8] c"S\00", align 1
@.str.268 = private unnamed_addr constant [8 x i8] c"unalias\00", align 1
@.str.269 = private unnamed_addr constant [4 x i8] c"ams\00", align 1
@.str.270 = private unnamed_addr constant [11 x i8] c"unfunction\00", align 1
@.str.271 = private unnamed_addr constant [2 x i8] c"m\00", align 1
@.str.272 = private unnamed_addr constant [7 x i8] c"unhash\00", align 1
@.str.273 = private unnamed_addr constant [6 x i8] c"adfms\00", align 1
@.str.274 = private unnamed_addr constant [6 x i8] c"unset\00", align 1
@.str.275 = private unnamed_addr constant [4 x i8] c"fmv\00", align 1
@.str.276 = private unnamed_addr constant [9 x i8] c"unsetopt\00", align 1
@.str.277 = private unnamed_addr constant [5 x i8] c"wait\00", align 1
@.str.278 = private unnamed_addr constant [7 x i8] c"whence\00", align 1
@.str.279 = private unnamed_addr constant [12 x i8] c"acmpvfsSwx:\00", align 1
@.str.280 = private unnamed_addr constant [6 x i8] c"where\00", align 1
@.str.281 = private unnamed_addr constant [8 x i8] c"pmsSwx:\00", align 1
@.str.282 = private unnamed_addr constant [3 x i8] c"ca\00", align 1
@.str.283 = private unnamed_addr constant [6 x i8] c"which\00", align 1
@.str.284 = private unnamed_addr constant [9 x i8] c"ampsSwx:\00", align 1
@.str.285 = private unnamed_addr constant [2 x i8] c"c\00", align 1
@.str.286 = private unnamed_addr constant [9 x i8] c"zmodload\00", align 1
@.str.287 = private unnamed_addr constant [20 x i8] c"AFRILP:abcfdilmpsue\00", align 1
@.str.288 = private unnamed_addr constant [9 x i8] c"zcompile\00", align 1
@.str.289 = private unnamed_addr constant [10 x i8] c"tUMRcmzka\00", align 1
@.str.290 = private unnamed_addr constant [13 x i8] c"%s: builtin\0A\00", align 1
@.str.291 = private unnamed_addr constant [28 x i8] c"%s: shell built-in command\0A\00", align 1
@.str.292 = private unnamed_addr constant [23 x i8] c"%s is a shell builtin\0A\00", align 1
@.str.293 = private unnamed_addr constant [22 x i8] c"directory stack empty\00", align 1
@home = external global i8*, align 4
@.str.294 = private unnamed_addr constant [13 x i8] c"HOME not set\00", align 1
@.str.295 = private unnamed_addr constant [11 x i8] c"0123456789\00", align 1
@.str.296 = private unnamed_addr constant [27 x i8] c"no such entry in dir stack\00", align 1
@.str.297 = private unnamed_addr constant [22 x i8] c"string not in pwd: %s\00", align 1
@cdpath = external global i8**, align 4
@.str.298 = private unnamed_addr constant [6 x i8] c"chpwd\00", align 1
@.str.299 = private unnamed_addr constant [13 x i8] c"DIRSTACKSIZE\00", align 1
@.str.300 = private unnamed_addr constant [20 x i8] c"event not found: %s\00", align 1
@.str.301 = private unnamed_addr constant [52 x i8] c"history events can't be executed backwards, aborted\00", align 1
@.str.302 = private unnamed_addr constant [18 x i8] c"no such event: %s\00", align 1
@.str.303 = private unnamed_addr constant [24 x i8] c"no events in that range\00", align 1
@.str.304 = private unnamed_addr constant [15 x i8] c"%Y-%m-%d %H:%M\00", align 1
@.str.305 = private unnamed_addr constant [16 x i8] c"%f.%-m.%Y %H:%M\00", align 1
@.str.306 = private unnamed_addr constant [16 x i8] c"%-m/%f/%Y %H:%M\00", align 1
@.str.307 = private unnamed_addr constant [6 x i8] c"%H:%M\00", align 1
@.str.308 = private unnamed_addr constant [7 x i8] c"%5s%c \00", align 1
@.str.309 = private unnamed_addr constant [3 x i8] c"  \00", align 1
@.str.310 = private unnamed_addr constant [12 x i8] c"%ld:%02ld  \00", align 1
@.str.311 = private unnamed_addr constant [27 x i8] c"no substitutions performed\00", align 1
@.str.312 = private unnamed_addr constant [25 x i8] c"no matching events found\00", align 1
@getasg.asg = internal global %struct.asgment zeroinitializer, align 4
@.str.313 = private unnamed_addr constant [42 x i8] c"%s: can't assign array value to non-array\00", align 1
@.str.314 = private unnamed_addr constant [50 x i8] c"%s: can't assign array value to non-array special\00", align 1
@.str.315 = private unnamed_addr constant [8 x i8] c"SECONDS\00", align 1
@.str.316 = private unnamed_addr constant [45 x i8] c"%s: can't change type of a special parameter\00", align 1
@.str.317 = private unnamed_addr constant [46 x i8] c"%s: can't change type of autoloaded parameter\00", align 1
@.str.318 = private unnamed_addr constant [23 x i8] c"read-only variable: %s\00", align 1
@.str.319 = private unnamed_addr constant [37 x i8] c"%s: inconsistent type for assignment\00", align 1
@.str.320 = private unnamed_addr constant [36 x i8] c"%s: can only have a single instance\00", align 1
@.str.321 = private unnamed_addr constant [41 x i8] c"%s: can't create readonly array elements\00", align 1
@.str.322 = private unnamed_addr constant [38 x i8] c"%s: can't create local array elements\00", align 1
@.str.323 = private unnamed_addr constant [51 x i8] c"%s: inconsistent array element or slice assignment\00", align 1
@.str.324 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.325 = private unnamed_addr constant [36 x i8] c"can't change variable attribute: %s\00", align 1
@.str.326 = private unnamed_addr constant [22 x i8] c"not an identifier: %s\00", align 1
@.str.327 = private unnamed_addr constant [30 x i8] c"not valid in this context: %s\00", align 1
@tiedarr_gsu = internal constant %struct.gsu_scalar { i8* (%struct.param*)* @tiedarrgetfn, void (%struct.param*, i8*)* @tiedarrsetfn, void (%struct.param*, i32)* @tiedarrunsetfn }, align 4
@.str.328 = private unnamed_addr constant [20 x i8] c"bad width value: %s\00", align 1
@.str.329 = private unnamed_addr constant [19 x i8] c"bad base value: %s\00", align 1
@.str.330 = private unnamed_addr constant [24 x i8] c"bad precision value: %s\00", align 1
@.str.331 = private unnamed_addr constant [45 x i8] c"invalid base (must be 2 to 36 inclusive): %d\00", align 1
@.str.332 = private unnamed_addr constant [18 x i8] c"functions -M%s %s\00", align 1
@.str.333 = private unnamed_addr constant [2 x i8] c"s\00", align 1
@.str.334 = private unnamed_addr constant [4 x i8] c" %d\00", align 1
@.str.335 = private unnamed_addr constant [39 x i8] c"%s: function definition file not found\00", align 1
@.str.336 = private unnamed_addr constant [6 x i8] c"%s/%s\00", align 1
@maxjob = external global i32, align 4
@thisjob = external global i32, align 4
@jobtab = external global %struct.job*, align 4
@.str.337 = private unnamed_addr constant [25 x i8] c"you have suspended jobs.\00", align 1
@.str.338 = private unnamed_addr constant [23 x i8] c"you have running jobs.\00", align 1
@.str.339 = private unnamed_addr constant [7 x i8] c"(eval)\00", align 1
@lineno = external global i32, align 4

; Function Attrs: noinline nounwind
define void @createbuiltintable() #0 {
entry:
  %call = call %struct.hashtable* @newhashtable(i32 85, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i32 0, i32 0), void (%struct.hashtable*)* null)
  store %struct.hashtable* %call, %struct.hashtable** @builtintab, align 4
  %0 = load %struct.hashtable*, %struct.hashtable** @builtintab, align 4
  %hash = getelementptr inbounds %struct.hashtable, %struct.hashtable* %0, i32 0, i32 4
  store i32 (i8*)* @hasher, i32 (i8*)** %hash, align 4
  %1 = load %struct.hashtable*, %struct.hashtable** @builtintab, align 4
  %emptytable = getelementptr inbounds %struct.hashtable, %struct.hashtable* %1, i32 0, i32 5
  store void (%struct.hashtable*)* null, void (%struct.hashtable*)** %emptytable, align 4
  %2 = load %struct.hashtable*, %struct.hashtable** @builtintab, align 4
  %filltable = getelementptr inbounds %struct.hashtable, %struct.hashtable* %2, i32 0, i32 6
  store void (%struct.hashtable*)* null, void (%struct.hashtable*)** %filltable, align 4
  %3 = load %struct.hashtable*, %struct.hashtable** @builtintab, align 4
  %cmpnodes = getelementptr inbounds %struct.hashtable, %struct.hashtable* %3, i32 0, i32 7
  store i32 (i8*, i8*)* @strcmp, i32 (i8*, i8*)** %cmpnodes, align 4
  %4 = load %struct.hashtable*, %struct.hashtable** @builtintab, align 4
  %addnode = getelementptr inbounds %struct.hashtable, %struct.hashtable* %4, i32 0, i32 8
  store void (%struct.hashtable*, i8*, i8*)* @addhashnode, void (%struct.hashtable*, i8*, i8*)** %addnode, align 4
  %5 = load %struct.hashtable*, %struct.hashtable** @builtintab, align 4
  %getnode = getelementptr inbounds %struct.hashtable, %struct.hashtable* %5, i32 0, i32 9
  store %struct.hashnode* (%struct.hashtable*, i8*)* @gethashnode, %struct.hashnode* (%struct.hashtable*, i8*)** %getnode, align 4
  %6 = load %struct.hashtable*, %struct.hashtable** @builtintab, align 4
  %getnode2 = getelementptr inbounds %struct.hashtable, %struct.hashtable* %6, i32 0, i32 10
  store %struct.hashnode* (%struct.hashtable*, i8*)* @gethashnode2, %struct.hashnode* (%struct.hashtable*, i8*)** %getnode2, align 4
  %7 = load %struct.hashtable*, %struct.hashtable** @builtintab, align 4
  %removenode = getelementptr inbounds %struct.hashtable, %struct.hashtable* %7, i32 0, i32 11
  store %struct.hashnode* (%struct.hashtable*, i8*)* @removehashnode, %struct.hashnode* (%struct.hashtable*, i8*)** %removenode, align 4
  %8 = load %struct.hashtable*, %struct.hashtable** @builtintab, align 4
  %disablenode = getelementptr inbounds %struct.hashtable, %struct.hashtable* %8, i32 0, i32 12
  store void (%struct.hashnode*, i32)* @disablehashnode, void (%struct.hashnode*, i32)** %disablenode, align 4
  %9 = load %struct.hashtable*, %struct.hashtable** @builtintab, align 4
  %enablenode = getelementptr inbounds %struct.hashtable, %struct.hashtable* %9, i32 0, i32 13
  store void (%struct.hashnode*, i32)* @enablehashnode, void (%struct.hashnode*, i32)** %enablenode, align 4
  %10 = load %struct.hashtable*, %struct.hashtable** @builtintab, align 4
  %freenode = getelementptr inbounds %struct.hashtable, %struct.hashtable* %10, i32 0, i32 14
  store void (%struct.hashnode*)* @freebuiltinnode, void (%struct.hashnode*)** %freenode, align 4
  %11 = load %struct.hashtable*, %struct.hashtable** @builtintab, align 4
  %printnode = getelementptr inbounds %struct.hashtable, %struct.hashtable* %11, i32 0, i32 15
  store void (%struct.hashnode*, i32)* @printbuiltinnode, void (%struct.hashnode*, i32)** %printnode, align 4
  %call1 = call i32 @addbuiltins(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i32 0, i32 0), %struct.builtin* getelementptr inbounds ([77 x %struct.builtin], [77 x %struct.builtin]* @builtins, i32 0, i32 0), i32 77)
  ret void
}

declare %struct.hashtable* @newhashtable(i32, i8*, void (%struct.hashtable*)*) #1

declare i32 @hasher(i8*) #1

declare i32 @strcmp(i8*, i8*) #1

declare void @addhashnode(%struct.hashtable*, i8*, i8*) #1

declare %struct.hashnode* @gethashnode(%struct.hashtable*, i8*) #1

declare %struct.hashnode* @gethashnode2(%struct.hashtable*, i8*) #1

declare %struct.hashnode* @removehashnode(%struct.hashtable*, i8*) #1

declare void @disablehashnode(%struct.hashnode*, i32) #1

declare void @enablehashnode(%struct.hashnode*, i32) #1

; Function Attrs: noinline nounwind
define internal void @freebuiltinnode(%struct.hashnode* %hn) #0 {
entry:
  %hn.addr = alloca %struct.hashnode*, align 4
  %bn = alloca %struct.builtin*, align 4
  store %struct.hashnode* %hn, %struct.hashnode** %hn.addr, align 4
  %0 = load %struct.hashnode*, %struct.hashnode** %hn.addr, align 4
  %1 = bitcast %struct.hashnode* %0 to %struct.builtin*
  store %struct.builtin* %1, %struct.builtin** %bn, align 4
  %2 = load %struct.builtin*, %struct.builtin** %bn, align 4
  %node = getelementptr inbounds %struct.builtin, %struct.builtin* %2, i32 0, i32 0
  %flags = getelementptr inbounds %struct.hashnode, %struct.hashnode* %node, i32 0, i32 2
  %3 = load i32, i32* %flags, align 4
  %and = and i32 %3, 8
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %4 = load %struct.builtin*, %struct.builtin** %bn, align 4
  %node1 = getelementptr inbounds %struct.builtin, %struct.builtin* %4, i32 0, i32 0
  %nam = getelementptr inbounds %struct.hashnode, %struct.hashnode* %node1, i32 0, i32 1
  %5 = load i8*, i8** %nam, align 4
  call void @zsfree(i8* %5)
  %6 = load %struct.builtin*, %struct.builtin** %bn, align 4
  %optstr = getelementptr inbounds %struct.builtin, %struct.builtin* %6, i32 0, i32 5
  %7 = load i8*, i8** %optstr, align 4
  call void @zsfree(i8* %7)
  %8 = load %struct.builtin*, %struct.builtin** %bn, align 4
  %9 = bitcast %struct.builtin* %8 to i8*
  call void @zfree(i8* %9, i32 36)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  ret void
}

; Function Attrs: noinline nounwind
define internal void @printbuiltinnode(%struct.hashnode* %hn, i32 %printflags) #0 {
entry:
  %hn.addr = alloca %struct.hashnode*, align 4
  %printflags.addr = alloca i32, align 4
  %bn = alloca %struct.builtin*, align 4
  store %struct.hashnode* %hn, %struct.hashnode** %hn.addr, align 4
  store i32 %printflags, i32* %printflags.addr, align 4
  %0 = load %struct.hashnode*, %struct.hashnode** %hn.addr, align 4
  %1 = bitcast %struct.hashnode* %0 to %struct.builtin*
  store %struct.builtin* %1, %struct.builtin** %bn, align 4
  %2 = load i32, i32* %printflags.addr, align 4
  %and = and i32 %2, 2048
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %3 = load %struct.builtin*, %struct.builtin** %bn, align 4
  %node = getelementptr inbounds %struct.builtin, %struct.builtin* %3, i32 0, i32 0
  %nam = getelementptr inbounds %struct.hashnode, %struct.hashnode* %node, i32 0, i32 1
  %4 = load i8*, i8** %nam, align 4
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.290, i32 0, i32 0), i8* %4)
  br label %return

if.end:                                           ; preds = %entry
  %5 = load i32, i32* %printflags.addr, align 4
  %and1 = and i32 %5, 128
  %tobool2 = icmp ne i32 %and1, 0
  br i1 %tobool2, label %if.then3, label %if.end7

if.then3:                                         ; preds = %if.end
  %6 = load %struct.builtin*, %struct.builtin** %bn, align 4
  %node4 = getelementptr inbounds %struct.builtin, %struct.builtin* %6, i32 0, i32 0
  %nam5 = getelementptr inbounds %struct.hashnode, %struct.hashnode* %node4, i32 0, i32 1
  %7 = load i8*, i8** %nam5, align 4
  %call6 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.291, i32 0, i32 0), i8* %7)
  br label %return

if.end7:                                          ; preds = %if.end
  %8 = load i32, i32* %printflags.addr, align 4
  %and8 = and i32 %8, 256
  %tobool9 = icmp ne i32 %and8, 0
  br i1 %tobool9, label %if.then10, label %if.end14

if.then10:                                        ; preds = %if.end7
  %9 = load %struct.builtin*, %struct.builtin** %bn, align 4
  %node11 = getelementptr inbounds %struct.builtin, %struct.builtin* %9, i32 0, i32 0
  %nam12 = getelementptr inbounds %struct.hashnode, %struct.hashnode* %node11, i32 0, i32 1
  %10 = load i8*, i8** %nam12, align 4
  %call13 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.292, i32 0, i32 0), i8* %10)
  br label %return

if.end14:                                         ; preds = %if.end7
  %11 = load %struct.builtin*, %struct.builtin** %bn, align 4
  %node15 = getelementptr inbounds %struct.builtin, %struct.builtin* %11, i32 0, i32 0
  %nam16 = getelementptr inbounds %struct.hashnode, %struct.hashnode* %node15, i32 0, i32 1
  %12 = load i8*, i8** %nam16, align 4
  %call17 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.21, i32 0, i32 0), i8* %12)
  br label %return

return:                                           ; preds = %if.end14, %if.then10, %if.then3, %if.then
  ret void
}

declare i32 @addbuiltins(i8*, %struct.builtin*, i32) #1

; Function Attrs: noinline nounwind
define void @init_builtins() #0 {
entry:
  %hn = alloca %struct.hashnode*, align 4
  %0 = load i32, i32* @emulation, align 4
  %and = and i32 %0, 16
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.end3, label %if.then

if.then:                                          ; preds = %entry
  %1 = load %struct.hashtable*, %struct.hashtable** @reswdtab, align 4
  %getnode2 = getelementptr inbounds %struct.hashtable, %struct.hashtable* %1, i32 0, i32 10
  %2 = load %struct.hashnode* (%struct.hashtable*, i8*)*, %struct.hashnode* (%struct.hashtable*, i8*)** %getnode2, align 4
  %3 = load %struct.hashtable*, %struct.hashtable** @reswdtab, align 4
  %call = call %struct.hashnode* %2(%struct.hashtable* %3, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.2, i32 0, i32 0))
  store %struct.hashnode* %call, %struct.hashnode** %hn, align 4
  %4 = load %struct.hashnode*, %struct.hashnode** %hn, align 4
  %tobool1 = icmp ne %struct.hashnode* %4, null
  br i1 %tobool1, label %if.then2, label %if.end

if.then2:                                         ; preds = %if.then
  %5 = load %struct.hashtable*, %struct.hashtable** @reswdtab, align 4
  %disablenode = getelementptr inbounds %struct.hashtable, %struct.hashtable* %5, i32 0, i32 12
  %6 = load void (%struct.hashnode*, i32)*, void (%struct.hashnode*, i32)** %disablenode, align 4
  %7 = load %struct.hashnode*, %struct.hashnode** %hn, align 4
  call void %6(%struct.hashnode* %7, i32 0)
  br label %if.end

if.end:                                           ; preds = %if.then2, %if.then
  br label %if.end3

if.end3:                                          ; preds = %if.end, %entry
  ret void
}

; Function Attrs: noinline nounwind
define i32 @execbuiltin(%union.linkroot* %args, %union.linkroot* %assigns, %struct.builtin* %bn) #0 {
entry:
  %retval = alloca i32, align 4
  %args.addr = alloca %union.linkroot*, align 4
  %assigns.addr = alloca %union.linkroot*, align 4
  %bn.addr = alloca %struct.builtin*, align 4
  %pp = alloca i8*, align 4
  %name = alloca i8*, align 4
  %optstr = alloca i8*, align 4
  %flags = alloca i32, align 4
  %argc = alloca i32, align 4
  %execop = alloca i32, align 4
  %xtr = alloca i32, align 4
  %ops = alloca %struct.options, align 4
  %argarr = alloca i8**, align 4
  %argv = alloca i8**, align 4
  %arg = alloca i8*, align 4
  %sense = alloca i32, align 4
  %p = alloca i8*, align 4
  %optptr = alloca i8*, align 4
  %argptr = alloca i8*, align 4
  %fullargv = alloca i8**, align 4
  %node276 = alloca %struct.linknode*, align 4
  %asg = alloca %struct.asgment*, align 4
  %keynode = alloca %struct.linknode*, align 4
  %valnode = alloca %struct.linknode*, align 4
  %arrnode = alloca %struct.linknode*, align 4
  %assignfunc = alloca i32 (i8*, i8**, %union.linkroot*, %struct.options*, i32)*, align 4
  store %union.linkroot* %args, %union.linkroot** %args.addr, align 4
  store %union.linkroot* %assigns, %union.linkroot** %assigns.addr, align 4
  store %struct.builtin* %bn, %struct.builtin** %bn.addr, align 4
  %0 = load i8, i8* getelementptr inbounds ([181 x i8], [181 x i8]* @opts, i32 0, i32 178), align 1
  %conv = sext i8 %0 to i32
  store i32 %conv, i32* %xtr, align 4
  %ind = getelementptr inbounds %struct.options, %struct.options* %ops, i32 0, i32 0
  %arraydecay = getelementptr inbounds [128 x i8], [128 x i8]* %ind, i32 0, i32 0
  call void @llvm.memset.p0i8.i32(i8* %arraydecay, i8 0, i32 128, i32 4, i1 false)
  %args1 = getelementptr inbounds %struct.options, %struct.options* %ops, i32 0, i32 1
  store i8** null, i8*** %args1, align 4
  %argsalloc = getelementptr inbounds %struct.options, %struct.options* %ops, i32 0, i32 3
  store i32 0, i32* %argsalloc, align 4
  %argscount = getelementptr inbounds %struct.options, %struct.options* %ops, i32 0, i32 2
  store i32 0, i32* %argscount, align 4
  %1 = load %union.linkroot*, %union.linkroot** %args.addr, align 4
  %call = call i8* @ugetnode(%union.linkroot* %1)
  store i8* %call, i8** %name, align 4
  %2 = load %struct.builtin*, %struct.builtin** %bn.addr, align 4
  %handlerfunc = getelementptr inbounds %struct.builtin, %struct.builtin* %2, i32 0, i32 1
  %3 = load i32 (i8*, i8**, %struct.options*, i32)*, i32 (i8*, i8**, %struct.options*, i32)** %handlerfunc, align 4
  %tobool = icmp ne i32 (i8*, i8**, %struct.options*, i32)* %3, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %4 = load %struct.builtin*, %struct.builtin** %bn.addr, align 4
  %node = getelementptr inbounds %struct.builtin, %struct.builtin* %4, i32 0, i32 0
  %nam = getelementptr inbounds %struct.hashnode, %struct.hashnode* %node, i32 0, i32 1
  %5 = load i8*, i8** %nam, align 4
  %call2 = call i32 @deletebuiltin(i8* %5)
  store i32 1, i32* %retval, align 4
  br label %return

if.end:                                           ; preds = %entry
  %6 = load %struct.builtin*, %struct.builtin** %bn.addr, align 4
  %node3 = getelementptr inbounds %struct.builtin, %struct.builtin* %6, i32 0, i32 0
  %flags4 = getelementptr inbounds %struct.hashnode, %struct.hashnode* %node3, i32 0, i32 2
  %7 = load i32, i32* %flags4, align 4
  store i32 %7, i32* %flags, align 4
  %8 = load %struct.builtin*, %struct.builtin** %bn.addr, align 4
  %optstr5 = getelementptr inbounds %struct.builtin, %struct.builtin* %8, i32 0, i32 5
  %9 = load i8*, i8** %optstr5, align 4
  store i8* %9, i8** %optstr, align 4
  %10 = load %union.linkroot*, %union.linkroot** %args.addr, align 4
  %call6 = call i32 @countlinknodes(%union.linkroot* %10)
  store i32 %call6, i32* %argc, align 4
  %11 = load i32, i32* %argc, align 4
  %add = add nsw i32 %11, 1
  %mul = mul i32 4, %add
  %call7 = call i8* @zhalloc(i32 %mul)
  %12 = bitcast i8* %call7 to i8**
  store i8** %12, i8*** %argarr, align 4
  %13 = load i8**, i8*** %argarr, align 4
  store i8** %13, i8*** %argv, align 4
  br label %while.cond

while.cond:                                       ; preds = %while.body, %if.end
  %14 = load %union.linkroot*, %union.linkroot** %args.addr, align 4
  %call8 = call i8* @ugetnode(%union.linkroot* %14)
  %15 = load i8**, i8*** %argv, align 4
  %incdec.ptr = getelementptr inbounds i8*, i8** %15, i32 1
  store i8** %incdec.ptr, i8*** %argv, align 4
  store i8* %call8, i8** %15, align 4
  %tobool9 = icmp ne i8* %call8, null
  br i1 %tobool9, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  br label %while.cond

while.end:                                        ; preds = %while.cond
  %16 = load i8**, i8*** %argarr, align 4
  store i8** %16, i8*** %argv, align 4
  %17 = load i8*, i8** %optstr, align 4
  %tobool10 = icmp ne i8* %17, null
  br i1 %tobool10, label %if.then11, label %if.else214

if.then11:                                        ; preds = %while.end
  %18 = load i8**, i8*** %argv, align 4
  %19 = load i8*, i8** %18, align 4
  store i8* %19, i8** %arg, align 4
  br label %while.cond12

while.cond12:                                     ; preds = %if.end212, %if.then11
  %20 = load i8*, i8** %arg, align 4
  %tobool13 = icmp ne i8* %20, null
  br i1 %tobool13, label %land.rhs, label %land.end21

land.rhs:                                         ; preds = %while.cond12
  %21 = load i8*, i8** %arg, align 4
  %22 = load i8, i8* %21, align 1
  %conv14 = sext i8 %22 to i32
  %cmp = icmp eq i32 %conv14, 45
  %conv15 = zext i1 %cmp to i32
  store i32 %conv15, i32* %sense, align 4
  br i1 %cmp, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %land.rhs
  %23 = load i32, i32* %flags, align 4
  %and = and i32 %23, 2
  %tobool16 = icmp ne i32 %and, 0
  br i1 %tobool16, label %land.rhs17, label %land.end

land.rhs17:                                       ; preds = %lor.rhs
  %24 = load i8*, i8** %arg, align 4
  %25 = load i8, i8* %24, align 1
  %conv18 = sext i8 %25 to i32
  %cmp19 = icmp eq i32 %conv18, 43
  br label %land.end

land.end:                                         ; preds = %land.rhs17, %lor.rhs
  %26 = phi i1 [ false, %lor.rhs ], [ %cmp19, %land.rhs17 ]
  br label %lor.end

lor.end:                                          ; preds = %land.end, %land.rhs
  %27 = phi i1 [ true, %land.rhs ], [ %26, %land.end ]
  br label %land.end21

land.end21:                                       ; preds = %lor.end, %while.cond12
  %28 = phi i1 [ false, %while.cond12 ], [ %27, %lor.end ]
  br i1 %28, label %while.body22, label %while.end213

while.body22:                                     ; preds = %land.end21
  %29 = load i32, i32* %flags, align 4
  %and23 = and i32 %29, 8192
  %tobool24 = icmp ne i32 %and23, 0
  br i1 %tobool24, label %if.end30, label %land.lhs.true

land.lhs.true:                                    ; preds = %while.body22
  %30 = load i8*, i8** %arg, align 4
  %arrayidx = getelementptr inbounds i8, i8* %30, i32 1
  %31 = load i8, i8* %arrayidx, align 1
  %idxprom = zext i8 %31 to i32
  %arrayidx25 = getelementptr inbounds [256 x i16], [256 x i16]* @typtab, i32 0, i32 %idxprom
  %32 = load i16, i16* %arrayidx25, align 2
  %conv26 = sext i16 %32 to i32
  %and27 = and i32 %conv26, 1
  %tobool28 = icmp ne i32 %and27, 0
  br i1 %tobool28, label %if.then29, label %if.end30

if.then29:                                        ; preds = %land.lhs.true
  br label %while.end213

if.end30:                                         ; preds = %land.lhs.true, %while.body22
  %33 = load i32, i32* %flags, align 4
  %and31 = and i32 %33, 16384
  %tobool32 = icmp ne i32 %and31, 0
  br i1 %tobool32, label %land.lhs.true33, label %if.end37

land.lhs.true33:                                  ; preds = %if.end30
  %34 = load i8*, i8** %arg, align 4
  %arrayidx34 = getelementptr inbounds i8, i8* %34, i32 1
  %35 = load i8, i8* %arrayidx34, align 1
  %tobool35 = icmp ne i8 %35, 0
  br i1 %tobool35, label %if.end37, label %if.then36

if.then36:                                        ; preds = %land.lhs.true33
  br label %while.end213

if.end37:                                         ; preds = %land.lhs.true33, %if.end30
  %36 = load i32, i32* %flags, align 4
  %and38 = and i32 %36, 32768
  %tobool39 = icmp ne i32 %and38, 0
  br i1 %tobool39, label %land.lhs.true40, label %if.end45

land.lhs.true40:                                  ; preds = %if.end37
  %37 = load i8*, i8** %arg, align 4
  %call41 = call i32 @strcmp(i8* %37, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i32 0, i32 0))
  %tobool42 = icmp ne i32 %call41, 0
  br i1 %tobool42, label %if.end45, label %if.then43

if.then43:                                        ; preds = %land.lhs.true40
  %38 = load i8**, i8*** %argv, align 4
  %incdec.ptr44 = getelementptr inbounds i8*, i8** %38, i32 1
  store i8** %incdec.ptr44, i8*** %argv, align 4
  br label %while.end213

if.end45:                                         ; preds = %land.lhs.true40, %if.end37
  %39 = load i32, i32* %flags, align 4
  %and46 = and i32 %39, 4096
  %tobool47 = icmp ne i32 %and46, 0
  br i1 %tobool47, label %if.then48, label %if.end63

if.then48:                                        ; preds = %if.end45
  %40 = load i8*, i8** %arg, align 4
  store i8* %40, i8** %p, align 4
  br label %while.cond49

while.cond49:                                     ; preds = %while.body58, %if.then48
  %41 = load i8*, i8** %p, align 4
  %incdec.ptr50 = getelementptr inbounds i8, i8* %41, i32 1
  store i8* %incdec.ptr50, i8** %p, align 4
  %42 = load i8, i8* %incdec.ptr50, align 1
  %conv51 = sext i8 %42 to i32
  %tobool52 = icmp ne i32 %conv51, 0
  br i1 %tobool52, label %land.rhs53, label %land.end57

land.rhs53:                                       ; preds = %while.cond49
  %43 = load i8*, i8** %optstr, align 4
  %44 = load i8*, i8** %p, align 4
  %45 = load i8, i8* %44, align 1
  %conv54 = sext i8 %45 to i32
  %call55 = call i8* @strchr(i8* %43, i32 %conv54)
  %tobool56 = icmp ne i8* %call55, null
  br label %land.end57

land.end57:                                       ; preds = %land.rhs53, %while.cond49
  %46 = phi i1 [ false, %while.cond49 ], [ %tobool56, %land.rhs53 ]
  br i1 %46, label %while.body58, label %while.end59

while.body58:                                     ; preds = %land.end57
  br label %while.cond49

while.end59:                                      ; preds = %land.end57
  %47 = load i8*, i8** %p, align 4
  %48 = load i8, i8* %47, align 1
  %tobool60 = icmp ne i8 %48, 0
  br i1 %tobool60, label %if.then61, label %if.end62

if.then61:                                        ; preds = %while.end59
  br label %while.end213

if.end62:                                         ; preds = %while.end59
  br label %if.end63

if.end63:                                         ; preds = %if.end62, %if.end45
  %49 = load i8*, i8** %arg, align 4
  %arrayidx64 = getelementptr inbounds i8, i8* %49, i32 1
  %50 = load i8, i8* %arrayidx64, align 1
  %conv65 = sext i8 %50 to i32
  %cmp66 = icmp eq i32 %conv65, 45
  br i1 %cmp66, label %if.then68, label %if.end70

if.then68:                                        ; preds = %if.end63
  %51 = load i8*, i8** %arg, align 4
  %incdec.ptr69 = getelementptr inbounds i8, i8* %51, i32 1
  store i8* %incdec.ptr69, i8** %arg, align 4
  br label %if.end70

if.end70:                                         ; preds = %if.then68, %if.end63
  %52 = load i8*, i8** %arg, align 4
  %arrayidx71 = getelementptr inbounds i8, i8* %52, i32 1
  %53 = load i8, i8* %arrayidx71, align 1
  %tobool72 = icmp ne i8 %53, 0
  br i1 %tobool72, label %if.end81, label %if.then73

if.then73:                                        ; preds = %if.end70
  %ind74 = getelementptr inbounds %struct.options, %struct.options* %ops, i32 0, i32 0
  %arrayidx75 = getelementptr inbounds [128 x i8], [128 x i8]* %ind74, i32 0, i32 45
  store i8 1, i8* %arrayidx75, align 1
  %54 = load i32, i32* %sense, align 4
  %tobool76 = icmp ne i32 %54, 0
  br i1 %tobool76, label %if.end80, label %if.then77

if.then77:                                        ; preds = %if.then73
  %ind78 = getelementptr inbounds %struct.options, %struct.options* %ops, i32 0, i32 0
  %arrayidx79 = getelementptr inbounds [128 x i8], [128 x i8]* %ind78, i32 0, i32 43
  store i8 1, i8* %arrayidx79, align 1
  br label %if.end80

if.end80:                                         ; preds = %if.then77, %if.then73
  br label %if.end81

if.end81:                                         ; preds = %if.end80, %if.end70
  br label %while.cond82

while.cond82:                                     ; preds = %if.end177, %if.end81
  %55 = load i8*, i8** %arg, align 4
  %incdec.ptr83 = getelementptr inbounds i8, i8* %55, i32 1
  store i8* %incdec.ptr83, i8** %arg, align 4
  %56 = load i8, i8* %incdec.ptr83, align 1
  %tobool84 = icmp ne i8 %56, 0
  br i1 %tobool84, label %while.body85, label %while.end178

while.body85:                                     ; preds = %while.cond82
  %57 = load i8*, i8** %optstr, align 4
  %58 = load i8*, i8** %arg, align 4
  %59 = load i8, i8* %58, align 1
  %conv86 = sext i8 %59 to i32
  store i32 %conv86, i32* %execop, align 4
  %call87 = call i8* @strchr(i8* %57, i32 %conv86)
  store i8* %call87, i8** %optptr, align 4
  %tobool88 = icmp ne i8* %call87, null
  br i1 %tobool88, label %if.then89, label %if.else176

if.then89:                                        ; preds = %while.body85
  %60 = load i32, i32* %sense, align 4
  %tobool90 = icmp ne i32 %60, 0
  %cond = select i1 %tobool90, i32 1, i32 2
  %conv91 = trunc i32 %cond to i8
  %ind92 = getelementptr inbounds %struct.options, %struct.options* %ops, i32 0, i32 0
  %61 = load i8*, i8** %arg, align 4
  %62 = load i8, i8* %61, align 1
  %conv93 = sext i8 %62 to i32
  %arrayidx94 = getelementptr inbounds [128 x i8], [128 x i8]* %ind92, i32 0, i32 %conv93
  store i8 %conv91, i8* %arrayidx94, align 1
  %63 = load i8*, i8** %optptr, align 4
  %arrayidx95 = getelementptr inbounds i8, i8* %63, i32 1
  %64 = load i8, i8* %arrayidx95, align 1
  %conv96 = sext i8 %64 to i32
  %cmp97 = icmp eq i32 %conv96, 58
  br i1 %cmp97, label %if.then99, label %if.end175

if.then99:                                        ; preds = %if.then89
  store i8* null, i8** %argptr, align 4
  %65 = load i8*, i8** %optptr, align 4
  %arrayidx100 = getelementptr inbounds i8, i8* %65, i32 2
  %66 = load i8, i8* %arrayidx100, align 1
  %conv101 = sext i8 %66 to i32
  %cmp102 = icmp eq i32 %conv101, 58
  br i1 %cmp102, label %if.then104, label %if.else

if.then104:                                       ; preds = %if.then99
  %67 = load i8*, i8** %arg, align 4
  %arrayidx105 = getelementptr inbounds i8, i8* %67, i32 1
  %68 = load i8, i8* %arrayidx105, align 1
  %tobool106 = icmp ne i8 %68, 0
  br i1 %tobool106, label %if.then107, label %if.end108

if.then107:                                       ; preds = %if.then104
  %69 = load i8*, i8** %arg, align 4
  %add.ptr = getelementptr inbounds i8, i8* %69, i32 1
  store i8* %add.ptr, i8** %argptr, align 4
  br label %if.end108

if.end108:                                        ; preds = %if.then107, %if.then104
  br label %if.end153

if.else:                                          ; preds = %if.then99
  %70 = load i8*, i8** %optptr, align 4
  %arrayidx109 = getelementptr inbounds i8, i8* %70, i32 2
  %71 = load i8, i8* %arrayidx109, align 1
  %conv110 = sext i8 %71 to i32
  %cmp111 = icmp eq i32 %conv110, 37
  br i1 %cmp111, label %if.then113, label %if.else140

if.then113:                                       ; preds = %if.else
  %72 = load i8*, i8** %arg, align 4
  %arrayidx114 = getelementptr inbounds i8, i8* %72, i32 1
  %73 = load i8, i8* %arrayidx114, align 1
  %conv115 = sext i8 %73 to i32
  %tobool116 = icmp ne i32 %conv115, 0
  br i1 %tobool116, label %land.lhs.true117, label %if.else126

land.lhs.true117:                                 ; preds = %if.then113
  %74 = load i8*, i8** %arg, align 4
  %arrayidx118 = getelementptr inbounds i8, i8* %74, i32 1
  %75 = load i8, i8* %arrayidx118, align 1
  %idxprom119 = zext i8 %75 to i32
  %arrayidx120 = getelementptr inbounds [256 x i16], [256 x i16]* @typtab, i32 0, i32 %idxprom119
  %76 = load i16, i16* %arrayidx120, align 2
  %conv121 = sext i16 %76 to i32
  %and122 = and i32 %conv121, 1
  %tobool123 = icmp ne i32 %and122, 0
  br i1 %tobool123, label %if.then124, label %if.else126

if.then124:                                       ; preds = %land.lhs.true117
  %77 = load i8*, i8** %arg, align 4
  %add.ptr125 = getelementptr inbounds i8, i8* %77, i32 1
  store i8* %add.ptr125, i8** %argptr, align 4
  br label %if.end139

if.else126:                                       ; preds = %land.lhs.true117, %if.then113
  %78 = load i8**, i8*** %argv, align 4
  %arrayidx127 = getelementptr inbounds i8*, i8** %78, i32 1
  %79 = load i8*, i8** %arrayidx127, align 4
  %tobool128 = icmp ne i8* %79, null
  br i1 %tobool128, label %land.lhs.true129, label %if.end138

land.lhs.true129:                                 ; preds = %if.else126
  %80 = load i8**, i8*** %argv, align 4
  %arrayidx130 = getelementptr inbounds i8*, i8** %80, i32 1
  %81 = load i8*, i8** %arrayidx130, align 4
  %82 = load i8, i8* %81, align 1
  %idxprom131 = zext i8 %82 to i32
  %arrayidx132 = getelementptr inbounds [256 x i16], [256 x i16]* @typtab, i32 0, i32 %idxprom131
  %83 = load i16, i16* %arrayidx132, align 2
  %conv133 = sext i16 %83 to i32
  %and134 = and i32 %conv133, 1
  %tobool135 = icmp ne i32 %and134, 0
  br i1 %tobool135, label %if.then136, label %if.end138

if.then136:                                       ; preds = %land.lhs.true129
  %84 = load i8**, i8*** %argv, align 4
  %incdec.ptr137 = getelementptr inbounds i8*, i8** %84, i32 1
  store i8** %incdec.ptr137, i8*** %argv, align 4
  %85 = load i8*, i8** %incdec.ptr137, align 4
  store i8* %85, i8** %arg, align 4
  store i8* %85, i8** %argptr, align 4
  br label %if.end138

if.end138:                                        ; preds = %if.then136, %land.lhs.true129, %if.else126
  br label %if.end139

if.end139:                                        ; preds = %if.end138, %if.then124
  br label %if.end152

if.else140:                                       ; preds = %if.else
  %86 = load i8*, i8** %arg, align 4
  %arrayidx141 = getelementptr inbounds i8, i8* %86, i32 1
  %87 = load i8, i8* %arrayidx141, align 1
  %tobool142 = icmp ne i8 %87, 0
  br i1 %tobool142, label %if.then143, label %if.else145

if.then143:                                       ; preds = %if.else140
  %88 = load i8*, i8** %arg, align 4
  %add.ptr144 = getelementptr inbounds i8, i8* %88, i32 1
  store i8* %add.ptr144, i8** %argptr, align 4
  br label %if.end151

if.else145:                                       ; preds = %if.else140
  %89 = load i8**, i8*** %argv, align 4
  %incdec.ptr146 = getelementptr inbounds i8*, i8** %89, i32 1
  store i8** %incdec.ptr146, i8*** %argv, align 4
  %90 = load i8*, i8** %incdec.ptr146, align 4
  store i8* %90, i8** %arg, align 4
  %tobool147 = icmp ne i8* %90, null
  br i1 %tobool147, label %if.then148, label %if.else149

if.then148:                                       ; preds = %if.else145
  %91 = load i8*, i8** %arg, align 4
  store i8* %91, i8** %argptr, align 4
  br label %if.end150

if.else149:                                       ; preds = %if.else145
  %92 = load i8*, i8** %name, align 4
  %93 = load i32, i32* %execop, align 4
  call void (i8*, i8*, ...) @zwarnnam(i8* %92, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4, i32 0, i32 0), i32 %93)
  store i32 1, i32* %retval, align 4
  br label %return

if.end150:                                        ; preds = %if.then148
  br label %if.end151

if.end151:                                        ; preds = %if.end150, %if.then143
  br label %if.end152

if.end152:                                        ; preds = %if.end151, %if.end139
  br label %if.end153

if.end153:                                        ; preds = %if.end152, %if.end108
  %94 = load i8*, i8** %argptr, align 4
  %tobool154 = icmp ne i8* %94, null
  br i1 %tobool154, label %if.then155, label %if.end174

if.then155:                                       ; preds = %if.end153
  %call156 = call i32 @new_optarg(%struct.options* %ops)
  %tobool157 = icmp ne i32 %call156, 0
  br i1 %tobool157, label %if.then158, label %if.end159

if.then158:                                       ; preds = %if.then155
  %95 = load i8*, i8** %name, align 4
  call void (i8*, i8*, ...) @zwarnnam(i8* %95, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.5, i32 0, i32 0))
  store i32 1, i32* %retval, align 4
  br label %return

if.end159:                                        ; preds = %if.then155
  %argscount160 = getelementptr inbounds %struct.options, %struct.options* %ops, i32 0, i32 2
  %96 = load i32, i32* %argscount160, align 4
  %shl = shl i32 %96, 2
  %ind161 = getelementptr inbounds %struct.options, %struct.options* %ops, i32 0, i32 0
  %97 = load i32, i32* %execop, align 4
  %arrayidx162 = getelementptr inbounds [128 x i8], [128 x i8]* %ind161, i32 0, i32 %97
  %98 = load i8, i8* %arrayidx162, align 1
  %conv163 = zext i8 %98 to i32
  %or = or i32 %conv163, %shl
  %conv164 = trunc i32 %or to i8
  store i8 %conv164, i8* %arrayidx162, align 1
  %99 = load i8*, i8** %argptr, align 4
  %args165 = getelementptr inbounds %struct.options, %struct.options* %ops, i32 0, i32 1
  %100 = load i8**, i8*** %args165, align 4
  %argscount166 = getelementptr inbounds %struct.options, %struct.options* %ops, i32 0, i32 2
  %101 = load i32, i32* %argscount166, align 4
  %sub = sub nsw i32 %101, 1
  %arrayidx167 = getelementptr inbounds i8*, i8** %100, i32 %sub
  store i8* %99, i8** %arrayidx167, align 4
  br label %while.cond168

while.cond168:                                    ; preds = %while.body171, %if.end159
  %102 = load i8*, i8** %arg, align 4
  %arrayidx169 = getelementptr inbounds i8, i8* %102, i32 1
  %103 = load i8, i8* %arrayidx169, align 1
  %tobool170 = icmp ne i8 %103, 0
  br i1 %tobool170, label %while.body171, label %while.end173

while.body171:                                    ; preds = %while.cond168
  %104 = load i8*, i8** %arg, align 4
  %incdec.ptr172 = getelementptr inbounds i8, i8* %104, i32 1
  store i8* %incdec.ptr172, i8** %arg, align 4
  br label %while.cond168

while.end173:                                     ; preds = %while.cond168
  br label %if.end174

if.end174:                                        ; preds = %while.end173, %if.end153
  br label %if.end175

if.end175:                                        ; preds = %if.end174, %if.then89
  br label %if.end177

if.else176:                                       ; preds = %while.body85
  br label %while.end178

if.end177:                                        ; preds = %if.end175
  br label %while.cond82

while.end178:                                     ; preds = %if.else176, %while.cond82
  %105 = load i8*, i8** %arg, align 4
  %106 = load i8, i8* %105, align 1
  %tobool179 = icmp ne i8 %106, 0
  br i1 %tobool179, label %if.then180, label %if.end192

if.then180:                                       ; preds = %while.end178
  %107 = load i8*, i8** %arg, align 4
  %108 = load i8, i8* %107, align 1
  %conv181 = sext i8 %108 to i32
  %cmp182 = icmp eq i32 %conv181, -125
  br i1 %cmp182, label %if.then184, label %if.end188

if.then184:                                       ; preds = %if.then180
  %109 = load i8*, i8** %arg, align 4
  %incdec.ptr185 = getelementptr inbounds i8, i8* %109, i32 1
  store i8* %incdec.ptr185, i8** %arg, align 4
  %110 = load i8, i8* %incdec.ptr185, align 1
  %conv186 = sext i8 %110 to i32
  %xor = xor i32 %conv186, 32
  %conv187 = trunc i32 %xor to i8
  store i8 %conv187, i8* %incdec.ptr185, align 1
  br label %if.end188

if.end188:                                        ; preds = %if.then184, %if.then180
  %111 = load i8*, i8** %name, align 4
  %112 = load i32, i32* %sense, align 4
  %arrayidx189 = getelementptr inbounds [3 x i8], [3 x i8]* @.str.7, i32 0, i32 %112
  %113 = load i8, i8* %arrayidx189, align 1
  %conv190 = sext i8 %113 to i32
  %114 = load i8*, i8** %arg, align 4
  %115 = load i8, i8* %114, align 1
  %conv191 = sext i8 %115 to i32
  call void (i8*, i8*, ...) @zwarnnam(i8* %111, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.6, i32 0, i32 0), i32 %conv190, i32 %conv191)
  store i32 1, i32* %retval, align 4
  br label %return

if.end192:                                        ; preds = %while.end178
  %116 = load i8**, i8*** %argv, align 4
  %incdec.ptr193 = getelementptr inbounds i8*, i8** %116, i32 1
  store i8** %incdec.ptr193, i8*** %argv, align 4
  %117 = load i8*, i8** %incdec.ptr193, align 4
  store i8* %117, i8** %arg, align 4
  %118 = load i32, i32* %flags, align 4
  %and194 = and i32 %118, 4
  %tobool195 = icmp ne i32 %and194, 0
  br i1 %tobool195, label %land.lhs.true196, label %if.end207

land.lhs.true196:                                 ; preds = %if.end192
  %ind197 = getelementptr inbounds %struct.options, %struct.options* %ops, i32 0, i32 0
  %arrayidx198 = getelementptr inbounds [128 x i8], [128 x i8]* %ind197, i32 0, i32 82
  %119 = load i8, i8* %arrayidx198, align 2
  %conv199 = zext i8 %119 to i32
  %tobool200 = icmp ne i32 %conv199, 0
  br i1 %tobool200, label %land.lhs.true201, label %if.end207

land.lhs.true201:                                 ; preds = %land.lhs.true196
  %ind202 = getelementptr inbounds %struct.options, %struct.options* %ops, i32 0, i32 0
  %arrayidx203 = getelementptr inbounds [128 x i8], [128 x i8]* %ind202, i32 0, i32 102
  %120 = load i8, i8* %arrayidx203, align 2
  %tobool204 = icmp ne i8 %120, 0
  br i1 %tobool204, label %if.end207, label %if.then205

if.then205:                                       ; preds = %land.lhs.true201
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.8, i32 0, i32 0), i8** %optstr, align 4
  %121 = load i32, i32* %flags, align 4
  %or206 = or i32 %121, 4096
  store i32 %or206, i32* %flags, align 4
  br label %if.end207

if.end207:                                        ; preds = %if.then205, %land.lhs.true201, %land.lhs.true196, %if.end192
  %ind208 = getelementptr inbounds %struct.options, %struct.options* %ops, i32 0, i32 0
  %arrayidx209 = getelementptr inbounds [128 x i8], [128 x i8]* %ind208, i32 0, i32 45
  %122 = load i8, i8* %arrayidx209, align 1
  %tobool210 = icmp ne i8 %122, 0
  br i1 %tobool210, label %if.then211, label %if.end212

if.then211:                                       ; preds = %if.end207
  br label %while.end213

if.end212:                                        ; preds = %if.end207
  br label %while.cond12

while.end213:                                     ; preds = %if.then211, %if.then61, %if.then43, %if.then36, %if.then29, %land.end21
  br label %if.end227

if.else214:                                       ; preds = %while.end
  %123 = load i32, i32* %flags, align 4
  %and215 = and i32 %123, 262144
  %tobool216 = icmp ne i32 %and215, 0
  br i1 %tobool216, label %if.end226, label %land.lhs.true217

land.lhs.true217:                                 ; preds = %if.else214
  %124 = load i8**, i8*** %argv, align 4
  %125 = load i8*, i8** %124, align 4
  %tobool218 = icmp ne i8* %125, null
  br i1 %tobool218, label %land.lhs.true219, label %if.end226

land.lhs.true219:                                 ; preds = %land.lhs.true217
  %126 = load i8**, i8*** %argv, align 4
  %127 = load i8*, i8** %126, align 4
  %call220 = call i32 @strcmp(i8* %127, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i32 0, i32 0))
  %tobool221 = icmp ne i32 %call220, 0
  br i1 %tobool221, label %if.end226, label %if.then222

if.then222:                                       ; preds = %land.lhs.true219
  %ind223 = getelementptr inbounds %struct.options, %struct.options* %ops, i32 0, i32 0
  %arrayidx224 = getelementptr inbounds [128 x i8], [128 x i8]* %ind223, i32 0, i32 45
  store i8 1, i8* %arrayidx224, align 1
  %128 = load i8**, i8*** %argv, align 4
  %incdec.ptr225 = getelementptr inbounds i8*, i8** %128, i32 1
  store i8** %incdec.ptr225, i8*** %argv, align 4
  br label %if.end226

if.end226:                                        ; preds = %if.then222, %land.lhs.true219, %land.lhs.true217, %if.else214
  br label %if.end227

if.end227:                                        ; preds = %if.end226, %while.end213
  %129 = load %struct.builtin*, %struct.builtin** %bn.addr, align 4
  %defopts = getelementptr inbounds %struct.builtin, %struct.builtin* %129, i32 0, i32 6
  %130 = load i8*, i8** %defopts, align 4
  store i8* %130, i8** %pp, align 4
  %tobool228 = icmp ne i8* %130, null
  br i1 %tobool228, label %if.then229, label %if.end244

if.then229:                                       ; preds = %if.end227
  br label %while.cond230

while.cond230:                                    ; preds = %if.end241, %if.then229
  %131 = load i8*, i8** %pp, align 4
  %132 = load i8, i8* %131, align 1
  %tobool231 = icmp ne i8 %132, 0
  br i1 %tobool231, label %while.body232, label %while.end243

while.body232:                                    ; preds = %while.cond230
  %ind233 = getelementptr inbounds %struct.options, %struct.options* %ops, i32 0, i32 0
  %133 = load i8*, i8** %pp, align 4
  %134 = load i8, i8* %133, align 1
  %conv234 = sext i8 %134 to i32
  %arrayidx235 = getelementptr inbounds [128 x i8], [128 x i8]* %ind233, i32 0, i32 %conv234
  %135 = load i8, i8* %arrayidx235, align 1
  %tobool236 = icmp ne i8 %135, 0
  br i1 %tobool236, label %if.end241, label %if.then237

if.then237:                                       ; preds = %while.body232
  %ind238 = getelementptr inbounds %struct.options, %struct.options* %ops, i32 0, i32 0
  %136 = load i8*, i8** %pp, align 4
  %137 = load i8, i8* %136, align 1
  %conv239 = sext i8 %137 to i32
  %arrayidx240 = getelementptr inbounds [128 x i8], [128 x i8]* %ind238, i32 0, i32 %conv239
  store i8 1, i8* %arrayidx240, align 1
  br label %if.end241

if.end241:                                        ; preds = %if.then237, %while.body232
  %138 = load i8*, i8** %pp, align 4
  %incdec.ptr242 = getelementptr inbounds i8, i8* %138, i32 1
  store i8* %incdec.ptr242, i8** %pp, align 4
  br label %while.cond230

while.end243:                                     ; preds = %while.cond230
  br label %if.end244

if.end244:                                        ; preds = %while.end243, %if.end227
  %139 = load i8**, i8*** %argv, align 4
  %140 = load i8**, i8*** %argarr, align 4
  %sub.ptr.lhs.cast = ptrtoint i8** %139 to i32
  %sub.ptr.rhs.cast = ptrtoint i8** %140 to i32
  %sub.ptr.sub = sub i32 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i32 %sub.ptr.sub, 4
  %141 = load i32, i32* %argc, align 4
  %sub245 = sub nsw i32 %141, %sub.ptr.div
  store i32 %sub245, i32* %argc, align 4
  %142 = load i32, i32* @errflag, align 4
  %tobool246 = icmp ne i32 %142, 0
  br i1 %tobool246, label %if.then247, label %if.end249

if.then247:                                       ; preds = %if.end244
  %143 = load i32, i32* @errflag, align 4
  %and248 = and i32 %143, -2
  store i32 %and248, i32* @errflag, align 4
  store i32 1, i32* %retval, align 4
  br label %return

if.end249:                                        ; preds = %if.end244
  %144 = load i32, i32* %argc, align 4
  %145 = load %struct.builtin*, %struct.builtin** %bn.addr, align 4
  %minargs = getelementptr inbounds %struct.builtin, %struct.builtin* %145, i32 0, i32 2
  %146 = load i32, i32* %minargs, align 4
  %cmp250 = icmp slt i32 %144, %146
  br i1 %cmp250, label %if.then258, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end249
  %147 = load i32, i32* %argc, align 4
  %148 = load %struct.builtin*, %struct.builtin** %bn.addr, align 4
  %maxargs = getelementptr inbounds %struct.builtin, %struct.builtin* %148, i32 0, i32 3
  %149 = load i32, i32* %maxargs, align 4
  %cmp252 = icmp sgt i32 %147, %149
  br i1 %cmp252, label %land.lhs.true254, label %if.end263

land.lhs.true254:                                 ; preds = %lor.lhs.false
  %150 = load %struct.builtin*, %struct.builtin** %bn.addr, align 4
  %maxargs255 = getelementptr inbounds %struct.builtin, %struct.builtin* %150, i32 0, i32 3
  %151 = load i32, i32* %maxargs255, align 4
  %cmp256 = icmp ne i32 %151, -1
  br i1 %cmp256, label %if.then258, label %if.end263

if.then258:                                       ; preds = %land.lhs.true254, %if.end249
  %152 = load i8*, i8** %name, align 4
  %153 = load i32, i32* %argc, align 4
  %154 = load %struct.builtin*, %struct.builtin** %bn.addr, align 4
  %minargs259 = getelementptr inbounds %struct.builtin, %struct.builtin* %154, i32 0, i32 2
  %155 = load i32, i32* %minargs259, align 4
  %cmp260 = icmp slt i32 %153, %155
  %cond262 = select i1 %cmp260, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.9, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.10, i32 0, i32 0)
  call void (i8*, i8*, ...) @zwarnnam(i8* %152, i8* %cond262)
  store i32 1, i32* %retval, align 4
  br label %return

if.end263:                                        ; preds = %land.lhs.true254, %lor.lhs.false
  %156 = load i32, i32* %xtr, align 4
  %tobool264 = icmp ne i32 %156, 0
  br i1 %tobool264, label %if.then265, label %if.end341

if.then265:                                       ; preds = %if.end263
  %157 = load i8**, i8*** %argarr, align 4
  store i8** %157, i8*** %fullargv, align 4
  call void @printprompt4()
  %158 = load %struct._IO_FILE*, %struct._IO_FILE** @xtrerr, align 4
  %159 = load i8*, i8** %name, align 4
  %call266 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %158, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.11, i32 0, i32 0), i8* %159)
  br label %while.cond267

while.cond267:                                    ; preds = %while.body269, %if.then265
  %160 = load i8**, i8*** %fullargv, align 4
  %161 = load i8*, i8** %160, align 4
  %tobool268 = icmp ne i8* %161, null
  br i1 %tobool268, label %while.body269, label %while.end273

while.body269:                                    ; preds = %while.cond267
  %162 = load %struct._IO_FILE*, %struct._IO_FILE** @xtrerr, align 4
  %call270 = call i32 @fputc(i32 32, %struct._IO_FILE* %162)
  %163 = load i8**, i8*** %fullargv, align 4
  %incdec.ptr271 = getelementptr inbounds i8*, i8** %163, i32 1
  store i8** %incdec.ptr271, i8*** %fullargv, align 4
  %164 = load i8*, i8** %163, align 4
  %165 = load %struct._IO_FILE*, %struct._IO_FILE** @xtrerr, align 4
  %call272 = call i8* @quotedzputs(i8* %164, %struct._IO_FILE* %165)
  br label %while.cond267

while.end273:                                     ; preds = %while.cond267
  %166 = load %union.linkroot*, %union.linkroot** %assigns.addr, align 4
  %tobool274 = icmp ne %union.linkroot* %166, null
  br i1 %tobool274, label %if.then275, label %if.end338

if.then275:                                       ; preds = %while.end273
  %167 = load %union.linkroot*, %union.linkroot** %assigns.addr, align 4
  %list = bitcast %union.linkroot* %167 to %struct.linklist*
  %first = getelementptr inbounds %struct.linklist, %struct.linklist* %list, i32 0, i32 0
  %168 = load %struct.linknode*, %struct.linknode** %first, align 4
  store %struct.linknode* %168, %struct.linknode** %node276, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc335, %if.then275
  %169 = load %struct.linknode*, %struct.linknode** %node276, align 4
  %tobool277 = icmp ne %struct.linknode* %169, null
  br i1 %tobool277, label %for.body, label %for.end337

for.body:                                         ; preds = %for.cond
  %170 = load %struct.linknode*, %struct.linknode** %node276, align 4
  %171 = bitcast %struct.linknode* %170 to %struct.asgment*
  store %struct.asgment* %171, %struct.asgment** %asg, align 4
  %172 = load %struct._IO_FILE*, %struct._IO_FILE** @xtrerr, align 4
  %call278 = call i32 @fputc(i32 32, %struct._IO_FILE* %172)
  %173 = load %struct.asgment*, %struct.asgment** %asg, align 4
  %name279 = getelementptr inbounds %struct.asgment, %struct.asgment* %173, i32 0, i32 1
  %174 = load i8*, i8** %name279, align 4
  %175 = load %struct._IO_FILE*, %struct._IO_FILE** @xtrerr, align 4
  %call280 = call i8* @quotedzputs(i8* %174, %struct._IO_FILE* %175)
  %176 = load %struct.asgment*, %struct.asgment** %asg, align 4
  %flags281 = getelementptr inbounds %struct.asgment, %struct.asgment* %176, i32 0, i32 2
  %177 = load i32, i32* %flags281, align 4
  %and282 = and i32 %177, 1
  %tobool283 = icmp ne i32 %and282, 0
  br i1 %tobool283, label %if.then284, label %if.else325

if.then284:                                       ; preds = %for.body
  %178 = load %struct._IO_FILE*, %struct._IO_FILE** @xtrerr, align 4
  %call285 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %178, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.12, i32 0, i32 0))
  %179 = load %struct.asgment*, %struct.asgment** %asg, align 4
  %value = getelementptr inbounds %struct.asgment, %struct.asgment* %179, i32 0, i32 3
  %array = bitcast %union.anon* %value to %union.linkroot**
  %180 = load %union.linkroot*, %union.linkroot** %array, align 4
  %tobool286 = icmp ne %union.linkroot* %180, null
  br i1 %tobool286, label %if.then287, label %if.end323

if.then287:                                       ; preds = %if.then284
  %181 = load %struct.asgment*, %struct.asgment** %asg, align 4
  %flags288 = getelementptr inbounds %struct.asgment, %struct.asgment* %181, i32 0, i32 2
  %182 = load i32, i32* %flags288, align 4
  %and289 = and i32 %182, 2
  %tobool290 = icmp ne i32 %and289, 0
  br i1 %tobool290, label %if.then291, label %if.else309

if.then291:                                       ; preds = %if.then287
  %183 = load %struct.asgment*, %struct.asgment** %asg, align 4
  %value292 = getelementptr inbounds %struct.asgment, %struct.asgment* %183, i32 0, i32 3
  %array293 = bitcast %union.anon* %value292 to %union.linkroot**
  %184 = load %union.linkroot*, %union.linkroot** %array293, align 4
  %list294 = bitcast %union.linkroot* %184 to %struct.linklist*
  %first295 = getelementptr inbounds %struct.linklist, %struct.linklist* %list294, i32 0, i32 0
  %185 = load %struct.linknode*, %struct.linknode** %first295, align 4
  store %struct.linknode* %185, %struct.linknode** %keynode, align 4
  br label %for.cond296

for.cond296:                                      ; preds = %if.end302, %if.then291
  %186 = load %struct.linknode*, %struct.linknode** %keynode, align 4
  %tobool297 = icmp ne %struct.linknode* %186, null
  br i1 %tobool297, label %if.end299, label %if.then298

if.then298:                                       ; preds = %for.cond296
  br label %for.end

if.end299:                                        ; preds = %for.cond296
  %187 = load %struct.linknode*, %struct.linknode** %keynode, align 4
  %next = getelementptr inbounds %struct.linknode, %struct.linknode* %187, i32 0, i32 0
  %188 = load %struct.linknode*, %struct.linknode** %next, align 4
  store %struct.linknode* %188, %struct.linknode** %valnode, align 4
  %189 = load %struct.linknode*, %struct.linknode** %valnode, align 4
  %tobool300 = icmp ne %struct.linknode* %189, null
  br i1 %tobool300, label %if.end302, label %if.then301

if.then301:                                       ; preds = %if.end299
  br label %for.end

if.end302:                                        ; preds = %if.end299
  %190 = load %struct._IO_FILE*, %struct._IO_FILE** @xtrerr, align 4
  %call303 = call i32 @fputc(i32 91, %struct._IO_FILE* %190)
  %191 = load %struct.linknode*, %struct.linknode** %keynode, align 4
  %dat = getelementptr inbounds %struct.linknode, %struct.linknode* %191, i32 0, i32 2
  %192 = load i8*, i8** %dat, align 4
  %193 = load %struct._IO_FILE*, %struct._IO_FILE** @xtrerr, align 4
  %call304 = call i8* @quotedzputs(i8* %192, %struct._IO_FILE* %193)
  %194 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 4
  %call305 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %194, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.13, i32 0, i32 0))
  %195 = load %struct.linknode*, %struct.linknode** %valnode, align 4
  %dat306 = getelementptr inbounds %struct.linknode, %struct.linknode* %195, i32 0, i32 2
  %196 = load i8*, i8** %dat306, align 4
  %197 = load %struct._IO_FILE*, %struct._IO_FILE** @xtrerr, align 4
  %call307 = call i8* @quotedzputs(i8* %196, %struct._IO_FILE* %197)
  %198 = load %struct.linknode*, %struct.linknode** %valnode, align 4
  %next308 = getelementptr inbounds %struct.linknode, %struct.linknode* %198, i32 0, i32 0
  %199 = load %struct.linknode*, %struct.linknode** %next308, align 4
  store %struct.linknode* %199, %struct.linknode** %keynode, align 4
  br label %for.cond296

for.end:                                          ; preds = %if.then301, %if.then298
  br label %if.end322

if.else309:                                       ; preds = %if.then287
  %200 = load %struct.asgment*, %struct.asgment** %asg, align 4
  %value310 = getelementptr inbounds %struct.asgment, %struct.asgment* %200, i32 0, i32 3
  %array311 = bitcast %union.anon* %value310 to %union.linkroot**
  %201 = load %union.linkroot*, %union.linkroot** %array311, align 4
  %list312 = bitcast %union.linkroot* %201 to %struct.linklist*
  %first313 = getelementptr inbounds %struct.linklist, %struct.linklist* %list312, i32 0, i32 0
  %202 = load %struct.linknode*, %struct.linknode** %first313, align 4
  store %struct.linknode* %202, %struct.linknode** %arrnode, align 4
  br label %for.cond314

for.cond314:                                      ; preds = %for.inc, %if.else309
  %203 = load %struct.linknode*, %struct.linknode** %arrnode, align 4
  %tobool315 = icmp ne %struct.linknode* %203, null
  br i1 %tobool315, label %for.body316, label %for.end321

for.body316:                                      ; preds = %for.cond314
  %204 = load %struct._IO_FILE*, %struct._IO_FILE** @xtrerr, align 4
  %call317 = call i32 @fputc(i32 32, %struct._IO_FILE* %204)
  %205 = load %struct.linknode*, %struct.linknode** %arrnode, align 4
  %dat318 = getelementptr inbounds %struct.linknode, %struct.linknode* %205, i32 0, i32 2
  %206 = load i8*, i8** %dat318, align 4
  %207 = load %struct._IO_FILE*, %struct._IO_FILE** @xtrerr, align 4
  %call319 = call i8* @quotedzputs(i8* %206, %struct._IO_FILE* %207)
  br label %for.inc

for.inc:                                          ; preds = %for.body316
  %208 = load %struct.linknode*, %struct.linknode** %arrnode, align 4
  %next320 = getelementptr inbounds %struct.linknode, %struct.linknode* %208, i32 0, i32 0
  %209 = load %struct.linknode*, %struct.linknode** %next320, align 4
  store %struct.linknode* %209, %struct.linknode** %arrnode, align 4
  br label %for.cond314

for.end321:                                       ; preds = %for.cond314
  br label %if.end322

if.end322:                                        ; preds = %for.end321, %for.end
  br label %if.end323

if.end323:                                        ; preds = %if.end322, %if.then284
  %210 = load %struct._IO_FILE*, %struct._IO_FILE** @xtrerr, align 4
  %call324 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %210, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.14, i32 0, i32 0))
  br label %if.end334

if.else325:                                       ; preds = %for.body
  %211 = load %struct.asgment*, %struct.asgment** %asg, align 4
  %value326 = getelementptr inbounds %struct.asgment, %struct.asgment* %211, i32 0, i32 3
  %scalar = bitcast %union.anon* %value326 to i8**
  %212 = load i8*, i8** %scalar, align 4
  %tobool327 = icmp ne i8* %212, null
  br i1 %tobool327, label %if.then328, label %if.end333

if.then328:                                       ; preds = %if.else325
  %213 = load %struct._IO_FILE*, %struct._IO_FILE** @xtrerr, align 4
  %call329 = call i32 @fputc(i32 61, %struct._IO_FILE* %213)
  %214 = load %struct.asgment*, %struct.asgment** %asg, align 4
  %value330 = getelementptr inbounds %struct.asgment, %struct.asgment* %214, i32 0, i32 3
  %scalar331 = bitcast %union.anon* %value330 to i8**
  %215 = load i8*, i8** %scalar331, align 4
  %216 = load %struct._IO_FILE*, %struct._IO_FILE** @xtrerr, align 4
  %call332 = call i8* @quotedzputs(i8* %215, %struct._IO_FILE* %216)
  br label %if.end333

if.end333:                                        ; preds = %if.then328, %if.else325
  br label %if.end334

if.end334:                                        ; preds = %if.end333, %if.end323
  br label %for.inc335

for.inc335:                                       ; preds = %if.end334
  %217 = load %struct.linknode*, %struct.linknode** %node276, align 4
  %next336 = getelementptr inbounds %struct.linknode, %struct.linknode* %217, i32 0, i32 0
  %218 = load %struct.linknode*, %struct.linknode** %next336, align 4
  store %struct.linknode* %218, %struct.linknode** %node276, align 4
  br label %for.cond

for.end337:                                       ; preds = %for.cond
  br label %if.end338

if.end338:                                        ; preds = %for.end337, %while.end273
  %219 = load %struct._IO_FILE*, %struct._IO_FILE** @xtrerr, align 4
  %call339 = call i32 @fputc(i32 10, %struct._IO_FILE* %219)
  %220 = load %struct._IO_FILE*, %struct._IO_FILE** @xtrerr, align 4
  %call340 = call i32 @fflush(%struct._IO_FILE* %220)
  br label %if.end341

if.end341:                                        ; preds = %if.end338, %if.end263
  %221 = load i32, i32* %flags, align 4
  %and342 = and i32 %221, 524288
  %tobool343 = icmp ne i32 %and342, 0
  br i1 %tobool343, label %if.then344, label %if.else347

if.then344:                                       ; preds = %if.end341
  %222 = load %struct.builtin*, %struct.builtin** %bn.addr, align 4
  %handlerfunc345 = getelementptr inbounds %struct.builtin, %struct.builtin* %222, i32 0, i32 1
  %223 = load i32 (i8*, i8**, %struct.options*, i32)*, i32 (i8*, i8**, %struct.options*, i32)** %handlerfunc345, align 4
  %224 = bitcast i32 (i8*, i8**, %struct.options*, i32)* %223 to i32 (i8*, i8**, %union.linkroot*, %struct.options*, i32)*
  store i32 (i8*, i8**, %union.linkroot*, %struct.options*, i32)* %224, i32 (i8*, i8**, %union.linkroot*, %struct.options*, i32)** %assignfunc, align 4
  %225 = load i32 (i8*, i8**, %union.linkroot*, %struct.options*, i32)*, i32 (i8*, i8**, %union.linkroot*, %struct.options*, i32)** %assignfunc, align 4
  %226 = load i8*, i8** %name, align 4
  %227 = load i8**, i8*** %argv, align 4
  %228 = load %union.linkroot*, %union.linkroot** %assigns.addr, align 4
  %229 = load %struct.builtin*, %struct.builtin** %bn.addr, align 4
  %funcid = getelementptr inbounds %struct.builtin, %struct.builtin* %229, i32 0, i32 4
  %230 = load i32, i32* %funcid, align 4
  %call346 = call i32 %225(i8* %226, i8** %227, %union.linkroot* %228, %struct.options* %ops, i32 %230)
  store i32 %call346, i32* %retval, align 4
  br label %return

if.else347:                                       ; preds = %if.end341
  %231 = load %struct.builtin*, %struct.builtin** %bn.addr, align 4
  %handlerfunc348 = getelementptr inbounds %struct.builtin, %struct.builtin* %231, i32 0, i32 1
  %232 = load i32 (i8*, i8**, %struct.options*, i32)*, i32 (i8*, i8**, %struct.options*, i32)** %handlerfunc348, align 4
  %233 = load i8*, i8** %name, align 4
  %234 = load i8**, i8*** %argv, align 4
  %235 = load %struct.builtin*, %struct.builtin** %bn.addr, align 4
  %funcid349 = getelementptr inbounds %struct.builtin, %struct.builtin* %235, i32 0, i32 4
  %236 = load i32, i32* %funcid349, align 4
  %call350 = call i32 %232(i8* %233, i8** %234, %struct.options* %ops, i32 %236)
  store i32 %call350, i32* %retval, align 4
  br label %return

return:                                           ; preds = %if.else347, %if.then344, %if.then258, %if.then247, %if.end188, %if.then158, %if.else149, %if.then
  %237 = load i32, i32* %retval, align 4
  ret i32 %237
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i32(i8* nocapture writeonly, i8, i32, i32, i1) #2

declare i8* @ugetnode(%union.linkroot*) #1

declare i32 @deletebuiltin(i8*) #1

declare i32 @countlinknodes(%union.linkroot*) #1

declare i8* @zhalloc(i32) #1

declare i8* @strchr(i8*, i32) #1

declare void @zwarnnam(i8*, i8*, ...) #1

; Function Attrs: noinline nounwind
define internal i32 @new_optarg(%struct.options* %ops) #0 {
entry:
  %retval = alloca i32, align 4
  %ops.addr = alloca %struct.options*, align 4
  %newptr = alloca i8**, align 4
  store %struct.options* %ops, %struct.options** %ops.addr, align 4
  %0 = load %struct.options*, %struct.options** %ops.addr, align 4
  %argscount = getelementptr inbounds %struct.options, %struct.options* %0, i32 0, i32 2
  %1 = load i32, i32* %argscount, align 4
  %cmp = icmp eq i32 %1, 63
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 1, i32* %retval, align 4
  br label %return

if.end:                                           ; preds = %entry
  %2 = load %struct.options*, %struct.options** %ops.addr, align 4
  %argsalloc = getelementptr inbounds %struct.options, %struct.options* %2, i32 0, i32 3
  %3 = load i32, i32* %argsalloc, align 4
  %4 = load %struct.options*, %struct.options** %ops.addr, align 4
  %argscount1 = getelementptr inbounds %struct.options, %struct.options* %4, i32 0, i32 2
  %5 = load i32, i32* %argscount1, align 4
  %cmp2 = icmp eq i32 %3, %5
  br i1 %cmp2, label %if.then3, label %if.end13

if.then3:                                         ; preds = %if.end
  %6 = load %struct.options*, %struct.options** %ops.addr, align 4
  %argsalloc4 = getelementptr inbounds %struct.options, %struct.options* %6, i32 0, i32 3
  %7 = load i32, i32* %argsalloc4, align 4
  %add = add nsw i32 %7, 16
  %mul = mul i32 %add, 4
  %call = call i8* @zhalloc(i32 %mul)
  %8 = bitcast i8* %call to i8**
  store i8** %8, i8*** %newptr, align 4
  %9 = load %struct.options*, %struct.options** %ops.addr, align 4
  %argsalloc5 = getelementptr inbounds %struct.options, %struct.options* %9, i32 0, i32 3
  %10 = load i32, i32* %argsalloc5, align 4
  %tobool = icmp ne i32 %10, 0
  br i1 %tobool, label %if.then6, label %if.end9

if.then6:                                         ; preds = %if.then3
  %11 = load i8**, i8*** %newptr, align 4
  %12 = bitcast i8** %11 to i8*
  %13 = load %struct.options*, %struct.options** %ops.addr, align 4
  %args = getelementptr inbounds %struct.options, %struct.options* %13, i32 0, i32 1
  %14 = load i8**, i8*** %args, align 4
  %15 = bitcast i8** %14 to i8*
  %16 = load %struct.options*, %struct.options** %ops.addr, align 4
  %argsalloc7 = getelementptr inbounds %struct.options, %struct.options* %16, i32 0, i32 3
  %17 = load i32, i32* %argsalloc7, align 4
  %mul8 = mul i32 %17, 4
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %12, i8* %15, i32 %mul8, i32 4, i1 false)
  br label %if.end9

if.end9:                                          ; preds = %if.then6, %if.then3
  %18 = load i8**, i8*** %newptr, align 4
  %19 = load %struct.options*, %struct.options** %ops.addr, align 4
  %args10 = getelementptr inbounds %struct.options, %struct.options* %19, i32 0, i32 1
  store i8** %18, i8*** %args10, align 4
  %20 = load %struct.options*, %struct.options** %ops.addr, align 4
  %argsalloc11 = getelementptr inbounds %struct.options, %struct.options* %20, i32 0, i32 3
  %21 = load i32, i32* %argsalloc11, align 4
  %add12 = add nsw i32 %21, 16
  store i32 %add12, i32* %argsalloc11, align 4
  br label %if.end13

if.end13:                                         ; preds = %if.end9, %if.end
  %22 = load %struct.options*, %struct.options** %ops.addr, align 4
  %argscount14 = getelementptr inbounds %struct.options, %struct.options* %22, i32 0, i32 2
  %23 = load i32, i32* %argscount14, align 4
  %inc = add nsw i32 %23, 1
  store i32 %inc, i32* %argscount14, align 4
  store i32 0, i32* %retval, align 4
  br label %return

return:                                           ; preds = %if.end13, %if.then
  %24 = load i32, i32* %retval, align 4
  ret i32 %24
}

declare void @printprompt4() #1

declare i32 @fprintf(%struct._IO_FILE*, i8*, ...) #1

declare i32 @fputc(i32, %struct._IO_FILE*) #1

declare i8* @quotedzputs(i8*, %struct._IO_FILE*) #1

declare i32 @fflush(%struct._IO_FILE*) #1

; Function Attrs: noinline nounwind
define i32 @bin_enable(i8* %name, i8** %argv, %struct.options* %ops, i32 %func) #0 {
entry:
  %retval = alloca i32, align 4
  %name.addr = alloca i8*, align 4
  %argv.addr = alloca i8**, align 4
  %ops.addr = alloca %struct.options*, align 4
  %func.addr = alloca i32, align 4
  %ht = alloca %struct.hashtable*, align 4
  %hn = alloca %struct.hashnode*, align 4
  %scanfunc = alloca void (%struct.hashnode*, i32)*, align 4
  %pprog = alloca %struct.patprog*, align 4
  %flags1 = alloca i32, align 4
  %flags2 = alloca i32, align 4
  %match = alloca i32, align 4
  %returnval = alloca i32, align 4
  %oset = alloca %struct.__sigset_t, align 4
  %tmp = alloca %struct.__sigset_t, align 4
  %tmp50 = alloca %struct.__sigset_t, align 4
  %oset79 = alloca %struct.__sigset_t, align 4
  %tmp83 = alloca %struct.__sigset_t, align 4
  %tmp85 = alloca %struct.__sigset_t, align 4
  %oset116 = alloca %struct.__sigset_t, align 4
  %tmp120 = alloca %struct.__sigset_t, align 4
  %tmp122 = alloca %struct.__sigset_t, align 4
  store i8* %name, i8** %name.addr, align 4
  store i8** %argv, i8*** %argv.addr, align 4
  store %struct.options* %ops, %struct.options** %ops.addr, align 4
  store i32 %func, i32* %func.addr, align 4
  store i32 0, i32* %flags1, align 4
  store i32 0, i32* %flags2, align 4
  store i32 0, i32* %match, align 4
  store i32 0, i32* %returnval, align 4
  %0 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind = getelementptr inbounds %struct.options, %struct.options* %0, i32 0, i32 0
  %arrayidx = getelementptr inbounds [128 x i8], [128 x i8]* %ind, i32 0, i32 112
  %1 = load i8, i8* %arrayidx, align 4
  %conv = zext i8 %1 to i32
  %cmp = icmp ne i32 %conv, 0
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %2 = load i8*, i8** %name.addr, align 4
  %3 = load i8**, i8*** %argv.addr, align 4
  %4 = load i32, i32* %func.addr, align 4
  %cmp2 = icmp eq i32 %4, 25
  %conv3 = zext i1 %cmp2 to i32
  %call = call i32 @pat_enables(i8* %2, i8** %3, i32 %conv3)
  store i32 %call, i32* %retval, align 4
  br label %return

if.else:                                          ; preds = %entry
  %5 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind4 = getelementptr inbounds %struct.options, %struct.options* %5, i32 0, i32 0
  %arrayidx5 = getelementptr inbounds [128 x i8], [128 x i8]* %ind4, i32 0, i32 102
  %6 = load i8, i8* %arrayidx5, align 2
  %conv6 = zext i8 %6 to i32
  %cmp7 = icmp ne i32 %conv6, 0
  br i1 %cmp7, label %if.then9, label %if.else10

if.then9:                                         ; preds = %if.else
  %7 = load %struct.hashtable*, %struct.hashtable** @shfunctab, align 4
  store %struct.hashtable* %7, %struct.hashtable** %ht, align 4
  br label %if.end34

if.else10:                                        ; preds = %if.else
  %8 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind11 = getelementptr inbounds %struct.options, %struct.options* %8, i32 0, i32 0
  %arrayidx12 = getelementptr inbounds [128 x i8], [128 x i8]* %ind11, i32 0, i32 114
  %9 = load i8, i8* %arrayidx12, align 2
  %conv13 = zext i8 %9 to i32
  %cmp14 = icmp ne i32 %conv13, 0
  br i1 %cmp14, label %if.then16, label %if.else17

if.then16:                                        ; preds = %if.else10
  %10 = load %struct.hashtable*, %struct.hashtable** @reswdtab, align 4
  store %struct.hashtable* %10, %struct.hashtable** %ht, align 4
  br label %if.end33

if.else17:                                        ; preds = %if.else10
  %11 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind18 = getelementptr inbounds %struct.options, %struct.options* %11, i32 0, i32 0
  %arrayidx19 = getelementptr inbounds [128 x i8], [128 x i8]* %ind18, i32 0, i32 115
  %12 = load i8, i8* %arrayidx19, align 1
  %conv20 = zext i8 %12 to i32
  %cmp21 = icmp ne i32 %conv20, 0
  br i1 %cmp21, label %if.then23, label %if.else24

if.then23:                                        ; preds = %if.else17
  %13 = load %struct.hashtable*, %struct.hashtable** @sufaliastab, align 4
  store %struct.hashtable* %13, %struct.hashtable** %ht, align 4
  br label %if.end32

if.else24:                                        ; preds = %if.else17
  %14 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind25 = getelementptr inbounds %struct.options, %struct.options* %14, i32 0, i32 0
  %arrayidx26 = getelementptr inbounds [128 x i8], [128 x i8]* %ind25, i32 0, i32 97
  %15 = load i8, i8* %arrayidx26, align 1
  %conv27 = zext i8 %15 to i32
  %cmp28 = icmp ne i32 %conv27, 0
  br i1 %cmp28, label %if.then30, label %if.else31

if.then30:                                        ; preds = %if.else24
  %16 = load %struct.hashtable*, %struct.hashtable** @aliastab, align 4
  store %struct.hashtable* %16, %struct.hashtable** %ht, align 4
  br label %if.end

if.else31:                                        ; preds = %if.else24
  %17 = load %struct.hashtable*, %struct.hashtable** @builtintab, align 4
  store %struct.hashtable* %17, %struct.hashtable** %ht, align 4
  br label %if.end

if.end:                                           ; preds = %if.else31, %if.then30
  br label %if.end32

if.end32:                                         ; preds = %if.end, %if.then23
  br label %if.end33

if.end33:                                         ; preds = %if.end32, %if.then16
  br label %if.end34

if.end34:                                         ; preds = %if.end33, %if.then9
  br label %if.end35

if.end35:                                         ; preds = %if.end34
  %18 = load i32, i32* %func.addr, align 4
  %cmp36 = icmp eq i32 %18, 25
  br i1 %cmp36, label %if.then38, label %if.else39

if.then38:                                        ; preds = %if.end35
  store i32 1, i32* %flags2, align 4
  %19 = load %struct.hashtable*, %struct.hashtable** %ht, align 4
  %enablenode = getelementptr inbounds %struct.hashtable, %struct.hashtable* %19, i32 0, i32 13
  %20 = load void (%struct.hashnode*, i32)*, void (%struct.hashnode*, i32)** %enablenode, align 4
  store void (%struct.hashnode*, i32)* %20, void (%struct.hashnode*, i32)** %scanfunc, align 4
  br label %if.end40

if.else39:                                        ; preds = %if.end35
  store i32 1, i32* %flags1, align 4
  %21 = load %struct.hashtable*, %struct.hashtable** %ht, align 4
  %disablenode = getelementptr inbounds %struct.hashtable, %struct.hashtable* %21, i32 0, i32 12
  %22 = load void (%struct.hashnode*, i32)*, void (%struct.hashnode*, i32)** %disablenode, align 4
  store void (%struct.hashnode*, i32)* %22, void (%struct.hashnode*, i32)** %scanfunc, align 4
  br label %if.end40

if.end40:                                         ; preds = %if.else39, %if.then38
  %23 = load i8**, i8*** %argv.addr, align 4
  %24 = load i8*, i8** %23, align 4
  %tobool = icmp ne i8* %24, null
  br i1 %tobool, label %if.end53, label %if.then41

if.then41:                                        ; preds = %if.end40
  %25 = load i32, i32* @queueing_enabled, align 4
  %inc = add nsw i32 %25, 1
  store i32 %inc, i32* @queueing_enabled, align 4
  %26 = load %struct.hashtable*, %struct.hashtable** %ht, align 4
  %27 = load i32, i32* %flags1, align 4
  %28 = load i32, i32* %flags2, align 4
  %29 = load %struct.hashtable*, %struct.hashtable** %ht, align 4
  %printnode = getelementptr inbounds %struct.hashtable, %struct.hashtable* %29, i32 0, i32 15
  %30 = load void (%struct.hashnode*, i32)*, void (%struct.hashnode*, i32)** %printnode, align 4
  %call42 = call i32 @scanhashtable(%struct.hashtable* %26, i32 1, i32 %27, i32 %28, void (%struct.hashnode*, i32)* %30, i32 0)
  br label %do.body

do.body:                                          ; preds = %if.then41
  %31 = load i32, i32* @queueing_enabled, align 4
  %dec = add nsw i32 %31, -1
  store i32 %dec, i32* @queueing_enabled, align 4
  %tobool43 = icmp ne i32 %dec, 0
  br i1 %tobool43, label %if.end51, label %if.then44

if.then44:                                        ; preds = %do.body
  br label %do.body45

do.body45:                                        ; preds = %if.then44
  br label %while.cond

while.cond:                                       ; preds = %while.body, %do.body45
  %32 = load i32, i32* @queue_front, align 4
  %33 = load i32, i32* @queue_rear, align 4
  %cmp46 = icmp ne i32 %32, %33
  br i1 %cmp46, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %34 = load i32, i32* @queue_front, align 4
  %add = add nsw i32 %34, 1
  %rem = srem i32 %add, 128
  store i32 %rem, i32* @queue_front, align 4
  %35 = load i32, i32* @queue_front, align 4
  %arrayidx48 = getelementptr inbounds [128 x %struct.__sigset_t], [128 x %struct.__sigset_t]* @signal_mask_queue, i32 0, i32 %35
  call void @signal_setmask(%struct.__sigset_t* sret %tmp, %struct.__sigset_t* byval align 4 %arrayidx48)
  %36 = bitcast %struct.__sigset_t* %oset to i8*
  %37 = bitcast %struct.__sigset_t* %tmp to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %36, i8* %37, i32 128, i32 4, i1 false)
  %38 = load i32, i32* @queue_front, align 4
  %arrayidx49 = getelementptr inbounds [128 x i32], [128 x i32]* @signal_queue, i32 0, i32 %38
  %39 = load i32, i32* %arrayidx49, align 4
  call void @zhandler(i32 %39)
  call void @signal_setmask(%struct.__sigset_t* sret %tmp50, %struct.__sigset_t* byval align 4 %oset)
  br label %while.cond

while.end:                                        ; preds = %while.cond
  br label %do.end

do.end:                                           ; preds = %while.end
  br label %if.end51

if.end51:                                         ; preds = %do.end, %do.body
  br label %do.end52

do.end52:                                         ; preds = %if.end51
  store i32 0, i32* %retval, align 4
  br label %return

if.end53:                                         ; preds = %if.end40
  %40 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind54 = getelementptr inbounds %struct.options, %struct.options* %40, i32 0, i32 0
  %arrayidx55 = getelementptr inbounds [128 x i8], [128 x i8]* %ind54, i32 0, i32 109
  %41 = load i8, i8* %arrayidx55, align 1
  %conv56 = zext i8 %41 to i32
  %cmp57 = icmp ne i32 %conv56, 0
  br i1 %cmp57, label %if.then59, label %if.end93

if.then59:                                        ; preds = %if.end53
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then59
  %42 = load i8**, i8*** %argv.addr, align 4
  %43 = load i8*, i8** %42, align 4
  %tobool60 = icmp ne i8* %43, null
  br i1 %tobool60, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %44 = load i32, i32* @queueing_enabled, align 4
  %inc61 = add nsw i32 %44, 1
  store i32 %inc61, i32* @queueing_enabled, align 4
  %45 = load i8**, i8*** %argv.addr, align 4
  %46 = load i8*, i8** %45, align 4
  call void @tokenize(i8* %46)
  %47 = load i8**, i8*** %argv.addr, align 4
  %48 = load i8*, i8** %47, align 4
  %call62 = call %struct.patprog* @patcompile(i8* %48, i32 64, i8** null)
  store %struct.patprog* %call62, %struct.patprog** %pprog, align 4
  %tobool63 = icmp ne %struct.patprog* %call62, null
  br i1 %tobool63, label %if.then64, label %if.else67

if.then64:                                        ; preds = %for.body
  %49 = load %struct.hashtable*, %struct.hashtable** %ht, align 4
  %50 = load %struct.patprog*, %struct.patprog** %pprog, align 4
  %51 = load void (%struct.hashnode*, i32)*, void (%struct.hashnode*, i32)** %scanfunc, align 4
  %call65 = call i32 @scanmatchtable(%struct.hashtable* %49, %struct.patprog* %50, i32 0, i32 0, i32 0, void (%struct.hashnode*, i32)* %51, i32 0)
  %52 = load i32, i32* %match, align 4
  %add66 = add nsw i32 %52, %call65
  store i32 %add66, i32* %match, align 4
  br label %if.end68

if.else67:                                        ; preds = %for.body
  %53 = load i8**, i8*** %argv.addr, align 4
  %54 = load i8*, i8** %53, align 4
  call void @untokenize(i8* %54)
  %55 = load i8*, i8** %name.addr, align 4
  %56 = load i8**, i8*** %argv.addr, align 4
  %57 = load i8*, i8** %56, align 4
  call void (i8*, i8*, ...) @zwarnnam(i8* %55, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.15, i32 0, i32 0), i8* %57)
  store i32 1, i32* %returnval, align 4
  br label %if.end68

if.end68:                                         ; preds = %if.else67, %if.then64
  br label %do.body69

do.body69:                                        ; preds = %if.end68
  %58 = load i32, i32* @queueing_enabled, align 4
  %dec70 = add nsw i32 %58, -1
  store i32 %dec70, i32* @queueing_enabled, align 4
  %tobool71 = icmp ne i32 %dec70, 0
  br i1 %tobool71, label %if.end88, label %if.then72

if.then72:                                        ; preds = %do.body69
  br label %do.body73

do.body73:                                        ; preds = %if.then72
  br label %while.cond74

while.cond74:                                     ; preds = %while.body77, %do.body73
  %59 = load i32, i32* @queue_front, align 4
  %60 = load i32, i32* @queue_rear, align 4
  %cmp75 = icmp ne i32 %59, %60
  br i1 %cmp75, label %while.body77, label %while.end86

while.body77:                                     ; preds = %while.cond74
  %61 = load i32, i32* @queue_front, align 4
  %add80 = add nsw i32 %61, 1
  %rem81 = srem i32 %add80, 128
  store i32 %rem81, i32* @queue_front, align 4
  %62 = load i32, i32* @queue_front, align 4
  %arrayidx82 = getelementptr inbounds [128 x %struct.__sigset_t], [128 x %struct.__sigset_t]* @signal_mask_queue, i32 0, i32 %62
  call void @signal_setmask(%struct.__sigset_t* sret %tmp83, %struct.__sigset_t* byval align 4 %arrayidx82)
  %63 = bitcast %struct.__sigset_t* %oset79 to i8*
  %64 = bitcast %struct.__sigset_t* %tmp83 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %63, i8* %64, i32 128, i32 4, i1 false)
  %65 = load i32, i32* @queue_front, align 4
  %arrayidx84 = getelementptr inbounds [128 x i32], [128 x i32]* @signal_queue, i32 0, i32 %65
  %66 = load i32, i32* %arrayidx84, align 4
  call void @zhandler(i32 %66)
  call void @signal_setmask(%struct.__sigset_t* sret %tmp85, %struct.__sigset_t* byval align 4 %oset79)
  br label %while.cond74

while.end86:                                      ; preds = %while.cond74
  br label %do.end87

do.end87:                                         ; preds = %while.end86
  br label %if.end88

if.end88:                                         ; preds = %do.end87, %do.body69
  br label %do.end89

do.end89:                                         ; preds = %if.end88
  br label %for.inc

for.inc:                                          ; preds = %do.end89
  %67 = load i8**, i8*** %argv.addr, align 4
  %incdec.ptr = getelementptr inbounds i8*, i8** %67, i32 1
  store i8** %incdec.ptr, i8*** %argv.addr, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %68 = load i32, i32* %match, align 4
  %tobool90 = icmp ne i32 %68, 0
  br i1 %tobool90, label %if.end92, label %if.then91

if.then91:                                        ; preds = %for.end
  store i32 1, i32* %returnval, align 4
  br label %if.end92

if.end92:                                         ; preds = %if.then91, %for.end
  %69 = load i32, i32* %returnval, align 4
  store i32 %69, i32* %retval, align 4
  br label %return

if.end93:                                         ; preds = %if.end53
  %70 = load i32, i32* @queueing_enabled, align 4
  %inc94 = add nsw i32 %70, 1
  store i32 %inc94, i32* @queueing_enabled, align 4
  br label %for.cond95

for.cond95:                                       ; preds = %for.inc103, %if.end93
  %71 = load i8**, i8*** %argv.addr, align 4
  %72 = load i8*, i8** %71, align 4
  %tobool96 = icmp ne i8* %72, null
  br i1 %tobool96, label %for.body97, label %for.end105

for.body97:                                       ; preds = %for.cond95
  %73 = load %struct.hashtable*, %struct.hashtable** %ht, align 4
  %getnode2 = getelementptr inbounds %struct.hashtable, %struct.hashtable* %73, i32 0, i32 10
  %74 = load %struct.hashnode* (%struct.hashtable*, i8*)*, %struct.hashnode* (%struct.hashtable*, i8*)** %getnode2, align 4
  %75 = load %struct.hashtable*, %struct.hashtable** %ht, align 4
  %76 = load i8**, i8*** %argv.addr, align 4
  %77 = load i8*, i8** %76, align 4
  %call98 = call %struct.hashnode* %74(%struct.hashtable* %75, i8* %77)
  store %struct.hashnode* %call98, %struct.hashnode** %hn, align 4
  %tobool99 = icmp ne %struct.hashnode* %call98, null
  br i1 %tobool99, label %if.then100, label %if.else101

if.then100:                                       ; preds = %for.body97
  %78 = load void (%struct.hashnode*, i32)*, void (%struct.hashnode*, i32)** %scanfunc, align 4
  %79 = load %struct.hashnode*, %struct.hashnode** %hn, align 4
  call void %78(%struct.hashnode* %79, i32 0)
  br label %if.end102

if.else101:                                       ; preds = %for.body97
  %80 = load i8*, i8** %name.addr, align 4
  %81 = load i8**, i8*** %argv.addr, align 4
  %82 = load i8*, i8** %81, align 4
  call void (i8*, i8*, ...) @zwarnnam(i8* %80, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.16, i32 0, i32 0), i8* %82)
  store i32 1, i32* %returnval, align 4
  br label %if.end102

if.end102:                                        ; preds = %if.else101, %if.then100
  br label %for.inc103

for.inc103:                                       ; preds = %if.end102
  %83 = load i8**, i8*** %argv.addr, align 4
  %incdec.ptr104 = getelementptr inbounds i8*, i8** %83, i32 1
  store i8** %incdec.ptr104, i8*** %argv.addr, align 4
  br label %for.cond95

for.end105:                                       ; preds = %for.cond95
  br label %do.body106

do.body106:                                       ; preds = %for.end105
  %84 = load i32, i32* @queueing_enabled, align 4
  %dec107 = add nsw i32 %84, -1
  store i32 %dec107, i32* @queueing_enabled, align 4
  %tobool108 = icmp ne i32 %dec107, 0
  br i1 %tobool108, label %if.end125, label %if.then109

if.then109:                                       ; preds = %do.body106
  br label %do.body110

do.body110:                                       ; preds = %if.then109
  br label %while.cond111

while.cond111:                                    ; preds = %while.body114, %do.body110
  %85 = load i32, i32* @queue_front, align 4
  %86 = load i32, i32* @queue_rear, align 4
  %cmp112 = icmp ne i32 %85, %86
  br i1 %cmp112, label %while.body114, label %while.end123

while.body114:                                    ; preds = %while.cond111
  %87 = load i32, i32* @queue_front, align 4
  %add117 = add nsw i32 %87, 1
  %rem118 = srem i32 %add117, 128
  store i32 %rem118, i32* @queue_front, align 4
  %88 = load i32, i32* @queue_front, align 4
  %arrayidx119 = getelementptr inbounds [128 x %struct.__sigset_t], [128 x %struct.__sigset_t]* @signal_mask_queue, i32 0, i32 %88
  call void @signal_setmask(%struct.__sigset_t* sret %tmp120, %struct.__sigset_t* byval align 4 %arrayidx119)
  %89 = bitcast %struct.__sigset_t* %oset116 to i8*
  %90 = bitcast %struct.__sigset_t* %tmp120 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %89, i8* %90, i32 128, i32 4, i1 false)
  %91 = load i32, i32* @queue_front, align 4
  %arrayidx121 = getelementptr inbounds [128 x i32], [128 x i32]* @signal_queue, i32 0, i32 %91
  %92 = load i32, i32* %arrayidx121, align 4
  call void @zhandler(i32 %92)
  call void @signal_setmask(%struct.__sigset_t* sret %tmp122, %struct.__sigset_t* byval align 4 %oset116)
  br label %while.cond111

while.end123:                                     ; preds = %while.cond111
  br label %do.end124

do.end124:                                        ; preds = %while.end123
  br label %if.end125

if.end125:                                        ; preds = %do.end124, %do.body106
  br label %do.end126

do.end126:                                        ; preds = %if.end125
  %93 = load i32, i32* %returnval, align 4
  store i32 %93, i32* %retval, align 4
  br label %return

return:                                           ; preds = %do.end126, %if.end92, %do.end52, %if.then
  %94 = load i32, i32* %retval, align 4
  ret i32 %94
}

declare i32 @pat_enables(i8*, i8**, i32) #1

declare i32 @scanhashtable(%struct.hashtable*, i32, i32, i32, void (%struct.hashnode*, i32)*, i32) #1

declare void @signal_setmask(%struct.__sigset_t* sret, %struct.__sigset_t* byval align 4) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i32(i8* nocapture writeonly, i8* nocapture readonly, i32, i32, i1) #2

declare void @zhandler(i32) #1

declare void @tokenize(i8*) #1

declare %struct.patprog* @patcompile(i8*, i32, i8**) #1

declare i32 @scanmatchtable(%struct.hashtable*, %struct.patprog*, i32, i32, i32, void (%struct.hashnode*, i32)*, i32) #1

declare void @untokenize(i8*) #1

; Function Attrs: noinline nounwind
define i32 @bin_set(i8* %nam, i8** %args, %struct.options* %ops, i32 %func) #0 {
entry:
  %retval = alloca i32, align 4
  %nam.addr = alloca i8*, align 4
  %args.addr = alloca i8**, align 4
  %ops.addr = alloca %struct.options*, align 4
  %func.addr = alloca i32, align 4
  %action = alloca i32, align 4
  %optno = alloca i32, align 4
  %array = alloca i32, align 4
  %hadopt = alloca i32, align 4
  %hadplus = alloca i32, align 4
  %hadend = alloca i32, align 4
  %sort = alloca i32, align 4
  %x = alloca i8**, align 4
  %arrayname = alloca i8*, align 4
  %oset = alloca %struct.__sigset_t, align 4
  %tmp = alloca %struct.__sigset_t, align 4
  %tmp148 = alloca %struct.__sigset_t, align 4
  %a = alloca i8**, align 4
  %y = alloca i8**, align 4
  %len = alloca i32, align 4
  %oset204 = alloca %struct.__sigset_t, align 4
  %tmp208 = alloca %struct.__sigset_t, align 4
  %tmp210 = alloca %struct.__sigset_t, align 4
  store i8* %nam, i8** %nam.addr, align 4
  store i8** %args, i8*** %args.addr, align 4
  store %struct.options* %ops, %struct.options** %ops.addr, align 4
  store i32 %func, i32* %func.addr, align 4
  store i32 0, i32* %array, align 4
  store i32 0, i32* %hadopt, align 4
  store i32 0, i32* %hadplus, align 4
  store i32 0, i32* %hadend, align 4
  store i32 0, i32* %sort, align 4
  store i8* null, i8** %arrayname, align 4
  %0 = load i32, i32* @emulation, align 4
  %and = and i32 %0, 16
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.end11, label %land.lhs.true

land.lhs.true:                                    ; preds = %entry
  %1 = load i8**, i8*** %args.addr, align 4
  %2 = load i8*, i8** %1, align 4
  %tobool1 = icmp ne i8* %2, null
  br i1 %tobool1, label %land.lhs.true2, label %if.end11

land.lhs.true2:                                   ; preds = %land.lhs.true
  %3 = load i8**, i8*** %args.addr, align 4
  %4 = load i8*, i8** %3, align 4
  %5 = load i8, i8* %4, align 1
  %conv = sext i8 %5 to i32
  %cmp = icmp eq i32 %conv, 45
  br i1 %cmp, label %land.lhs.true4, label %if.end11

land.lhs.true4:                                   ; preds = %land.lhs.true2
  %6 = load i8**, i8*** %args.addr, align 4
  %arrayidx = getelementptr inbounds i8*, i8** %6, i32 0
  %7 = load i8*, i8** %arrayidx, align 4
  %arrayidx5 = getelementptr inbounds i8, i8* %7, i32 1
  %8 = load i8, i8* %arrayidx5, align 1
  %tobool6 = icmp ne i8 %8, 0
  br i1 %tobool6, label %if.end11, label %if.then

if.then:                                          ; preds = %land.lhs.true4
  %call = call i32 @dosetopt(i32 174, i32 0, i32 0, i8* getelementptr inbounds ([181 x i8], [181 x i8]* @opts, i32 0, i32 0))
  %call7 = call i32 @dosetopt(i32 178, i32 0, i32 0, i8* getelementptr inbounds ([181 x i8], [181 x i8]* @opts, i32 0, i32 0))
  %9 = load i8**, i8*** %args.addr, align 4
  %arrayidx8 = getelementptr inbounds i8*, i8** %9, i32 1
  %10 = load i8*, i8** %arrayidx8, align 4
  %tobool9 = icmp ne i8* %10, null
  br i1 %tobool9, label %if.end, label %if.then10

if.then10:                                        ; preds = %if.then
  store i32 0, i32* %retval, align 4
  br label %return

if.end:                                           ; preds = %if.then
  br label %if.end11

if.end11:                                         ; preds = %if.end, %land.lhs.true4, %land.lhs.true2, %land.lhs.true, %entry
  br label %while.cond

while.cond:                                       ; preds = %while.end, %if.end11
  %11 = load i8**, i8*** %args.addr, align 4
  %12 = load i8*, i8** %11, align 4
  %tobool12 = icmp ne i8* %12, null
  br i1 %tobool12, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %while.cond
  %13 = load i8**, i8*** %args.addr, align 4
  %14 = load i8*, i8** %13, align 4
  %15 = load i8, i8* %14, align 1
  %conv13 = sext i8 %15 to i32
  %cmp14 = icmp eq i32 %conv13, 45
  br i1 %cmp14, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %land.rhs
  %16 = load i8**, i8*** %args.addr, align 4
  %17 = load i8*, i8** %16, align 4
  %18 = load i8, i8* %17, align 1
  %conv16 = sext i8 %18 to i32
  %cmp17 = icmp eq i32 %conv16, 43
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %land.rhs
  %19 = phi i1 [ true, %land.rhs ], [ %cmp17, %lor.rhs ]
  br label %land.end

land.end:                                         ; preds = %lor.end, %while.cond
  %20 = phi i1 [ false, %while.cond ], [ %19, %lor.end ]
  br i1 %20, label %while.body, label %while.end114

while.body:                                       ; preds = %land.end
  %21 = load i8**, i8*** %args.addr, align 4
  %22 = load i8*, i8** %21, align 4
  %23 = load i8, i8* %22, align 1
  %conv19 = sext i8 %23 to i32
  %cmp20 = icmp eq i32 %conv19, 45
  %conv21 = zext i1 %cmp20 to i32
  store i32 %conv21, i32* %action, align 4
  %24 = load i32, i32* %action, align 4
  %tobool22 = icmp ne i32 %24, 0
  %lnot = xor i1 %tobool22, true
  %lnot.ext = zext i1 %lnot to i32
  %25 = load i32, i32* %hadplus, align 4
  %or = or i32 %25, %lnot.ext
  store i32 %or, i32* %hadplus, align 4
  %26 = load i8**, i8*** %args.addr, align 4
  %arrayidx23 = getelementptr inbounds i8*, i8** %26, i32 0
  %27 = load i8*, i8** %arrayidx23, align 4
  %arrayidx24 = getelementptr inbounds i8, i8* %27, i32 1
  %28 = load i8, i8* %arrayidx24, align 1
  %tobool25 = icmp ne i8 %28, 0
  br i1 %tobool25, label %if.end27, label %if.then26

if.then26:                                        ; preds = %while.body
  %29 = load i8**, i8*** %args.addr, align 4
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i32 0, i32 0), i8** %29, align 4
  br label %if.end27

if.end27:                                         ; preds = %if.then26, %while.body
  br label %while.cond28

while.cond28:                                     ; preds = %if.end112, %if.end27
  %30 = load i8**, i8*** %args.addr, align 4
  %31 = load i8*, i8** %30, align 4
  %incdec.ptr = getelementptr inbounds i8, i8* %31, i32 1
  store i8* %incdec.ptr, i8** %30, align 4
  %32 = load i8, i8* %incdec.ptr, align 1
  %tobool29 = icmp ne i8 %32, 0
  br i1 %tobool29, label %while.body30, label %while.end

while.body30:                                     ; preds = %while.cond28
  %33 = load i8**, i8*** %args.addr, align 4
  %34 = load i8*, i8** %33, align 4
  %35 = load i8, i8* %34, align 1
  %conv31 = sext i8 %35 to i32
  %cmp32 = icmp eq i32 %conv31, -125
  br i1 %cmp32, label %if.then34, label %if.end38

if.then34:                                        ; preds = %while.body30
  %36 = load i8**, i8*** %args.addr, align 4
  %37 = load i8*, i8** %36, align 4
  %incdec.ptr35 = getelementptr inbounds i8, i8* %37, i32 1
  store i8* %incdec.ptr35, i8** %36, align 4
  %38 = load i8, i8* %incdec.ptr35, align 1
  %conv36 = sext i8 %38 to i32
  %xor = xor i32 %conv36, 32
  %conv37 = trunc i32 %xor to i8
  store i8 %conv37, i8* %incdec.ptr35, align 1
  br label %if.end38

if.end38:                                         ; preds = %if.then34, %while.body30
  %39 = load i8**, i8*** %args.addr, align 4
  %40 = load i8*, i8** %39, align 4
  %41 = load i8, i8* %40, align 1
  %conv39 = sext i8 %41 to i32
  %cmp40 = icmp ne i32 %conv39, 45
  br i1 %cmp40, label %if.then43, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end38
  %42 = load i32, i32* %action, align 4
  %tobool42 = icmp ne i32 %42, 0
  br i1 %tobool42, label %if.then43, label %if.end44

if.then43:                                        ; preds = %lor.lhs.false, %if.end38
  store i32 1, i32* %hadopt, align 4
  br label %if.end44

if.end44:                                         ; preds = %if.then43, %lor.lhs.false
  %43 = load i8**, i8*** %args.addr, align 4
  %44 = load i8*, i8** %43, align 4
  %45 = load i8, i8* %44, align 1
  %conv45 = sext i8 %45 to i32
  %cmp46 = icmp eq i32 %conv45, 45
  br i1 %cmp46, label %if.then48, label %if.else

if.then48:                                        ; preds = %if.end44
  store i32 1, i32* %hadend, align 4
  %46 = load i8**, i8*** %args.addr, align 4
  %incdec.ptr49 = getelementptr inbounds i8*, i8** %46, i32 1
  store i8** %incdec.ptr49, i8*** %args.addr, align 4
  br label %doneoptions

if.else:                                          ; preds = %if.end44
  %47 = load i8**, i8*** %args.addr, align 4
  %48 = load i8*, i8** %47, align 4
  %49 = load i8, i8* %48, align 1
  %conv50 = sext i8 %49 to i32
  %cmp51 = icmp eq i32 %conv50, 111
  br i1 %cmp51, label %if.then53, label %if.else71

if.then53:                                        ; preds = %if.else
  %50 = load i8**, i8*** %args.addr, align 4
  %51 = load i8*, i8** %50, align 4
  %incdec.ptr54 = getelementptr inbounds i8, i8* %51, i32 1
  store i8* %incdec.ptr54, i8** %50, align 4
  %52 = load i8, i8* %incdec.ptr54, align 1
  %tobool55 = icmp ne i8 %52, 0
  br i1 %tobool55, label %if.end58, label %if.then56

if.then56:                                        ; preds = %if.then53
  %53 = load i8**, i8*** %args.addr, align 4
  %incdec.ptr57 = getelementptr inbounds i8*, i8** %53, i32 1
  store i8** %incdec.ptr57, i8*** %args.addr, align 4
  br label %if.end58

if.end58:                                         ; preds = %if.then56, %if.then53
  %54 = load i8**, i8*** %args.addr, align 4
  %55 = load i8*, i8** %54, align 4
  %tobool59 = icmp ne i8* %55, null
  br i1 %tobool59, label %if.end61, label %if.then60

if.then60:                                        ; preds = %if.end58
  %56 = load i32, i32* %hadplus, align 4
  call void @printoptionstates(i32 %56)
  call void @inittyptab()
  store i32 0, i32* %retval, align 4
  br label %return

if.end61:                                         ; preds = %if.end58
  %57 = load i8**, i8*** %args.addr, align 4
  %58 = load i8*, i8** %57, align 4
  %call62 = call i32 @optlookup(i8* %58)
  store i32 %call62, i32* %optno, align 4
  %tobool63 = icmp ne i32 %call62, 0
  br i1 %tobool63, label %if.else65, label %if.then64

if.then64:                                        ; preds = %if.end61
  %59 = load i8*, i8** %nam.addr, align 4
  %60 = load i8**, i8*** %args.addr, align 4
  %61 = load i8*, i8** %60, align 4
  call void (i8*, i8*, ...) @zerrnam(i8* %59, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.17, i32 0, i32 0), i8* %61)
  br label %if.end70

if.else65:                                        ; preds = %if.end61
  %62 = load i32, i32* %optno, align 4
  %63 = load i32, i32* %action, align 4
  %call66 = call i32 @dosetopt(i32 %62, i32 %63, i32 0, i8* getelementptr inbounds ([181 x i8], [181 x i8]* @opts, i32 0, i32 0))
  %tobool67 = icmp ne i32 %call66, 0
  br i1 %tobool67, label %if.then68, label %if.end69

if.then68:                                        ; preds = %if.else65
  %64 = load i8*, i8** %nam.addr, align 4
  %65 = load i8**, i8*** %args.addr, align 4
  %66 = load i8*, i8** %65, align 4
  call void (i8*, i8*, ...) @zerrnam(i8* %64, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.18, i32 0, i32 0), i8* %66)
  br label %if.end69

if.end69:                                         ; preds = %if.then68, %if.else65
  br label %if.end70

if.end70:                                         ; preds = %if.end69, %if.then64
  br label %while.end

if.else71:                                        ; preds = %if.else
  %67 = load i8**, i8*** %args.addr, align 4
  %68 = load i8*, i8** %67, align 4
  %69 = load i8, i8* %68, align 1
  %conv72 = sext i8 %69 to i32
  %cmp73 = icmp eq i32 %conv72, 65
  br i1 %cmp73, label %if.then75, label %if.else90

if.then75:                                        ; preds = %if.else71
  %70 = load i8**, i8*** %args.addr, align 4
  %71 = load i8*, i8** %70, align 4
  %incdec.ptr76 = getelementptr inbounds i8, i8* %71, i32 1
  store i8* %incdec.ptr76, i8** %70, align 4
  %72 = load i8, i8* %incdec.ptr76, align 1
  %tobool77 = icmp ne i8 %72, 0
  br i1 %tobool77, label %if.end80, label %if.then78

if.then78:                                        ; preds = %if.then75
  %73 = load i8**, i8*** %args.addr, align 4
  %incdec.ptr79 = getelementptr inbounds i8*, i8** %73, i32 1
  store i8** %incdec.ptr79, i8*** %args.addr, align 4
  br label %if.end80

if.end80:                                         ; preds = %if.then78, %if.then75
  %74 = load i32, i32* %action, align 4
  %tobool81 = icmp ne i32 %74, 0
  %cond = select i1 %tobool81, i32 1, i32 -1
  store i32 %cond, i32* %array, align 4
  %75 = load i8**, i8*** %args.addr, align 4
  %76 = load i8*, i8** %75, align 4
  store i8* %76, i8** %arrayname, align 4
  %77 = load i8*, i8** %arrayname, align 4
  %tobool82 = icmp ne i8* %77, null
  br i1 %tobool82, label %if.else84, label %if.then83

if.then83:                                        ; preds = %if.end80
  br label %doneoptions

if.else84:                                        ; preds = %if.end80
  %78 = load i8, i8* getelementptr inbounds ([181 x i8], [181 x i8]* @opts, i32 0, i32 96), align 1
  %tobool85 = icmp ne i8 %78, 0
  br i1 %tobool85, label %if.end88, label %if.then86

if.then86:                                        ; preds = %if.else84
  %79 = load i8**, i8*** %args.addr, align 4
  %incdec.ptr87 = getelementptr inbounds i8*, i8** %79, i32 1
  store i8** %incdec.ptr87, i8*** %args.addr, align 4
  br label %doneoptions

if.end88:                                         ; preds = %if.else84
  br label %if.end89

if.end89:                                         ; preds = %if.end88
  br label %while.end

if.else90:                                        ; preds = %if.else71
  %80 = load i8**, i8*** %args.addr, align 4
  %81 = load i8*, i8** %80, align 4
  %82 = load i8, i8* %81, align 1
  %conv91 = sext i8 %82 to i32
  %cmp92 = icmp eq i32 %conv91, 115
  br i1 %cmp92, label %if.then94, label %if.else97

if.then94:                                        ; preds = %if.else90
  %83 = load i32, i32* %action, align 4
  %tobool95 = icmp ne i32 %83, 0
  %cond96 = select i1 %tobool95, i32 1, i32 -1
  store i32 %cond96, i32* %sort, align 4
  br label %if.end109

if.else97:                                        ; preds = %if.else90
  %84 = load i8**, i8*** %args.addr, align 4
  %85 = load i8*, i8** %84, align 4
  %86 = load i8, i8* %85, align 1
  %call98 = call i32 @optlookupc(i8 signext %86)
  store i32 %call98, i32* %optno, align 4
  %tobool99 = icmp ne i32 %call98, 0
  br i1 %tobool99, label %if.else102, label %if.then100

if.then100:                                       ; preds = %if.else97
  %87 = load i8*, i8** %nam.addr, align 4
  %88 = load i8**, i8*** %args.addr, align 4
  %89 = load i8*, i8** %88, align 4
  %90 = load i8, i8* %89, align 1
  %conv101 = sext i8 %90 to i32
  call void (i8*, i8*, ...) @zerrnam(i8* %87, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.19, i32 0, i32 0), i32 %conv101)
  br label %if.end108

if.else102:                                       ; preds = %if.else97
  %91 = load i32, i32* %optno, align 4
  %92 = load i32, i32* %action, align 4
  %call103 = call i32 @dosetopt(i32 %91, i32 %92, i32 0, i8* getelementptr inbounds ([181 x i8], [181 x i8]* @opts, i32 0, i32 0))
  %tobool104 = icmp ne i32 %call103, 0
  br i1 %tobool104, label %if.then105, label %if.end107

if.then105:                                       ; preds = %if.else102
  %93 = load i8*, i8** %nam.addr, align 4
  %94 = load i8**, i8*** %args.addr, align 4
  %95 = load i8*, i8** %94, align 4
  %96 = load i8, i8* %95, align 1
  %conv106 = sext i8 %96 to i32
  call void (i8*, i8*, ...) @zerrnam(i8* %93, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.20, i32 0, i32 0), i32 %conv106)
  br label %if.end107

if.end107:                                        ; preds = %if.then105, %if.else102
  br label %if.end108

if.end108:                                        ; preds = %if.end107, %if.then100
  br label %if.end109

if.end109:                                        ; preds = %if.end108, %if.then94
  br label %if.end110

if.end110:                                        ; preds = %if.end109
  br label %if.end111

if.end111:                                        ; preds = %if.end110
  br label %if.end112

if.end112:                                        ; preds = %if.end111
  br label %while.cond28

while.end:                                        ; preds = %if.end89, %if.end70, %while.cond28
  %97 = load i8**, i8*** %args.addr, align 4
  %incdec.ptr113 = getelementptr inbounds i8*, i8** %97, i32 1
  store i8** %incdec.ptr113, i8*** %args.addr, align 4
  br label %while.cond

while.end114:                                     ; preds = %land.end
  %98 = load i32, i32* @errflag, align 4
  %tobool115 = icmp ne i32 %98, 0
  br i1 %tobool115, label %if.then116, label %if.end117

if.then116:                                       ; preds = %while.end114
  store i32 1, i32* %retval, align 4
  br label %return

if.end117:                                        ; preds = %while.end114
  br label %doneoptions

doneoptions:                                      ; preds = %if.end117, %if.then86, %if.then83, %if.then48
  call void @inittyptab()
  %99 = load i32, i32* @queueing_enabled, align 4
  %inc = add nsw i32 %99, 1
  store i32 %inc, i32* @queueing_enabled, align 4
  %100 = load i8*, i8** %arrayname, align 4
  %tobool118 = icmp ne i8* %100, null
  br i1 %tobool118, label %if.end153, label %if.then119

if.then119:                                       ; preds = %doneoptions
  %101 = load i32, i32* %hadopt, align 4
  %tobool120 = icmp ne i32 %101, 0
  br i1 %tobool120, label %if.end127, label %land.lhs.true121

land.lhs.true121:                                 ; preds = %if.then119
  %102 = load i8**, i8*** %args.addr, align 4
  %103 = load i8*, i8** %102, align 4
  %tobool122 = icmp ne i8* %103, null
  br i1 %tobool122, label %if.end127, label %if.then123

if.then123:                                       ; preds = %land.lhs.true121
  %104 = load %struct.hashtable*, %struct.hashtable** @paramtab, align 4
  %105 = load %struct.hashtable*, %struct.hashtable** @paramtab, align 4
  %printnode = getelementptr inbounds %struct.hashtable, %struct.hashtable* %105, i32 0, i32 15
  %106 = load void (%struct.hashnode*, i32)*, void (%struct.hashnode*, i32)** %printnode, align 4
  %107 = load i32, i32* %hadplus, align 4
  %tobool124 = icmp ne i32 %107, 0
  %cond125 = select i1 %tobool124, i32 1, i32 0
  %call126 = call i32 @scanhashtable(%struct.hashtable* %104, i32 1, i32 0, i32 0, void (%struct.hashnode*, i32)* %106, i32 %cond125)
  br label %if.end127

if.end127:                                        ; preds = %if.then123, %land.lhs.true121, %if.then119
  %108 = load i32, i32* %array, align 4
  %tobool128 = icmp ne i32 %108, 0
  br i1 %tobool128, label %if.then129, label %if.end134

if.then129:                                       ; preds = %if.end127
  %109 = load %struct.hashtable*, %struct.hashtable** @paramtab, align 4
  %110 = load %struct.hashtable*, %struct.hashtable** @paramtab, align 4
  %printnode130 = getelementptr inbounds %struct.hashtable, %struct.hashtable* %110, i32 0, i32 15
  %111 = load void (%struct.hashnode*, i32)*, void (%struct.hashnode*, i32)** %printnode130, align 4
  %112 = load i32, i32* %hadplus, align 4
  %tobool131 = icmp ne i32 %112, 0
  %cond132 = select i1 %tobool131, i32 1, i32 0
  %call133 = call i32 @scanhashtable(%struct.hashtable* %109, i32 1, i32 1, i32 0, void (%struct.hashnode*, i32)* %111, i32 %cond132)
  br label %if.end134

if.end134:                                        ; preds = %if.then129, %if.end127
  %113 = load i8**, i8*** %args.addr, align 4
  %114 = load i8*, i8** %113, align 4
  %tobool135 = icmp ne i8* %114, null
  br i1 %tobool135, label %if.end152, label %land.lhs.true136

land.lhs.true136:                                 ; preds = %if.end134
  %115 = load i32, i32* %hadend, align 4
  %tobool137 = icmp ne i32 %115, 0
  br i1 %tobool137, label %if.end152, label %if.then138

if.then138:                                       ; preds = %land.lhs.true136
  br label %do.body

do.body:                                          ; preds = %if.then138
  %116 = load i32, i32* @queueing_enabled, align 4
  %dec = add nsw i32 %116, -1
  store i32 %dec, i32* @queueing_enabled, align 4
  %tobool139 = icmp ne i32 %dec, 0
  br i1 %tobool139, label %if.end150, label %if.then140

if.then140:                                       ; preds = %do.body
  br label %do.body141

do.body141:                                       ; preds = %if.then140
  br label %while.cond142

while.cond142:                                    ; preds = %while.body145, %do.body141
  %117 = load i32, i32* @queue_front, align 4
  %118 = load i32, i32* @queue_rear, align 4
  %cmp143 = icmp ne i32 %117, %118
  br i1 %cmp143, label %while.body145, label %while.end149

while.body145:                                    ; preds = %while.cond142
  %119 = load i32, i32* @queue_front, align 4
  %add = add nsw i32 %119, 1
  %rem = srem i32 %add, 128
  store i32 %rem, i32* @queue_front, align 4
  %120 = load i32, i32* @queue_front, align 4
  %arrayidx146 = getelementptr inbounds [128 x %struct.__sigset_t], [128 x %struct.__sigset_t]* @signal_mask_queue, i32 0, i32 %120
  call void @signal_setmask(%struct.__sigset_t* sret %tmp, %struct.__sigset_t* byval align 4 %arrayidx146)
  %121 = bitcast %struct.__sigset_t* %oset to i8*
  %122 = bitcast %struct.__sigset_t* %tmp to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %121, i8* %122, i32 128, i32 4, i1 false)
  %123 = load i32, i32* @queue_front, align 4
  %arrayidx147 = getelementptr inbounds [128 x i32], [128 x i32]* @signal_queue, i32 0, i32 %123
  %124 = load i32, i32* %arrayidx147, align 4
  call void @zhandler(i32 %124)
  call void @signal_setmask(%struct.__sigset_t* sret %tmp148, %struct.__sigset_t* byval align 4 %oset)
  br label %while.cond142

while.end149:                                     ; preds = %while.cond142
  br label %do.end

do.end:                                           ; preds = %while.end149
  br label %if.end150

if.end150:                                        ; preds = %do.end, %do.body
  br label %do.end151

do.end151:                                        ; preds = %if.end150
  store i32 0, i32* %retval, align 4
  br label %return

if.end152:                                        ; preds = %land.lhs.true136, %if.end134
  br label %if.end153

if.end153:                                        ; preds = %if.end152, %doneoptions
  %125 = load i32, i32* %sort, align 4
  %tobool154 = icmp ne i32 %125, 0
  br i1 %tobool154, label %if.then155, label %if.end159

if.then155:                                       ; preds = %if.end153
  %126 = load i8**, i8*** %args.addr, align 4
  %127 = load i32, i32* %sort, align 4
  %cmp156 = icmp slt i32 %127, 0
  %cond158 = select i1 %cmp156, i32 4, i32 0
  call void @strmetasort(i8** %126, i32 %cond158, i32* null)
  br label %if.end159

if.end159:                                        ; preds = %if.then155, %if.end153
  %128 = load i32, i32* %array, align 4
  %tobool160 = icmp ne i32 %128, 0
  br i1 %tobool160, label %if.then161, label %if.else191

if.then161:                                       ; preds = %if.end159
  store i8** null, i8*** %a, align 4
  %129 = load i8**, i8*** %args.addr, align 4
  %call165 = call i32 @arrlen(i8** %129)
  store i32 %call165, i32* %len, align 4
  %130 = load i32, i32* %array, align 4
  %cmp166 = icmp slt i32 %130, 0
  br i1 %cmp166, label %land.lhs.true168, label %if.end178

land.lhs.true168:                                 ; preds = %if.then161
  %131 = load i8*, i8** %arrayname, align 4
  %call169 = call i8** @getaparam(i8* %131)
  store i8** %call169, i8*** %a, align 4
  %tobool170 = icmp ne i8** %call169, null
  br i1 %tobool170, label %land.lhs.true171, label %if.end178

land.lhs.true171:                                 ; preds = %land.lhs.true168
  %132 = load i8**, i8*** %a, align 4
  %133 = load i32, i32* %len, align 4
  %call172 = call signext i8 @arrlen_gt(i8** %132, i32 %133)
  %conv173 = sext i8 %call172 to i32
  %tobool174 = icmp ne i32 %conv173, 0
  br i1 %tobool174, label %if.then175, label %if.end178

if.then175:                                       ; preds = %land.lhs.true171
  %134 = load i32, i32* %len, align 4
  %135 = load i8**, i8*** %a, align 4
  %add.ptr = getelementptr inbounds i8*, i8** %135, i32 %134
  store i8** %add.ptr, i8*** %a, align 4
  %136 = load i8**, i8*** %a, align 4
  %call176 = call i32 @arrlen(i8** %136)
  %137 = load i32, i32* %len, align 4
  %add177 = add nsw i32 %137, %call176
  store i32 %add177, i32* %len, align 4
  br label %if.end178

if.end178:                                        ; preds = %if.then175, %land.lhs.true171, %land.lhs.true168, %if.then161
  %138 = load i32, i32* %len, align 4
  %add179 = add nsw i32 %138, 1
  %mul = mul i32 %add179, 4
  %call180 = call i8* @zalloc(i32 %mul)
  %139 = bitcast i8* %call180 to i8**
  store i8** %139, i8*** %y, align 4
  store i8** %139, i8*** %x, align 4
  br label %for.cond

for.cond:                                         ; preds = %if.end185, %if.end178
  %140 = load i32, i32* %len, align 4
  %dec181 = add nsw i32 %140, -1
  store i32 %dec181, i32* %len, align 4
  %tobool182 = icmp ne i32 %140, 0
  br i1 %tobool182, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %141 = load i8**, i8*** %args.addr, align 4
  %142 = load i8*, i8** %141, align 4
  %tobool183 = icmp ne i8* %142, null
  br i1 %tobool183, label %if.end185, label %if.then184

if.then184:                                       ; preds = %for.body
  %143 = load i8**, i8*** %a, align 4
  store i8** %143, i8*** %args.addr, align 4
  br label %if.end185

if.end185:                                        ; preds = %if.then184, %for.body
  %144 = load i8**, i8*** %args.addr, align 4
  %incdec.ptr186 = getelementptr inbounds i8*, i8** %144, i32 1
  store i8** %incdec.ptr186, i8*** %args.addr, align 4
  %145 = load i8*, i8** %144, align 4
  %call187 = call i8* @ztrdup(i8* %145)
  %146 = load i8**, i8*** %y, align 4
  %incdec.ptr188 = getelementptr inbounds i8*, i8** %146, i32 1
  store i8** %incdec.ptr188, i8*** %y, align 4
  store i8* %call187, i8** %146, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %147 = load i8**, i8*** %y, align 4
  %incdec.ptr189 = getelementptr inbounds i8*, i8** %147, i32 1
  store i8** %incdec.ptr189, i8*** %y, align 4
  store i8* null, i8** %147, align 4
  %148 = load i8*, i8** %arrayname, align 4
  %149 = load i8**, i8*** %x, align 4
  %call190 = call %struct.param* @setaparam(i8* %148, i8** %149)
  br label %if.end193

if.else191:                                       ; preds = %if.end159
  %150 = load i8**, i8*** @pparams, align 4
  call void @freearray(i8** %150)
  %151 = load i8**, i8*** %args.addr, align 4
  %call192 = call i8** @zarrdup(i8** %151)
  store i8** %call192, i8*** @pparams, align 4
  br label %if.end193

if.end193:                                        ; preds = %if.else191, %for.end
  br label %do.body194

do.body194:                                       ; preds = %if.end193
  %152 = load i32, i32* @queueing_enabled, align 4
  %dec195 = add nsw i32 %152, -1
  store i32 %dec195, i32* @queueing_enabled, align 4
  %tobool196 = icmp ne i32 %dec195, 0
  br i1 %tobool196, label %if.end213, label %if.then197

if.then197:                                       ; preds = %do.body194
  br label %do.body198

do.body198:                                       ; preds = %if.then197
  br label %while.cond199

while.cond199:                                    ; preds = %while.body202, %do.body198
  %153 = load i32, i32* @queue_front, align 4
  %154 = load i32, i32* @queue_rear, align 4
  %cmp200 = icmp ne i32 %153, %154
  br i1 %cmp200, label %while.body202, label %while.end211

while.body202:                                    ; preds = %while.cond199
  %155 = load i32, i32* @queue_front, align 4
  %add205 = add nsw i32 %155, 1
  %rem206 = srem i32 %add205, 128
  store i32 %rem206, i32* @queue_front, align 4
  %156 = load i32, i32* @queue_front, align 4
  %arrayidx207 = getelementptr inbounds [128 x %struct.__sigset_t], [128 x %struct.__sigset_t]* @signal_mask_queue, i32 0, i32 %156
  call void @signal_setmask(%struct.__sigset_t* sret %tmp208, %struct.__sigset_t* byval align 4 %arrayidx207)
  %157 = bitcast %struct.__sigset_t* %oset204 to i8*
  %158 = bitcast %struct.__sigset_t* %tmp208 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %157, i8* %158, i32 128, i32 4, i1 false)
  %159 = load i32, i32* @queue_front, align 4
  %arrayidx209 = getelementptr inbounds [128 x i32], [128 x i32]* @signal_queue, i32 0, i32 %159
  %160 = load i32, i32* %arrayidx209, align 4
  call void @zhandler(i32 %160)
  call void @signal_setmask(%struct.__sigset_t* sret %tmp210, %struct.__sigset_t* byval align 4 %oset204)
  br label %while.cond199

while.end211:                                     ; preds = %while.cond199
  br label %do.end212

do.end212:                                        ; preds = %while.end211
  br label %if.end213

if.end213:                                        ; preds = %do.end212, %do.body194
  br label %do.end214

do.end214:                                        ; preds = %if.end213
  store i32 0, i32* %retval, align 4
  br label %return

return:                                           ; preds = %do.end214, %do.end151, %if.then116, %if.then60, %if.then10
  %161 = load i32, i32* %retval, align 4
  ret i32 %161
}

declare i32 @dosetopt(i32, i32, i32, i8*) #1

declare void @printoptionstates(i32) #1

declare void @inittyptab() #1

declare i32 @optlookup(i8*) #1

declare void @zerrnam(i8*, i8*, ...) #1

declare i32 @optlookupc(i8 signext) #1

declare void @strmetasort(i8**, i32, i32*) #1

declare i32 @arrlen(i8**) #1

declare i8** @getaparam(i8*) #1

declare signext i8 @arrlen_gt(i8**, i32) #1

declare i8* @zalloc(i32) #1

declare i8* @ztrdup(i8*) #1

declare %struct.param* @setaparam(i8*, i8**) #1

declare void @freearray(i8**) #1

declare i8** @zarrdup(i8**) #1

; Function Attrs: noinline nounwind
define i32 @bin_pwd(i8* %name, i8** %argv, %struct.options* %ops, i32 %func) #0 {
entry:
  %name.addr = alloca i8*, align 4
  %argv.addr = alloca i8**, align 4
  %ops.addr = alloca %struct.options*, align 4
  %func.addr = alloca i32, align 4
  store i8* %name, i8** %name.addr, align 4
  store i8** %argv, i8*** %argv.addr, align 4
  store %struct.options* %ops, %struct.options** %ops.addr, align 4
  store i32 %func, i32* %func.addr, align 4
  %0 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind = getelementptr inbounds %struct.options, %struct.options* %0, i32 0, i32 0
  %arrayidx = getelementptr inbounds [128 x i8], [128 x i8]* %ind, i32 0, i32 114
  %1 = load i8, i8* %arrayidx, align 2
  %conv = zext i8 %1 to i32
  %cmp = icmp ne i32 %conv, 0
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind2 = getelementptr inbounds %struct.options, %struct.options* %2, i32 0, i32 0
  %arrayidx3 = getelementptr inbounds [128 x i8], [128 x i8]* %ind2, i32 0, i32 80
  %3 = load i8, i8* %arrayidx3, align 4
  %conv4 = zext i8 %3 to i32
  %cmp5 = icmp ne i32 %conv4, 0
  br i1 %cmp5, label %if.then, label %lor.lhs.false7

lor.lhs.false7:                                   ; preds = %lor.lhs.false
  %4 = load i8, i8* getelementptr inbounds ([181 x i8], [181 x i8]* @opts, i32 0, i32 31), align 1
  %conv8 = sext i8 %4 to i32
  %tobool = icmp ne i32 %conv8, 0
  br i1 %tobool, label %land.lhs.true, label %if.else

land.lhs.true:                                    ; preds = %lor.lhs.false7
  %5 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind9 = getelementptr inbounds %struct.options, %struct.options* %5, i32 0, i32 0
  %arrayidx10 = getelementptr inbounds [128 x i8], [128 x i8]* %ind9, i32 0, i32 76
  %6 = load i8, i8* %arrayidx10, align 4
  %conv11 = zext i8 %6 to i32
  %cmp12 = icmp ne i32 %conv11, 0
  br i1 %cmp12, label %if.else, label %if.then

if.then:                                          ; preds = %land.lhs.true, %lor.lhs.false, %entry
  %call = call i8* @zgetcwd()
  %call14 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.21, i32 0, i32 0), i8* %call)
  br label %if.end

if.else:                                          ; preds = %land.lhs.true, %lor.lhs.false7
  %7 = load i8*, i8** @pwd, align 4
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 4
  %call15 = call i32 @zputs(i8* %7, %struct._IO_FILE* %8)
  %call16 = call i32 @putchar(i32 10)
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret i32 0
}

declare i32 @printf(i8*, ...) #1

declare i8* @zgetcwd() #1

declare i32 @zputs(i8*, %struct._IO_FILE*) #1

declare i32 @putchar(i32) #1

; Function Attrs: noinline nounwind
define i32 @bin_dirs(i8* %name, i8** %argv, %struct.options* %ops, i32 %func) #0 {
entry:
  %retval = alloca i32, align 4
  %name.addr = alloca i8*, align 4
  %argv.addr = alloca i8**, align 4
  %ops.addr = alloca %struct.options*, align 4
  %func.addr = alloca i32, align 4
  %l = alloca %union.linkroot*, align 4
  %node = alloca %struct.linknode*, align 4
  %fmt = alloca i8*, align 4
  %pos = alloca i32, align 4
  %oset = alloca %struct.__sigset_t, align 4
  %tmp = alloca %struct.__sigset_t, align 4
  %tmp57 = alloca %struct.__sigset_t, align 4
  %oset80 = alloca %struct.__sigset_t, align 4
  %tmp84 = alloca %struct.__sigset_t, align 4
  %tmp86 = alloca %struct.__sigset_t, align 4
  store i8* %name, i8** %name.addr, align 4
  store i8** %argv, i8*** %argv.addr, align 4
  store %struct.options* %ops, %struct.options** %ops.addr, align 4
  store i32 %func, i32* %func.addr, align 4
  %0 = load i32, i32* @queueing_enabled, align 4
  %inc = add nsw i32 %0, 1
  store i32 %inc, i32* @queueing_enabled, align 4
  %1 = load i8**, i8*** %argv.addr, align 4
  %2 = load i8*, i8** %1, align 4
  %tobool = icmp ne i8* %2, null
  br i1 %tobool, label %lor.lhs.false2, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %3 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind = getelementptr inbounds %struct.options, %struct.options* %3, i32 0, i32 0
  %arrayidx = getelementptr inbounds [128 x i8], [128 x i8]* %ind, i32 0, i32 99
  %4 = load i8, i8* %arrayidx, align 1
  %conv = zext i8 %4 to i32
  %cmp = icmp ne i32 %conv, 0
  br i1 %cmp, label %lor.lhs.false2, label %if.then

lor.lhs.false2:                                   ; preds = %lor.lhs.false, %entry
  %5 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind3 = getelementptr inbounds %struct.options, %struct.options* %5, i32 0, i32 0
  %arrayidx4 = getelementptr inbounds [128 x i8], [128 x i8]* %ind3, i32 0, i32 118
  %6 = load i8, i8* %arrayidx4, align 2
  %conv5 = zext i8 %6 to i32
  %cmp6 = icmp ne i32 %conv5, 0
  br i1 %cmp6, label %if.then, label %lor.lhs.false8

lor.lhs.false8:                                   ; preds = %lor.lhs.false2
  %7 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind9 = getelementptr inbounds %struct.options, %struct.options* %7, i32 0, i32 0
  %arrayidx10 = getelementptr inbounds [128 x i8], [128 x i8]* %ind9, i32 0, i32 112
  %8 = load i8, i8* %arrayidx10, align 4
  %conv11 = zext i8 %8 to i32
  %cmp12 = icmp ne i32 %conv11, 0
  br i1 %cmp12, label %if.then, label %if.end61

if.then:                                          ; preds = %lor.lhs.false8, %lor.lhs.false2, %lor.lhs.false
  store i32 1, i32* %pos, align 4
  %9 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind14 = getelementptr inbounds %struct.options, %struct.options* %9, i32 0, i32 0
  %arrayidx15 = getelementptr inbounds [128 x i8], [128 x i8]* %ind14, i32 0, i32 118
  %10 = load i8, i8* %arrayidx15, align 2
  %conv16 = zext i8 %10 to i32
  %cmp17 = icmp ne i32 %conv16, 0
  br i1 %cmp17, label %if.then19, label %if.else

if.then19:                                        ; preds = %if.then
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.22, i32 0, i32 0))
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.23, i32 0, i32 0), i8** %fmt, align 4
  br label %if.end27

if.else:                                          ; preds = %if.then
  %11 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind20 = getelementptr inbounds %struct.options, %struct.options* %11, i32 0, i32 0
  %arrayidx21 = getelementptr inbounds [128 x i8], [128 x i8]* %ind20, i32 0, i32 112
  %12 = load i8, i8* %arrayidx21, align 4
  %conv22 = zext i8 %12 to i32
  %cmp23 = icmp ne i32 %conv22, 0
  br i1 %cmp23, label %if.then25, label %if.else26

if.then25:                                        ; preds = %if.else
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.24, i32 0, i32 0), i8** %fmt, align 4
  br label %if.end

if.else26:                                        ; preds = %if.else
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.25, i32 0, i32 0), i8** %fmt, align 4
  br label %if.end

if.end:                                           ; preds = %if.else26, %if.then25
  br label %if.end27

if.end27:                                         ; preds = %if.end, %if.then19
  %13 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind28 = getelementptr inbounds %struct.options, %struct.options* %13, i32 0, i32 0
  %arrayidx29 = getelementptr inbounds [128 x i8], [128 x i8]* %ind28, i32 0, i32 108
  %14 = load i8, i8* %arrayidx29, align 4
  %conv30 = zext i8 %14 to i32
  %cmp31 = icmp ne i32 %conv30, 0
  br i1 %cmp31, label %if.then33, label %if.else35

if.then33:                                        ; preds = %if.end27
  %15 = load i8*, i8** @pwd, align 4
  %16 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 4
  %call34 = call i32 @zputs(i8* %15, %struct._IO_FILE* %16)
  br label %if.end36

if.else35:                                        ; preds = %if.end27
  %17 = load i8*, i8** @pwd, align 4
  %18 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 4
  call void @fprintdir(i8* %17, %struct._IO_FILE* %18)
  br label %if.end36

if.end36:                                         ; preds = %if.else35, %if.then33
  %19 = load %union.linkroot*, %union.linkroot** @dirstack, align 4
  %list = bitcast %union.linkroot* %19 to %struct.linklist*
  %first = getelementptr inbounds %struct.linklist, %struct.linklist* %list, i32 0, i32 0
  %20 = load %struct.linknode*, %struct.linknode** %first, align 4
  store %struct.linknode* %20, %struct.linknode** %node, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end36
  %21 = load %struct.linknode*, %struct.linknode** %node, align 4
  %tobool37 = icmp ne %struct.linknode* %21, null
  br i1 %tobool37, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %22 = load i8*, i8** %fmt, align 4
  %23 = load i32, i32* %pos, align 4
  %inc38 = add nsw i32 %23, 1
  store i32 %inc38, i32* %pos, align 4
  %call39 = call i32 (i8*, ...) @printf(i8* %22, i32 %23)
  %24 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind40 = getelementptr inbounds %struct.options, %struct.options* %24, i32 0, i32 0
  %arrayidx41 = getelementptr inbounds [128 x i8], [128 x i8]* %ind40, i32 0, i32 108
  %25 = load i8, i8* %arrayidx41, align 4
  %conv42 = zext i8 %25 to i32
  %cmp43 = icmp ne i32 %conv42, 0
  br i1 %cmp43, label %if.then45, label %if.else47

if.then45:                                        ; preds = %for.body
  %26 = load %struct.linknode*, %struct.linknode** %node, align 4
  %dat = getelementptr inbounds %struct.linknode, %struct.linknode* %26, i32 0, i32 2
  %27 = load i8*, i8** %dat, align 4
  %28 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 4
  %call46 = call i32 @zputs(i8* %27, %struct._IO_FILE* %28)
  br label %if.end49

if.else47:                                        ; preds = %for.body
  %29 = load %struct.linknode*, %struct.linknode** %node, align 4
  %dat48 = getelementptr inbounds %struct.linknode, %struct.linknode* %29, i32 0, i32 2
  %30 = load i8*, i8** %dat48, align 4
  %31 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 4
  call void @fprintdir(i8* %30, %struct._IO_FILE* %31)
  br label %if.end49

if.end49:                                         ; preds = %if.else47, %if.then45
  br label %for.inc

for.inc:                                          ; preds = %if.end49
  %32 = load %struct.linknode*, %struct.linknode** %node, align 4
  %next = getelementptr inbounds %struct.linknode, %struct.linknode* %32, i32 0, i32 0
  %33 = load %struct.linknode*, %struct.linknode** %next, align 4
  store %struct.linknode* %33, %struct.linknode** %node, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  br label %do.body

do.body:                                          ; preds = %for.end
  %34 = load i32, i32* @queueing_enabled, align 4
  %dec = add nsw i32 %34, -1
  store i32 %dec, i32* @queueing_enabled, align 4
  %tobool50 = icmp ne i32 %dec, 0
  br i1 %tobool50, label %if.end58, label %if.then51

if.then51:                                        ; preds = %do.body
  br label %do.body52

do.body52:                                        ; preds = %if.then51
  br label %while.cond

while.cond:                                       ; preds = %while.body, %do.body52
  %35 = load i32, i32* @queue_front, align 4
  %36 = load i32, i32* @queue_rear, align 4
  %cmp53 = icmp ne i32 %35, %36
  br i1 %cmp53, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %37 = load i32, i32* @queue_front, align 4
  %add = add nsw i32 %37, 1
  %rem = srem i32 %add, 128
  store i32 %rem, i32* @queue_front, align 4
  %38 = load i32, i32* @queue_front, align 4
  %arrayidx55 = getelementptr inbounds [128 x %struct.__sigset_t], [128 x %struct.__sigset_t]* @signal_mask_queue, i32 0, i32 %38
  call void @signal_setmask(%struct.__sigset_t* sret %tmp, %struct.__sigset_t* byval align 4 %arrayidx55)
  %39 = bitcast %struct.__sigset_t* %oset to i8*
  %40 = bitcast %struct.__sigset_t* %tmp to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %39, i8* %40, i32 128, i32 4, i1 false)
  %41 = load i32, i32* @queue_front, align 4
  %arrayidx56 = getelementptr inbounds [128 x i32], [128 x i32]* @signal_queue, i32 0, i32 %41
  %42 = load i32, i32* %arrayidx56, align 4
  call void @zhandler(i32 %42)
  call void @signal_setmask(%struct.__sigset_t* sret %tmp57, %struct.__sigset_t* byval align 4 %oset)
  br label %while.cond

while.end:                                        ; preds = %while.cond
  br label %do.end

do.end:                                           ; preds = %while.end
  br label %if.end58

if.end58:                                         ; preds = %do.end, %do.body
  br label %do.end59

do.end59:                                         ; preds = %if.end58
  %call60 = call i32 @putchar(i32 10)
  store i32 0, i32* %retval, align 4
  br label %return

if.end61:                                         ; preds = %lor.lhs.false8
  %call62 = call %union.linkroot* @znewlinklist()
  store %union.linkroot* %call62, %union.linkroot** %l, align 4
  br label %while.cond63

while.cond63:                                     ; preds = %while.body65, %if.end61
  %43 = load i8**, i8*** %argv.addr, align 4
  %44 = load i8*, i8** %43, align 4
  %tobool64 = icmp ne i8* %44, null
  br i1 %tobool64, label %while.body65, label %while.end69

while.body65:                                     ; preds = %while.cond63
  %45 = load %union.linkroot*, %union.linkroot** %l, align 4
  %46 = load %union.linkroot*, %union.linkroot** %l, align 4
  %list66 = bitcast %union.linkroot* %46 to %struct.linklist*
  %last = getelementptr inbounds %struct.linklist, %struct.linklist* %list66, i32 0, i32 1
  %47 = load %struct.linknode*, %struct.linknode** %last, align 4
  %48 = load i8**, i8*** %argv.addr, align 4
  %incdec.ptr = getelementptr inbounds i8*, i8** %48, i32 1
  store i8** %incdec.ptr, i8*** %argv.addr, align 4
  %49 = load i8*, i8** %48, align 4
  %call67 = call i8* @ztrdup(i8* %49)
  %call68 = call %struct.linknode* @zinsertlinknode(%union.linkroot* %45, %struct.linknode* %47, i8* %call67)
  br label %while.cond63

while.end69:                                      ; preds = %while.cond63
  %50 = load %union.linkroot*, %union.linkroot** @dirstack, align 4
  call void @freelinklist(%union.linkroot* %50, void (i8*)* @freestr)
  %51 = load %union.linkroot*, %union.linkroot** %l, align 4
  store %union.linkroot* %51, %union.linkroot** @dirstack, align 4
  br label %do.body70

do.body70:                                        ; preds = %while.end69
  %52 = load i32, i32* @queueing_enabled, align 4
  %dec71 = add nsw i32 %52, -1
  store i32 %dec71, i32* @queueing_enabled, align 4
  %tobool72 = icmp ne i32 %dec71, 0
  br i1 %tobool72, label %if.end89, label %if.then73

if.then73:                                        ; preds = %do.body70
  br label %do.body74

do.body74:                                        ; preds = %if.then73
  br label %while.cond75

while.cond75:                                     ; preds = %while.body78, %do.body74
  %53 = load i32, i32* @queue_front, align 4
  %54 = load i32, i32* @queue_rear, align 4
  %cmp76 = icmp ne i32 %53, %54
  br i1 %cmp76, label %while.body78, label %while.end87

while.body78:                                     ; preds = %while.cond75
  %55 = load i32, i32* @queue_front, align 4
  %add81 = add nsw i32 %55, 1
  %rem82 = srem i32 %add81, 128
  store i32 %rem82, i32* @queue_front, align 4
  %56 = load i32, i32* @queue_front, align 4
  %arrayidx83 = getelementptr inbounds [128 x %struct.__sigset_t], [128 x %struct.__sigset_t]* @signal_mask_queue, i32 0, i32 %56
  call void @signal_setmask(%struct.__sigset_t* sret %tmp84, %struct.__sigset_t* byval align 4 %arrayidx83)
  %57 = bitcast %struct.__sigset_t* %oset80 to i8*
  %58 = bitcast %struct.__sigset_t* %tmp84 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %57, i8* %58, i32 128, i32 4, i1 false)
  %59 = load i32, i32* @queue_front, align 4
  %arrayidx85 = getelementptr inbounds [128 x i32], [128 x i32]* @signal_queue, i32 0, i32 %59
  %60 = load i32, i32* %arrayidx85, align 4
  call void @zhandler(i32 %60)
  call void @signal_setmask(%struct.__sigset_t* sret %tmp86, %struct.__sigset_t* byval align 4 %oset80)
  br label %while.cond75

while.end87:                                      ; preds = %while.cond75
  br label %do.end88

do.end88:                                         ; preds = %while.end87
  br label %if.end89

if.end89:                                         ; preds = %do.end88, %do.body70
  br label %do.end90

do.end90:                                         ; preds = %if.end89
  store i32 0, i32* %retval, align 4
  br label %return

return:                                           ; preds = %do.end90, %do.end59
  %61 = load i32, i32* %retval, align 4
  ret i32 %61
}

declare void @fprintdir(i8*, %struct._IO_FILE*) #1

declare %union.linkroot* @znewlinklist() #1

declare %struct.linknode* @zinsertlinknode(%union.linkroot*, %struct.linknode*, i8*) #1

declare void @freelinklist(%union.linkroot*, void (i8*)*) #1

declare void @freestr(i8*) #1

; Function Attrs: noinline nounwind
define void @set_pwd_env() #0 {
entry:
  %pm = alloca %struct.param*, align 4
  %0 = load %struct.hashtable*, %struct.hashtable** @paramtab, align 4
  %getnode = getelementptr inbounds %struct.hashtable, %struct.hashtable* %0, i32 0, i32 9
  %1 = load %struct.hashnode* (%struct.hashtable*, i8*)*, %struct.hashnode* (%struct.hashtable*, i8*)** %getnode, align 4
  %2 = load %struct.hashtable*, %struct.hashtable** @paramtab, align 4
  %call = call %struct.hashnode* %1(%struct.hashtable* %2, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.26, i32 0, i32 0))
  %3 = bitcast %struct.hashnode* %call to %struct.param*
  store %struct.param* %3, %struct.param** %pm, align 4
  %4 = load %struct.param*, %struct.param** %pm, align 4
  %tobool = icmp ne %struct.param* %4, null
  br i1 %tobool, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %entry
  %5 = load %struct.param*, %struct.param** %pm, align 4
  %node = getelementptr inbounds %struct.param, %struct.param* %5, i32 0, i32 0
  %flags = getelementptr inbounds %struct.hashnode, %struct.hashnode* %node, i32 0, i32 2
  %6 = load i32, i32* %flags, align 8
  %and = and i32 %6, 31
  %cmp = icmp ne i32 %and, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true
  %7 = load %struct.param*, %struct.param** %pm, align 4
  %node1 = getelementptr inbounds %struct.param, %struct.param* %7, i32 0, i32 0
  %flags2 = getelementptr inbounds %struct.hashnode, %struct.hashnode* %node1, i32 0, i32 2
  %8 = load i32, i32* %flags2, align 8
  %and3 = and i32 %8, -1025
  store i32 %and3, i32* %flags2, align 8
  %9 = load %struct.param*, %struct.param** %pm, align 4
  %call4 = call i32 @unsetparam_pm(%struct.param* %9, i32 0, i32 1)
  br label %if.end

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %10 = load %struct.hashtable*, %struct.hashtable** @paramtab, align 4
  %getnode5 = getelementptr inbounds %struct.hashtable, %struct.hashtable* %10, i32 0, i32 9
  %11 = load %struct.hashnode* (%struct.hashtable*, i8*)*, %struct.hashnode* (%struct.hashtable*, i8*)** %getnode5, align 4
  %12 = load %struct.hashtable*, %struct.hashtable** @paramtab, align 4
  %call6 = call %struct.hashnode* %11(%struct.hashtable* %12, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.27, i32 0, i32 0))
  %13 = bitcast %struct.hashnode* %call6 to %struct.param*
  store %struct.param* %13, %struct.param** %pm, align 4
  %14 = load %struct.param*, %struct.param** %pm, align 4
  %tobool7 = icmp ne %struct.param* %14, null
  br i1 %tobool7, label %land.lhs.true8, label %if.end18

land.lhs.true8:                                   ; preds = %if.end
  %15 = load %struct.param*, %struct.param** %pm, align 4
  %node9 = getelementptr inbounds %struct.param, %struct.param* %15, i32 0, i32 0
  %flags10 = getelementptr inbounds %struct.hashnode, %struct.hashnode* %node9, i32 0, i32 2
  %16 = load i32, i32* %flags10, align 8
  %and11 = and i32 %16, 31
  %cmp12 = icmp ne i32 %and11, 0
  br i1 %cmp12, label %if.then13, label %if.end18

if.then13:                                        ; preds = %land.lhs.true8
  %17 = load %struct.param*, %struct.param** %pm, align 4
  %node14 = getelementptr inbounds %struct.param, %struct.param* %17, i32 0, i32 0
  %flags15 = getelementptr inbounds %struct.hashnode, %struct.hashnode* %node14, i32 0, i32 2
  %18 = load i32, i32* %flags15, align 8
  %and16 = and i32 %18, -1025
  store i32 %and16, i32* %flags15, align 8
  %19 = load %struct.param*, %struct.param** %pm, align 4
  %call17 = call i32 @unsetparam_pm(%struct.param* %19, i32 0, i32 1)
  br label %if.end18

if.end18:                                         ; preds = %if.then13, %land.lhs.true8, %if.end
  %20 = load i8*, i8** @pwd, align 4
  %call19 = call i8* @ztrdup(i8* %20)
  %call20 = call %struct.param* @assignsparam(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.26, i32 0, i32 0), i8* %call19, i32 0)
  %21 = load i8*, i8** @oldpwd, align 4
  %call21 = call i8* @ztrdup(i8* %21)
  %call22 = call %struct.param* @assignsparam(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.27, i32 0, i32 0), i8* %call21, i32 0)
  %22 = load %struct.hashtable*, %struct.hashtable** @paramtab, align 4
  %getnode23 = getelementptr inbounds %struct.hashtable, %struct.hashtable* %22, i32 0, i32 9
  %23 = load %struct.hashnode* (%struct.hashtable*, i8*)*, %struct.hashnode* (%struct.hashtable*, i8*)** %getnode23, align 4
  %24 = load %struct.hashtable*, %struct.hashtable** @paramtab, align 4
  %call24 = call %struct.hashnode* %23(%struct.hashtable* %24, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.26, i32 0, i32 0))
  %25 = bitcast %struct.hashnode* %call24 to %struct.param*
  store %struct.param* %25, %struct.param** %pm, align 4
  %26 = load %struct.param*, %struct.param** %pm, align 4
  %node25 = getelementptr inbounds %struct.param, %struct.param* %26, i32 0, i32 0
  %flags26 = getelementptr inbounds %struct.hashnode, %struct.hashnode* %node25, i32 0, i32 2
  %27 = load i32, i32* %flags26, align 8
  %and27 = and i32 %27, 4096
  %tobool28 = icmp ne i32 %and27, 0
  br i1 %tobool28, label %if.end30, label %if.then29

if.then29:                                        ; preds = %if.end18
  %28 = load %struct.param*, %struct.param** %pm, align 4
  %29 = load i8*, i8** @pwd, align 4
  call void @addenv(%struct.param* %28, i8* %29)
  br label %if.end30

if.end30:                                         ; preds = %if.then29, %if.end18
  %30 = load %struct.hashtable*, %struct.hashtable** @paramtab, align 4
  %getnode31 = getelementptr inbounds %struct.hashtable, %struct.hashtable* %30, i32 0, i32 9
  %31 = load %struct.hashnode* (%struct.hashtable*, i8*)*, %struct.hashnode* (%struct.hashtable*, i8*)** %getnode31, align 4
  %32 = load %struct.hashtable*, %struct.hashtable** @paramtab, align 4
  %call32 = call %struct.hashnode* %31(%struct.hashtable* %32, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.27, i32 0, i32 0))
  %33 = bitcast %struct.hashnode* %call32 to %struct.param*
  store %struct.param* %33, %struct.param** %pm, align 4
  %34 = load %struct.param*, %struct.param** %pm, align 4
  %node33 = getelementptr inbounds %struct.param, %struct.param* %34, i32 0, i32 0
  %flags34 = getelementptr inbounds %struct.hashnode, %struct.hashnode* %node33, i32 0, i32 2
  %35 = load i32, i32* %flags34, align 8
  %and35 = and i32 %35, 4096
  %tobool36 = icmp ne i32 %and35, 0
  br i1 %tobool36, label %if.end38, label %if.then37

if.then37:                                        ; preds = %if.end30
  %36 = load %struct.param*, %struct.param** %pm, align 4
  %37 = load i8*, i8** @oldpwd, align 4
  call void @addenv(%struct.param* %36, i8* %37)
  br label %if.end38

if.end38:                                         ; preds = %if.then37, %if.end30
  ret void
}

declare i32 @unsetparam_pm(%struct.param*, i32, i32) #1

declare %struct.param* @assignsparam(i8*, i8*, i32) #1

declare void @addenv(%struct.param*, i8*) #1

; Function Attrs: noinline nounwind
define i32 @bin_cd(i8* %nam, i8** %argv, %struct.options* %ops, i32 %func) #0 {
entry:
  %retval = alloca i32, align 4
  %nam.addr = alloca i8*, align 4
  %argv.addr = alloca i8**, align 4
  %ops.addr = alloca %struct.options*, align 4
  %func.addr = alloca i32, align 4
  %dir = alloca %struct.linknode*, align 4
  %st1 = alloca %struct.stat, align 8
  %st2 = alloca %struct.stat, align 8
  %oset = alloca %struct.__sigset_t, align 4
  %tmp = alloca %struct.__sigset_t, align 4
  %tmp28 = alloca %struct.__sigset_t, align 4
  %oset89 = alloca %struct.__sigset_t, align 4
  %tmp93 = alloca %struct.__sigset_t, align 4
  %tmp95 = alloca %struct.__sigset_t, align 4
  store i8* %nam, i8** %nam.addr, align 4
  store i8** %argv, i8*** %argv.addr, align 4
  store %struct.options* %ops, %struct.options** %ops.addr, align 4
  store i32 %func, i32* %func.addr, align 4
  %0 = load i8, i8* getelementptr inbounds ([181 x i8], [181 x i8]* @opts, i32 0, i32 155), align 1
  %tobool = icmp ne i8 %0, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %1 = load i8*, i8** %nam.addr, align 4
  call void (i8*, i8*, ...) @zwarnnam(i8* %1, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.28, i32 0, i32 0))
  store i32 1, i32* %retval, align 4
  br label %return

if.end:                                           ; preds = %entry
  %2 = load i32, i32* @doprintdir, align 4
  %cmp = icmp eq i32 %2, -1
  %conv = zext i1 %cmp to i32
  store i32 %conv, i32* @doprintdir, align 4
  %3 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind = getelementptr inbounds %struct.options, %struct.options* %3, i32 0, i32 0
  %arrayidx = getelementptr inbounds [128 x i8], [128 x i8]* %ind, i32 0, i32 80
  %4 = load i8, i8* %arrayidx, align 4
  %conv1 = zext i8 %4 to i32
  %cmp2 = icmp ne i32 %conv1, 0
  br i1 %cmp2, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %if.end
  %5 = load i8, i8* getelementptr inbounds ([181 x i8], [181 x i8]* @opts, i32 0, i32 31), align 1
  %conv4 = sext i8 %5 to i32
  %tobool5 = icmp ne i32 %conv4, 0
  br i1 %tobool5, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %lor.rhs
  %6 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind6 = getelementptr inbounds %struct.options, %struct.options* %6, i32 0, i32 0
  %arrayidx7 = getelementptr inbounds [128 x i8], [128 x i8]* %ind6, i32 0, i32 76
  %7 = load i8, i8* %arrayidx7, align 4
  %conv8 = zext i8 %7 to i32
  %cmp9 = icmp ne i32 %conv8, 0
  %lnot = xor i1 %cmp9, true
  br label %land.end

land.end:                                         ; preds = %land.rhs, %lor.rhs
  %8 = phi i1 [ false, %lor.rhs ], [ %lnot, %land.rhs ]
  br label %lor.end

lor.end:                                          ; preds = %land.end, %if.end
  %9 = phi i1 [ true, %if.end ], [ %8, %land.end ]
  %lor.ext = zext i1 %9 to i32
  store i32 %lor.ext, i32* @chasinglinks, align 4
  %10 = load i32, i32* @queueing_enabled, align 4
  %inc = add nsw i32 %10, 1
  store i32 %inc, i32* @queueing_enabled, align 4
  %11 = load %union.linkroot*, %union.linkroot** @dirstack, align 4
  %12 = load %union.linkroot*, %union.linkroot** @dirstack, align 4
  %node = bitcast %union.linkroot* %12 to %struct.linknode*
  %13 = load i8*, i8** @pwd, align 4
  %call = call i8* @ztrdup(i8* %13)
  %call11 = call %struct.linknode* @zinsertlinknode(%union.linkroot* %11, %struct.linknode* %node, i8* %call)
  %14 = load i8*, i8** %nam.addr, align 4
  %15 = load i8**, i8*** %argv.addr, align 4
  %16 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind12 = getelementptr inbounds %struct.options, %struct.options* %16, i32 0, i32 0
  %arrayidx13 = getelementptr inbounds [128 x i8], [128 x i8]* %ind12, i32 0, i32 115
  %17 = load i8, i8* %arrayidx13, align 1
  %conv14 = zext i8 %17 to i32
  %cmp15 = icmp ne i32 %conv14, 0
  %conv16 = zext i1 %cmp15 to i32
  %18 = load i32, i32* %func.addr, align 4
  %call17 = call %struct.linknode* @cd_get_dest(i8* %14, i8** %15, i32 %conv16, i32 %18)
  store %struct.linknode* %call17, %struct.linknode** %dir, align 4
  %tobool18 = icmp ne %struct.linknode* %call17, null
  br i1 %tobool18, label %if.end31, label %if.then19

if.then19:                                        ; preds = %lor.end
  %19 = load %union.linkroot*, %union.linkroot** @dirstack, align 4
  %call20 = call i8* @getlinknode(%union.linkroot* %19)
  call void @zsfree(i8* %call20)
  br label %do.body

do.body:                                          ; preds = %if.then19
  %20 = load i32, i32* @queueing_enabled, align 4
  %dec = add nsw i32 %20, -1
  store i32 %dec, i32* @queueing_enabled, align 4
  %tobool21 = icmp ne i32 %dec, 0
  br i1 %tobool21, label %if.end29, label %if.then22

if.then22:                                        ; preds = %do.body
  br label %do.body23

do.body23:                                        ; preds = %if.then22
  br label %while.cond

while.cond:                                       ; preds = %while.body, %do.body23
  %21 = load i32, i32* @queue_front, align 4
  %22 = load i32, i32* @queue_rear, align 4
  %cmp24 = icmp ne i32 %21, %22
  br i1 %cmp24, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %23 = load i32, i32* @queue_front, align 4
  %add = add nsw i32 %23, 1
  %rem = srem i32 %add, 128
  store i32 %rem, i32* @queue_front, align 4
  %24 = load i32, i32* @queue_front, align 4
  %arrayidx26 = getelementptr inbounds [128 x %struct.__sigset_t], [128 x %struct.__sigset_t]* @signal_mask_queue, i32 0, i32 %24
  call void @signal_setmask(%struct.__sigset_t* sret %tmp, %struct.__sigset_t* byval align 4 %arrayidx26)
  %25 = bitcast %struct.__sigset_t* %oset to i8*
  %26 = bitcast %struct.__sigset_t* %tmp to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %25, i8* %26, i32 128, i32 4, i1 false)
  %27 = load i32, i32* @queue_front, align 4
  %arrayidx27 = getelementptr inbounds [128 x i32], [128 x i32]* @signal_queue, i32 0, i32 %27
  %28 = load i32, i32* %arrayidx27, align 4
  call void @zhandler(i32 %28)
  call void @signal_setmask(%struct.__sigset_t* sret %tmp28, %struct.__sigset_t* byval align 4 %oset)
  br label %while.cond

while.end:                                        ; preds = %while.cond
  br label %do.end

do.end:                                           ; preds = %while.end
  br label %if.end29

if.end29:                                         ; preds = %do.end, %do.body
  br label %do.end30

do.end30:                                         ; preds = %if.end29
  store i32 1, i32* %retval, align 4
  br label %return

if.end31:                                         ; preds = %lor.end
  %29 = load i32, i32* %func.addr, align 4
  %30 = load %struct.linknode*, %struct.linknode** %dir, align 4
  %31 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind32 = getelementptr inbounds %struct.options, %struct.options* %31, i32 0, i32 0
  %arrayidx33 = getelementptr inbounds [128 x i8], [128 x i8]* %ind32, i32 0, i32 113
  %32 = load i8, i8* %arrayidx33, align 1
  %conv34 = zext i8 %32 to i32
  %cmp35 = icmp ne i32 %conv34, 0
  %conv36 = zext i1 %cmp35 to i32
  call void @cd_new_pwd(i32 %29, %struct.linknode* %30, i32 %conv36)
  %33 = load i8*, i8** @pwd, align 4
  %call37 = call i8* @unmeta(i8* %33)
  %call38 = call i32 @stat(i8* %call37, %struct.stat* %st1)
  %cmp39 = icmp slt i32 %call38, 0
  br i1 %cmp39, label %if.then41, label %if.else

if.then41:                                        ; preds = %if.end31
  call void @setjobpwd()
  %34 = load i8*, i8** @pwd, align 4
  call void @zsfree(i8* %34)
  store i8* null, i8** @pwd, align 4
  %call42 = call i8* @zgetcwd()
  %call43 = call i8* @metafy(i8* %call42, i32 -1, i32 3)
  store i8* %call43, i8** @pwd, align 4
  br label %if.end78

if.else:                                          ; preds = %if.end31
  %call44 = call i32 @stat(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.29, i32 0, i32 0), %struct.stat* %st2)
  %cmp45 = icmp slt i32 %call44, 0
  br i1 %cmp45, label %if.then47, label %if.else55

if.then47:                                        ; preds = %if.else
  %35 = load i8*, i8** @pwd, align 4
  %call48 = call i8* @unmeta(i8* %35)
  %call49 = call i32 @chdir(i8* %call48)
  %cmp50 = icmp slt i32 %call49, 0
  br i1 %cmp50, label %if.then52, label %if.end54

if.then52:                                        ; preds = %if.then47
  %36 = load i8*, i8** @pwd, align 4
  %call53 = call i32* @__errno_location()
  %37 = load i32, i32* %call53, align 4
  call void (i8*, ...) @zwarn(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.30, i32 0, i32 0), i8* %36, i32 %37)
  br label %if.end54

if.end54:                                         ; preds = %if.then52, %if.then47
  br label %if.end77

if.else55:                                        ; preds = %if.else
  %st_ino = getelementptr inbounds %struct.stat, %struct.stat* %st1, i32 0, i32 2
  %38 = load i32, i32* %st_ino, align 8
  %st_ino56 = getelementptr inbounds %struct.stat, %struct.stat* %st2, i32 0, i32 2
  %39 = load i32, i32* %st_ino56, align 8
  %cmp57 = icmp ne i32 %38, %39
  br i1 %cmp57, label %if.then62, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.else55
  %st_dev = getelementptr inbounds %struct.stat, %struct.stat* %st1, i32 0, i32 0
  %40 = load i32, i32* %st_dev, align 8
  %st_dev59 = getelementptr inbounds %struct.stat, %struct.stat* %st2, i32 0, i32 0
  %41 = load i32, i32* %st_dev59, align 8
  %cmp60 = icmp ne i32 %40, %41
  br i1 %cmp60, label %if.then62, label %if.end76

if.then62:                                        ; preds = %lor.lhs.false, %if.else55
  %42 = load i32, i32* @chasinglinks, align 4
  %tobool63 = icmp ne i32 %42, 0
  br i1 %tobool63, label %if.then64, label %if.else67

if.then64:                                        ; preds = %if.then62
  call void @setjobpwd()
  %43 = load i8*, i8** @pwd, align 4
  call void @zsfree(i8* %43)
  store i8* null, i8** @pwd, align 4
  %call65 = call i8* @zgetcwd()
  %call66 = call i8* @metafy(i8* %call65, i32 -1, i32 3)
  store i8* %call66, i8** @pwd, align 4
  br label %if.end75

if.else67:                                        ; preds = %if.then62
  %44 = load i8*, i8** @pwd, align 4
  %call68 = call i8* @unmeta(i8* %44)
  %call69 = call i32 @chdir(i8* %call68)
  %cmp70 = icmp slt i32 %call69, 0
  br i1 %cmp70, label %if.then72, label %if.end74

if.then72:                                        ; preds = %if.else67
  %45 = load i8*, i8** @pwd, align 4
  %call73 = call i32* @__errno_location()
  %46 = load i32, i32* %call73, align 4
  call void (i8*, ...) @zwarn(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.30, i32 0, i32 0), i8* %45, i32 %46)
  br label %if.end74

if.end74:                                         ; preds = %if.then72, %if.else67
  br label %if.end75

if.end75:                                         ; preds = %if.end74, %if.then64
  br label %if.end76

if.end76:                                         ; preds = %if.end75, %lor.lhs.false
  br label %if.end77

if.end77:                                         ; preds = %if.end76, %if.end54
  br label %if.end78

if.end78:                                         ; preds = %if.end77, %if.then41
  br label %do.body79

do.body79:                                        ; preds = %if.end78
  %47 = load i32, i32* @queueing_enabled, align 4
  %dec80 = add nsw i32 %47, -1
  store i32 %dec80, i32* @queueing_enabled, align 4
  %tobool81 = icmp ne i32 %dec80, 0
  br i1 %tobool81, label %if.end98, label %if.then82

if.then82:                                        ; preds = %do.body79
  br label %do.body83

do.body83:                                        ; preds = %if.then82
  br label %while.cond84

while.cond84:                                     ; preds = %while.body87, %do.body83
  %48 = load i32, i32* @queue_front, align 4
  %49 = load i32, i32* @queue_rear, align 4
  %cmp85 = icmp ne i32 %48, %49
  br i1 %cmp85, label %while.body87, label %while.end96

while.body87:                                     ; preds = %while.cond84
  %50 = load i32, i32* @queue_front, align 4
  %add90 = add nsw i32 %50, 1
  %rem91 = srem i32 %add90, 128
  store i32 %rem91, i32* @queue_front, align 4
  %51 = load i32, i32* @queue_front, align 4
  %arrayidx92 = getelementptr inbounds [128 x %struct.__sigset_t], [128 x %struct.__sigset_t]* @signal_mask_queue, i32 0, i32 %51
  call void @signal_setmask(%struct.__sigset_t* sret %tmp93, %struct.__sigset_t* byval align 4 %arrayidx92)
  %52 = bitcast %struct.__sigset_t* %oset89 to i8*
  %53 = bitcast %struct.__sigset_t* %tmp93 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %52, i8* %53, i32 128, i32 4, i1 false)
  %54 = load i32, i32* @queue_front, align 4
  %arrayidx94 = getelementptr inbounds [128 x i32], [128 x i32]* @signal_queue, i32 0, i32 %54
  %55 = load i32, i32* %arrayidx94, align 4
  call void @zhandler(i32 %55)
  call void @signal_setmask(%struct.__sigset_t* sret %tmp95, %struct.__sigset_t* byval align 4 %oset89)
  br label %while.cond84

while.end96:                                      ; preds = %while.cond84
  br label %do.end97

do.end97:                                         ; preds = %while.end96
  br label %if.end98

if.end98:                                         ; preds = %do.end97, %do.body79
  br label %do.end99

do.end99:                                         ; preds = %if.end98
  store i32 0, i32* %retval, align 4
  br label %return

return:                                           ; preds = %do.end99, %do.end30, %if.then
  %56 = load i32, i32* %retval, align 4
  ret i32 %56
}

; Function Attrs: noinline nounwind
define internal %struct.linknode* @cd_get_dest(i8* %nam, i8** %argv, i32 %hard, i32 %func) #0 {
entry:
  %retval = alloca %struct.linknode*, align 4
  %nam.addr = alloca i8*, align 4
  %argv.addr = alloca i8**, align 4
  %hard.addr = alloca i32, align 4
  %func.addr = alloca i32, align 4
  %dir = alloca %struct.linknode*, align 4
  %target = alloca %struct.linknode*, align 4
  %dest = alloca i8*, align 4
  %dd = alloca i32, align 4
  %end = alloca i8*, align 4
  %u = alloca i8*, align 4
  %d = alloca i8*, align 4
  %len1 = alloca i32, align 4
  %len2 = alloca i32, align 4
  %len3 = alloca i32, align 4
  store i8* %nam, i8** %nam.addr, align 4
  store i8** %argv, i8*** %argv.addr, align 4
  store i32 %hard, i32* %hard.addr, align 4
  store i32 %func, i32* %func.addr, align 4
  store %struct.linknode* null, %struct.linknode** %dir, align 4
  %0 = load i8**, i8*** %argv.addr, align 4
  %arrayidx = getelementptr inbounds i8*, i8** %0, i32 0
  %1 = load i8*, i8** %arrayidx, align 4
  %tobool = icmp ne i8* %1, null
  br i1 %tobool, label %if.else23, label %if.then

if.then:                                          ; preds = %entry
  %2 = load i32, i32* %func.addr, align 4
  %cmp = icmp eq i32 %2, 11
  br i1 %cmp, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %if.then
  %3 = load %union.linkroot*, %union.linkroot** @dirstack, align 4
  %list = bitcast %union.linkroot* %3 to %struct.linklist*
  %first = getelementptr inbounds %struct.linklist, %struct.linklist* %list, i32 0, i32 0
  %4 = load %struct.linknode*, %struct.linknode** %first, align 4
  %next = getelementptr inbounds %struct.linknode, %struct.linknode* %4, i32 0, i32 0
  %5 = load %struct.linknode*, %struct.linknode** %next, align 4
  %tobool1 = icmp ne %struct.linknode* %5, null
  br i1 %tobool1, label %if.end, label %if.then2

if.then2:                                         ; preds = %land.lhs.true
  %6 = load i8*, i8** %nam.addr, align 4
  call void (i8*, i8*, ...) @zwarnnam(i8* %6, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.293, i32 0, i32 0))
  store %struct.linknode* null, %struct.linknode** %retval, align 4
  br label %return

if.end:                                           ; preds = %land.lhs.true, %if.then
  %7 = load i32, i32* %func.addr, align 4
  %cmp3 = icmp eq i32 %7, 12
  br i1 %cmp3, label %land.lhs.true4, label %if.end10

land.lhs.true4:                                   ; preds = %if.end
  %8 = load i8, i8* getelementptr inbounds ([181 x i8], [181 x i8]* @opts, i32 0, i32 149), align 1
  %tobool5 = icmp ne i8 %8, 0
  br i1 %tobool5, label %if.end10, label %if.then6

if.then6:                                         ; preds = %land.lhs.true4
  %9 = load %union.linkroot*, %union.linkroot** @dirstack, align 4
  %list7 = bitcast %union.linkroot* %9 to %struct.linklist*
  %first8 = getelementptr inbounds %struct.linklist, %struct.linklist* %list7, i32 0, i32 0
  %10 = load %struct.linknode*, %struct.linknode** %first8, align 4
  %next9 = getelementptr inbounds %struct.linknode, %struct.linknode* %10, i32 0, i32 0
  %11 = load %struct.linknode*, %struct.linknode** %next9, align 4
  store %struct.linknode* %11, %struct.linknode** %dir, align 4
  br label %if.end10

if.end10:                                         ; preds = %if.then6, %land.lhs.true4, %if.end
  %12 = load %struct.linknode*, %struct.linknode** %dir, align 4
  %tobool11 = icmp ne %struct.linknode* %12, null
  br i1 %tobool11, label %if.then12, label %if.else

if.then12:                                        ; preds = %if.end10
  %13 = load %union.linkroot*, %union.linkroot** @dirstack, align 4
  %14 = load %struct.linknode*, %struct.linknode** %dir, align 4
  %15 = load %union.linkroot*, %union.linkroot** @dirstack, align 4
  %call = call i8* @getlinknode(%union.linkroot* %15)
  %call13 = call %struct.linknode* @zinsertlinknode(%union.linkroot* %13, %struct.linknode* %14, i8* %call)
  br label %if.end22

if.else:                                          ; preds = %if.end10
  %16 = load i32, i32* %func.addr, align 4
  %cmp14 = icmp ne i32 %16, 11
  br i1 %cmp14, label %if.then15, label %if.end21

if.then15:                                        ; preds = %if.else
  %17 = load i8*, i8** @home, align 4
  %tobool16 = icmp ne i8* %17, null
  br i1 %tobool16, label %if.end18, label %if.then17

if.then17:                                        ; preds = %if.then15
  %18 = load i8*, i8** %nam.addr, align 4
  call void (i8*, i8*, ...) @zwarnnam(i8* %18, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.294, i32 0, i32 0))
  store %struct.linknode* null, %struct.linknode** %retval, align 4
  br label %return

if.end18:                                         ; preds = %if.then15
  %19 = load %union.linkroot*, %union.linkroot** @dirstack, align 4
  %20 = load %union.linkroot*, %union.linkroot** @dirstack, align 4
  %node = bitcast %union.linkroot* %20 to %struct.linknode*
  %21 = load i8*, i8** @home, align 4
  %call19 = call i8* @ztrdup(i8* %21)
  %call20 = call %struct.linknode* @zinsertlinknode(%union.linkroot* %19, %struct.linknode* %node, i8* %call19)
  br label %if.end21

if.end21:                                         ; preds = %if.end18, %if.else
  br label %if.end22

if.end22:                                         ; preds = %if.end21, %if.then12
  br label %if.end128

if.else23:                                        ; preds = %entry
  %22 = load i8**, i8*** %argv.addr, align 4
  %arrayidx24 = getelementptr inbounds i8*, i8** %22, i32 1
  %23 = load i8*, i8** %arrayidx24, align 4
  %tobool25 = icmp ne i8* %23, null
  br i1 %tobool25, label %if.else102, label %if.then26

if.then26:                                        ; preds = %if.else23
  %24 = load i32, i32* @doprintdir, align 4
  %inc = add nsw i32 %24, 1
  store i32 %inc, i32* @doprintdir, align 4
  %25 = load i8**, i8*** %argv.addr, align 4
  %arrayidx27 = getelementptr inbounds i8*, i8** %25, i32 0
  %26 = load i8*, i8** %arrayidx27, align 4
  %arrayidx28 = getelementptr inbounds i8, i8* %26, i32 1
  %27 = load i8, i8* %arrayidx28, align 1
  %conv = sext i8 %27 to i32
  %tobool29 = icmp ne i32 %conv, 0
  br i1 %tobool29, label %land.lhs.true30, label %if.end90

land.lhs.true30:                                  ; preds = %if.then26
  %28 = load i8**, i8*** %argv.addr, align 4
  %arrayidx31 = getelementptr inbounds i8*, i8** %28, i32 0
  %29 = load i8*, i8** %arrayidx31, align 4
  %arrayidx32 = getelementptr inbounds i8, i8* %29, i32 0
  %30 = load i8, i8* %arrayidx32, align 1
  %conv33 = sext i8 %30 to i32
  %cmp34 = icmp eq i32 %conv33, 43
  br i1 %cmp34, label %land.lhs.true41, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true30
  %31 = load i8**, i8*** %argv.addr, align 4
  %arrayidx36 = getelementptr inbounds i8*, i8** %31, i32 0
  %32 = load i8*, i8** %arrayidx36, align 4
  %arrayidx37 = getelementptr inbounds i8, i8* %32, i32 0
  %33 = load i8, i8* %arrayidx37, align 1
  %conv38 = sext i8 %33 to i32
  %cmp39 = icmp eq i32 %conv38, 45
  br i1 %cmp39, label %land.lhs.true41, label %if.end90

land.lhs.true41:                                  ; preds = %lor.lhs.false, %land.lhs.true30
  %34 = load i8**, i8*** %argv.addr, align 4
  %arrayidx42 = getelementptr inbounds i8*, i8** %34, i32 0
  %35 = load i8*, i8** %arrayidx42, align 4
  %add.ptr = getelementptr inbounds i8, i8* %35, i32 1
  %call43 = call i32 @strspn(i8* %add.ptr, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.295, i32 0, i32 0))
  %36 = load i8**, i8*** %argv.addr, align 4
  %arrayidx44 = getelementptr inbounds i8*, i8** %36, i32 0
  %37 = load i8*, i8** %arrayidx44, align 4
  %add.ptr45 = getelementptr inbounds i8, i8* %37, i32 1
  %call46 = call i32 @strlen(i8* %add.ptr45)
  %cmp47 = icmp eq i32 %call43, %call46
  br i1 %cmp47, label %if.then49, label %if.end90

if.then49:                                        ; preds = %land.lhs.true41
  %38 = load i8**, i8*** %argv.addr, align 4
  %arrayidx50 = getelementptr inbounds i8*, i8** %38, i32 0
  %39 = load i8*, i8** %arrayidx50, align 4
  %add.ptr51 = getelementptr inbounds i8, i8* %39, i32 1
  %call52 = call i32 @zstrtol(i8* %add.ptr51, i8** %end, i32 10)
  store i32 %call52, i32* %dd, align 4
  %40 = load i8*, i8** %end, align 4
  %41 = load i8, i8* %40, align 1
  %conv53 = sext i8 %41 to i32
  %cmp54 = icmp eq i32 %conv53, 0
  br i1 %cmp54, label %if.then56, label %if.end89

if.then56:                                        ; preds = %if.then49
  %42 = load i8**, i8*** %argv.addr, align 4
  %arrayidx57 = getelementptr inbounds i8*, i8** %42, i32 0
  %43 = load i8*, i8** %arrayidx57, align 4
  %arrayidx58 = getelementptr inbounds i8, i8* %43, i32 0
  %44 = load i8, i8* %arrayidx58, align 1
  %conv59 = sext i8 %44 to i32
  %cmp60 = icmp eq i32 %conv59, 43
  %conv61 = zext i1 %cmp60 to i32
  %45 = load i8, i8* getelementptr inbounds ([181 x i8], [181 x i8]* @opts, i32 0, i32 147), align 1
  %conv62 = sext i8 %45 to i32
  %xor = xor i32 %conv61, %conv62
  %tobool63 = icmp ne i32 %xor, 0
  br i1 %tobool63, label %if.then64, label %if.else70

if.then64:                                        ; preds = %if.then56
  %46 = load %union.linkroot*, %union.linkroot** @dirstack, align 4
  %list65 = bitcast %union.linkroot* %46 to %struct.linklist*
  %first66 = getelementptr inbounds %struct.linklist, %struct.linklist* %list65, i32 0, i32 0
  %47 = load %struct.linknode*, %struct.linknode** %first66, align 4
  store %struct.linknode* %47, %struct.linknode** %dir, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then64
  %48 = load %struct.linknode*, %struct.linknode** %dir, align 4
  %tobool67 = icmp ne %struct.linknode* %48, null
  br i1 %tobool67, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %for.cond
  %49 = load i32, i32* %dd, align 4
  %tobool68 = icmp ne i32 %49, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %50 = phi i1 [ false, %for.cond ], [ %tobool68, %land.rhs ]
  br i1 %50, label %for.body, label %for.end

for.body:                                         ; preds = %land.end
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %51 = load i32, i32* %dd, align 4
  %dec = add nsw i32 %51, -1
  store i32 %dec, i32* %dd, align 4
  %52 = load %struct.linknode*, %struct.linknode** %dir, align 4
  %next69 = getelementptr inbounds %struct.linknode, %struct.linknode* %52, i32 0, i32 0
  %53 = load %struct.linknode*, %struct.linknode** %next69, align 4
  store %struct.linknode* %53, %struct.linknode** %dir, align 4
  br label %for.cond

for.end:                                          ; preds = %land.end
  br label %if.end82

if.else70:                                        ; preds = %if.then56
  %54 = load %union.linkroot*, %union.linkroot** @dirstack, align 4
  %list71 = bitcast %union.linkroot* %54 to %struct.linklist*
  %last = getelementptr inbounds %struct.linklist, %struct.linklist* %list71, i32 0, i32 1
  %55 = load %struct.linknode*, %struct.linknode** %last, align 4
  store %struct.linknode* %55, %struct.linknode** %dir, align 4
  br label %for.cond72

for.cond72:                                       ; preds = %for.inc79, %if.else70
  %56 = load %struct.linknode*, %struct.linknode** %dir, align 4
  %57 = load %union.linkroot*, %union.linkroot** @dirstack, align 4
  %58 = bitcast %union.linkroot* %57 to %struct.linknode*
  %cmp73 = icmp ne %struct.linknode* %56, %58
  br i1 %cmp73, label %land.rhs75, label %land.end77

land.rhs75:                                       ; preds = %for.cond72
  %59 = load i32, i32* %dd, align 4
  %tobool76 = icmp ne i32 %59, 0
  br label %land.end77

land.end77:                                       ; preds = %land.rhs75, %for.cond72
  %60 = phi i1 [ false, %for.cond72 ], [ %tobool76, %land.rhs75 ]
  br i1 %60, label %for.body78, label %for.end81

for.body78:                                       ; preds = %land.end77
  br label %for.inc79

for.inc79:                                        ; preds = %for.body78
  %61 = load i32, i32* %dd, align 4
  %dec80 = add nsw i32 %61, -1
  store i32 %dec80, i32* %dd, align 4
  %62 = load %struct.linknode*, %struct.linknode** %dir, align 4
  %prev = getelementptr inbounds %struct.linknode, %struct.linknode* %62, i32 0, i32 1
  %63 = load %struct.linknode*, %struct.linknode** %prev, align 4
  store %struct.linknode* %63, %struct.linknode** %dir, align 4
  br label %for.cond72

for.end81:                                        ; preds = %land.end77
  br label %if.end82

if.end82:                                         ; preds = %for.end81, %for.end
  %64 = load %struct.linknode*, %struct.linknode** %dir, align 4
  %tobool83 = icmp ne %struct.linknode* %64, null
  br i1 %tobool83, label %lor.lhs.false84, label %if.then87

lor.lhs.false84:                                  ; preds = %if.end82
  %65 = load %struct.linknode*, %struct.linknode** %dir, align 4
  %66 = load %union.linkroot*, %union.linkroot** @dirstack, align 4
  %67 = bitcast %union.linkroot* %66 to %struct.linknode*
  %cmp85 = icmp eq %struct.linknode* %65, %67
  br i1 %cmp85, label %if.then87, label %if.end88

if.then87:                                        ; preds = %lor.lhs.false84, %if.end82
  %68 = load i8*, i8** %nam.addr, align 4
  call void (i8*, i8*, ...) @zwarnnam(i8* %68, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.296, i32 0, i32 0))
  store %struct.linknode* null, %struct.linknode** %retval, align 4
  br label %return

if.end88:                                         ; preds = %lor.lhs.false84
  br label %if.end89

if.end89:                                         ; preds = %if.end88, %if.then49
  br label %if.end90

if.end90:                                         ; preds = %if.end89, %land.lhs.true41, %lor.lhs.false, %if.then26
  %69 = load %struct.linknode*, %struct.linknode** %dir, align 4
  %tobool91 = icmp ne %struct.linknode* %69, null
  br i1 %tobool91, label %if.end101, label %if.then92

if.then92:                                        ; preds = %if.end90
  %70 = load %union.linkroot*, %union.linkroot** @dirstack, align 4
  %71 = load %union.linkroot*, %union.linkroot** @dirstack, align 4
  %node93 = bitcast %union.linkroot* %71 to %struct.linknode*
  %72 = load i8**, i8*** %argv.addr, align 4
  %arrayidx94 = getelementptr inbounds i8*, i8** %72, i32 0
  %73 = load i8*, i8** %arrayidx94, align 4
  %call95 = call i32 @strcmp(i8* %73, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.44, i32 0, i32 0))
  %tobool96 = icmp ne i32 %call95, 0
  br i1 %tobool96, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.then92
  %74 = load i32, i32* @doprintdir, align 4
  %dec97 = add nsw i32 %74, -1
  store i32 %dec97, i32* @doprintdir, align 4
  %75 = load i8**, i8*** %argv.addr, align 4
  %arrayidx98 = getelementptr inbounds i8*, i8** %75, i32 0
  %76 = load i8*, i8** %arrayidx98, align 4
  br label %cond.end

cond.false:                                       ; preds = %if.then92
  %77 = load i8*, i8** @oldpwd, align 4
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %76, %cond.true ], [ %77, %cond.false ]
  %call99 = call i8* @ztrdup(i8* %cond)
  %call100 = call %struct.linknode* @zinsertlinknode(%union.linkroot* %70, %struct.linknode* %node93, i8* %call99)
  br label %if.end101

if.end101:                                        ; preds = %cond.end, %if.end90
  br label %if.end127

if.else102:                                       ; preds = %if.else23
  %78 = load i8*, i8** @pwd, align 4
  %79 = load i8**, i8*** %argv.addr, align 4
  %arrayidx103 = getelementptr inbounds i8*, i8** %79, i32 0
  %80 = load i8*, i8** %arrayidx103, align 4
  %call104 = call i8* @strstr(i8* %78, i8* %80)
  store i8* %call104, i8** %u, align 4
  %tobool105 = icmp ne i8* %call104, null
  br i1 %tobool105, label %if.end108, label %if.then106

if.then106:                                       ; preds = %if.else102
  %81 = load i8*, i8** %nam.addr, align 4
  %82 = load i8**, i8*** %argv.addr, align 4
  %arrayidx107 = getelementptr inbounds i8*, i8** %82, i32 0
  %83 = load i8*, i8** %arrayidx107, align 4
  call void (i8*, i8*, ...) @zwarnnam(i8* %81, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.297, i32 0, i32 0), i8* %83)
  store %struct.linknode* null, %struct.linknode** %retval, align 4
  br label %return

if.end108:                                        ; preds = %if.else102
  %84 = load i8**, i8*** %argv.addr, align 4
  %arrayidx109 = getelementptr inbounds i8*, i8** %84, i32 0
  %85 = load i8*, i8** %arrayidx109, align 4
  %call110 = call i32 @strlen(i8* %85)
  store i32 %call110, i32* %len1, align 4
  %86 = load i8**, i8*** %argv.addr, align 4
  %arrayidx111 = getelementptr inbounds i8*, i8** %86, i32 1
  %87 = load i8*, i8** %arrayidx111, align 4
  %call112 = call i32 @strlen(i8* %87)
  store i32 %call112, i32* %len2, align 4
  %88 = load i8*, i8** %u, align 4
  %89 = load i8*, i8** @pwd, align 4
  %sub.ptr.lhs.cast = ptrtoint i8* %88 to i32
  %sub.ptr.rhs.cast = ptrtoint i8* %89 to i32
  %sub.ptr.sub = sub i32 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  store i32 %sub.ptr.sub, i32* %len3, align 4
  %90 = load i32, i32* %len3, align 4
  %91 = load i32, i32* %len2, align 4
  %add = add nsw i32 %90, %91
  %92 = load i8*, i8** %u, align 4
  %93 = load i32, i32* %len1, align 4
  %add.ptr113 = getelementptr inbounds i8, i8* %92, i32 %93
  %call114 = call i32 @strlen(i8* %add.ptr113)
  %add115 = add i32 %add, %call114
  %add116 = add i32 %add115, 1
  %call117 = call i8* @zalloc(i32 %add116)
  store i8* %call117, i8** %d, align 4
  %94 = load i8*, i8** %d, align 4
  %95 = load i8*, i8** @pwd, align 4
  %96 = load i32, i32* %len3, align 4
  %call118 = call i8* @strncpy(i8* %94, i8* %95, i32 %96)
  %97 = load i8*, i8** %d, align 4
  %98 = load i32, i32* %len3, align 4
  %add.ptr119 = getelementptr inbounds i8, i8* %97, i32 %98
  %99 = load i8**, i8*** %argv.addr, align 4
  %arrayidx120 = getelementptr inbounds i8*, i8** %99, i32 1
  %100 = load i8*, i8** %arrayidx120, align 4
  %call121 = call i8* @strcpy(i8* %add.ptr119, i8* %100)
  %101 = load i8*, i8** %d, align 4
  %102 = load i8*, i8** %u, align 4
  %103 = load i32, i32* %len1, align 4
  %add.ptr122 = getelementptr inbounds i8, i8* %102, i32 %103
  %call123 = call i8* @strcat(i8* %101, i8* %add.ptr122)
  %104 = load %union.linkroot*, %union.linkroot** @dirstack, align 4
  %105 = load %union.linkroot*, %union.linkroot** @dirstack, align 4
  %node124 = bitcast %union.linkroot* %105 to %struct.linknode*
  %106 = load i8*, i8** %d, align 4
  %call125 = call %struct.linknode* @zinsertlinknode(%union.linkroot* %104, %struct.linknode* %node124, i8* %106)
  %107 = load i32, i32* @doprintdir, align 4
  %inc126 = add nsw i32 %107, 1
  store i32 %inc126, i32* @doprintdir, align 4
  br label %if.end127

if.end127:                                        ; preds = %if.end108, %if.end101
  br label %if.end128

if.end128:                                        ; preds = %if.end127, %if.end22
  %108 = load %struct.linknode*, %struct.linknode** %dir, align 4
  store %struct.linknode* %108, %struct.linknode** %target, align 4
  %109 = load i32, i32* %func.addr, align 4
  %cmp129 = icmp eq i32 %109, 11
  br i1 %cmp129, label %if.then131, label %if.end145

if.then131:                                       ; preds = %if.end128
  %110 = load %struct.linknode*, %struct.linknode** %dir, align 4
  %tobool132 = icmp ne %struct.linknode* %110, null
  br i1 %tobool132, label %if.else136, label %if.then133

if.then133:                                       ; preds = %if.then131
  %111 = load %union.linkroot*, %union.linkroot** @dirstack, align 4
  %list134 = bitcast %union.linkroot* %111 to %struct.linklist*
  %first135 = getelementptr inbounds %struct.linklist, %struct.linklist* %list134, i32 0, i32 0
  %112 = load %struct.linknode*, %struct.linknode** %first135, align 4
  store %struct.linknode* %112, %struct.linknode** %dir, align 4
  store %struct.linknode* %112, %struct.linknode** %target, align 4
  br label %if.end143

if.else136:                                       ; preds = %if.then131
  %113 = load %struct.linknode*, %struct.linknode** %dir, align 4
  %114 = load %union.linkroot*, %union.linkroot** @dirstack, align 4
  %list137 = bitcast %union.linkroot* %114 to %struct.linklist*
  %first138 = getelementptr inbounds %struct.linklist, %struct.linklist* %list137, i32 0, i32 0
  %115 = load %struct.linknode*, %struct.linknode** %first138, align 4
  %cmp139 = icmp ne %struct.linknode* %113, %115
  br i1 %cmp139, label %if.then141, label %if.end142

if.then141:                                       ; preds = %if.else136
  %116 = load %struct.linknode*, %struct.linknode** %dir, align 4
  store %struct.linknode* %116, %struct.linknode** %retval, align 4
  br label %return

if.end142:                                        ; preds = %if.else136
  br label %if.end143

if.end143:                                        ; preds = %if.end142, %if.then133
  %117 = load %struct.linknode*, %struct.linknode** %dir, align 4
  %next144 = getelementptr inbounds %struct.linknode, %struct.linknode* %117, i32 0, i32 0
  %118 = load %struct.linknode*, %struct.linknode** %next144, align 4
  store %struct.linknode* %118, %struct.linknode** %dir, align 4
  br label %if.end145

if.end145:                                        ; preds = %if.end143, %if.end128
  %119 = load %struct.linknode*, %struct.linknode** %dir, align 4
  %tobool146 = icmp ne %struct.linknode* %119, null
  br i1 %tobool146, label %if.end150, label %if.then147

if.then147:                                       ; preds = %if.end145
  %120 = load %union.linkroot*, %union.linkroot** @dirstack, align 4
  %list148 = bitcast %union.linkroot* %120 to %struct.linklist*
  %first149 = getelementptr inbounds %struct.linklist, %struct.linklist* %list148, i32 0, i32 0
  %121 = load %struct.linknode*, %struct.linknode** %first149, align 4
  store %struct.linknode* %121, %struct.linknode** %dir, align 4
  br label %if.end150

if.end150:                                        ; preds = %if.then147, %if.end145
  %122 = load %struct.linknode*, %struct.linknode** %dir, align 4
  %tobool151 = icmp ne %struct.linknode* %122, null
  br i1 %tobool151, label %lor.lhs.false152, label %if.then154

lor.lhs.false152:                                 ; preds = %if.end150
  %123 = load %struct.linknode*, %struct.linknode** %dir, align 4
  %dat = getelementptr inbounds %struct.linknode, %struct.linknode* %123, i32 0, i32 2
  %124 = load i8*, i8** %dat, align 4
  %tobool153 = icmp ne i8* %124, null
  br i1 %tobool153, label %if.end155, label %if.then154

if.then154:                                       ; preds = %lor.lhs.false152, %if.end150
  store %struct.linknode* null, %struct.linknode** %retval, align 4
  br label %return

if.end155:                                        ; preds = %lor.lhs.false152
  %125 = load i8*, i8** %nam.addr, align 4
  %126 = load %struct.linknode*, %struct.linknode** %dir, align 4
  %dat156 = getelementptr inbounds %struct.linknode, %struct.linknode* %126, i32 0, i32 2
  %127 = load i8*, i8** %dat156, align 4
  %128 = load i32, i32* %hard.addr, align 4
  %call157 = call i8* @cd_do_chdir(i8* %125, i8* %127, i32 %128)
  store i8* %call157, i8** %dest, align 4
  %tobool158 = icmp ne i8* %call157, null
  br i1 %tobool158, label %if.end169, label %if.then159

if.then159:                                       ; preds = %if.end155
  %129 = load %struct.linknode*, %struct.linknode** %target, align 4
  %tobool160 = icmp ne %struct.linknode* %129, null
  br i1 %tobool160, label %if.end163, label %if.then161

if.then161:                                       ; preds = %if.then159
  %130 = load %union.linkroot*, %union.linkroot** @dirstack, align 4
  %call162 = call i8* @getlinknode(%union.linkroot* %130)
  call void @zsfree(i8* %call162)
  br label %if.end163

if.end163:                                        ; preds = %if.then161, %if.then159
  %131 = load i32, i32* %func.addr, align 4
  %cmp164 = icmp eq i32 %131, 11
  br i1 %cmp164, label %if.then166, label %if.end168

if.then166:                                       ; preds = %if.end163
  %132 = load %union.linkroot*, %union.linkroot** @dirstack, align 4
  %133 = load %struct.linknode*, %struct.linknode** %dir, align 4
  %call167 = call i8* @remnode(%union.linkroot* %132, %struct.linknode* %133)
  call void @zsfree(i8* %call167)
  br label %if.end168

if.end168:                                        ; preds = %if.then166, %if.end163
  store %struct.linknode* null, %struct.linknode** %retval, align 4
  br label %return

if.end169:                                        ; preds = %if.end155
  %134 = load i8*, i8** %dest, align 4
  %135 = load %struct.linknode*, %struct.linknode** %dir, align 4
  %dat170 = getelementptr inbounds %struct.linknode, %struct.linknode* %135, i32 0, i32 2
  %136 = load i8*, i8** %dat170, align 4
  %cmp171 = icmp ne i8* %134, %136
  br i1 %cmp171, label %if.then173, label %if.end176

if.then173:                                       ; preds = %if.end169
  %137 = load %struct.linknode*, %struct.linknode** %dir, align 4
  %dat174 = getelementptr inbounds %struct.linknode, %struct.linknode* %137, i32 0, i32 2
  %138 = load i8*, i8** %dat174, align 4
  call void @zsfree(i8* %138)
  %139 = load i8*, i8** %dest, align 4
  %140 = load %struct.linknode*, %struct.linknode** %dir, align 4
  %dat175 = getelementptr inbounds %struct.linknode, %struct.linknode* %140, i32 0, i32 2
  store i8* %139, i8** %dat175, align 4
  br label %if.end176

if.end176:                                        ; preds = %if.then173, %if.end169
  %141 = load %struct.linknode*, %struct.linknode** %target, align 4
  %tobool177 = icmp ne %struct.linknode* %141, null
  br i1 %tobool177, label %cond.true178, label %cond.false179

cond.true178:                                     ; preds = %if.end176
  %142 = load %struct.linknode*, %struct.linknode** %target, align 4
  br label %cond.end180

cond.false179:                                    ; preds = %if.end176
  %143 = load %struct.linknode*, %struct.linknode** %dir, align 4
  br label %cond.end180

cond.end180:                                      ; preds = %cond.false179, %cond.true178
  %cond181 = phi %struct.linknode* [ %142, %cond.true178 ], [ %143, %cond.false179 ]
  store %struct.linknode* %cond181, %struct.linknode** %retval, align 4
  br label %return

return:                                           ; preds = %cond.end180, %if.end168, %if.then154, %if.then141, %if.then106, %if.then87, %if.then17, %if.then2
  %144 = load %struct.linknode*, %struct.linknode** %retval, align 4
  ret %struct.linknode* %144
}

declare void @zsfree(i8*) #1

declare i8* @getlinknode(%union.linkroot*) #1

; Function Attrs: noinline nounwind
define internal void @cd_new_pwd(i32 %func, %struct.linknode* %dir, i32 %quiet) #0 {
entry:
  %func.addr = alloca i32, align 4
  %dir.addr = alloca %struct.linknode*, align 4
  %quiet.addr = alloca i32, align 4
  %new_pwd = alloca i8*, align 4
  %s = alloca i8*, align 4
  %dirstacksize = alloca i32, align 4
  %n = alloca %struct.linknode*, align 4
  %remove = alloca i32, align 4
  store i32 %func, i32* %func.addr, align 4
  store %struct.linknode* %dir, %struct.linknode** %dir.addr, align 4
  store i32 %quiet, i32* %quiet.addr, align 4
  %0 = load i32, i32* %func.addr, align 4
  %cmp = icmp eq i32 %0, 12
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %1 = load %union.linkroot*, %union.linkroot** @dirstack, align 4
  %2 = load %struct.linknode*, %struct.linknode** %dir.addr, align 4
  call void @rolllist(%union.linkroot* %1, %struct.linknode* %2)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %3 = load %union.linkroot*, %union.linkroot** @dirstack, align 4
  %4 = load %struct.linknode*, %struct.linknode** %dir.addr, align 4
  %call = call i8* @remnode(%union.linkroot* %3, %struct.linknode* %4)
  store i8* %call, i8** %new_pwd, align 4
  %5 = load i32, i32* %func.addr, align 4
  %cmp1 = icmp eq i32 %5, 11
  br i1 %cmp1, label %land.lhs.true, label %if.else

land.lhs.true:                                    ; preds = %if.end
  %6 = load %union.linkroot*, %union.linkroot** @dirstack, align 4
  %list = bitcast %union.linkroot* %6 to %struct.linklist*
  %first = getelementptr inbounds %struct.linklist, %struct.linklist* %list, i32 0, i32 0
  %7 = load %struct.linknode*, %struct.linknode** %first, align 4
  %tobool = icmp ne %struct.linknode* %7, null
  br i1 %tobool, label %if.then2, label %if.else

if.then2:                                         ; preds = %land.lhs.true
  %8 = load i8*, i8** %new_pwd, align 4
  call void @zsfree(i8* %8)
  %9 = load %union.linkroot*, %union.linkroot** @dirstack, align 4
  %call3 = call i8* @getlinknode(%union.linkroot* %9)
  store i8* %call3, i8** %new_pwd, align 4
  br label %if.end10

if.else:                                          ; preds = %land.lhs.true, %if.end
  %10 = load i32, i32* %func.addr, align 4
  %cmp4 = icmp eq i32 %10, 10
  br i1 %cmp4, label %land.lhs.true5, label %if.end9

land.lhs.true5:                                   ; preds = %if.else
  %11 = load i8, i8* getelementptr inbounds ([181 x i8], [181 x i8]* @opts, i32 0, i32 14), align 1
  %tobool6 = icmp ne i8 %11, 0
  br i1 %tobool6, label %if.end9, label %if.then7

if.then7:                                         ; preds = %land.lhs.true5
  %12 = load %union.linkroot*, %union.linkroot** @dirstack, align 4
  %call8 = call i8* @getlinknode(%union.linkroot* %12)
  call void @zsfree(i8* %call8)
  br label %if.end9

if.end9:                                          ; preds = %if.then7, %land.lhs.true5, %if.else
  br label %if.end10

if.end10:                                         ; preds = %if.end9, %if.then2
  %13 = load i32, i32* @chasinglinks, align 4
  %tobool11 = icmp ne i32 %13, 0
  br i1 %tobool11, label %if.then12, label %if.end17

if.then12:                                        ; preds = %if.end10
  %14 = load i8*, i8** %new_pwd, align 4
  %call13 = call i8* @findpwd(i8* %14)
  store i8* %call13, i8** %s, align 4
  %15 = load i8*, i8** %s, align 4
  %tobool14 = icmp ne i8* %15, null
  br i1 %tobool14, label %if.then15, label %if.end16

if.then15:                                        ; preds = %if.then12
  %16 = load i8*, i8** %new_pwd, align 4
  call void @zsfree(i8* %16)
  %17 = load i8*, i8** %s, align 4
  store i8* %17, i8** %new_pwd, align 4
  br label %if.end16

if.end16:                                         ; preds = %if.then15, %if.then12
  br label %if.end17

if.end17:                                         ; preds = %if.end16, %if.end10
  %18 = load i8, i8* getelementptr inbounds ([181 x i8], [181 x i8]* @opts, i32 0, i32 146), align 1
  %tobool18 = icmp ne i8 %18, 0
  br i1 %tobool18, label %if.then19, label %if.end28

if.then19:                                        ; preds = %if.end17
  %19 = load %union.linkroot*, %union.linkroot** @dirstack, align 4
  %list20 = bitcast %union.linkroot* %19 to %struct.linklist*
  %first21 = getelementptr inbounds %struct.linklist, %struct.linklist* %list20, i32 0, i32 0
  %20 = load %struct.linknode*, %struct.linknode** %first21, align 4
  store %struct.linknode* %20, %struct.linknode** %n, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then19
  %21 = load %struct.linknode*, %struct.linknode** %n, align 4
  %tobool22 = icmp ne %struct.linknode* %21, null
  br i1 %tobool22, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %22 = load i8*, i8** %new_pwd, align 4
  %23 = load %struct.linknode*, %struct.linknode** %n, align 4
  %dat = getelementptr inbounds %struct.linknode, %struct.linknode* %23, i32 0, i32 2
  %24 = load i8*, i8** %dat, align 4
  %call23 = call i32 @strcmp(i8* %22, i8* %24)
  %tobool24 = icmp ne i32 %call23, 0
  br i1 %tobool24, label %if.end27, label %if.then25

if.then25:                                        ; preds = %for.body
  %25 = load %union.linkroot*, %union.linkroot** @dirstack, align 4
  %26 = load %struct.linknode*, %struct.linknode** %n, align 4
  %call26 = call i8* @remnode(%union.linkroot* %25, %struct.linknode* %26)
  call void @zsfree(i8* %call26)
  br label %for.end

if.end27:                                         ; preds = %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end27
  %27 = load %struct.linknode*, %struct.linknode** %n, align 4
  %next = getelementptr inbounds %struct.linknode, %struct.linknode* %27, i32 0, i32 0
  %28 = load %struct.linknode*, %struct.linknode** %next, align 4
  store %struct.linknode* %28, %struct.linknode** %n, align 4
  br label %for.cond

for.end:                                          ; preds = %if.then25, %for.cond
  br label %if.end28

if.end28:                                         ; preds = %for.end, %if.end17
  %29 = load i8*, i8** @oldpwd, align 4
  call void @zsfree(i8* %29)
  %30 = load i8*, i8** @pwd, align 4
  store i8* %30, i8** @oldpwd, align 4
  call void @setjobpwd()
  %31 = load i8*, i8** %new_pwd, align 4
  store i8* %31, i8** @pwd, align 4
  call void @set_pwd_env()
  %32 = load i8, i8* getelementptr inbounds ([181 x i8], [181 x i8]* @opts, i32 0, i32 94), align 1
  %conv = sext i8 %32 to i32
  %tobool29 = icmp ne i32 %conv, 0
  br i1 %tobool29, label %if.then32, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end28
  %33 = load i8, i8* getelementptr inbounds ([181 x i8], [181 x i8]* @opts, i32 0, i32 133), align 1
  %conv30 = sext i8 %33 to i32
  %tobool31 = icmp ne i32 %conv30, 0
  br i1 %tobool31, label %if.then32, label %if.end50

if.then32:                                        ; preds = %lor.lhs.false, %if.end28
  %34 = load i32, i32* %func.addr, align 4
  %cmp33 = icmp ne i32 %34, 10
  br i1 %cmp33, label %land.lhs.true35, label %if.else44

land.lhs.true35:                                  ; preds = %if.then32
  %35 = load i8, i8* getelementptr inbounds ([181 x i8], [181 x i8]* @opts, i32 0, i32 94), align 1
  %conv36 = sext i8 %35 to i32
  %tobool37 = icmp ne i32 %conv36, 0
  br i1 %tobool37, label %if.then38, label %if.else44

if.then38:                                        ; preds = %land.lhs.true35
  %36 = load i8, i8* getelementptr inbounds ([181 x i8], [181 x i8]* @opts, i32 0, i32 148), align 1
  %tobool39 = icmp ne i8 %36, 0
  br i1 %tobool39, label %if.end43, label %land.lhs.true40

land.lhs.true40:                                  ; preds = %if.then38
  %37 = load i32, i32* %quiet.addr, align 4
  %tobool41 = icmp ne i32 %37, 0
  br i1 %tobool41, label %if.end43, label %if.then42

if.then42:                                        ; preds = %land.lhs.true40
  call void @printdirstack()
  br label %if.end43

if.end43:                                         ; preds = %if.then42, %land.lhs.true40, %if.then38
  br label %if.end49

if.else44:                                        ; preds = %land.lhs.true35, %if.then32
  %38 = load i32, i32* @doprintdir, align 4
  %tobool45 = icmp ne i32 %38, 0
  br i1 %tobool45, label %if.then46, label %if.end48

if.then46:                                        ; preds = %if.else44
  %39 = load i8*, i8** @pwd, align 4
  %40 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 4
  call void @fprintdir(i8* %39, %struct._IO_FILE* %40)
  %call47 = call i32 @putchar(i32 10)
  br label %if.end48

if.end48:                                         ; preds = %if.then46, %if.else44
  br label %if.end49

if.end49:                                         ; preds = %if.end48, %if.end43
  br label %if.end50

if.end50:                                         ; preds = %if.end49, %lor.lhs.false
  %41 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 4
  %call51 = call i32 @fflush(%struct._IO_FILE* %41)
  %42 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 4
  %call52 = call i32 @fflush(%struct._IO_FILE* %42)
  %43 = load i32, i32* %quiet.addr, align 4
  %tobool53 = icmp ne i32 %43, 0
  br i1 %tobool53, label %if.end56, label %if.then54

if.then54:                                        ; preds = %if.end50
  %call55 = call i32 @callhookfunc(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.298, i32 0, i32 0), %union.linkroot* null, i32 1, i32* null)
  br label %if.end56

if.end56:                                         ; preds = %if.then54, %if.end50
  %call57 = call i32 @getiparam(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.299, i32 0, i32 0))
  store i32 %call57, i32* %dirstacksize, align 4
  %44 = load i32, i32* %dirstacksize, align 4
  %cmp58 = icmp sgt i32 %44, 0
  br i1 %cmp58, label %if.then60, label %if.end68

if.then60:                                        ; preds = %if.end56
  %45 = load %union.linkroot*, %union.linkroot** @dirstack, align 4
  %call61 = call i32 @countlinknodes(%union.linkroot* %45)
  %46 = load i32, i32* %dirstacksize, align 4
  %cmp62 = icmp slt i32 %46, 2
  br i1 %cmp62, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.then60
  br label %cond.end

cond.false:                                       ; preds = %if.then60
  %47 = load i32, i32* %dirstacksize, align 4
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 2, %cond.true ], [ %47, %cond.false ]
  %sub = sub nsw i32 %call61, %cond
  store i32 %sub, i32* %remove, align 4
  br label %while.cond

while.cond:                                       ; preds = %while.body, %cond.end
  %48 = load i32, i32* %remove, align 4
  %dec = add nsw i32 %48, -1
  store i32 %dec, i32* %remove, align 4
  %cmp64 = icmp sge i32 %48, 0
  br i1 %cmp64, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %49 = load %union.linkroot*, %union.linkroot** @dirstack, align 4
  %50 = load %union.linkroot*, %union.linkroot** @dirstack, align 4
  %list66 = bitcast %union.linkroot* %50 to %struct.linklist*
  %last = getelementptr inbounds %struct.linklist, %struct.linklist* %list66, i32 0, i32 1
  %51 = load %struct.linknode*, %struct.linknode** %last, align 4
  %call67 = call i8* @remnode(%union.linkroot* %49, %struct.linknode* %51)
  call void @zsfree(i8* %call67)
  br label %while.cond

while.end:                                        ; preds = %while.cond
  br label %if.end68

if.end68:                                         ; preds = %while.end, %if.end56
  ret void
}

declare i32 @stat(i8*, %struct.stat*) #1

declare i8* @unmeta(i8*) #1

declare void @setjobpwd() #1

declare i8* @metafy(i8*, i32, i32) #1

declare i32 @chdir(i8*) #1

declare void @zwarn(i8*, ...) #1

declare i32* @__errno_location() #1

; Function Attrs: noinline nounwind
define i8* @cd_able_vars(i8* %s) #0 {
entry:
  %retval = alloca i8*, align 4
  %s.addr = alloca i8*, align 4
  %rest = alloca i8*, align 4
  %save = alloca i8, align 1
  store i8* %s, i8** %s.addr, align 4
  %0 = load i8, i8* getelementptr inbounds ([181 x i8], [181 x i8]* @opts, i32 0, i32 29), align 1
  %tobool = icmp ne i8 %0, 0
  br i1 %tobool, label %if.then, label %if.end9

if.then:                                          ; preds = %entry
  %1 = load i8*, i8** %s.addr, align 4
  store i8* %1, i8** %rest, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then
  %2 = load i8*, i8** %rest, align 4
  %3 = load i8, i8* %2, align 1
  %conv = sext i8 %3 to i32
  %tobool1 = icmp ne i32 %conv, 0
  br i1 %tobool1, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %for.cond
  %4 = load i8*, i8** %rest, align 4
  %5 = load i8, i8* %4, align 1
  %conv2 = sext i8 %5 to i32
  %cmp = icmp ne i32 %conv2, 47
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %6 = phi i1 [ false, %for.cond ], [ %cmp, %land.rhs ]
  br i1 %6, label %for.body, label %for.end

for.body:                                         ; preds = %land.end
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %7 = load i8*, i8** %rest, align 4
  %incdec.ptr = getelementptr inbounds i8, i8* %7, i32 1
  store i8* %incdec.ptr, i8** %rest, align 4
  br label %for.cond

for.end:                                          ; preds = %land.end
  %8 = load i8*, i8** %rest, align 4
  %9 = load i8, i8* %8, align 1
  store i8 %9, i8* %save, align 1
  %10 = load i8*, i8** %rest, align 4
  store i8 0, i8* %10, align 1
  %11 = load i8*, i8** %s.addr, align 4
  %call = call i8* @getnameddir(i8* %11)
  store i8* %call, i8** %s.addr, align 4
  %12 = load i8, i8* %save, align 1
  %13 = load i8*, i8** %rest, align 4
  store i8 %12, i8* %13, align 1
  %14 = load i8*, i8** %s.addr, align 4
  %tobool4 = icmp ne i8* %14, null
  br i1 %tobool4, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %for.end
  %15 = load i8*, i8** %rest, align 4
  %16 = load i8, i8* %15, align 1
  %conv5 = sext i8 %16 to i32
  %tobool6 = icmp ne i32 %conv5, 0
  br i1 %tobool6, label %if.then7, label %if.end

if.then7:                                         ; preds = %land.lhs.true
  %17 = load i8*, i8** %s.addr, align 4
  %18 = load i8*, i8** %rest, align 4
  %call8 = call i8* @dyncat(i8* %17, i8* %18)
  store i8* %call8, i8** %s.addr, align 4
  br label %if.end

if.end:                                           ; preds = %if.then7, %land.lhs.true, %for.end
  %19 = load i8*, i8** %s.addr, align 4
  store i8* %19, i8** %retval, align 4
  br label %return

if.end9:                                          ; preds = %entry
  store i8* null, i8** %retval, align 4
  br label %return

return:                                           ; preds = %if.end9, %if.end
  %20 = load i8*, i8** %retval, align 4
  ret i8* %20
}

declare i8* @getnameddir(i8*) #1

declare i8* @dyncat(i8*, i8*) #1

; Function Attrs: noinline nounwind
define i32 @fixdir(i8* %src) #0 {
entry:
  %retval = alloca i32, align 4
  %src.addr = alloca i8*, align 4
  %dest = alloca i8*, align 4
  %d0 = alloca i8*, align 4
  %chasedots = alloca i32, align 4
  %st = alloca %struct.stat, align 8
  %ptrd = alloca i8*, align 4
  %ptrs = alloca i8*, align 4
  store i8* %src, i8** %src.addr, align 4
  %0 = load i8*, i8** %src.addr, align 4
  store i8* %0, i8** %dest, align 4
  %1 = load i8*, i8** %dest, align 4
  store i8* %1, i8** %d0, align 4
  %2 = load i8*, i8** %src.addr, align 4
  %arrayidx = getelementptr inbounds i8, i8* %2, i32 0
  %3 = load i8, i8* %arrayidx, align 1
  %conv = sext i8 %3 to i32
  %cmp = icmp eq i32 %conv, 46
  br i1 %cmp, label %land.lhs.true, label %land.end24

land.lhs.true:                                    ; preds = %entry
  %4 = load i8*, i8** @pwd, align 4
  %arrayidx2 = getelementptr inbounds i8, i8* %4, i32 0
  %5 = load i8, i8* %arrayidx2, align 1
  %conv3 = sext i8 %5 to i32
  %cmp4 = icmp eq i32 %conv3, 46
  br i1 %cmp4, label %land.lhs.true6, label %land.end24

land.lhs.true6:                                   ; preds = %land.lhs.true
  %6 = load i8*, i8** @pwd, align 4
  %arrayidx7 = getelementptr inbounds i8, i8* %6, i32 1
  %7 = load i8, i8* %arrayidx7, align 1
  %conv8 = sext i8 %7 to i32
  %cmp9 = icmp eq i32 %conv8, 0
  br i1 %cmp9, label %land.rhs, label %land.end24

land.rhs:                                         ; preds = %land.lhs.true6
  %8 = load i8*, i8** %src.addr, align 4
  %arrayidx11 = getelementptr inbounds i8, i8* %8, i32 1
  %9 = load i8, i8* %arrayidx11, align 1
  %conv12 = sext i8 %9 to i32
  %cmp13 = icmp eq i32 %conv12, 47
  br i1 %cmp13, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %land.rhs
  %10 = load i8*, i8** %src.addr, align 4
  %arrayidx15 = getelementptr inbounds i8, i8* %10, i32 1
  %11 = load i8, i8* %arrayidx15, align 1
  %conv16 = sext i8 %11 to i32
  %cmp17 = icmp eq i32 %conv16, 46
  br i1 %cmp17, label %land.rhs19, label %land.end

land.rhs19:                                       ; preds = %lor.rhs
  %12 = load i8*, i8** %src.addr, align 4
  %arrayidx20 = getelementptr inbounds i8, i8* %12, i32 2
  %13 = load i8, i8* %arrayidx20, align 1
  %conv21 = sext i8 %13 to i32
  %cmp22 = icmp eq i32 %conv21, 47
  br label %land.end

land.end:                                         ; preds = %land.rhs19, %lor.rhs
  %14 = phi i1 [ false, %lor.rhs ], [ %cmp22, %land.rhs19 ]
  br label %lor.end

lor.end:                                          ; preds = %land.end, %land.rhs
  %15 = phi i1 [ true, %land.rhs ], [ %14, %land.end ]
  br label %land.end24

land.end24:                                       ; preds = %lor.end, %land.lhs.true6, %land.lhs.true, %entry
  %16 = phi i1 [ false, %land.lhs.true6 ], [ false, %land.lhs.true ], [ false, %entry ], [ %15, %lor.end ]
  %land.ext = zext i1 %16 to i32
  %mul = mul nsw i32 %land.ext, 2
  store i32 %mul, i32* %chasedots, align 4
  br label %for.cond

for.cond:                                         ; preds = %if.end180, %while.end130, %land.end24
  %17 = load i8*, i8** %src.addr, align 4
  %18 = load i8, i8* %17, align 1
  %conv25 = sext i8 %18 to i32
  %cmp26 = icmp eq i32 %conv25, 47
  br i1 %cmp26, label %if.then, label %if.end

if.then:                                          ; preds = %for.cond
  %19 = load i8*, i8** %src.addr, align 4
  %incdec.ptr = getelementptr inbounds i8, i8* %19, i32 1
  store i8* %incdec.ptr, i8** %src.addr, align 4
  %20 = load i8, i8* %19, align 1
  %21 = load i8*, i8** %dest, align 4
  %incdec.ptr28 = getelementptr inbounds i8, i8* %21, i32 1
  store i8* %incdec.ptr28, i8** %dest, align 4
  store i8 %20, i8* %21, align 1
  br label %while.cond

while.cond:                                       ; preds = %while.body, %if.then
  %22 = load i8*, i8** %src.addr, align 4
  %23 = load i8, i8* %22, align 1
  %conv29 = sext i8 %23 to i32
  %cmp30 = icmp eq i32 %conv29, 47
  br i1 %cmp30, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %24 = load i8*, i8** %src.addr, align 4
  %incdec.ptr32 = getelementptr inbounds i8, i8* %24, i32 1
  store i8* %incdec.ptr32, i8** %src.addr, align 4
  br label %while.cond

while.end:                                        ; preds = %while.cond
  br label %if.end

if.end:                                           ; preds = %while.end, %for.cond
  %25 = load i8*, i8** %src.addr, align 4
  %26 = load i8, i8* %25, align 1
  %tobool = icmp ne i8 %26, 0
  br i1 %tobool, label %if.end47, label %if.then33

if.then33:                                        ; preds = %if.end
  br label %while.cond34

while.cond34:                                     ; preds = %while.body44, %if.then33
  %27 = load i8*, i8** %dest, align 4
  %28 = load i8*, i8** %d0, align 4
  %add.ptr = getelementptr inbounds i8, i8* %28, i32 1
  %cmp35 = icmp ugt i8* %27, %add.ptr
  br i1 %cmp35, label %land.rhs37, label %land.end42

land.rhs37:                                       ; preds = %while.cond34
  %29 = load i8*, i8** %dest, align 4
  %arrayidx38 = getelementptr inbounds i8, i8* %29, i32 -1
  %30 = load i8, i8* %arrayidx38, align 1
  %conv39 = sext i8 %30 to i32
  %cmp40 = icmp eq i32 %conv39, 47
  br label %land.end42

land.end42:                                       ; preds = %land.rhs37, %while.cond34
  %31 = phi i1 [ false, %while.cond34 ], [ %cmp40, %land.rhs37 ]
  br i1 %31, label %while.body44, label %while.end46

while.body44:                                     ; preds = %land.end42
  %32 = load i8*, i8** %dest, align 4
  %incdec.ptr45 = getelementptr inbounds i8, i8* %32, i32 -1
  store i8* %incdec.ptr45, i8** %dest, align 4
  br label %while.cond34

while.end46:                                      ; preds = %land.end42
  %33 = load i8*, i8** %dest, align 4
  store i8 0, i8* %33, align 1
  %34 = load i32, i32* %chasedots, align 4
  store i32 %34, i32* %retval, align 4
  br label %return

if.end47:                                         ; preds = %if.end
  %35 = load i8*, i8** %src.addr, align 4
  %arrayidx48 = getelementptr inbounds i8, i8* %35, i32 0
  %36 = load i8, i8* %arrayidx48, align 1
  %conv49 = sext i8 %36 to i32
  %cmp50 = icmp eq i32 %conv49, 46
  br i1 %cmp50, label %land.lhs.true52, label %if.end132

land.lhs.true52:                                  ; preds = %if.end47
  %37 = load i8*, i8** %src.addr, align 4
  %arrayidx53 = getelementptr inbounds i8, i8* %37, i32 1
  %38 = load i8, i8* %arrayidx53, align 1
  %conv54 = sext i8 %38 to i32
  %cmp55 = icmp eq i32 %conv54, 46
  br i1 %cmp55, label %land.lhs.true57, label %if.end132

land.lhs.true57:                                  ; preds = %land.lhs.true52
  %39 = load i8*, i8** %src.addr, align 4
  %arrayidx58 = getelementptr inbounds i8, i8* %39, i32 2
  %40 = load i8, i8* %arrayidx58, align 1
  %conv59 = sext i8 %40 to i32
  %cmp60 = icmp eq i32 %conv59, 0
  br i1 %cmp60, label %if.then66, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true57
  %41 = load i8*, i8** %src.addr, align 4
  %arrayidx62 = getelementptr inbounds i8, i8* %41, i32 2
  %42 = load i8, i8* %arrayidx62, align 1
  %conv63 = sext i8 %42 to i32
  %cmp64 = icmp eq i32 %conv63, 47
  br i1 %cmp64, label %if.then66, label %if.end132

if.then66:                                        ; preds = %lor.lhs.false, %land.lhs.true57
  %43 = load i8, i8* getelementptr inbounds ([181 x i8], [181 x i8]* @opts, i32 0, i32 30), align 1
  %conv67 = sext i8 %43 to i32
  %tobool68 = icmp ne i32 %conv67, 0
  br i1 %tobool68, label %if.then72, label %lor.lhs.false69

lor.lhs.false69:                                  ; preds = %if.then66
  %44 = load i32, i32* %chasedots, align 4
  %cmp70 = icmp sgt i32 %44, 1
  br i1 %cmp70, label %if.then72, label %if.else

if.then72:                                        ; preds = %lor.lhs.false69, %if.then66
  store i32 1, i32* %chasedots, align 4
  br label %if.end131

if.else:                                          ; preds = %lor.lhs.false69
  %45 = load i8*, i8** %dest, align 4
  %46 = load i8*, i8** %d0, align 4
  %add.ptr73 = getelementptr inbounds i8, i8* %46, i32 1
  %cmp74 = icmp ugt i8* %45, %add.ptr73
  br i1 %cmp74, label %if.then76, label %if.end122

if.then76:                                        ; preds = %if.else
  %47 = load i8*, i8** %dest, align 4
  store i8 0, i8* %47, align 1
  %48 = load i8*, i8** %d0, align 4
  %call = call i32 @stat(i8* %48, %struct.stat* %st)
  %cmp77 = icmp slt i32 %call, 0
  br i1 %cmp77, label %if.then82, label %lor.lhs.false79

lor.lhs.false79:                                  ; preds = %if.then76
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 6
  %49 = load i32, i32* %st_mode, align 8
  %and = and i32 %49, 61440
  %cmp80 = icmp eq i32 %and, 16384
  br i1 %cmp80, label %if.end98, label %if.then82

if.then82:                                        ; preds = %lor.lhs.false79, %if.then76
  %50 = load i8*, i8** %dest, align 4
  %51 = load i8*, i8** %src.addr, align 4
  %cmp83 = icmp eq i8* %50, %51
  br i1 %cmp83, label %if.then85, label %if.end86

if.then85:                                        ; preds = %if.then82
  %52 = load i8*, i8** %dest, align 4
  store i8 46, i8* %52, align 1
  br label %if.end86

if.end86:                                         ; preds = %if.then85, %if.then82
  %53 = load i8*, i8** %src.addr, align 4
  store i8* %53, i8** %ptrs, align 4
  %54 = load i8*, i8** %dest, align 4
  store i8* %54, i8** %ptrd, align 4
  br label %for.cond87

for.cond87:                                       ; preds = %for.inc, %if.end86
  %55 = load i8*, i8** %ptrs, align 4
  %56 = load i8, i8* %55, align 1
  %tobool88 = icmp ne i8 %56, 0
  br i1 %tobool88, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond87
  %57 = load i8*, i8** %ptrs, align 4
  %58 = load i8, i8* %57, align 1
  %conv89 = sext i8 %58 to i32
  %cmp90 = icmp eq i32 %conv89, -125
  br i1 %cmp90, label %cond.true, label %cond.false

cond.true:                                        ; preds = %for.body
  %59 = load i8*, i8** %ptrs, align 4
  %incdec.ptr92 = getelementptr inbounds i8, i8* %59, i32 1
  store i8* %incdec.ptr92, i8** %ptrs, align 4
  %60 = load i8, i8* %incdec.ptr92, align 1
  %conv93 = sext i8 %60 to i32
  %xor = xor i32 %conv93, 32
  br label %cond.end

cond.false:                                       ; preds = %for.body
  %61 = load i8*, i8** %ptrs, align 4
  %62 = load i8, i8* %61, align 1
  %conv94 = sext i8 %62 to i32
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %xor, %cond.true ], [ %conv94, %cond.false ]
  %conv95 = trunc i32 %cond to i8
  %63 = load i8*, i8** %ptrd, align 4
  store i8 %conv95, i8* %63, align 1
  br label %for.inc

for.inc:                                          ; preds = %cond.end
  %64 = load i8*, i8** %ptrs, align 4
  %incdec.ptr96 = getelementptr inbounds i8, i8* %64, i32 1
  store i8* %incdec.ptr96, i8** %ptrs, align 4
  %65 = load i8*, i8** %ptrd, align 4
  %incdec.ptr97 = getelementptr inbounds i8, i8* %65, i32 1
  store i8* %incdec.ptr97, i8** %ptrd, align 4
  br label %for.cond87

for.end:                                          ; preds = %for.cond87
  %66 = load i8*, i8** %ptrd, align 4
  store i8 0, i8* %66, align 1
  store i32 1, i32* %retval, align 4
  br label %return

if.end98:                                         ; preds = %lor.lhs.false79
  %67 = load i8*, i8** %dest, align 4
  %incdec.ptr99 = getelementptr inbounds i8, i8* %67, i32 -1
  store i8* %incdec.ptr99, i8** %dest, align 4
  br label %for.cond100

for.cond100:                                      ; preds = %for.inc112, %if.end98
  %68 = load i8*, i8** %dest, align 4
  %69 = load i8*, i8** %d0, align 4
  %add.ptr101 = getelementptr inbounds i8, i8* %69, i32 1
  %cmp102 = icmp ugt i8* %68, %add.ptr101
  br i1 %cmp102, label %land.rhs104, label %land.end109

land.rhs104:                                      ; preds = %for.cond100
  %70 = load i8*, i8** %dest, align 4
  %arrayidx105 = getelementptr inbounds i8, i8* %70, i32 -1
  %71 = load i8, i8* %arrayidx105, align 1
  %conv106 = sext i8 %71 to i32
  %cmp107 = icmp ne i32 %conv106, 47
  br label %land.end109

land.end109:                                      ; preds = %land.rhs104, %for.cond100
  %72 = phi i1 [ false, %for.cond100 ], [ %cmp107, %land.rhs104 ]
  br i1 %72, label %for.body111, label %for.end114

for.body111:                                      ; preds = %land.end109
  br label %for.inc112

for.inc112:                                       ; preds = %for.body111
  %73 = load i8*, i8** %dest, align 4
  %incdec.ptr113 = getelementptr inbounds i8, i8* %73, i32 -1
  store i8* %incdec.ptr113, i8** %dest, align 4
  br label %for.cond100

for.end114:                                       ; preds = %land.end109
  %74 = load i8*, i8** %dest, align 4
  %arrayidx115 = getelementptr inbounds i8, i8* %74, i32 -1
  %75 = load i8, i8* %arrayidx115, align 1
  %conv116 = sext i8 %75 to i32
  %cmp117 = icmp ne i32 %conv116, 47
  br i1 %cmp117, label %if.then119, label %if.end121

if.then119:                                       ; preds = %for.end114
  %76 = load i8*, i8** %dest, align 4
  %incdec.ptr120 = getelementptr inbounds i8, i8* %76, i32 -1
  store i8* %incdec.ptr120, i8** %dest, align 4
  br label %if.end121

if.end121:                                        ; preds = %if.then119, %for.end114
  br label %if.end122

if.end122:                                        ; preds = %if.end121, %if.else
  %77 = load i8*, i8** %src.addr, align 4
  %incdec.ptr123 = getelementptr inbounds i8, i8* %77, i32 1
  store i8* %incdec.ptr123, i8** %src.addr, align 4
  br label %while.cond124

while.cond124:                                    ; preds = %while.body129, %if.end122
  %78 = load i8*, i8** %src.addr, align 4
  %incdec.ptr125 = getelementptr inbounds i8, i8* %78, i32 1
  store i8* %incdec.ptr125, i8** %src.addr, align 4
  %79 = load i8, i8* %incdec.ptr125, align 1
  %conv126 = sext i8 %79 to i32
  %cmp127 = icmp eq i32 %conv126, 47
  br i1 %cmp127, label %while.body129, label %while.end130

while.body129:                                    ; preds = %while.cond124
  br label %while.cond124

while.end130:                                     ; preds = %while.cond124
  br label %for.cond

if.end131:                                        ; preds = %if.then72
  br label %if.end132

if.end132:                                        ; preds = %if.end131, %lor.lhs.false, %land.lhs.true52, %if.end47
  %80 = load i8*, i8** %src.addr, align 4
  %arrayidx133 = getelementptr inbounds i8, i8* %80, i32 0
  %81 = load i8, i8* %arrayidx133, align 1
  %conv134 = sext i8 %81 to i32
  %cmp135 = icmp eq i32 %conv134, 46
  br i1 %cmp135, label %land.lhs.true137, label %if.else155

land.lhs.true137:                                 ; preds = %if.end132
  %82 = load i8*, i8** %src.addr, align 4
  %arrayidx138 = getelementptr inbounds i8, i8* %82, i32 1
  %83 = load i8, i8* %arrayidx138, align 1
  %conv139 = sext i8 %83 to i32
  %cmp140 = icmp eq i32 %conv139, 47
  br i1 %cmp140, label %if.then147, label %lor.lhs.false142

lor.lhs.false142:                                 ; preds = %land.lhs.true137
  %84 = load i8*, i8** %src.addr, align 4
  %arrayidx143 = getelementptr inbounds i8, i8* %84, i32 1
  %85 = load i8, i8* %arrayidx143, align 1
  %conv144 = sext i8 %85 to i32
  %cmp145 = icmp eq i32 %conv144, 0
  br i1 %cmp145, label %if.then147, label %if.else155

if.then147:                                       ; preds = %lor.lhs.false142, %land.lhs.true137
  br label %while.cond148

while.cond148:                                    ; preds = %while.body153, %if.then147
  %86 = load i8*, i8** %src.addr, align 4
  %incdec.ptr149 = getelementptr inbounds i8, i8* %86, i32 1
  store i8* %incdec.ptr149, i8** %src.addr, align 4
  %87 = load i8, i8* %incdec.ptr149, align 1
  %conv150 = sext i8 %87 to i32
  %cmp151 = icmp eq i32 %conv150, 47
  br i1 %cmp151, label %while.body153, label %while.end154

while.body153:                                    ; preds = %while.cond148
  br label %while.cond148

while.end154:                                     ; preds = %while.cond148
  br label %if.end180

if.else155:                                       ; preds = %lor.lhs.false142, %if.end132
  br label %while.cond156

while.cond156:                                    ; preds = %if.end178, %if.else155
  %88 = load i8*, i8** %src.addr, align 4
  %89 = load i8, i8* %88, align 1
  %conv157 = sext i8 %89 to i32
  %cmp158 = icmp ne i32 %conv157, 47
  br i1 %cmp158, label %land.rhs160, label %land.end164

land.rhs160:                                      ; preds = %while.cond156
  %90 = load i8*, i8** %src.addr, align 4
  %91 = load i8, i8* %90, align 1
  %conv161 = sext i8 %91 to i32
  %cmp162 = icmp ne i32 %conv161, 0
  br label %land.end164

land.end164:                                      ; preds = %land.rhs160, %while.cond156
  %92 = phi i1 [ false, %while.cond156 ], [ %cmp162, %land.rhs160 ]
  br i1 %92, label %while.body166, label %while.end179

while.body166:                                    ; preds = %land.end164
  %93 = load i8*, i8** %src.addr, align 4
  %incdec.ptr167 = getelementptr inbounds i8, i8* %93, i32 1
  store i8* %incdec.ptr167, i8** %src.addr, align 4
  %94 = load i8, i8* %93, align 1
  %95 = load i8*, i8** %dest, align 4
  %incdec.ptr168 = getelementptr inbounds i8, i8* %95, i32 1
  store i8* %incdec.ptr168, i8** %dest, align 4
  store i8 %94, i8* %95, align 1
  %conv169 = sext i8 %94 to i32
  %cmp170 = icmp eq i32 %conv169, -125
  br i1 %cmp170, label %if.then172, label %if.end178

if.then172:                                       ; preds = %while.body166
  %96 = load i8*, i8** %src.addr, align 4
  %incdec.ptr173 = getelementptr inbounds i8, i8* %96, i32 1
  store i8* %incdec.ptr173, i8** %src.addr, align 4
  %97 = load i8, i8* %96, align 1
  %conv174 = sext i8 %97 to i32
  %xor175 = xor i32 %conv174, 32
  %conv176 = trunc i32 %xor175 to i8
  %98 = load i8*, i8** %dest, align 4
  %arrayidx177 = getelementptr inbounds i8, i8* %98, i32 -1
  store i8 %conv176, i8* %arrayidx177, align 1
  br label %if.end178

if.end178:                                        ; preds = %if.then172, %while.body166
  br label %while.cond156

while.end179:                                     ; preds = %land.end164
  br label %if.end180

if.end180:                                        ; preds = %while.end179, %while.end154
  br label %for.cond

return:                                           ; preds = %for.end, %while.end46
  %99 = load i32, i32* %retval, align 4
  ret i32 %99
}

; Function Attrs: noinline nounwind
define void @printqt(i8* %str) #0 {
entry:
  %str.addr = alloca i8*, align 4
  store i8* %str, i8** %str.addr, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i8*, i8** %str.addr, align 4
  %1 = load i8, i8* %0, align 1
  %tobool = icmp ne i8 %1, 0
  br i1 %tobool, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %2 = load i8*, i8** %str.addr, align 4
  %3 = load i8, i8* %2, align 1
  %conv = sext i8 %3 to i32
  %cmp = icmp eq i32 %conv, 39
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %for.body
  %4 = load i8, i8* getelementptr inbounds ([181 x i8], [181 x i8]* @opts, i32 0, i32 151), align 1
  %conv2 = sext i8 %4 to i32
  %tobool3 = icmp ne i32 %conv2, 0
  %cond = select i1 %tobool3, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.31, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.32, i32 0, i32 0)
  %call = call i32 (i8*, ...) @printf(i8* %cond)
  br label %if.end

if.else:                                          ; preds = %for.body
  %5 = load i8*, i8** %str.addr, align 4
  %6 = load i8, i8* %5, align 1
  %conv4 = sext i8 %6 to i32
  %call5 = call i32 @putchar(i32 %conv4)
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %7 = load i8*, i8** %str.addr, align 4
  %incdec.ptr = getelementptr inbounds i8, i8* %7, i32 1
  store i8* %incdec.ptr, i8** %str.addr, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  ret void
}

; Function Attrs: noinline nounwind
define void @printif(i8* %str, i32 %c) #0 {
entry:
  %str.addr = alloca i8*, align 4
  %c.addr = alloca i32, align 4
  store i8* %str, i8** %str.addr, align 4
  store i32 %c, i32* %c.addr, align 4
  %0 = load i8*, i8** %str.addr, align 4
  %tobool = icmp ne i8* %0, null
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %c.addr, align 4
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.33, i32 0, i32 0), i32 %1)
  %2 = load i8*, i8** %str.addr, align 4
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 4
  %call1 = call i8* @quotedzputs(i8* %2, %struct._IO_FILE* %3)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  ret void
}

; Function Attrs: noinline nounwind
define i32 @bin_fc(i8* %nam, i8** %argv, %struct.options* %ops, i32 %func) #0 {
entry:
  %retval = alloca i32, align 4
  %nam.addr = alloca i8*, align 4
  %argv.addr = alloca i8**, align 4
  %ops.addr = alloca %struct.options*, align 4
  %func.addr = alloca i32, align 4
  %first = alloca i32, align 4
  %last = alloca i32, align 4
  %retval1 = alloca i32, align 4
  %s = alloca i8*, align 4
  %asgf = alloca %struct.asgment*, align 4
  %asgl = alloca %struct.asgment*, align 4
  %pprog = alloca %struct.patprog*, align 4
  %hf = alloca i8*, align 4
  %hs = alloca i32, align 4
  %shs = alloca i32, align 4
  %level = alloca i32, align 4
  %check = alloca i8*, align 4
  %st = alloca %struct.stat, align 8
  %oset = alloca %struct.__sigset_t, align 4
  %tmp = alloca %struct.__sigset_t, align 4
  %tmp88 = alloca %struct.__sigset_t, align 4
  %oset114 = alloca %struct.__sigset_t, align 4
  %tmp118 = alloca %struct.__sigset_t, align 4
  %tmp120 = alloca %struct.__sigset_t, align 4
  %oset148 = alloca %struct.__sigset_t, align 4
  %tmp152 = alloca %struct.__sigset_t, align 4
  %tmp154 = alloca %struct.__sigset_t, align 4
  %oset172 = alloca %struct.__sigset_t, align 4
  %tmp176 = alloca %struct.__sigset_t, align 4
  %tmp178 = alloca %struct.__sigset_t, align 4
  %a = alloca %struct.asgment*, align 4
  %oset220 = alloca %struct.__sigset_t, align 4
  %tmp224 = alloca %struct.__sigset_t, align 4
  %tmp226 = alloca %struct.__sigset_t, align 4
  %oset250 = alloca %struct.__sigset_t, align 4
  %tmp254 = alloca %struct.__sigset_t, align 4
  %tmp256 = alloca %struct.__sigset_t, align 4
  %oset276 = alloca %struct.__sigset_t, align 4
  %tmp280 = alloca %struct.__sigset_t, align 4
  %tmp282 = alloca %struct.__sigset_t, align 4
  %oset366 = alloca %struct.__sigset_t, align 4
  %tmp370 = alloca %struct.__sigset_t, align 4
  %tmp372 = alloca %struct.__sigset_t, align 4
  %tempfd = alloca i32, align 4
  %out = alloca %struct._IO_FILE*, align 4
  %fil = alloca i8*, align 4
  %oset399 = alloca %struct.__sigset_t, align 4
  %tmp403 = alloca %struct.__sigset_t, align 4
  %tmp405 = alloca %struct.__sigset_t, align 4
  %oset428 = alloca %struct.__sigset_t, align 4
  %tmp432 = alloca %struct.__sigset_t, align 4
  %tmp434 = alloca %struct.__sigset_t, align 4
  %editor = alloca i8*, align 4
  %oset485 = alloca %struct.__sigset_t, align 4
  %tmp489 = alloca %struct.__sigset_t, align 4
  %tmp491 = alloca %struct.__sigset_t, align 4
  %oset518 = alloca %struct.__sigset_t, align 4
  %tmp522 = alloca %struct.__sigset_t, align 4
  %tmp524 = alloca %struct.__sigset_t, align 4
  store i8* %nam, i8** %nam.addr, align 4
  store i8** %argv, i8*** %argv.addr, align 4
  store %struct.options* %ops, %struct.options** %ops.addr, align 4
  store i32 %func, i32* %func.addr, align 4
  store i32 -1, i32* %first, align 4
  store i32 -1, i32* %last, align 4
  store %struct.asgment* null, %struct.asgment** %asgf, align 4
  store %struct.asgment* null, %struct.asgment** %asgl, align 4
  store %struct.patprog* null, %struct.patprog** %pprog, align 4
  %0 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind = getelementptr inbounds %struct.options, %struct.options* %0, i32 0, i32 0
  %arrayidx = getelementptr inbounds [128 x i8], [128 x i8]* %ind, i32 0, i32 112
  %1 = load i8, i8* %arrayidx, align 4
  %conv = zext i8 %1 to i32
  %cmp = icmp ne i32 %conv, 0
  br i1 %cmp, label %if.then, label %if.end43

if.then:                                          ; preds = %entry
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.34, i32 0, i32 0), i8** %hf, align 4
  store i32 30, i32* %hs, align 4
  store i32 0, i32* %shs, align 4
  %2 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind3 = getelementptr inbounds %struct.options, %struct.options* %2, i32 0, i32 0
  %arrayidx4 = getelementptr inbounds [128 x i8], [128 x i8]* %ind3, i32 0, i32 97
  %3 = load i8, i8* %arrayidx4, align 1
  %conv5 = zext i8 %3 to i32
  %cmp6 = icmp ne i32 %conv5, 0
  br i1 %cmp6, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.then
  %4 = load i32, i32* @locallevel, align 4
  br label %cond.end

cond.false:                                       ; preds = %if.then
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %4, %cond.true ], [ -1, %cond.false ]
  store i32 %cond, i32* %level, align 4
  %5 = load i8**, i8*** %argv.addr, align 4
  %6 = load i8*, i8** %5, align 4
  %tobool = icmp ne i8* %6, null
  br i1 %tobool, label %if.then8, label %if.end27

if.then8:                                         ; preds = %cond.end
  %7 = load i8**, i8*** %argv.addr, align 4
  %incdec.ptr = getelementptr inbounds i8*, i8** %7, i32 1
  store i8** %incdec.ptr, i8*** %argv.addr, align 4
  %8 = load i8*, i8** %7, align 4
  store i8* %8, i8** %hf, align 4
  %9 = load i8**, i8*** %argv.addr, align 4
  %10 = load i8*, i8** %9, align 4
  %tobool9 = icmp ne i8* %10, null
  br i1 %tobool9, label %if.then10, label %if.else25

if.then10:                                        ; preds = %if.then8
  %11 = load i8**, i8*** %argv.addr, align 4
  %incdec.ptr11 = getelementptr inbounds i8*, i8** %11, i32 1
  store i8** %incdec.ptr11, i8*** %argv.addr, align 4
  %12 = load i8*, i8** %11, align 4
  %call = call i32 @zstrtol(i8* %12, i8** %check, i32 10)
  store i32 %call, i32* %hs, align 4
  %13 = load i8*, i8** %check, align 4
  %14 = load i8, i8* %13, align 1
  %tobool12 = icmp ne i8 %14, 0
  br i1 %tobool12, label %if.then13, label %if.end

if.then13:                                        ; preds = %if.then10
  call void (i8*, i8*, ...) @zwarnnam(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.35, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.36, i32 0, i32 0))
  store i32 1, i32* %retval, align 4
  br label %return

if.end:                                           ; preds = %if.then10
  %15 = load i8**, i8*** %argv.addr, align 4
  %16 = load i8*, i8** %15, align 4
  %tobool14 = icmp ne i8* %16, null
  br i1 %tobool14, label %if.then15, label %if.else

if.then15:                                        ; preds = %if.end
  %17 = load i8**, i8*** %argv.addr, align 4
  %incdec.ptr16 = getelementptr inbounds i8*, i8** %17, i32 1
  store i8** %incdec.ptr16, i8*** %argv.addr, align 4
  %18 = load i8*, i8** %17, align 4
  %call17 = call i32 @zstrtol(i8* %18, i8** %check, i32 10)
  store i32 %call17, i32* %shs, align 4
  %19 = load i8*, i8** %check, align 4
  %20 = load i8, i8* %19, align 1
  %tobool18 = icmp ne i8 %20, 0
  br i1 %tobool18, label %if.then19, label %if.end20

if.then19:                                        ; preds = %if.then15
  call void (i8*, i8*, ...) @zwarnnam(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.35, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.37, i32 0, i32 0))
  store i32 1, i32* %retval, align 4
  br label %return

if.end20:                                         ; preds = %if.then15
  br label %if.end21

if.else:                                          ; preds = %if.end
  %21 = load i32, i32* %hs, align 4
  store i32 %21, i32* %shs, align 4
  br label %if.end21

if.end21:                                         ; preds = %if.else, %if.end20
  %22 = load i8**, i8*** %argv.addr, align 4
  %23 = load i8*, i8** %22, align 4
  %tobool22 = icmp ne i8* %23, null
  br i1 %tobool22, label %if.then23, label %if.end24

if.then23:                                        ; preds = %if.end21
  call void (i8*, i8*, ...) @zwarnnam(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.35, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.10, i32 0, i32 0))
  store i32 1, i32* %retval, align 4
  br label %return

if.end24:                                         ; preds = %if.end21
  br label %if.end26

if.else25:                                        ; preds = %if.then8
  %24 = load i32, i32* @histsiz, align 4
  store i32 %24, i32* %hs, align 4
  %25 = load i32, i32* @savehistsiz, align 4
  store i32 %25, i32* %shs, align 4
  br label %if.end26

if.end26:                                         ; preds = %if.else25, %if.end24
  br label %if.end27

if.end27:                                         ; preds = %if.end26, %cond.end
  %26 = load i8*, i8** %hf, align 4
  %27 = load i32, i32* %hs, align 4
  %28 = load i32, i32* %shs, align 4
  %29 = load i32, i32* %level, align 4
  %call28 = call i32 @pushhiststack(i8* %26, i32 %27, i32 %28, i32 %29)
  %tobool29 = icmp ne i32 %call28, 0
  br i1 %tobool29, label %if.end31, label %if.then30

if.then30:                                        ; preds = %if.end27
  store i32 1, i32* %retval, align 4
  br label %return

if.end31:                                         ; preds = %if.end27
  %30 = load i8*, i8** %hf, align 4
  %31 = load i8, i8* %30, align 1
  %tobool32 = icmp ne i8 %31, 0
  br i1 %tobool32, label %if.then33, label %if.end42

if.then33:                                        ; preds = %if.end31
  %32 = load i8*, i8** %hf, align 4
  %call34 = call i32 @stat(i8* %32, %struct.stat* %st)
  %cmp35 = icmp sge i32 %call34, 0
  br i1 %cmp35, label %if.then40, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.then33
  %call37 = call i32* @__errno_location()
  %33 = load i32, i32* %call37, align 4
  %cmp38 = icmp ne i32 %33, 2
  br i1 %cmp38, label %if.then40, label %if.end41

if.then40:                                        ; preds = %lor.lhs.false, %if.then33
  %34 = load i8*, i8** %hf, align 4
  call void @readhistfile(i8* %34, i32 1, i32 32768)
  br label %if.end41

if.end41:                                         ; preds = %if.then40, %lor.lhs.false
  br label %if.end42

if.end42:                                         ; preds = %if.end41, %if.end31
  store i32 0, i32* %retval, align 4
  br label %return

if.end43:                                         ; preds = %entry
  %35 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind44 = getelementptr inbounds %struct.options, %struct.options* %35, i32 0, i32 0
  %arrayidx45 = getelementptr inbounds [128 x i8], [128 x i8]* %ind44, i32 0, i32 80
  %36 = load i8, i8* %arrayidx45, align 4
  %conv46 = zext i8 %36 to i32
  %cmp47 = icmp ne i32 %conv46, 0
  br i1 %cmp47, label %if.then49, label %if.end55

if.then49:                                        ; preds = %if.end43
  %37 = load i8**, i8*** %argv.addr, align 4
  %38 = load i8*, i8** %37, align 4
  %tobool50 = icmp ne i8* %38, null
  br i1 %tobool50, label %if.then51, label %if.end52

if.then51:                                        ; preds = %if.then49
  call void (i8*, i8*, ...) @zwarnnam(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.35, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.10, i32 0, i32 0))
  store i32 1, i32* %retval, align 4
  br label %return

if.end52:                                         ; preds = %if.then49
  %call53 = call i32 @saveandpophiststack(i32 -1, i32 32768)
  %tobool54 = icmp ne i32 %call53, 0
  %lnot = xor i1 %tobool54, true
  %lnot.ext = zext i1 %lnot to i32
  store i32 %lnot.ext, i32* %retval, align 4
  br label %return

if.end55:                                         ; preds = %if.end43
  %39 = load i8**, i8*** %argv.addr, align 4
  %40 = load i8*, i8** %39, align 4
  %tobool56 = icmp ne i8* %40, null
  br i1 %tobool56, label %land.lhs.true, label %if.end68

land.lhs.true:                                    ; preds = %if.end55
  %41 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind57 = getelementptr inbounds %struct.options, %struct.options* %41, i32 0, i32 0
  %arrayidx58 = getelementptr inbounds [128 x i8], [128 x i8]* %ind57, i32 0, i32 109
  %42 = load i8, i8* %arrayidx58, align 1
  %conv59 = zext i8 %42 to i32
  %cmp60 = icmp ne i32 %conv59, 0
  br i1 %cmp60, label %if.then62, label %if.end68

if.then62:                                        ; preds = %land.lhs.true
  %43 = load i8**, i8*** %argv.addr, align 4
  %44 = load i8*, i8** %43, align 4
  call void @tokenize(i8* %44)
  %45 = load i8**, i8*** %argv.addr, align 4
  %incdec.ptr63 = getelementptr inbounds i8*, i8** %45, i32 1
  store i8** %incdec.ptr63, i8*** %argv.addr, align 4
  %46 = load i8*, i8** %45, align 4
  %call64 = call %struct.patprog* @patcompile(i8* %46, i32 0, i8** null)
  store %struct.patprog* %call64, %struct.patprog** %pprog, align 4
  %tobool65 = icmp ne %struct.patprog* %call64, null
  br i1 %tobool65, label %if.end67, label %if.then66

if.then66:                                        ; preds = %if.then62
  %47 = load i8*, i8** %nam.addr, align 4
  call void (i8*, i8*, ...) @zwarnnam(i8* %47, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.38, i32 0, i32 0))
  store i32 1, i32* %retval, align 4
  br label %return

if.end67:                                         ; preds = %if.then62
  br label %if.end68

if.end68:                                         ; preds = %if.end67, %land.lhs.true, %if.end55
  %48 = load i32, i32* @queueing_enabled, align 4
  %inc = add nsw i32 %48, 1
  store i32 %inc, i32* @queueing_enabled, align 4
  %49 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind69 = getelementptr inbounds %struct.options, %struct.options* %49, i32 0, i32 0
  %arrayidx70 = getelementptr inbounds [128 x i8], [128 x i8]* %ind69, i32 0, i32 82
  %50 = load i8, i8* %arrayidx70, align 2
  %conv71 = zext i8 %50 to i32
  %cmp72 = icmp ne i32 %conv71, 0
  br i1 %cmp72, label %if.then74, label %if.end91

if.then74:                                        ; preds = %if.end68
  %51 = load i8**, i8*** %argv.addr, align 4
  %52 = load i8*, i8** %51, align 4
  %53 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind75 = getelementptr inbounds %struct.options, %struct.options* %53, i32 0, i32 0
  %arrayidx76 = getelementptr inbounds [128 x i8], [128 x i8]* %ind75, i32 0, i32 73
  %54 = load i8, i8* %arrayidx76, align 1
  %conv77 = zext i8 %54 to i32
  %cmp78 = icmp ne i32 %conv77, 0
  %cond80 = select i1 %cmp78, i32 2, i32 0
  call void @readhistfile(i8* %52, i32 1, i32 %cond80)
  br label %do.body

do.body:                                          ; preds = %if.then74
  %55 = load i32, i32* @queueing_enabled, align 4
  %dec = add nsw i32 %55, -1
  store i32 %dec, i32* @queueing_enabled, align 4
  %tobool81 = icmp ne i32 %dec, 0
  br i1 %tobool81, label %if.end89, label %if.then82

if.then82:                                        ; preds = %do.body
  br label %do.body83

do.body83:                                        ; preds = %if.then82
  br label %while.cond

while.cond:                                       ; preds = %while.body, %do.body83
  %56 = load i32, i32* @queue_front, align 4
  %57 = load i32, i32* @queue_rear, align 4
  %cmp84 = icmp ne i32 %56, %57
  br i1 %cmp84, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %58 = load i32, i32* @queue_front, align 4
  %add = add nsw i32 %58, 1
  %rem = srem i32 %add, 128
  store i32 %rem, i32* @queue_front, align 4
  %59 = load i32, i32* @queue_front, align 4
  %arrayidx86 = getelementptr inbounds [128 x %struct.__sigset_t], [128 x %struct.__sigset_t]* @signal_mask_queue, i32 0, i32 %59
  call void @signal_setmask(%struct.__sigset_t* sret %tmp, %struct.__sigset_t* byval align 4 %arrayidx86)
  %60 = bitcast %struct.__sigset_t* %oset to i8*
  %61 = bitcast %struct.__sigset_t* %tmp to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %60, i8* %61, i32 128, i32 4, i1 false)
  %62 = load i32, i32* @queue_front, align 4
  %arrayidx87 = getelementptr inbounds [128 x i32], [128 x i32]* @signal_queue, i32 0, i32 %62
  %63 = load i32, i32* %arrayidx87, align 4
  call void @zhandler(i32 %63)
  call void @signal_setmask(%struct.__sigset_t* sret %tmp88, %struct.__sigset_t* byval align 4 %oset)
  br label %while.cond

while.end:                                        ; preds = %while.cond
  br label %do.end

do.end:                                           ; preds = %while.end
  br label %if.end89

if.end89:                                         ; preds = %do.end, %do.body
  br label %do.end90

do.end90:                                         ; preds = %if.end89
  store i32 0, i32* %retval, align 4
  br label %return

if.end91:                                         ; preds = %if.end68
  %64 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind92 = getelementptr inbounds %struct.options, %struct.options* %64, i32 0, i32 0
  %arrayidx93 = getelementptr inbounds [128 x i8], [128 x i8]* %ind92, i32 0, i32 87
  %65 = load i8, i8* %arrayidx93, align 1
  %conv94 = zext i8 %65 to i32
  %cmp95 = icmp ne i32 %conv94, 0
  br i1 %cmp95, label %if.then97, label %if.end125

if.then97:                                        ; preds = %if.end91
  %66 = load i8**, i8*** %argv.addr, align 4
  %67 = load i8*, i8** %66, align 4
  %68 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind98 = getelementptr inbounds %struct.options, %struct.options* %68, i32 0, i32 0
  %arrayidx99 = getelementptr inbounds [128 x i8], [128 x i8]* %ind98, i32 0, i32 73
  %69 = load i8, i8* %arrayidx99, align 1
  %conv100 = zext i8 %69 to i32
  %cmp101 = icmp ne i32 %conv100, 0
  %cond103 = select i1 %cmp101, i32 2, i32 0
  call void @savehistfile(i8* %67, i32 1, i32 %cond103)
  br label %do.body104

do.body104:                                       ; preds = %if.then97
  %70 = load i32, i32* @queueing_enabled, align 4
  %dec105 = add nsw i32 %70, -1
  store i32 %dec105, i32* @queueing_enabled, align 4
  %tobool106 = icmp ne i32 %dec105, 0
  br i1 %tobool106, label %if.end123, label %if.then107

if.then107:                                       ; preds = %do.body104
  br label %do.body108

do.body108:                                       ; preds = %if.then107
  br label %while.cond109

while.cond109:                                    ; preds = %while.body112, %do.body108
  %71 = load i32, i32* @queue_front, align 4
  %72 = load i32, i32* @queue_rear, align 4
  %cmp110 = icmp ne i32 %71, %72
  br i1 %cmp110, label %while.body112, label %while.end121

while.body112:                                    ; preds = %while.cond109
  %73 = load i32, i32* @queue_front, align 4
  %add115 = add nsw i32 %73, 1
  %rem116 = srem i32 %add115, 128
  store i32 %rem116, i32* @queue_front, align 4
  %74 = load i32, i32* @queue_front, align 4
  %arrayidx117 = getelementptr inbounds [128 x %struct.__sigset_t], [128 x %struct.__sigset_t]* @signal_mask_queue, i32 0, i32 %74
  call void @signal_setmask(%struct.__sigset_t* sret %tmp118, %struct.__sigset_t* byval align 4 %arrayidx117)
  %75 = bitcast %struct.__sigset_t* %oset114 to i8*
  %76 = bitcast %struct.__sigset_t* %tmp118 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %75, i8* %76, i32 128, i32 4, i1 false)
  %77 = load i32, i32* @queue_front, align 4
  %arrayidx119 = getelementptr inbounds [128 x i32], [128 x i32]* @signal_queue, i32 0, i32 %77
  %78 = load i32, i32* %arrayidx119, align 4
  call void @zhandler(i32 %78)
  call void @signal_setmask(%struct.__sigset_t* sret %tmp120, %struct.__sigset_t* byval align 4 %oset114)
  br label %while.cond109

while.end121:                                     ; preds = %while.cond109
  br label %do.end122

do.end122:                                        ; preds = %while.end121
  br label %if.end123

if.end123:                                        ; preds = %do.end122, %do.body104
  br label %do.end124

do.end124:                                        ; preds = %if.end123
  store i32 0, i32* %retval, align 4
  br label %return

if.end125:                                        ; preds = %if.end91
  %79 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind126 = getelementptr inbounds %struct.options, %struct.options* %79, i32 0, i32 0
  %arrayidx127 = getelementptr inbounds [128 x i8], [128 x i8]* %ind126, i32 0, i32 65
  %80 = load i8, i8* %arrayidx127, align 1
  %conv128 = zext i8 %80 to i32
  %cmp129 = icmp ne i32 %conv128, 0
  br i1 %cmp129, label %if.then131, label %if.end159

if.then131:                                       ; preds = %if.end125
  %81 = load i8**, i8*** %argv.addr, align 4
  %82 = load i8*, i8** %81, align 4
  %83 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind132 = getelementptr inbounds %struct.options, %struct.options* %83, i32 0, i32 0
  %arrayidx133 = getelementptr inbounds [128 x i8], [128 x i8]* %ind132, i32 0, i32 73
  %84 = load i8, i8* %arrayidx133, align 1
  %conv134 = zext i8 %84 to i32
  %cmp135 = icmp ne i32 %conv134, 0
  %cond137 = select i1 %cmp135, i32 2, i32 0
  %or = or i32 1, %cond137
  call void @savehistfile(i8* %82, i32 1, i32 %or)
  br label %do.body138

do.body138:                                       ; preds = %if.then131
  %85 = load i32, i32* @queueing_enabled, align 4
  %dec139 = add nsw i32 %85, -1
  store i32 %dec139, i32* @queueing_enabled, align 4
  %tobool140 = icmp ne i32 %dec139, 0
  br i1 %tobool140, label %if.end157, label %if.then141

if.then141:                                       ; preds = %do.body138
  br label %do.body142

do.body142:                                       ; preds = %if.then141
  br label %while.cond143

while.cond143:                                    ; preds = %while.body146, %do.body142
  %86 = load i32, i32* @queue_front, align 4
  %87 = load i32, i32* @queue_rear, align 4
  %cmp144 = icmp ne i32 %86, %87
  br i1 %cmp144, label %while.body146, label %while.end155

while.body146:                                    ; preds = %while.cond143
  %88 = load i32, i32* @queue_front, align 4
  %add149 = add nsw i32 %88, 1
  %rem150 = srem i32 %add149, 128
  store i32 %rem150, i32* @queue_front, align 4
  %89 = load i32, i32* @queue_front, align 4
  %arrayidx151 = getelementptr inbounds [128 x %struct.__sigset_t], [128 x %struct.__sigset_t]* @signal_mask_queue, i32 0, i32 %89
  call void @signal_setmask(%struct.__sigset_t* sret %tmp152, %struct.__sigset_t* byval align 4 %arrayidx151)
  %90 = bitcast %struct.__sigset_t* %oset148 to i8*
  %91 = bitcast %struct.__sigset_t* %tmp152 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %90, i8* %91, i32 128, i32 4, i1 false)
  %92 = load i32, i32* @queue_front, align 4
  %arrayidx153 = getelementptr inbounds [128 x i32], [128 x i32]* @signal_queue, i32 0, i32 %92
  %93 = load i32, i32* %arrayidx153, align 4
  call void @zhandler(i32 %93)
  call void @signal_setmask(%struct.__sigset_t* sret %tmp154, %struct.__sigset_t* byval align 4 %oset148)
  br label %while.cond143

while.end155:                                     ; preds = %while.cond143
  br label %do.end156

do.end156:                                        ; preds = %while.end155
  br label %if.end157

if.end157:                                        ; preds = %do.end156, %do.body138
  br label %do.end158

do.end158:                                        ; preds = %if.end157
  store i32 0, i32* %retval, align 4
  br label %return

if.end159:                                        ; preds = %if.end125
  %94 = load i32, i32* @zleactive, align 4
  %tobool160 = icmp ne i32 %94, 0
  br i1 %tobool160, label %if.then161, label %if.end183

if.then161:                                       ; preds = %if.end159
  br label %do.body162

do.body162:                                       ; preds = %if.then161
  %95 = load i32, i32* @queueing_enabled, align 4
  %dec163 = add nsw i32 %95, -1
  store i32 %dec163, i32* @queueing_enabled, align 4
  %tobool164 = icmp ne i32 %dec163, 0
  br i1 %tobool164, label %if.end181, label %if.then165

if.then165:                                       ; preds = %do.body162
  br label %do.body166

do.body166:                                       ; preds = %if.then165
  br label %while.cond167

while.cond167:                                    ; preds = %while.body170, %do.body166
  %96 = load i32, i32* @queue_front, align 4
  %97 = load i32, i32* @queue_rear, align 4
  %cmp168 = icmp ne i32 %96, %97
  br i1 %cmp168, label %while.body170, label %while.end179

while.body170:                                    ; preds = %while.cond167
  %98 = load i32, i32* @queue_front, align 4
  %add173 = add nsw i32 %98, 1
  %rem174 = srem i32 %add173, 128
  store i32 %rem174, i32* @queue_front, align 4
  %99 = load i32, i32* @queue_front, align 4
  %arrayidx175 = getelementptr inbounds [128 x %struct.__sigset_t], [128 x %struct.__sigset_t]* @signal_mask_queue, i32 0, i32 %99
  call void @signal_setmask(%struct.__sigset_t* sret %tmp176, %struct.__sigset_t* byval align 4 %arrayidx175)
  %100 = bitcast %struct.__sigset_t* %oset172 to i8*
  %101 = bitcast %struct.__sigset_t* %tmp176 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %100, i8* %101, i32 128, i32 4, i1 false)
  %102 = load i32, i32* @queue_front, align 4
  %arrayidx177 = getelementptr inbounds [128 x i32], [128 x i32]* @signal_queue, i32 0, i32 %102
  %103 = load i32, i32* %arrayidx177, align 4
  call void @zhandler(i32 %103)
  call void @signal_setmask(%struct.__sigset_t* sret %tmp178, %struct.__sigset_t* byval align 4 %oset172)
  br label %while.cond167

while.end179:                                     ; preds = %while.cond167
  br label %do.end180

do.end180:                                        ; preds = %while.end179
  br label %if.end181

if.end181:                                        ; preds = %do.end180, %do.body162
  br label %do.end182

do.end182:                                        ; preds = %if.end181
  %104 = load i8*, i8** %nam.addr, align 4
  call void (i8*, i8*, ...) @zwarnnam(i8* %104, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.39, i32 0, i32 0))
  store i32 1, i32* %retval, align 4
  br label %return

if.end183:                                        ; preds = %if.end159
  br label %while.cond184

while.cond184:                                    ; preds = %if.end198, %if.end183
  %105 = load i8**, i8*** %argv.addr, align 4
  %106 = load i8*, i8** %105, align 4
  %tobool185 = icmp ne i8* %106, null
  br i1 %tobool185, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %while.cond184
  %107 = load i8**, i8*** %argv.addr, align 4
  %108 = load i8*, i8** %107, align 4
  %call186 = call i32 @equalsplit(i8* %108, i8** %s)
  %tobool187 = icmp ne i32 %call186, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond184
  %109 = phi i1 [ false, %while.cond184 ], [ %tobool187, %land.rhs ]
  br i1 %109, label %while.body188, label %while.end203

while.body188:                                    ; preds = %land.end
  %call190 = call i8* @zhalloc(i32 24)
  %110 = bitcast i8* %call190 to %struct.asgment*
  store %struct.asgment* %110, %struct.asgment** %a, align 4
  %111 = load i8**, i8*** %argv.addr, align 4
  %112 = load i8*, i8** %111, align 4
  %113 = load i8, i8* %112, align 1
  %tobool191 = icmp ne i8 %113, 0
  br i1 %tobool191, label %if.end193, label %if.then192

if.then192:                                       ; preds = %while.body188
  %114 = load i8*, i8** %nam.addr, align 4
  %115 = load i8*, i8** %s, align 4
  call void (i8*, i8*, ...) @zwarnnam(i8* %114, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.40, i32 0, i32 0), i8* %115)
  store i32 1, i32* %retval, align 4
  br label %return

if.end193:                                        ; preds = %while.body188
  %116 = load %struct.asgment*, %struct.asgment** %asgf, align 4
  %tobool194 = icmp ne %struct.asgment* %116, null
  br i1 %tobool194, label %if.else196, label %if.then195

if.then195:                                       ; preds = %if.end193
  %117 = load %struct.asgment*, %struct.asgment** %a, align 4
  store %struct.asgment* %117, %struct.asgment** %asgl, align 4
  store %struct.asgment* %117, %struct.asgment** %asgf, align 4
  br label %if.end198

if.else196:                                       ; preds = %if.end193
  %118 = load %struct.asgment*, %struct.asgment** %a, align 4
  %node = getelementptr inbounds %struct.asgment, %struct.asgment* %118, i32 0, i32 0
  %119 = load %struct.asgment*, %struct.asgment** %asgl, align 4
  %node197 = getelementptr inbounds %struct.asgment, %struct.asgment* %119, i32 0, i32 0
  %next = getelementptr inbounds %struct.linknode, %struct.linknode* %node197, i32 0, i32 0
  store %struct.linknode* %node, %struct.linknode** %next, align 4
  %120 = load %struct.asgment*, %struct.asgment** %a, align 4
  store %struct.asgment* %120, %struct.asgment** %asgl, align 4
  br label %if.end198

if.end198:                                        ; preds = %if.else196, %if.then195
  %121 = load i8**, i8*** %argv.addr, align 4
  %122 = load i8*, i8** %121, align 4
  %123 = load %struct.asgment*, %struct.asgment** %a, align 4
  %name = getelementptr inbounds %struct.asgment, %struct.asgment* %123, i32 0, i32 1
  store i8* %122, i8** %name, align 4
  %124 = load %struct.asgment*, %struct.asgment** %a, align 4
  %flags = getelementptr inbounds %struct.asgment, %struct.asgment* %124, i32 0, i32 2
  store i32 0, i32* %flags, align 4
  %125 = load i8*, i8** %s, align 4
  %126 = load %struct.asgment*, %struct.asgment** %a, align 4
  %value = getelementptr inbounds %struct.asgment, %struct.asgment* %126, i32 0, i32 3
  %scalar = bitcast %union.anon* %value to i8**
  store i8* %125, i8** %scalar, align 4
  %127 = load %struct.asgment*, %struct.asgment** %a, align 4
  %node199 = getelementptr inbounds %struct.asgment, %struct.asgment* %127, i32 0, i32 0
  %prev = getelementptr inbounds %struct.linknode, %struct.linknode* %node199, i32 0, i32 1
  store %struct.linknode* null, %struct.linknode** %prev, align 4
  %128 = load %struct.asgment*, %struct.asgment** %a, align 4
  %node200 = getelementptr inbounds %struct.asgment, %struct.asgment* %128, i32 0, i32 0
  %next201 = getelementptr inbounds %struct.linknode, %struct.linknode* %node200, i32 0, i32 0
  store %struct.linknode* null, %struct.linknode** %next201, align 4
  %129 = load i8**, i8*** %argv.addr, align 4
  %incdec.ptr202 = getelementptr inbounds i8*, i8** %129, i32 1
  store i8** %incdec.ptr202, i8*** %argv.addr, align 4
  br label %while.cond184

while.end203:                                     ; preds = %land.end
  %130 = load i8**, i8*** %argv.addr, align 4
  %131 = load i8*, i8** %130, align 4
  %tobool204 = icmp ne i8* %131, null
  br i1 %tobool204, label %if.then205, label %if.end233

if.then205:                                       ; preds = %while.end203
  %132 = load i8**, i8*** %argv.addr, align 4
  %133 = load i8*, i8** %132, align 4
  %call206 = call i32 @fcgetcomm(i8* %133)
  store i32 %call206, i32* %first, align 4
  %134 = load i32, i32* %first, align 4
  %cmp207 = icmp eq i32 %134, -1
  br i1 %cmp207, label %if.then209, label %if.end231

if.then209:                                       ; preds = %if.then205
  br label %do.body210

do.body210:                                       ; preds = %if.then209
  %135 = load i32, i32* @queueing_enabled, align 4
  %dec211 = add nsw i32 %135, -1
  store i32 %dec211, i32* @queueing_enabled, align 4
  %tobool212 = icmp ne i32 %dec211, 0
  br i1 %tobool212, label %if.end229, label %if.then213

if.then213:                                       ; preds = %do.body210
  br label %do.body214

do.body214:                                       ; preds = %if.then213
  br label %while.cond215

while.cond215:                                    ; preds = %while.body218, %do.body214
  %136 = load i32, i32* @queue_front, align 4
  %137 = load i32, i32* @queue_rear, align 4
  %cmp216 = icmp ne i32 %136, %137
  br i1 %cmp216, label %while.body218, label %while.end227

while.body218:                                    ; preds = %while.cond215
  %138 = load i32, i32* @queue_front, align 4
  %add221 = add nsw i32 %138, 1
  %rem222 = srem i32 %add221, 128
  store i32 %rem222, i32* @queue_front, align 4
  %139 = load i32, i32* @queue_front, align 4
  %arrayidx223 = getelementptr inbounds [128 x %struct.__sigset_t], [128 x %struct.__sigset_t]* @signal_mask_queue, i32 0, i32 %139
  call void @signal_setmask(%struct.__sigset_t* sret %tmp224, %struct.__sigset_t* byval align 4 %arrayidx223)
  %140 = bitcast %struct.__sigset_t* %oset220 to i8*
  %141 = bitcast %struct.__sigset_t* %tmp224 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %140, i8* %141, i32 128, i32 4, i1 false)
  %142 = load i32, i32* @queue_front, align 4
  %arrayidx225 = getelementptr inbounds [128 x i32], [128 x i32]* @signal_queue, i32 0, i32 %142
  %143 = load i32, i32* %arrayidx225, align 4
  call void @zhandler(i32 %143)
  call void @signal_setmask(%struct.__sigset_t* sret %tmp226, %struct.__sigset_t* byval align 4 %oset220)
  br label %while.cond215

while.end227:                                     ; preds = %while.cond215
  br label %do.end228

do.end228:                                        ; preds = %while.end227
  br label %if.end229

if.end229:                                        ; preds = %do.end228, %do.body210
  br label %do.end230

do.end230:                                        ; preds = %if.end229
  store i32 1, i32* %retval, align 4
  br label %return

if.end231:                                        ; preds = %if.then205
  %144 = load i8**, i8*** %argv.addr, align 4
  %incdec.ptr232 = getelementptr inbounds i8*, i8** %144, i32 1
  store i8** %incdec.ptr232, i8*** %argv.addr, align 4
  br label %if.end233

if.end233:                                        ; preds = %if.end231, %while.end203
  %145 = load i8**, i8*** %argv.addr, align 4
  %146 = load i8*, i8** %145, align 4
  %tobool234 = icmp ne i8* %146, null
  br i1 %tobool234, label %if.then235, label %if.end263

if.then235:                                       ; preds = %if.end233
  %147 = load i8**, i8*** %argv.addr, align 4
  %148 = load i8*, i8** %147, align 4
  %call236 = call i32 @fcgetcomm(i8* %148)
  store i32 %call236, i32* %last, align 4
  %149 = load i32, i32* %last, align 4
  %cmp237 = icmp eq i32 %149, -1
  br i1 %cmp237, label %if.then239, label %if.end261

if.then239:                                       ; preds = %if.then235
  br label %do.body240

do.body240:                                       ; preds = %if.then239
  %150 = load i32, i32* @queueing_enabled, align 4
  %dec241 = add nsw i32 %150, -1
  store i32 %dec241, i32* @queueing_enabled, align 4
  %tobool242 = icmp ne i32 %dec241, 0
  br i1 %tobool242, label %if.end259, label %if.then243

if.then243:                                       ; preds = %do.body240
  br label %do.body244

do.body244:                                       ; preds = %if.then243
  br label %while.cond245

while.cond245:                                    ; preds = %while.body248, %do.body244
  %151 = load i32, i32* @queue_front, align 4
  %152 = load i32, i32* @queue_rear, align 4
  %cmp246 = icmp ne i32 %151, %152
  br i1 %cmp246, label %while.body248, label %while.end257

while.body248:                                    ; preds = %while.cond245
  %153 = load i32, i32* @queue_front, align 4
  %add251 = add nsw i32 %153, 1
  %rem252 = srem i32 %add251, 128
  store i32 %rem252, i32* @queue_front, align 4
  %154 = load i32, i32* @queue_front, align 4
  %arrayidx253 = getelementptr inbounds [128 x %struct.__sigset_t], [128 x %struct.__sigset_t]* @signal_mask_queue, i32 0, i32 %154
  call void @signal_setmask(%struct.__sigset_t* sret %tmp254, %struct.__sigset_t* byval align 4 %arrayidx253)
  %155 = bitcast %struct.__sigset_t* %oset250 to i8*
  %156 = bitcast %struct.__sigset_t* %tmp254 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %155, i8* %156, i32 128, i32 4, i1 false)
  %157 = load i32, i32* @queue_front, align 4
  %arrayidx255 = getelementptr inbounds [128 x i32], [128 x i32]* @signal_queue, i32 0, i32 %157
  %158 = load i32, i32* %arrayidx255, align 4
  call void @zhandler(i32 %158)
  call void @signal_setmask(%struct.__sigset_t* sret %tmp256, %struct.__sigset_t* byval align 4 %oset250)
  br label %while.cond245

while.end257:                                     ; preds = %while.cond245
  br label %do.end258

do.end258:                                        ; preds = %while.end257
  br label %if.end259

if.end259:                                        ; preds = %do.end258, %do.body240
  br label %do.end260

do.end260:                                        ; preds = %if.end259
  store i32 1, i32* %retval, align 4
  br label %return

if.end261:                                        ; preds = %if.then235
  %159 = load i8**, i8*** %argv.addr, align 4
  %incdec.ptr262 = getelementptr inbounds i8*, i8** %159, i32 1
  store i8** %incdec.ptr262, i8*** %argv.addr, align 4
  br label %if.end263

if.end263:                                        ; preds = %if.end261, %if.end233
  %160 = load i8**, i8*** %argv.addr, align 4
  %161 = load i8*, i8** %160, align 4
  %tobool264 = icmp ne i8* %161, null
  br i1 %tobool264, label %if.then265, label %if.end287

if.then265:                                       ; preds = %if.end263
  br label %do.body266

do.body266:                                       ; preds = %if.then265
  %162 = load i32, i32* @queueing_enabled, align 4
  %dec267 = add nsw i32 %162, -1
  store i32 %dec267, i32* @queueing_enabled, align 4
  %tobool268 = icmp ne i32 %dec267, 0
  br i1 %tobool268, label %if.end285, label %if.then269

if.then269:                                       ; preds = %do.body266
  br label %do.body270

do.body270:                                       ; preds = %if.then269
  br label %while.cond271

while.cond271:                                    ; preds = %while.body274, %do.body270
  %163 = load i32, i32* @queue_front, align 4
  %164 = load i32, i32* @queue_rear, align 4
  %cmp272 = icmp ne i32 %163, %164
  br i1 %cmp272, label %while.body274, label %while.end283

while.body274:                                    ; preds = %while.cond271
  %165 = load i32, i32* @queue_front, align 4
  %add277 = add nsw i32 %165, 1
  %rem278 = srem i32 %add277, 128
  store i32 %rem278, i32* @queue_front, align 4
  %166 = load i32, i32* @queue_front, align 4
  %arrayidx279 = getelementptr inbounds [128 x %struct.__sigset_t], [128 x %struct.__sigset_t]* @signal_mask_queue, i32 0, i32 %166
  call void @signal_setmask(%struct.__sigset_t* sret %tmp280, %struct.__sigset_t* byval align 4 %arrayidx279)
  %167 = bitcast %struct.__sigset_t* %oset276 to i8*
  %168 = bitcast %struct.__sigset_t* %tmp280 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %167, i8* %168, i32 128, i32 4, i1 false)
  %169 = load i32, i32* @queue_front, align 4
  %arrayidx281 = getelementptr inbounds [128 x i32], [128 x i32]* @signal_queue, i32 0, i32 %169
  %170 = load i32, i32* %arrayidx281, align 4
  call void @zhandler(i32 %170)
  call void @signal_setmask(%struct.__sigset_t* sret %tmp282, %struct.__sigset_t* byval align 4 %oset276)
  br label %while.cond271

while.end283:                                     ; preds = %while.cond271
  br label %do.end284

do.end284:                                        ; preds = %while.end283
  br label %if.end285

if.end285:                                        ; preds = %do.end284, %do.body266
  br label %do.end286

do.end286:                                        ; preds = %if.end285
  call void (i8*, i8*, ...) @zwarnnam(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.35, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.10, i32 0, i32 0))
  store i32 1, i32* %retval, align 4
  br label %return

if.end287:                                        ; preds = %if.end263
  %171 = load i32, i32* %last, align 4
  %cmp288 = icmp eq i32 %171, -1
  br i1 %cmp288, label %if.then290, label %if.end325

if.then290:                                       ; preds = %if.end287
  %172 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind291 = getelementptr inbounds %struct.options, %struct.options* %172, i32 0, i32 0
  %arrayidx292 = getelementptr inbounds [128 x i8], [128 x i8]* %ind291, i32 0, i32 108
  %173 = load i8, i8* %arrayidx292, align 4
  %conv293 = zext i8 %173 to i32
  %cmp294 = icmp ne i32 %conv293, 0
  br i1 %cmp294, label %land.lhs.true296, label %if.else323

land.lhs.true296:                                 ; preds = %if.then290
  %174 = load i32, i32* %first, align 4
  %175 = load i32, i32* @curhist, align 4
  %cmp297 = icmp slt i32 %174, %175
  br i1 %cmp297, label %if.then299, label %if.else323

if.then299:                                       ; preds = %land.lhs.true296
  %176 = load i32, i32* getelementptr inbounds (%struct.histent, %struct.histent* @curline, i32 0, i32 8), align 4
  %177 = load i32, i32* @curhist, align 4
  %cmp300 = icmp eq i32 %176, %177
  br i1 %cmp300, label %cond.true302, label %cond.false304

cond.true302:                                     ; preds = %if.then299
  %178 = load i32, i32* @curhist, align 4
  %call303 = call i32 @addhistnum(i32 %178, i32 -1, i32 0)
  br label %cond.end305

cond.false304:                                    ; preds = %if.then299
  %179 = load i32, i32* @curhist, align 4
  br label %cond.end305

cond.end305:                                      ; preds = %cond.false304, %cond.true302
  %cond306 = phi i32 [ %call303, %cond.true302 ], [ %179, %cond.false304 ]
  store i32 %cond306, i32* %last, align 4
  %180 = load i32, i32* %last, align 4
  %181 = load %struct.histent*, %struct.histent** @hist_ring, align 4
  %tobool307 = icmp ne %struct.histent* %181, null
  br i1 %tobool307, label %cond.true308, label %cond.false309

cond.true308:                                     ; preds = %cond.end305
  %182 = load %struct.histent*, %struct.histent** @hist_ring, align 4
  %down = getelementptr inbounds %struct.histent, %struct.histent* %182, i32 0, i32 2
  %183 = load %struct.histent*, %struct.histent** %down, align 4
  %histnum = getelementptr inbounds %struct.histent, %struct.histent* %183, i32 0, i32 8
  %184 = load i32, i32* %histnum, align 4
  br label %cond.end310

cond.false309:                                    ; preds = %cond.end305
  %185 = load i32, i32* @curhist, align 4
  br label %cond.end310

cond.end310:                                      ; preds = %cond.false309, %cond.true308
  %cond311 = phi i32 [ %184, %cond.true308 ], [ %185, %cond.false309 ]
  %cmp312 = icmp slt i32 %180, %cond311
  br i1 %cmp312, label %if.then314, label %if.end322

if.then314:                                       ; preds = %cond.end310
  %186 = load %struct.histent*, %struct.histent** @hist_ring, align 4
  %tobool315 = icmp ne %struct.histent* %186, null
  br i1 %tobool315, label %cond.true316, label %cond.false319

cond.true316:                                     ; preds = %if.then314
  %187 = load %struct.histent*, %struct.histent** @hist_ring, align 4
  %down317 = getelementptr inbounds %struct.histent, %struct.histent* %187, i32 0, i32 2
  %188 = load %struct.histent*, %struct.histent** %down317, align 4
  %histnum318 = getelementptr inbounds %struct.histent, %struct.histent* %188, i32 0, i32 8
  %189 = load i32, i32* %histnum318, align 4
  br label %cond.end320

cond.false319:                                    ; preds = %if.then314
  %190 = load i32, i32* @curhist, align 4
  br label %cond.end320

cond.end320:                                      ; preds = %cond.false319, %cond.true316
  %cond321 = phi i32 [ %189, %cond.true316 ], [ %190, %cond.false319 ]
  store i32 %cond321, i32* %last, align 4
  br label %if.end322

if.end322:                                        ; preds = %cond.end320, %cond.end310
  br label %if.end324

if.else323:                                       ; preds = %land.lhs.true296, %if.then290
  %191 = load i32, i32* %first, align 4
  store i32 %191, i32* %last, align 4
  br label %if.end324

if.end324:                                        ; preds = %if.else323, %if.end322
  br label %if.end325

if.end325:                                        ; preds = %if.end324, %if.end287
  %192 = load i32, i32* %first, align 4
  %cmp326 = icmp eq i32 %192, -1
  br i1 %cmp326, label %if.then328, label %if.end348

if.then328:                                       ; preds = %if.end325
  %193 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind329 = getelementptr inbounds %struct.options, %struct.options* %193, i32 0, i32 0
  %arrayidx330 = getelementptr inbounds [128 x i8], [128 x i8]* %ind329, i32 0, i32 108
  %194 = load i8, i8* %arrayidx330, align 4
  %conv331 = zext i8 %194 to i32
  %cmp332 = icmp ne i32 %conv331, 0
  br i1 %cmp332, label %cond.true334, label %cond.false336

cond.true334:                                     ; preds = %if.then328
  %195 = load i32, i32* @curhist, align 4
  %call335 = call i32 @addhistnum(i32 %195, i32 -16, i32 0)
  br label %cond.end338

cond.false336:                                    ; preds = %if.then328
  %196 = load i32, i32* getelementptr inbounds (%struct.histent, %struct.histent* @curline, i32 0, i32 8), align 4
  %call337 = call i32 @addhistnum(i32 %196, i32 -1, i32 0)
  br label %cond.end338

cond.end338:                                      ; preds = %cond.false336, %cond.true334
  %cond339 = phi i32 [ %call335, %cond.true334 ], [ %call337, %cond.false336 ]
  store i32 %cond339, i32* %first, align 4
  %197 = load i32, i32* %first, align 4
  %cmp340 = icmp slt i32 %197, 1
  br i1 %cmp340, label %if.then342, label %if.end343

if.then342:                                       ; preds = %cond.end338
  store i32 1, i32* %first, align 4
  br label %if.end343

if.end343:                                        ; preds = %if.then342, %cond.end338
  %198 = load i32, i32* %last, align 4
  %199 = load i32, i32* %first, align 4
  %cmp344 = icmp slt i32 %198, %199
  br i1 %cmp344, label %if.then346, label %if.end347

if.then346:                                       ; preds = %if.end343
  %200 = load i32, i32* %first, align 4
  store i32 %200, i32* %last, align 4
  br label %if.end347

if.end347:                                        ; preds = %if.then346, %if.end343
  br label %if.end348

if.end348:                                        ; preds = %if.end347, %if.end325
  %201 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind349 = getelementptr inbounds %struct.options, %struct.options* %201, i32 0, i32 0
  %arrayidx350 = getelementptr inbounds [128 x i8], [128 x i8]* %ind349, i32 0, i32 108
  %202 = load i8, i8* %arrayidx350, align 4
  %conv351 = zext i8 %202 to i32
  %cmp352 = icmp ne i32 %conv351, 0
  br i1 %cmp352, label %if.then354, label %if.else377

if.then354:                                       ; preds = %if.end348
  %203 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 4
  %204 = load %struct.options*, %struct.options** %ops.addr, align 4
  %205 = load i32, i32* %first, align 4
  %206 = load i32, i32* %last, align 4
  %207 = load %struct.asgment*, %struct.asgment** %asgf, align 4
  %208 = load %struct.patprog*, %struct.patprog** %pprog, align 4
  %call355 = call i32 @fclist(%struct._IO_FILE* %203, %struct.options* %204, i32 %205, i32 %206, %struct.asgment* %207, %struct.patprog* %208, i32 0)
  store i32 %call355, i32* %retval1, align 4
  br label %do.body356

do.body356:                                       ; preds = %if.then354
  %209 = load i32, i32* @queueing_enabled, align 4
  %dec357 = add nsw i32 %209, -1
  store i32 %dec357, i32* @queueing_enabled, align 4
  %tobool358 = icmp ne i32 %dec357, 0
  br i1 %tobool358, label %if.end375, label %if.then359

if.then359:                                       ; preds = %do.body356
  br label %do.body360

do.body360:                                       ; preds = %if.then359
  br label %while.cond361

while.cond361:                                    ; preds = %while.body364, %do.body360
  %210 = load i32, i32* @queue_front, align 4
  %211 = load i32, i32* @queue_rear, align 4
  %cmp362 = icmp ne i32 %210, %211
  br i1 %cmp362, label %while.body364, label %while.end373

while.body364:                                    ; preds = %while.cond361
  %212 = load i32, i32* @queue_front, align 4
  %add367 = add nsw i32 %212, 1
  %rem368 = srem i32 %add367, 128
  store i32 %rem368, i32* @queue_front, align 4
  %213 = load i32, i32* @queue_front, align 4
  %arrayidx369 = getelementptr inbounds [128 x %struct.__sigset_t], [128 x %struct.__sigset_t]* @signal_mask_queue, i32 0, i32 %213
  call void @signal_setmask(%struct.__sigset_t* sret %tmp370, %struct.__sigset_t* byval align 4 %arrayidx369)
  %214 = bitcast %struct.__sigset_t* %oset366 to i8*
  %215 = bitcast %struct.__sigset_t* %tmp370 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %214, i8* %215, i32 128, i32 4, i1 false)
  %216 = load i32, i32* @queue_front, align 4
  %arrayidx371 = getelementptr inbounds [128 x i32], [128 x i32]* @signal_queue, i32 0, i32 %216
  %217 = load i32, i32* %arrayidx371, align 4
  call void @zhandler(i32 %217)
  call void @signal_setmask(%struct.__sigset_t* sret %tmp372, %struct.__sigset_t* byval align 4 %oset366)
  br label %while.cond361

while.end373:                                     ; preds = %while.cond361
  br label %do.end374

do.end374:                                        ; preds = %while.end373
  br label %if.end375

if.end375:                                        ; preds = %do.end374, %do.body356
  br label %do.end376

do.end376:                                        ; preds = %if.end375
  br label %if.end532

if.else377:                                       ; preds = %if.end348
  store i32 1, i32* %retval1, align 4
  %call381 = call i32 @gettempfile(i8* null, i32 1, i8** %fil)
  store i32 %call381, i32* %tempfd, align 4
  %cmp382 = icmp slt i32 %call381, 0
  br i1 %cmp382, label %if.then388, label %lor.lhs.false384

lor.lhs.false384:                                 ; preds = %if.else377
  %218 = load i32, i32* %tempfd, align 4
  %call385 = call %struct._IO_FILE* @fdopen(i32 %218, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.41, i32 0, i32 0))
  store %struct._IO_FILE* %call385, %struct._IO_FILE** %out, align 4
  %cmp386 = icmp eq %struct._IO_FILE* %call385, null
  br i1 %cmp386, label %if.then388, label %if.else411

if.then388:                                       ; preds = %lor.lhs.false384, %if.else377
  br label %do.body389

do.body389:                                       ; preds = %if.then388
  %219 = load i32, i32* @queueing_enabled, align 4
  %dec390 = add nsw i32 %219, -1
  store i32 %dec390, i32* @queueing_enabled, align 4
  %tobool391 = icmp ne i32 %dec390, 0
  br i1 %tobool391, label %if.end408, label %if.then392

if.then392:                                       ; preds = %do.body389
  br label %do.body393

do.body393:                                       ; preds = %if.then392
  br label %while.cond394

while.cond394:                                    ; preds = %while.body397, %do.body393
  %220 = load i32, i32* @queue_front, align 4
  %221 = load i32, i32* @queue_rear, align 4
  %cmp395 = icmp ne i32 %220, %221
  br i1 %cmp395, label %while.body397, label %while.end406

while.body397:                                    ; preds = %while.cond394
  %222 = load i32, i32* @queue_front, align 4
  %add400 = add nsw i32 %222, 1
  %rem401 = srem i32 %add400, 128
  store i32 %rem401, i32* @queue_front, align 4
  %223 = load i32, i32* @queue_front, align 4
  %arrayidx402 = getelementptr inbounds [128 x %struct.__sigset_t], [128 x %struct.__sigset_t]* @signal_mask_queue, i32 0, i32 %223
  call void @signal_setmask(%struct.__sigset_t* sret %tmp403, %struct.__sigset_t* byval align 4 %arrayidx402)
  %224 = bitcast %struct.__sigset_t* %oset399 to i8*
  %225 = bitcast %struct.__sigset_t* %tmp403 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %224, i8* %225, i32 128, i32 4, i1 false)
  %226 = load i32, i32* @queue_front, align 4
  %arrayidx404 = getelementptr inbounds [128 x i32], [128 x i32]* @signal_queue, i32 0, i32 %226
  %227 = load i32, i32* %arrayidx404, align 4
  call void @zhandler(i32 %227)
  call void @signal_setmask(%struct.__sigset_t* sret %tmp405, %struct.__sigset_t* byval align 4 %oset399)
  br label %while.cond394

while.end406:                                     ; preds = %while.cond394
  br label %do.end407

do.end407:                                        ; preds = %while.end406
  br label %if.end408

if.end408:                                        ; preds = %do.end407, %do.body389
  br label %do.end409

do.end409:                                        ; preds = %if.end408
  %call410 = call i32* @__errno_location()
  %228 = load i32, i32* %call410, align 4
  call void (i8*, i8*, ...) @zwarnnam(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.35, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.42, i32 0, i32 0), i32 %228)
  br label %if.end530

if.else411:                                       ; preds = %lor.lhs.false384
  %229 = load i32, i32* %last, align 4
  %230 = load i32, i32* @curhist, align 4
  %cmp412 = icmp sge i32 %229, %230
  br i1 %cmp412, label %if.then414, label %if.end442

if.then414:                                       ; preds = %if.else411
  %231 = load i32, i32* @curhist, align 4
  %sub = sub nsw i32 %231, 1
  store i32 %sub, i32* %last, align 4
  %232 = load i32, i32* %first, align 4
  %233 = load i32, i32* %last, align 4
  %cmp415 = icmp sgt i32 %232, %233
  br i1 %cmp415, label %if.then417, label %if.end441

if.then417:                                       ; preds = %if.then414
  br label %do.body418

do.body418:                                       ; preds = %if.then417
  %234 = load i32, i32* @queueing_enabled, align 4
  %dec419 = add nsw i32 %234, -1
  store i32 %dec419, i32* @queueing_enabled, align 4
  %tobool420 = icmp ne i32 %dec419, 0
  br i1 %tobool420, label %if.end437, label %if.then421

if.then421:                                       ; preds = %do.body418
  br label %do.body422

do.body422:                                       ; preds = %if.then421
  br label %while.cond423

while.cond423:                                    ; preds = %while.body426, %do.body422
  %235 = load i32, i32* @queue_front, align 4
  %236 = load i32, i32* @queue_rear, align 4
  %cmp424 = icmp ne i32 %235, %236
  br i1 %cmp424, label %while.body426, label %while.end435

while.body426:                                    ; preds = %while.cond423
  %237 = load i32, i32* @queue_front, align 4
  %add429 = add nsw i32 %237, 1
  %rem430 = srem i32 %add429, 128
  store i32 %rem430, i32* @queue_front, align 4
  %238 = load i32, i32* @queue_front, align 4
  %arrayidx431 = getelementptr inbounds [128 x %struct.__sigset_t], [128 x %struct.__sigset_t]* @signal_mask_queue, i32 0, i32 %238
  call void @signal_setmask(%struct.__sigset_t* sret %tmp432, %struct.__sigset_t* byval align 4 %arrayidx431)
  %239 = bitcast %struct.__sigset_t* %oset428 to i8*
  %240 = bitcast %struct.__sigset_t* %tmp432 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %239, i8* %240, i32 128, i32 4, i1 false)
  %241 = load i32, i32* @queue_front, align 4
  %arrayidx433 = getelementptr inbounds [128 x i32], [128 x i32]* @signal_queue, i32 0, i32 %241
  %242 = load i32, i32* %arrayidx433, align 4
  call void @zhandler(i32 %242)
  call void @signal_setmask(%struct.__sigset_t* sret %tmp434, %struct.__sigset_t* byval align 4 %oset428)
  br label %while.cond423

while.end435:                                     ; preds = %while.cond423
  br label %do.end436

do.end436:                                        ; preds = %while.end435
  br label %if.end437

if.end437:                                        ; preds = %do.end436, %do.body418
  br label %do.end438

do.end438:                                        ; preds = %if.end437
  call void (i8*, i8*, ...) @zwarnnam(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.35, i32 0, i32 0), i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.43, i32 0, i32 0))
  %243 = load %struct._IO_FILE*, %struct._IO_FILE** %out, align 4
  %call439 = call i32 @fclose(%struct._IO_FILE* %243)
  %244 = load i8*, i8** %fil, align 4
  %call440 = call i32 @unlink(i8* %244)
  store i32 1, i32* %retval, align 4
  br label %return

if.end441:                                        ; preds = %if.then414
  br label %if.end442

if.end442:                                        ; preds = %if.end441, %if.else411
  %245 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind443 = getelementptr inbounds %struct.options, %struct.options* %245, i32 0, i32 0
  %arrayidx444 = getelementptr inbounds [128 x i8], [128 x i8]* %ind443, i32 0, i32 110
  store i8 1, i8* %arrayidx444, align 2
  %246 = load %struct._IO_FILE*, %struct._IO_FILE** %out, align 4
  %247 = load %struct.options*, %struct.options** %ops.addr, align 4
  %248 = load i32, i32* %first, align 4
  %249 = load i32, i32* %last, align 4
  %250 = load %struct.asgment*, %struct.asgment** %asgf, align 4
  %251 = load %struct.patprog*, %struct.patprog** %pprog, align 4
  %call445 = call i32 @fclist(%struct._IO_FILE* %246, %struct.options* %247, i32 %248, i32 %249, %struct.asgment* %250, %struct.patprog* %251, i32 1)
  %tobool446 = icmp ne i32 %call445, 0
  br i1 %tobool446, label %if.else507, label %if.then447

if.then447:                                       ; preds = %if.end442
  %252 = load i32, i32* %func.addr, align 4
  %cmp449 = icmp eq i32 %252, 17
  br i1 %cmp449, label %if.then451, label %if.else452

if.then451:                                       ; preds = %if.then447
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.44, i32 0, i32 0), i8** %editor, align 4
  br label %if.end467

if.else452:                                       ; preds = %if.then447
  %253 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind453 = getelementptr inbounds %struct.options, %struct.options* %253, i32 0, i32 0
  %arrayidx454 = getelementptr inbounds [128 x i8], [128 x i8]* %ind453, i32 0, i32 101
  %254 = load i8, i8* %arrayidx454, align 1
  %conv455 = zext i8 %254 to i32
  %cmp456 = icmp sgt i32 %conv455, 3
  br i1 %cmp456, label %if.then458, label %if.else464

if.then458:                                       ; preds = %if.else452
  %255 = load %struct.options*, %struct.options** %ops.addr, align 4
  %args = getelementptr inbounds %struct.options, %struct.options* %255, i32 0, i32 1
  %256 = load i8**, i8*** %args, align 4
  %257 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind459 = getelementptr inbounds %struct.options, %struct.options* %257, i32 0, i32 0
  %arrayidx460 = getelementptr inbounds [128 x i8], [128 x i8]* %ind459, i32 0, i32 101
  %258 = load i8, i8* %arrayidx460, align 1
  %conv461 = zext i8 %258 to i32
  %shr = ashr i32 %conv461, 2
  %sub462 = sub nsw i32 %shr, 1
  %arrayidx463 = getelementptr inbounds i8*, i8** %256, i32 %sub462
  %259 = load i8*, i8** %arrayidx463, align 4
  store i8* %259, i8** %editor, align 4
  br label %if.end466

if.else464:                                       ; preds = %if.else452
  %call465 = call i8* @getsparam(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.45, i32 0, i32 0))
  store i8* %call465, i8** %editor, align 4
  br label %if.end466

if.end466:                                        ; preds = %if.else464, %if.then458
  br label %if.end467

if.end467:                                        ; preds = %if.end466, %if.then451
  %260 = load i8*, i8** %editor, align 4
  %tobool468 = icmp ne i8* %260, null
  br i1 %tobool468, label %if.end471, label %if.then469

if.then469:                                       ; preds = %if.end467
  %call470 = call i8* @getsparam(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.46, i32 0, i32 0))
  store i8* %call470, i8** %editor, align 4
  br label %if.end471

if.end471:                                        ; preds = %if.then469, %if.end467
  %261 = load i8*, i8** %editor, align 4
  %tobool472 = icmp ne i8* %261, null
  br i1 %tobool472, label %if.end474, label %if.then473

if.then473:                                       ; preds = %if.end471
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.47, i32 0, i32 0), i8** %editor, align 4
  br label %if.end474

if.end474:                                        ; preds = %if.then473, %if.end471
  br label %do.body475

do.body475:                                       ; preds = %if.end474
  %262 = load i32, i32* @queueing_enabled, align 4
  %dec476 = add nsw i32 %262, -1
  store i32 %dec476, i32* @queueing_enabled, align 4
  %tobool477 = icmp ne i32 %dec476, 0
  br i1 %tobool477, label %if.end494, label %if.then478

if.then478:                                       ; preds = %do.body475
  br label %do.body479

do.body479:                                       ; preds = %if.then478
  br label %while.cond480

while.cond480:                                    ; preds = %while.body483, %do.body479
  %263 = load i32, i32* @queue_front, align 4
  %264 = load i32, i32* @queue_rear, align 4
  %cmp481 = icmp ne i32 %263, %264
  br i1 %cmp481, label %while.body483, label %while.end492

while.body483:                                    ; preds = %while.cond480
  %265 = load i32, i32* @queue_front, align 4
  %add486 = add nsw i32 %265, 1
  %rem487 = srem i32 %add486, 128
  store i32 %rem487, i32* @queue_front, align 4
  %266 = load i32, i32* @queue_front, align 4
  %arrayidx488 = getelementptr inbounds [128 x %struct.__sigset_t], [128 x %struct.__sigset_t]* @signal_mask_queue, i32 0, i32 %266
  call void @signal_setmask(%struct.__sigset_t* sret %tmp489, %struct.__sigset_t* byval align 4 %arrayidx488)
  %267 = bitcast %struct.__sigset_t* %oset485 to i8*
  %268 = bitcast %struct.__sigset_t* %tmp489 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %267, i8* %268, i32 128, i32 4, i1 false)
  %269 = load i32, i32* @queue_front, align 4
  %arrayidx490 = getelementptr inbounds [128 x i32], [128 x i32]* @signal_queue, i32 0, i32 %269
  %270 = load i32, i32* %arrayidx490, align 4
  call void @zhandler(i32 %270)
  call void @signal_setmask(%struct.__sigset_t* sret %tmp491, %struct.__sigset_t* byval align 4 %oset485)
  br label %while.cond480

while.end492:                                     ; preds = %while.cond480
  br label %do.end493

do.end493:                                        ; preds = %while.end492
  br label %if.end494

if.end494:                                        ; preds = %do.end493, %do.body475
  br label %do.end495

do.end495:                                        ; preds = %if.end494
  %271 = load i8*, i8** %editor, align 4
  %272 = load i8*, i8** %fil, align 4
  %call496 = call i32 @fcedit(i8* %271, i8* %272)
  %tobool497 = icmp ne i32 %call496, 0
  br i1 %tobool497, label %if.then498, label %if.end506

if.then498:                                       ; preds = %do.end495
  %273 = load i8*, i8** %fil, align 4
  %call499 = call i32 @stuff(i8* %273)
  %tobool500 = icmp ne i32 %call499, 0
  br i1 %tobool500, label %if.then501, label %if.else503

if.then501:                                       ; preds = %if.then498
  %call502 = call i32* @__errno_location()
  %274 = load i32, i32* %call502, align 4
  %275 = load i8*, i8** %fil, align 4
  call void (i8*, i8*, ...) @zwarnnam(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.35, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.48, i32 0, i32 0), i32 %274, i8* %275)
  br label %if.end505

if.else503:                                       ; preds = %if.then498
  %call504 = call i32 @loop(i32 0, i32 1)
  %276 = load i32, i32* @lastval, align 4
  store i32 %276, i32* %retval1, align 4
  br label %if.end505

if.end505:                                        ; preds = %if.else503, %if.then501
  br label %if.end506

if.end506:                                        ; preds = %if.end505, %do.end495
  br label %if.end529

if.else507:                                       ; preds = %if.end442
  br label %do.body508

do.body508:                                       ; preds = %if.else507
  %277 = load i32, i32* @queueing_enabled, align 4
  %dec509 = add nsw i32 %277, -1
  store i32 %dec509, i32* @queueing_enabled, align 4
  %tobool510 = icmp ne i32 %dec509, 0
  br i1 %tobool510, label %if.end527, label %if.then511

if.then511:                                       ; preds = %do.body508
  br label %do.body512

do.body512:                                       ; preds = %if.then511
  br label %while.cond513

while.cond513:                                    ; preds = %while.body516, %do.body512
  %278 = load i32, i32* @queue_front, align 4
  %279 = load i32, i32* @queue_rear, align 4
  %cmp514 = icmp ne i32 %278, %279
  br i1 %cmp514, label %while.body516, label %while.end525

while.body516:                                    ; preds = %while.cond513
  %280 = load i32, i32* @queue_front, align 4
  %add519 = add nsw i32 %280, 1
  %rem520 = srem i32 %add519, 128
  store i32 %rem520, i32* @queue_front, align 4
  %281 = load i32, i32* @queue_front, align 4
  %arrayidx521 = getelementptr inbounds [128 x %struct.__sigset_t], [128 x %struct.__sigset_t]* @signal_mask_queue, i32 0, i32 %281
  call void @signal_setmask(%struct.__sigset_t* sret %tmp522, %struct.__sigset_t* byval align 4 %arrayidx521)
  %282 = bitcast %struct.__sigset_t* %oset518 to i8*
  %283 = bitcast %struct.__sigset_t* %tmp522 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %282, i8* %283, i32 128, i32 4, i1 false)
  %284 = load i32, i32* @queue_front, align 4
  %arrayidx523 = getelementptr inbounds [128 x i32], [128 x i32]* @signal_queue, i32 0, i32 %284
  %285 = load i32, i32* %arrayidx523, align 4
  call void @zhandler(i32 %285)
  call void @signal_setmask(%struct.__sigset_t* sret %tmp524, %struct.__sigset_t* byval align 4 %oset518)
  br label %while.cond513

while.end525:                                     ; preds = %while.cond513
  br label %do.end526

do.end526:                                        ; preds = %while.end525
  br label %if.end527

if.end527:                                        ; preds = %do.end526, %do.body508
  br label %do.end528

do.end528:                                        ; preds = %if.end527
  br label %if.end529

if.end529:                                        ; preds = %do.end528, %if.end506
  br label %if.end530

if.end530:                                        ; preds = %if.end529, %do.end409
  %286 = load i8*, i8** %fil, align 4
  %call531 = call i32 @unlink(i8* %286)
  br label %if.end532

if.end532:                                        ; preds = %if.end530, %do.end376
  %287 = load i32, i32* %retval1, align 4
  store i32 %287, i32* %retval, align 4
  br label %return

return:                                           ; preds = %if.end532, %do.end438, %do.end286, %do.end260, %do.end230, %if.then192, %do.end182, %do.end158, %do.end124, %do.end90, %if.then66, %if.end52, %if.then51, %if.end42, %if.then30, %if.then23, %if.then19, %if.then13
  %288 = load i32, i32* %retval, align 4
  ret i32 %288
}

declare i32 @zstrtol(i8*, i8**, i32) #1

declare i32 @pushhiststack(i8*, i32, i32, i32) #1

declare void @readhistfile(i8*, i32, i32) #1

declare i32 @saveandpophiststack(i32, i32) #1

declare void @savehistfile(i8*, i32, i32) #1

declare i32 @equalsplit(i8*, i8**) #1

; Function Attrs: noinline nounwind
define internal i32 @fcgetcomm(i8* %s) #0 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca i8*, align 4
  %cmd = alloca i32, align 4
  store i8* %s, i8** %s.addr, align 4
  %0 = load i8*, i8** %s.addr, align 4
  %call = call i32 @atoi(i8* %0)
  store i32 %call, i32* %cmd, align 4
  %cmp = icmp ne i32 %call, 0
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %1 = load i8*, i8** %s.addr, align 4
  %2 = load i8, i8* %1, align 1
  %conv = sext i8 %2 to i32
  %cmp1 = icmp eq i32 %conv, 48
  br i1 %cmp1, label %if.then, label %if.end11

if.then:                                          ; preds = %lor.lhs.false, %entry
  %3 = load i32, i32* %cmd, align 4
  %cmp3 = icmp slt i32 %3, 0
  br i1 %cmp3, label %if.then5, label %if.end

if.then5:                                         ; preds = %if.then
  %4 = load i32, i32* getelementptr inbounds (%struct.histent, %struct.histent* @curline, i32 0, i32 8), align 4
  %5 = load i32, i32* %cmd, align 4
  %call6 = call i32 @addhistnum(i32 %4, i32 %5, i32 16)
  store i32 %call6, i32* %cmd, align 4
  br label %if.end

if.end:                                           ; preds = %if.then5, %if.then
  %6 = load i32, i32* %cmd, align 4
  %cmp7 = icmp slt i32 %6, 0
  br i1 %cmp7, label %if.then9, label %if.end10

if.then9:                                         ; preds = %if.end
  store i32 0, i32* %cmd, align 4
  br label %if.end10

if.end10:                                         ; preds = %if.then9, %if.end
  %7 = load i32, i32* %cmd, align 4
  store i32 %7, i32* %retval, align 4
  br label %return

if.end11:                                         ; preds = %lor.lhs.false
  %8 = load i8*, i8** %s.addr, align 4
  %call12 = call i32 @hcomsearch(i8* %8)
  store i32 %call12, i32* %cmd, align 4
  %9 = load i32, i32* %cmd, align 4
  %cmp13 = icmp eq i32 %9, -1
  br i1 %cmp13, label %if.then15, label %if.end16

if.then15:                                        ; preds = %if.end11
  %10 = load i8*, i8** %s.addr, align 4
  call void (i8*, i8*, ...) @zwarnnam(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.35, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.300, i32 0, i32 0), i8* %10)
  br label %if.end16

if.end16:                                         ; preds = %if.then15, %if.end11
  %11 = load i32, i32* %cmd, align 4
  store i32 %11, i32* %retval, align 4
  br label %return

return:                                           ; preds = %if.end16, %if.end10
  %12 = load i32, i32* %retval, align 4
  ret i32 %12
}

declare i32 @addhistnum(i32, i32, i32) #1

; Function Attrs: noinline nounwind
define internal i32 @fclist(%struct._IO_FILE* %f, %struct.options* %ops, i32 %first, i32 %last, %struct.asgment* %subs, %struct.patprog* %pprog, i32 %is_command) #0 {
entry:
  %retval = alloca i32, align 4
  %f.addr = alloca %struct._IO_FILE*, align 4
  %ops.addr = alloca %struct.options*, align 4
  %first.addr = alloca i32, align 4
  %last.addr = alloca i32, align 4
  %subs.addr = alloca %struct.asgment*, align 4
  %pprog.addr = alloca %struct.patprog*, align 4
  %is_command.addr = alloca i32, align 4
  %fclistdone = alloca i32, align 4
  %xflags = alloca i32, align 4
  %tmp = alloca i32, align 4
  %s = alloca i8*, align 4
  %tdfmt = alloca i8*, align 4
  %timebuf = alloca i8*, align 4
  %ent = alloca %struct.histent*, align 4
  %buf = alloca [12 x i8], align 1
  %buf148 = alloca [12 x i8], align 1
  %ltm = alloca %struct.tm*, align 4
  %len = alloca i32, align 4
  %diff = alloca i32, align 4
  %len197 = alloca i32, align 4
  store %struct._IO_FILE* %f, %struct._IO_FILE** %f.addr, align 4
  store %struct.options* %ops, %struct.options** %ops.addr, align 4
  store i32 %first, i32* %first.addr, align 4
  store i32 %last, i32* %last.addr, align 4
  store %struct.asgment* %subs, %struct.asgment** %subs.addr, align 4
  store %struct.patprog* %pprog, %struct.patprog** %pprog.addr, align 4
  store i32 %is_command, i32* %is_command.addr, align 4
  store i32 0, i32* %fclistdone, align 4
  store i32 0, i32* %xflags, align 4
  %0 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind = getelementptr inbounds %struct.options, %struct.options* %0, i32 0, i32 0
  %arrayidx = getelementptr inbounds [128 x i8], [128 x i8]* %ind, i32 0, i32 114
  %1 = load i8, i8* %arrayidx, align 2
  %conv = zext i8 %1 to i32
  %cmp = icmp ne i32 %conv, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %2 = load i32, i32* %last.addr, align 4
  store i32 %2, i32* %tmp, align 4
  %3 = load i32, i32* %first.addr, align 4
  store i32 %3, i32* %last.addr, align 4
  %4 = load i32, i32* %tmp, align 4
  store i32 %4, i32* %first.addr, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %5 = load i32, i32* %is_command.addr, align 4
  %tobool = icmp ne i32 %5, 0
  br i1 %tobool, label %land.lhs.true, label %if.end13

land.lhs.true:                                    ; preds = %if.end
  %6 = load i32, i32* %first.addr, align 4
  %7 = load i32, i32* %last.addr, align 4
  %cmp6 = icmp sgt i32 %6, %7
  br i1 %cmp6, label %if.then8, label %if.end13

if.then8:                                         ; preds = %land.lhs.true
  call void (i8*, i8*, ...) @zwarnnam(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.35, i32 0, i32 0), i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.301, i32 0, i32 0))
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** %f.addr, align 4
  %9 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 4
  %cmp9 = icmp ne %struct._IO_FILE* %8, %9
  br i1 %cmp9, label %if.then11, label %if.end12

if.then11:                                        ; preds = %if.then8
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** %f.addr, align 4
  %call = call i32 @fclose(%struct._IO_FILE* %10)
  br label %if.end12

if.end12:                                         ; preds = %if.then11, %if.then8
  store i32 1, i32* %retval, align 4
  br label %return

if.end13:                                         ; preds = %land.lhs.true, %if.end
  %11 = load i32, i32* %first.addr, align 4
  %12 = load i32, i32* %first.addr, align 4
  %13 = load i32, i32* %last.addr, align 4
  %cmp14 = icmp slt i32 %12, %13
  %cond = select i1 %cmp14, i32 1, i32 -1
  %call16 = call %struct.histent* @gethistent(i32 %11, i32 %cond)
  store %struct.histent* %call16, %struct.histent** %ent, align 4
  %14 = load %struct.histent*, %struct.histent** %ent, align 4
  %tobool17 = icmp ne %struct.histent* %14, null
  br i1 %tobool17, label %lor.lhs.false, label %if.then25

lor.lhs.false:                                    ; preds = %if.end13
  %15 = load i32, i32* %first.addr, align 4
  %16 = load i32, i32* %last.addr, align 4
  %cmp18 = icmp slt i32 %15, %16
  br i1 %cmp18, label %cond.true, label %cond.false

cond.true:                                        ; preds = %lor.lhs.false
  %17 = load %struct.histent*, %struct.histent** %ent, align 4
  %histnum = getelementptr inbounds %struct.histent, %struct.histent* %17, i32 0, i32 8
  %18 = load i32, i32* %histnum, align 4
  %19 = load i32, i32* %last.addr, align 4
  %cmp20 = icmp sgt i32 %18, %19
  br i1 %cmp20, label %if.then25, label %if.end37

cond.false:                                       ; preds = %lor.lhs.false
  %20 = load %struct.histent*, %struct.histent** %ent, align 4
  %histnum22 = getelementptr inbounds %struct.histent, %struct.histent* %20, i32 0, i32 8
  %21 = load i32, i32* %histnum22, align 4
  %22 = load i32, i32* %last.addr, align 4
  %cmp23 = icmp slt i32 %21, %22
  br i1 %cmp23, label %if.then25, label %if.end37

if.then25:                                        ; preds = %cond.false, %cond.true, %if.end13
  %23 = load i32, i32* %first.addr, align 4
  %24 = load i32, i32* %last.addr, align 4
  %cmp26 = icmp eq i32 %23, %24
  br i1 %cmp26, label %if.then28, label %if.else

if.then28:                                        ; preds = %if.then25
  %arraydecay = getelementptr inbounds [12 x i8], [12 x i8]* %buf, i32 0, i32 0
  %25 = load i32, i32* %first.addr, align 4
  call void @convbase(i8* %arraydecay, i32 %25, i32 10)
  %arraydecay30 = getelementptr inbounds [12 x i8], [12 x i8]* %buf, i32 0, i32 0
  call void (i8*, i8*, ...) @zwarnnam(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.35, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.302, i32 0, i32 0), i8* %arraydecay30)
  br label %if.end31

if.else:                                          ; preds = %if.then25
  call void (i8*, i8*, ...) @zwarnnam(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.35, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.303, i32 0, i32 0))
  br label %if.end31

if.end31:                                         ; preds = %if.else, %if.then28
  %26 = load %struct._IO_FILE*, %struct._IO_FILE** %f.addr, align 4
  %27 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 4
  %cmp32 = icmp ne %struct._IO_FILE* %26, %27
  br i1 %cmp32, label %if.then34, label %if.end36

if.then34:                                        ; preds = %if.end31
  %28 = load %struct._IO_FILE*, %struct._IO_FILE** %f.addr, align 4
  %call35 = call i32 @fclose(%struct._IO_FILE* %28)
  br label %if.end36

if.end36:                                         ; preds = %if.then34, %if.end31
  store i32 1, i32* %retval, align 4
  br label %return

if.end37:                                         ; preds = %cond.false, %cond.true
  %29 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind38 = getelementptr inbounds %struct.options, %struct.options* %29, i32 0, i32 0
  %arrayidx39 = getelementptr inbounds [128 x i8], [128 x i8]* %ind38, i32 0, i32 100
  %30 = load i8, i8* %arrayidx39, align 4
  %conv40 = zext i8 %30 to i32
  %cmp41 = icmp ne i32 %conv40, 0
  br i1 %cmp41, label %if.then67, label %lor.lhs.false43

lor.lhs.false43:                                  ; preds = %if.end37
  %31 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind44 = getelementptr inbounds %struct.options, %struct.options* %31, i32 0, i32 0
  %arrayidx45 = getelementptr inbounds [128 x i8], [128 x i8]* %ind44, i32 0, i32 102
  %32 = load i8, i8* %arrayidx45, align 2
  %conv46 = zext i8 %32 to i32
  %cmp47 = icmp ne i32 %conv46, 0
  br i1 %cmp47, label %if.then67, label %lor.lhs.false49

lor.lhs.false49:                                  ; preds = %lor.lhs.false43
  %33 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind50 = getelementptr inbounds %struct.options, %struct.options* %33, i32 0, i32 0
  %arrayidx51 = getelementptr inbounds [128 x i8], [128 x i8]* %ind50, i32 0, i32 69
  %34 = load i8, i8* %arrayidx51, align 1
  %conv52 = zext i8 %34 to i32
  %cmp53 = icmp ne i32 %conv52, 0
  br i1 %cmp53, label %if.then67, label %lor.lhs.false55

lor.lhs.false55:                                  ; preds = %lor.lhs.false49
  %35 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind56 = getelementptr inbounds %struct.options, %struct.options* %35, i32 0, i32 0
  %arrayidx57 = getelementptr inbounds [128 x i8], [128 x i8]* %ind56, i32 0, i32 105
  %36 = load i8, i8* %arrayidx57, align 1
  %conv58 = zext i8 %36 to i32
  %cmp59 = icmp ne i32 %conv58, 0
  br i1 %cmp59, label %if.then67, label %lor.lhs.false61

lor.lhs.false61:                                  ; preds = %lor.lhs.false55
  %37 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind62 = getelementptr inbounds %struct.options, %struct.options* %37, i32 0, i32 0
  %arrayidx63 = getelementptr inbounds [128 x i8], [128 x i8]* %ind62, i32 0, i32 116
  %38 = load i8, i8* %arrayidx63, align 4
  %conv64 = zext i8 %38 to i32
  %cmp65 = icmp ne i32 %conv64, 0
  br i1 %cmp65, label %if.then67, label %if.else105

if.then67:                                        ; preds = %lor.lhs.false61, %lor.lhs.false55, %lor.lhs.false49, %lor.lhs.false43, %if.end37
  %39 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind68 = getelementptr inbounds %struct.options, %struct.options* %39, i32 0, i32 0
  %arrayidx69 = getelementptr inbounds [128 x i8], [128 x i8]* %ind68, i32 0, i32 116
  %40 = load i8, i8* %arrayidx69, align 4
  %conv70 = zext i8 %40 to i32
  %cmp71 = icmp ne i32 %conv70, 0
  br i1 %cmp71, label %if.then73, label %if.else78

if.then73:                                        ; preds = %if.then67
  %41 = load %struct.options*, %struct.options** %ops.addr, align 4
  %args = getelementptr inbounds %struct.options, %struct.options* %41, i32 0, i32 1
  %42 = load i8**, i8*** %args, align 4
  %43 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind74 = getelementptr inbounds %struct.options, %struct.options* %43, i32 0, i32 0
  %arrayidx75 = getelementptr inbounds [128 x i8], [128 x i8]* %ind74, i32 0, i32 116
  %44 = load i8, i8* %arrayidx75, align 4
  %conv76 = zext i8 %44 to i32
  %shr = ashr i32 %conv76, 2
  %sub = sub nsw i32 %shr, 1
  %arrayidx77 = getelementptr inbounds i8*, i8** %42, i32 %sub
  %45 = load i8*, i8** %arrayidx77, align 4
  store i8* %45, i8** %tdfmt, align 4
  br label %if.end103

if.else78:                                        ; preds = %if.then67
  %46 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind79 = getelementptr inbounds %struct.options, %struct.options* %46, i32 0, i32 0
  %arrayidx80 = getelementptr inbounds [128 x i8], [128 x i8]* %ind79, i32 0, i32 105
  %47 = load i8, i8* %arrayidx80, align 1
  %conv81 = zext i8 %47 to i32
  %cmp82 = icmp ne i32 %conv81, 0
  br i1 %cmp82, label %if.then84, label %if.else85

if.then84:                                        ; preds = %if.else78
  store i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.304, i32 0, i32 0), i8** %tdfmt, align 4
  br label %if.end102

if.else85:                                        ; preds = %if.else78
  %48 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind86 = getelementptr inbounds %struct.options, %struct.options* %48, i32 0, i32 0
  %arrayidx87 = getelementptr inbounds [128 x i8], [128 x i8]* %ind86, i32 0, i32 69
  %49 = load i8, i8* %arrayidx87, align 1
  %conv88 = zext i8 %49 to i32
  %cmp89 = icmp ne i32 %conv88, 0
  br i1 %cmp89, label %if.then91, label %if.else92

if.then91:                                        ; preds = %if.else85
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.305, i32 0, i32 0), i8** %tdfmt, align 4
  br label %if.end101

if.else92:                                        ; preds = %if.else85
  %50 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind93 = getelementptr inbounds %struct.options, %struct.options* %50, i32 0, i32 0
  %arrayidx94 = getelementptr inbounds [128 x i8], [128 x i8]* %ind93, i32 0, i32 102
  %51 = load i8, i8* %arrayidx94, align 2
  %conv95 = zext i8 %51 to i32
  %cmp96 = icmp ne i32 %conv95, 0
  br i1 %cmp96, label %if.then98, label %if.else99

if.then98:                                        ; preds = %if.else92
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.306, i32 0, i32 0), i8** %tdfmt, align 4
  br label %if.end100

if.else99:                                        ; preds = %if.else92
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.307, i32 0, i32 0), i8** %tdfmt, align 4
  br label %if.end100

if.end100:                                        ; preds = %if.else99, %if.then98
  br label %if.end101

if.end101:                                        ; preds = %if.end100, %if.then91
  br label %if.end102

if.end102:                                        ; preds = %if.end101, %if.then84
  br label %if.end103

if.end103:                                        ; preds = %if.end102, %if.then73
  %call104 = call i8* @zhalloc(i32 256)
  store i8* %call104, i8** %timebuf, align 4
  br label %if.end106

if.else105:                                       ; preds = %lor.lhs.false61
  store i8* null, i8** %timebuf, align 4
  store i8* null, i8** %tdfmt, align 4
  br label %if.end106

if.end106:                                        ; preds = %if.else105, %if.end103
  %52 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind107 = getelementptr inbounds %struct.options, %struct.options* %52, i32 0, i32 0
  %arrayidx108 = getelementptr inbounds [128 x i8], [128 x i8]* %ind107, i32 0, i32 76
  %53 = load i8, i8* %arrayidx108, align 4
  %conv109 = zext i8 %53 to i32
  %cmp110 = icmp ne i32 %conv109, 0
  br i1 %cmp110, label %if.then112, label %if.end113

if.then112:                                       ; preds = %if.end106
  %54 = load i32, i32* %xflags, align 4
  %or = or i32 %54, 16
  store i32 %or, i32* %xflags, align 4
  br label %if.end113

if.end113:                                        ; preds = %if.then112, %if.end106
  %55 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind114 = getelementptr inbounds %struct.options, %struct.options* %55, i32 0, i32 0
  %arrayidx115 = getelementptr inbounds [128 x i8], [128 x i8]* %ind114, i32 0, i32 73
  %56 = load i8, i8* %arrayidx115, align 1
  %conv116 = zext i8 %56 to i32
  %cmp117 = icmp ne i32 %conv116, 0
  br i1 %cmp117, label %if.then119, label %if.end121

if.then119:                                       ; preds = %if.end113
  %57 = load i32, i32* %xflags, align 4
  %or120 = or i32 %57, 4
  store i32 %or120, i32* %xflags, align 4
  br label %if.end121

if.end121:                                        ; preds = %if.then119, %if.end113
  br label %for.cond

for.cond:                                         ; preds = %if.end223, %if.end121
  %58 = load %struct.histent*, %struct.histent** %ent, align 4
  %node = getelementptr inbounds %struct.histent, %struct.histent* %58, i32 0, i32 0
  %flags = getelementptr inbounds %struct.hashnode, %struct.hashnode* %node, i32 0, i32 2
  %59 = load i32, i32* %flags, align 4
  %60 = load i32, i32* %xflags, align 4
  %and = and i32 %59, %60
  %tobool122 = icmp ne i32 %and, 0
  br i1 %tobool122, label %if.then123, label %if.else124

if.then123:                                       ; preds = %for.cond
  store i8* null, i8** %s, align 4
  br label %if.end127

if.else124:                                       ; preds = %for.cond
  %61 = load %struct.histent*, %struct.histent** %ent, align 4
  %node125 = getelementptr inbounds %struct.histent, %struct.histent* %61, i32 0, i32 0
  %nam = getelementptr inbounds %struct.hashnode, %struct.hashnode* %node125, i32 0, i32 1
  %62 = load i8*, i8** %nam, align 4
  %call126 = call i8* @dupstring(i8* %62)
  store i8* %call126, i8** %s, align 4
  br label %if.end127

if.end127:                                        ; preds = %if.else124, %if.then123
  %63 = load i8*, i8** %s, align 4
  %tobool128 = icmp ne i8* %63, null
  br i1 %tobool128, label %land.lhs.true129, label %if.end202

land.lhs.true129:                                 ; preds = %if.end127
  %64 = load %struct.patprog*, %struct.patprog** %pprog.addr, align 4
  %tobool130 = icmp ne %struct.patprog* %64, null
  br i1 %tobool130, label %lor.lhs.false131, label %if.then134

lor.lhs.false131:                                 ; preds = %land.lhs.true129
  %65 = load %struct.patprog*, %struct.patprog** %pprog.addr, align 4
  %66 = load i8*, i8** %s, align 4
  %call132 = call i32 @pattry(%struct.patprog* %65, i8* %66)
  %tobool133 = icmp ne i32 %call132, 0
  br i1 %tobool133, label %if.then134, label %if.end202

if.then134:                                       ; preds = %lor.lhs.false131, %land.lhs.true129
  %67 = load %struct.asgment*, %struct.asgment** %subs.addr, align 4
  %tobool135 = icmp ne %struct.asgment* %67, null
  br i1 %tobool135, label %cond.true136, label %cond.false138

cond.true136:                                     ; preds = %if.then134
  %68 = load %struct.asgment*, %struct.asgment** %subs.addr, align 4
  %call137 = call i32 @fcsubs(i8** %s, %struct.asgment* %68)
  br label %cond.end

cond.false138:                                    ; preds = %if.then134
  br label %cond.end

cond.end:                                         ; preds = %cond.false138, %cond.true136
  %cond139 = phi i32 [ %call137, %cond.true136 ], [ 1, %cond.false138 ]
  %69 = load i32, i32* %fclistdone, align 4
  %or140 = or i32 %69, %cond139
  store i32 %or140, i32* %fclistdone, align 4
  %70 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind141 = getelementptr inbounds %struct.options, %struct.options* %70, i32 0, i32 0
  %arrayidx142 = getelementptr inbounds [128 x i8], [128 x i8]* %ind141, i32 0, i32 110
  %71 = load i8, i8* %arrayidx142, align 2
  %conv143 = zext i8 %71 to i32
  %cmp144 = icmp ne i32 %conv143, 0
  br i1 %cmp144, label %if.end158, label %if.then146

if.then146:                                       ; preds = %cond.end
  %arraydecay149 = getelementptr inbounds [12 x i8], [12 x i8]* %buf148, i32 0, i32 0
  %72 = load %struct.histent*, %struct.histent** %ent, align 4
  %histnum150 = getelementptr inbounds %struct.histent, %struct.histent* %72, i32 0, i32 8
  %73 = load i32, i32* %histnum150, align 4
  call void @convbase(i8* %arraydecay149, i32 %73, i32 10)
  %74 = load %struct._IO_FILE*, %struct._IO_FILE** %f.addr, align 4
  %arraydecay151 = getelementptr inbounds [12 x i8], [12 x i8]* %buf148, i32 0, i32 0
  %75 = load %struct.histent*, %struct.histent** %ent, align 4
  %node152 = getelementptr inbounds %struct.histent, %struct.histent* %75, i32 0, i32 0
  %flags153 = getelementptr inbounds %struct.hashnode, %struct.hashnode* %node152, i32 0, i32 2
  %76 = load i32, i32* %flags153, align 4
  %and154 = and i32 %76, 16
  %tobool155 = icmp ne i32 %and154, 0
  %cond156 = select i1 %tobool155, i32 42, i32 32
  %call157 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %74, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.308, i32 0, i32 0), i8* %arraydecay151, i32 %cond156)
  br label %if.end158

if.end158:                                        ; preds = %if.then146, %cond.end
  %77 = load i8*, i8** %tdfmt, align 4
  %cmp159 = icmp ne i8* %77, null
  br i1 %cmp159, label %if.then161, label %if.end172

if.then161:                                       ; preds = %if.end158
  %78 = load %struct.histent*, %struct.histent** %ent, align 4
  %stim = getelementptr inbounds %struct.histent, %struct.histent* %78, i32 0, i32 4
  %call164 = call %struct.tm* @localtime(i32* %stim)
  store %struct.tm* %call164, %struct.tm** %ltm, align 4
  %79 = load i8*, i8** %timebuf, align 4
  %80 = load i8*, i8** %tdfmt, align 4
  %81 = load %struct.tm*, %struct.tm** %ltm, align 4
  %call165 = call i32 @ztrftime(i8* %79, i32 256, i8* %80, %struct.tm* %81, i32 0)
  store i32 %call165, i32* %len, align 4
  %cmp166 = icmp sge i32 %call165, 0
  br i1 %cmp166, label %if.then168, label %if.end171

if.then168:                                       ; preds = %if.then161
  %82 = load i8*, i8** %timebuf, align 4
  %83 = load i32, i32* %len, align 4
  %84 = load %struct._IO_FILE*, %struct._IO_FILE** %f.addr, align 4
  %call169 = call i32 @fwrite(i8* %82, i32 1, i32 %83, %struct._IO_FILE* %84)
  %85 = load %struct._IO_FILE*, %struct._IO_FILE** %f.addr, align 4
  %call170 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %85, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.309, i32 0, i32 0))
  br label %if.end171

if.end171:                                        ; preds = %if.then168, %if.then161
  br label %if.end172

if.end172:                                        ; preds = %if.end171, %if.end158
  %86 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind173 = getelementptr inbounds %struct.options, %struct.options* %86, i32 0, i32 0
  %arrayidx174 = getelementptr inbounds [128 x i8], [128 x i8]* %ind173, i32 0, i32 68
  %87 = load i8, i8* %arrayidx174, align 4
  %conv175 = zext i8 %87 to i32
  %cmp176 = icmp ne i32 %conv175, 0
  br i1 %cmp176, label %if.then178, label %if.end189

if.then178:                                       ; preds = %if.end172
  %88 = load %struct.histent*, %struct.histent** %ent, align 4
  %ftim = getelementptr inbounds %struct.histent, %struct.histent* %88, i32 0, i32 5
  %89 = load i32, i32* %ftim, align 4
  %tobool180 = icmp ne i32 %89, 0
  br i1 %tobool180, label %cond.true181, label %cond.false185

cond.true181:                                     ; preds = %if.then178
  %90 = load %struct.histent*, %struct.histent** %ent, align 4
  %ftim182 = getelementptr inbounds %struct.histent, %struct.histent* %90, i32 0, i32 5
  %91 = load i32, i32* %ftim182, align 4
  %92 = load %struct.histent*, %struct.histent** %ent, align 4
  %stim183 = getelementptr inbounds %struct.histent, %struct.histent* %92, i32 0, i32 4
  %93 = load i32, i32* %stim183, align 4
  %sub184 = sub nsw i32 %91, %93
  br label %cond.end186

cond.false185:                                    ; preds = %if.then178
  br label %cond.end186

cond.end186:                                      ; preds = %cond.false185, %cond.true181
  %cond187 = phi i32 [ %sub184, %cond.true181 ], [ 0, %cond.false185 ]
  store i32 %cond187, i32* %diff, align 4
  %94 = load %struct._IO_FILE*, %struct._IO_FILE** %f.addr, align 4
  %95 = load i32, i32* %diff, align 4
  %div = sdiv i32 %95, 60
  %96 = load i32, i32* %diff, align 4
  %rem = srem i32 %96, 60
  %call188 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %94, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.310, i32 0, i32 0), i32 %div, i32 %rem)
  br label %if.end189

if.end189:                                        ; preds = %cond.end186, %if.end172
  %97 = load %struct._IO_FILE*, %struct._IO_FILE** %f.addr, align 4
  %98 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 4
  %cmp190 = icmp eq %struct._IO_FILE* %97, %98
  br i1 %cmp190, label %if.then192, label %if.else195

if.then192:                                       ; preds = %if.end189
  %99 = load i8*, i8** %s, align 4
  %100 = load %struct._IO_FILE*, %struct._IO_FILE** %f.addr, align 4
  %call193 = call i32 @mb_niceformat(i8* %99, %struct._IO_FILE* %100, i8** null, i32 0)
  %101 = load %struct._IO_FILE*, %struct._IO_FILE** %f.addr, align 4
  %call194 = call i32 @putc(i32 10, %struct._IO_FILE* %101)
  br label %if.end201

if.else195:                                       ; preds = %if.end189
  %102 = load i8*, i8** %s, align 4
  %call198 = call i8* @unmetafy(i8* %102, i32* %len197)
  %103 = load i8*, i8** %s, align 4
  %104 = load i32, i32* %len197, align 4
  %105 = load %struct._IO_FILE*, %struct._IO_FILE** %f.addr, align 4
  %call199 = call i32 @fwrite(i8* %103, i32 1, i32 %104, %struct._IO_FILE* %105)
  %106 = load %struct._IO_FILE*, %struct._IO_FILE** %f.addr, align 4
  %call200 = call i32 @putc(i32 10, %struct._IO_FILE* %106)
  br label %if.end201

if.end201:                                        ; preds = %if.else195, %if.then192
  br label %if.end202

if.end202:                                        ; preds = %if.end201, %lor.lhs.false131, %if.end127
  %107 = load i32, i32* %first.addr, align 4
  %108 = load i32, i32* %last.addr, align 4
  %cmp203 = icmp slt i32 %107, %108
  br i1 %cmp203, label %if.then205, label %if.else214

if.then205:                                       ; preds = %if.end202
  %109 = load %struct.histent*, %struct.histent** %ent, align 4
  %call206 = call %struct.histent* @down_histent(%struct.histent* %109)
  store %struct.histent* %call206, %struct.histent** %ent, align 4
  %tobool207 = icmp ne %struct.histent* %call206, null
  br i1 %tobool207, label %lor.lhs.false208, label %if.then212

lor.lhs.false208:                                 ; preds = %if.then205
  %110 = load %struct.histent*, %struct.histent** %ent, align 4
  %histnum209 = getelementptr inbounds %struct.histent, %struct.histent* %110, i32 0, i32 8
  %111 = load i32, i32* %histnum209, align 4
  %112 = load i32, i32* %last.addr, align 4
  %cmp210 = icmp sgt i32 %111, %112
  br i1 %cmp210, label %if.then212, label %if.end213

if.then212:                                       ; preds = %lor.lhs.false208, %if.then205
  br label %for.end

if.end213:                                        ; preds = %lor.lhs.false208
  br label %if.end223

if.else214:                                       ; preds = %if.end202
  %113 = load %struct.histent*, %struct.histent** %ent, align 4
  %call215 = call %struct.histent* @up_histent(%struct.histent* %113)
  store %struct.histent* %call215, %struct.histent** %ent, align 4
  %tobool216 = icmp ne %struct.histent* %call215, null
  br i1 %tobool216, label %lor.lhs.false217, label %if.then221

lor.lhs.false217:                                 ; preds = %if.else214
  %114 = load %struct.histent*, %struct.histent** %ent, align 4
  %histnum218 = getelementptr inbounds %struct.histent, %struct.histent* %114, i32 0, i32 8
  %115 = load i32, i32* %histnum218, align 4
  %116 = load i32, i32* %last.addr, align 4
  %cmp219 = icmp slt i32 %115, %116
  br i1 %cmp219, label %if.then221, label %if.end222

if.then221:                                       ; preds = %lor.lhs.false217, %if.else214
  br label %for.end

if.end222:                                        ; preds = %lor.lhs.false217
  br label %if.end223

if.end223:                                        ; preds = %if.end222, %if.end213
  br label %for.cond

for.end:                                          ; preds = %if.then221, %if.then212
  %117 = load %struct._IO_FILE*, %struct._IO_FILE** %f.addr, align 4
  %118 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 4
  %cmp224 = icmp ne %struct._IO_FILE* %117, %118
  br i1 %cmp224, label %if.then226, label %if.end228

if.then226:                                       ; preds = %for.end
  %119 = load %struct._IO_FILE*, %struct._IO_FILE** %f.addr, align 4
  %call227 = call i32 @fclose(%struct._IO_FILE* %119)
  br label %if.end228

if.end228:                                        ; preds = %if.then226, %for.end
  %120 = load i32, i32* %fclistdone, align 4
  %tobool229 = icmp ne i32 %120, 0
  br i1 %tobool229, label %if.end240, label %if.then230

if.then230:                                       ; preds = %if.end228
  %121 = load %struct.asgment*, %struct.asgment** %subs.addr, align 4
  %tobool231 = icmp ne %struct.asgment* %121, null
  br i1 %tobool231, label %if.then232, label %if.else233

if.then232:                                       ; preds = %if.then230
  call void (i8*, i8*, ...) @zwarnnam(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.35, i32 0, i32 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.311, i32 0, i32 0))
  br label %if.end239

if.else233:                                       ; preds = %if.then230
  %122 = load i32, i32* %xflags, align 4
  %tobool234 = icmp ne i32 %122, 0
  br i1 %tobool234, label %if.then237, label %lor.lhs.false235

lor.lhs.false235:                                 ; preds = %if.else233
  %123 = load %struct.patprog*, %struct.patprog** %pprog.addr, align 4
  %tobool236 = icmp ne %struct.patprog* %123, null
  br i1 %tobool236, label %if.then237, label %if.end238

if.then237:                                       ; preds = %lor.lhs.false235, %if.else233
  call void (i8*, i8*, ...) @zwarnnam(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.35, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.312, i32 0, i32 0))
  br label %if.end238

if.end238:                                        ; preds = %if.then237, %lor.lhs.false235
  br label %if.end239

if.end239:                                        ; preds = %if.end238, %if.then232
  store i32 1, i32* %retval, align 4
  br label %return

if.end240:                                        ; preds = %if.end228
  store i32 0, i32* %retval, align 4
  br label %return

return:                                           ; preds = %if.end240, %if.end239, %if.end36, %if.end12
  %124 = load i32, i32* %retval, align 4
  ret i32 %124
}

declare i32 @gettempfile(i8*, i32, i8**) #1

declare %struct._IO_FILE* @fdopen(i32, i8*) #1

declare i32 @fclose(%struct._IO_FILE*) #1

declare i32 @unlink(i8*) #1

declare i8* @getsparam(i8*) #1

; Function Attrs: noinline nounwind
define internal i32 @fcedit(i8* %ename, i8* %fn) #0 {
entry:
  %retval = alloca i32, align 4
  %ename.addr = alloca i8*, align 4
  %fn.addr = alloca i8*, align 4
  %s = alloca i8*, align 4
  store i8* %ename, i8** %ename.addr, align 4
  store i8* %fn, i8** %fn.addr, align 4
  %0 = load i8*, i8** %ename.addr, align 4
  %call = call i32 @strcmp(i8* %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.44, i32 0, i32 0))
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i32 1, i32* %retval, align 4
  br label %return

if.end:                                           ; preds = %entry
  %1 = load i8*, i8** %ename.addr, align 4
  %2 = load i8*, i8** %fn.addr, align 4
  %call1 = call i8* @tricat(i8* %1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.25, i32 0, i32 0), i8* %2)
  store i8* %call1, i8** %s, align 4
  %3 = load i8*, i8** %s, align 4
  call void @execstring(i8* %3, i32 1, i32 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.35, i32 0, i32 0))
  %4 = load i8*, i8** %s, align 4
  call void @zsfree(i8* %4)
  %5 = load i32, i32* @lastval, align 4
  %tobool2 = icmp ne i32 %5, 0
  %lnot = xor i1 %tobool2, true
  %lnot.ext = zext i1 %lnot to i32
  store i32 %lnot.ext, i32* %retval, align 4
  br label %return

return:                                           ; preds = %if.end, %if.then
  %6 = load i32, i32* %retval, align 4
  ret i32 %6
}

declare i32 @stuff(i8*) #1

declare i32 @loop(i32, i32) #1

; Function Attrs: noinline nounwind
define i32 @bin_typeset(i8* %name, i8** %argv, %union.linkroot* %assigns, %struct.options* %ops, i32 %func) #0 {
entry:
  %retval = alloca i32, align 4
  %name.addr = alloca i8*, align 4
  %argv.addr = alloca i8**, align 4
  %assigns.addr = alloca %union.linkroot*, align 4
  %ops.addr = alloca %struct.options*, align 4
  %func.addr = alloca i32, align 4
  %pm = alloca %struct.param*, align 4
  %asg = alloca %struct.asgment*, align 4
  %pprog = alloca %struct.patprog*, align 4
  %optstr = alloca i8*, align 4
  %on = alloca i32, align 4
  %off = alloca i32, align 4
  %roff = alloca i32, align 4
  %bit = alloca i32, align 4
  %i = alloca i32, align 4
  %returnval = alloca i32, align 4
  %printflags = alloca i32, align 4
  %hasargs = alloca i32, align 4
  %optval = alloca i32, align 4
  %eptr = alloca i8*, align 4
  %pflag = alloca i32, align 4
  %oset = alloca %struct.__sigset_t, align 4
  %tmp = alloca %struct.__sigset_t, align 4
  %tmp121 = alloca %struct.__sigset_t, align 4
  %oset168 = alloca %struct.__sigset_t, align 4
  %tmp172 = alloca %struct.__sigset_t, align 4
  %tmp174 = alloca %struct.__sigset_t, align 4
  %apm = alloca %struct.param*, align 4
  %asg0 = alloca %struct.asgment, align 4
  %asg2 = alloca %struct.asgment, align 4
  %oldval = alloca i8*, align 4
  %joinstr = alloca i8*, align 4
  %joinchar = alloca i32, align 4
  %nargs = alloca i32, align 4
  %oset244 = alloca %struct.__sigset_t, align 4
  %tmp248 = alloca %struct.__sigset_t, align 4
  %tmp250 = alloca %struct.__sigset_t, align 4
  %oset275 = alloca %struct.__sigset_t, align 4
  %tmp279 = alloca %struct.__sigset_t, align 4
  %tmp281 = alloca %struct.__sigset_t, align 4
  %oset300 = alloca %struct.__sigset_t, align 4
  %tmp304 = alloca %struct.__sigset_t, align 4
  %tmp306 = alloca %struct.__sigset_t, align 4
  %oset325 = alloca %struct.__sigset_t, align 4
  %tmp329 = alloca %struct.__sigset_t, align 4
  %tmp331 = alloca %struct.__sigset_t, align 4
  %oset350 = alloca %struct.__sigset_t, align 4
  %tmp354 = alloca %struct.__sigset_t, align 4
  %tmp356 = alloca %struct.__sigset_t, align 4
  %oset376 = alloca %struct.__sigset_t, align 4
  %tmp380 = alloca %struct.__sigset_t, align 4
  %tmp382 = alloca %struct.__sigset_t, align 4
  %oset404 = alloca %struct.__sigset_t, align 4
  %tmp408 = alloca %struct.__sigset_t, align 4
  %tmp410 = alloca %struct.__sigset_t, align 4
  %oset432 = alloca %struct.__sigset_t, align 4
  %tmp436 = alloca %struct.__sigset_t, align 4
  %tmp438 = alloca %struct.__sigset_t, align 4
  %oset463 = alloca %struct.__sigset_t, align 4
  %tmp467 = alloca %struct.__sigset_t, align 4
  %tmp469 = alloca %struct.__sigset_t, align 4
  %oset504 = alloca %struct.__sigset_t, align 4
  %tmp508 = alloca %struct.__sigset_t, align 4
  %tmp510 = alloca %struct.__sigset_t, align 4
  %nextasg = alloca %struct.asgment*, align 4
  %oset552 = alloca %struct.__sigset_t, align 4
  %tmp556 = alloca %struct.__sigset_t, align 4
  %tmp558 = alloca %struct.__sigset_t, align 4
  %oset614 = alloca %struct.__sigset_t, align 4
  %tmp618 = alloca %struct.__sigset_t, align 4
  %tmp620 = alloca %struct.__sigset_t, align 4
  %tdp = alloca %struct.tieddata*, align 4
  %flags639 = alloca i32, align 4
  %oset720 = alloca %struct.__sigset_t, align 4
  %tmp724 = alloca %struct.__sigset_t, align 4
  %tmp726 = alloca %struct.__sigset_t, align 4
  %oset753 = alloca %struct.__sigset_t, align 4
  %tmp757 = alloca %struct.__sigset_t, align 4
  %tmp759 = alloca %struct.__sigset_t, align 4
  %flags786 = alloca i32, align 4
  %oset813 = alloca %struct.__sigset_t, align 4
  %tmp817 = alloca %struct.__sigset_t, align 4
  %tmp819 = alloca %struct.__sigset_t, align 4
  %oset838 = alloca %struct.__sigset_t, align 4
  %tmp842 = alloca %struct.__sigset_t, align 4
  %tmp844 = alloca %struct.__sigset_t, align 4
  %pmlist = alloca %union.linkroot*, align 4
  %pmnode = alloca %struct.linknode*, align 4
  %oset966 = alloca %struct.__sigset_t, align 4
  %tmp970 = alloca %struct.__sigset_t, align 4
  %tmp972 = alloca %struct.__sigset_t, align 4
  %hn = alloca %struct.hashnode*, align 4
  %oset1023 = alloca %struct.__sigset_t, align 4
  %tmp1027 = alloca %struct.__sigset_t, align 4
  %tmp1029 = alloca %struct.__sigset_t, align 4
  store i8* %name, i8** %name.addr, align 4
  store i8** %argv, i8*** %argv.addr, align 4
  store %union.linkroot* %assigns, %union.linkroot** %assigns.addr, align 4
  store %struct.options* %ops, %struct.options** %ops.addr, align 4
  store i32 %func, i32* %func.addr, align 4
  store i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.49, i32 0, i32 0), i8** %optstr, align 4
  store i32 0, i32* %on, align 4
  store i32 0, i32* %off, align 4
  store i32 1, i32* %bit, align 4
  store i32 0, i32* %returnval, align 4
  store i32 0, i32* %printflags, align 4
  %0 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind = getelementptr inbounds %struct.options, %struct.options* %0, i32 0, i32 0
  %arrayidx = getelementptr inbounds [128 x i8], [128 x i8]* %ind, i32 0, i32 102
  %1 = load i8, i8* %arrayidx, align 2
  %conv = zext i8 %1 to i32
  %cmp = icmp ne i32 %conv, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %2 = load i8*, i8** %name.addr, align 4
  %3 = load i8**, i8*** %argv.addr, align 4
  %4 = load %struct.options*, %struct.options** %ops.addr, align 4
  %5 = load i32, i32* %func.addr, align 4
  %call = call i32 @bin_functions(i8* %2, i8** %3, %struct.options* %4, i32 %5)
  store i32 %call, i32* %retval, align 4
  br label %return

if.end:                                           ; preds = %entry
  %6 = load i32, i32* %func.addr, align 4
  %cmp2 = icmp eq i32 %6, 22
  br i1 %cmp2, label %land.lhs.true, label %if.end13

land.lhs.true:                                    ; preds = %if.end
  %7 = load i8, i8* getelementptr inbounds ([181 x i8], [181 x i8]* @opts, i32 0, i32 132), align 1
  %conv4 = sext i8 %7 to i32
  %tobool = icmp ne i32 %conv4, 0
  br i1 %tobool, label %land.lhs.true5, label %if.end13

land.lhs.true5:                                   ; preds = %land.lhs.true
  %8 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind6 = getelementptr inbounds %struct.options, %struct.options* %8, i32 0, i32 0
  %arrayidx7 = getelementptr inbounds [128 x i8], [128 x i8]* %ind6, i32 0, i32 103
  %9 = load i8, i8* %arrayidx7, align 1
  %conv8 = zext i8 %9 to i32
  %and = and i32 %conv8, 2
  %tobool9 = icmp ne i32 %and, 0
  br i1 %tobool9, label %if.end13, label %if.then10

if.then10:                                        ; preds = %land.lhs.true5
  %10 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind11 = getelementptr inbounds %struct.options, %struct.options* %10, i32 0, i32 0
  %arrayidx12 = getelementptr inbounds [128 x i8], [128 x i8]* %ind11, i32 0, i32 103
  store i8 1, i8* %arrayidx12, align 1
  br label %if.end13

if.end13:                                         ; preds = %if.then10, %land.lhs.true5, %land.lhs.true, %if.end
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end13
  %11 = load i8*, i8** %optstr, align 4
  %12 = load i8, i8* %11, align 1
  %tobool14 = icmp ne i8 %12, 0
  br i1 %tobool14, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %13 = load i8*, i8** %optstr, align 4
  %14 = load i8, i8* %13, align 1
  %conv15 = zext i8 %14 to i32
  store i32 %conv15, i32* %optval, align 4
  %15 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind16 = getelementptr inbounds %struct.options, %struct.options* %15, i32 0, i32 0
  %16 = load i32, i32* %optval, align 4
  %arrayidx17 = getelementptr inbounds [128 x i8], [128 x i8]* %ind16, i32 0, i32 %16
  %17 = load i8, i8* %arrayidx17, align 1
  %conv18 = zext i8 %17 to i32
  %and19 = and i32 %conv18, 1
  %tobool20 = icmp ne i32 %and19, 0
  br i1 %tobool20, label %if.then21, label %if.else

if.then21:                                        ; preds = %for.body
  %18 = load i32, i32* %bit, align 4
  %19 = load i32, i32* %on, align 4
  %or = or i32 %19, %18
  store i32 %or, i32* %on, align 4
  br label %if.end30

if.else:                                          ; preds = %for.body
  %20 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind22 = getelementptr inbounds %struct.options, %struct.options* %20, i32 0, i32 0
  %21 = load i32, i32* %optval, align 4
  %arrayidx23 = getelementptr inbounds [128 x i8], [128 x i8]* %ind22, i32 0, i32 %21
  %22 = load i8, i8* %arrayidx23, align 1
  %conv24 = zext i8 %22 to i32
  %and25 = and i32 %conv24, 2
  %tobool26 = icmp ne i32 %and25, 0
  br i1 %tobool26, label %if.then27, label %if.end29

if.then27:                                        ; preds = %if.else
  %23 = load i32, i32* %bit, align 4
  %24 = load i32, i32* %off, align 4
  %or28 = or i32 %24, %23
  store i32 %or28, i32* %off, align 4
  br label %if.end29

if.end29:                                         ; preds = %if.then27, %if.else
  br label %if.end30

if.end30:                                         ; preds = %if.end29, %if.then21
  br label %for.inc

for.inc:                                          ; preds = %if.end30
  %25 = load i8*, i8** %optstr, align 4
  %incdec.ptr = getelementptr inbounds i8, i8* %25, i32 1
  store i8* %incdec.ptr, i8** %optstr, align 4
  %26 = load i32, i32* %bit, align 4
  %shl = shl i32 %26, 1
  store i32 %shl, i32* %bit, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %27 = load i32, i32* %off, align 4
  store i32 %27, i32* %roff, align 4
  %28 = load i32, i32* %on, align 4
  %and31 = and i32 %28, 8
  %tobool32 = icmp ne i32 %and31, 0
  br i1 %tobool32, label %if.then33, label %if.end36

if.then33:                                        ; preds = %for.end
  %29 = load i32, i32* %off, align 4
  %or34 = or i32 %29, 535
  store i32 %or34, i32* %off, align 4
  %30 = load i32, i32* %on, align 4
  %and35 = and i32 %30, -5
  store i32 %and35, i32* %on, align 4
  br label %if.end36

if.end36:                                         ; preds = %if.then33, %for.end
  %31 = load i32, i32* %on, align 4
  %and37 = and i32 %31, 4
  %tobool38 = icmp ne i32 %and37, 0
  br i1 %tobool38, label %if.then39, label %if.end41

if.then39:                                        ; preds = %if.end36
  %32 = load i32, i32* %off, align 4
  %or40 = or i32 %32, 539
  store i32 %or40, i32* %off, align 4
  br label %if.end41

if.end41:                                         ; preds = %if.then39, %if.end36
  %33 = load i32, i32* %on, align 4
  %and42 = and i32 %33, 2
  %tobool43 = icmp ne i32 %and42, 0
  br i1 %tobool43, label %if.then44, label %if.end46

if.then44:                                        ; preds = %if.end41
  %34 = load i32, i32* %off, align 4
  %or45 = or i32 %34, 541
  store i32 %or45, i32* %off, align 4
  br label %if.end46

if.end46:                                         ; preds = %if.then44, %if.end41
  %35 = load i32, i32* %on, align 4
  %and47 = and i32 %35, 160
  %tobool48 = icmp ne i32 %and47, 0
  br i1 %tobool48, label %if.then49, label %if.end51

if.then49:                                        ; preds = %if.end46
  %36 = load i32, i32* %off, align 4
  %or50 = or i32 %36, 64
  store i32 %or50, i32* %off, align 4
  br label %if.end51

if.end51:                                         ; preds = %if.then49, %if.end46
  %37 = load i32, i32* %on, align 4
  %and52 = and i32 %37, 64
  %tobool53 = icmp ne i32 %and52, 0
  br i1 %tobool53, label %if.then54, label %if.end56

if.then54:                                        ; preds = %if.end51
  %38 = load i32, i32* %off, align 4
  %or55 = or i32 %38, 160
  store i32 %or55, i32* %off, align 4
  br label %if.end56

if.end56:                                         ; preds = %if.then54, %if.end51
  %39 = load i32, i32* %on, align 4
  %and57 = and i32 %39, 512
  %tobool58 = icmp ne i32 %and57, 0
  br i1 %tobool58, label %if.then59, label %if.end61

if.then59:                                        ; preds = %if.end56
  %40 = load i32, i32* %off, align 4
  %or60 = or i32 %40, 256
  store i32 %or60, i32* %off, align 4
  br label %if.end61

if.end61:                                         ; preds = %if.then59, %if.end56
  %41 = load i32, i32* %on, align 4
  %and62 = and i32 %41, 256
  %tobool63 = icmp ne i32 %and62, 0
  br i1 %tobool63, label %if.then64, label %if.end66

if.then64:                                        ; preds = %if.end61
  %42 = load i32, i32* %off, align 4
  %or65 = or i32 %42, 512
  store i32 %or65, i32* %off, align 4
  br label %if.end66

if.end66:                                         ; preds = %if.then64, %if.end61
  %43 = load i32, i32* %on, align 4
  %and67 = and i32 %43, 16
  %tobool68 = icmp ne i32 %and67, 0
  br i1 %tobool68, label %if.then69, label %if.end71

if.then69:                                        ; preds = %if.end66
  %44 = load i32, i32* %off, align 4
  %or70 = or i32 %44, 1
  store i32 %or70, i32* %off, align 4
  br label %if.end71

if.end71:                                         ; preds = %if.then69, %if.end66
  %45 = load i32, i32* %on, align 4
  %and72 = and i32 %45, 65536
  %tobool73 = icmp ne i32 %and72, 0
  br i1 %tobool73, label %if.then74, label %if.end76

if.then74:                                        ; preds = %if.end71
  %46 = load i32, i32* %off, align 4
  %or75 = or i32 %46, 31
  store i32 %or75, i32* %off, align 4
  br label %if.end76

if.end76:                                         ; preds = %if.then74, %if.end71
  %47 = load i32, i32* %off, align 4
  %neg = xor i32 %47, -1
  %48 = load i32, i32* %on, align 4
  %and77 = and i32 %48, %neg
  store i32 %and77, i32* %on, align 4
  %49 = load i32, i32* @queueing_enabled, align 4
  %inc = add nsw i32 %49, 1
  store i32 %inc, i32* @queueing_enabled, align 4
  %50 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind78 = getelementptr inbounds %struct.options, %struct.options* %50, i32 0, i32 0
  %arrayidx79 = getelementptr inbounds [128 x i8], [128 x i8]* %ind78, i32 0, i32 112
  %51 = load i8, i8* %arrayidx79, align 4
  %conv80 = zext i8 %51 to i32
  %cmp81 = icmp ne i32 %conv80, 0
  br i1 %cmp81, label %if.then83, label %if.end127

if.then83:                                        ; preds = %if.end76
  %52 = load i32, i32* %printflags, align 4
  %or84 = or i32 %52, 32
  store i32 %or84, i32* %printflags, align 4
  %53 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind85 = getelementptr inbounds %struct.options, %struct.options* %53, i32 0, i32 0
  %arrayidx86 = getelementptr inbounds [128 x i8], [128 x i8]* %ind85, i32 0, i32 112
  %54 = load i8, i8* %arrayidx86, align 4
  %conv87 = zext i8 %54 to i32
  %cmp88 = icmp sgt i32 %conv87, 3
  br i1 %cmp88, label %if.then90, label %if.end126

if.then90:                                        ; preds = %if.then83
  %55 = load %struct.options*, %struct.options** %ops.addr, align 4
  %args = getelementptr inbounds %struct.options, %struct.options* %55, i32 0, i32 1
  %56 = load i8**, i8*** %args, align 4
  %57 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind91 = getelementptr inbounds %struct.options, %struct.options* %57, i32 0, i32 0
  %arrayidx92 = getelementptr inbounds [128 x i8], [128 x i8]* %ind91, i32 0, i32 112
  %58 = load i8, i8* %arrayidx92, align 4
  %conv93 = zext i8 %58 to i32
  %shr = ashr i32 %conv93, 2
  %sub = sub nsw i32 %shr, 1
  %arrayidx94 = getelementptr inbounds i8*, i8** %56, i32 %sub
  %59 = load i8*, i8** %arrayidx94, align 4
  %call95 = call i32 @zstrtol(i8* %59, i8** %eptr, i32 10)
  store i32 %call95, i32* %pflag, align 4
  %60 = load i32, i32* %pflag, align 4
  %cmp96 = icmp eq i32 %60, 1
  br i1 %cmp96, label %land.lhs.true98, label %if.else102

land.lhs.true98:                                  ; preds = %if.then90
  %61 = load i8*, i8** %eptr, align 4
  %62 = load i8, i8* %61, align 1
  %tobool99 = icmp ne i8 %62, 0
  br i1 %tobool99, label %if.else102, label %if.then100

if.then100:                                       ; preds = %land.lhs.true98
  %63 = load i32, i32* %printflags, align 4
  %or101 = or i32 %63, 64
  store i32 %or101, i32* %printflags, align 4
  br label %if.end125

if.else102:                                       ; preds = %land.lhs.true98, %if.then90
  %64 = load i32, i32* %pflag, align 4
  %tobool103 = icmp ne i32 %64, 0
  br i1 %tobool103, label %if.then106, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.else102
  %65 = load i8*, i8** %eptr, align 4
  %66 = load i8, i8* %65, align 1
  %conv104 = sext i8 %66 to i32
  %tobool105 = icmp ne i32 %conv104, 0
  br i1 %tobool105, label %if.then106, label %if.end124

if.then106:                                       ; preds = %lor.lhs.false, %if.else102
  %67 = load i8*, i8** %name.addr, align 4
  %68 = load %struct.options*, %struct.options** %ops.addr, align 4
  %args107 = getelementptr inbounds %struct.options, %struct.options* %68, i32 0, i32 1
  %69 = load i8**, i8*** %args107, align 4
  %70 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind108 = getelementptr inbounds %struct.options, %struct.options* %70, i32 0, i32 0
  %arrayidx109 = getelementptr inbounds [128 x i8], [128 x i8]* %ind108, i32 0, i32 112
  %71 = load i8, i8* %arrayidx109, align 4
  %conv110 = zext i8 %71 to i32
  %shr111 = ashr i32 %conv110, 2
  %sub112 = sub nsw i32 %shr111, 1
  %arrayidx113 = getelementptr inbounds i8*, i8** %69, i32 %sub112
  %72 = load i8*, i8** %arrayidx113, align 4
  call void (i8*, i8*, ...) @zwarnnam(i8* %67, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.50, i32 0, i32 0), i8* %72)
  br label %do.body

do.body:                                          ; preds = %if.then106
  %73 = load i32, i32* @queueing_enabled, align 4
  %dec = add nsw i32 %73, -1
  store i32 %dec, i32* @queueing_enabled, align 4
  %tobool114 = icmp ne i32 %dec, 0
  br i1 %tobool114, label %if.end122, label %if.then115

if.then115:                                       ; preds = %do.body
  br label %do.body116

do.body116:                                       ; preds = %if.then115
  br label %while.cond

while.cond:                                       ; preds = %while.body, %do.body116
  %74 = load i32, i32* @queue_front, align 4
  %75 = load i32, i32* @queue_rear, align 4
  %cmp117 = icmp ne i32 %74, %75
  br i1 %cmp117, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %76 = load i32, i32* @queue_front, align 4
  %add = add nsw i32 %76, 1
  %rem = srem i32 %add, 128
  store i32 %rem, i32* @queue_front, align 4
  %77 = load i32, i32* @queue_front, align 4
  %arrayidx119 = getelementptr inbounds [128 x %struct.__sigset_t], [128 x %struct.__sigset_t]* @signal_mask_queue, i32 0, i32 %77
  call void @signal_setmask(%struct.__sigset_t* sret %tmp, %struct.__sigset_t* byval align 4 %arrayidx119)
  %78 = bitcast %struct.__sigset_t* %oset to i8*
  %79 = bitcast %struct.__sigset_t* %tmp to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %78, i8* %79, i32 128, i32 4, i1 false)
  %80 = load i32, i32* @queue_front, align 4
  %arrayidx120 = getelementptr inbounds [128 x i32], [128 x i32]* @signal_queue, i32 0, i32 %80
  %81 = load i32, i32* %arrayidx120, align 4
  call void @zhandler(i32 %81)
  call void @signal_setmask(%struct.__sigset_t* sret %tmp121, %struct.__sigset_t* byval align 4 %oset)
  br label %while.cond

while.end:                                        ; preds = %while.cond
  br label %do.end

do.end:                                           ; preds = %while.end
  br label %if.end122

if.end122:                                        ; preds = %do.end, %do.body
  br label %do.end123

do.end123:                                        ; preds = %if.end122
  store i32 1, i32* %retval, align 4
  br label %return

if.end124:                                        ; preds = %lor.lhs.false
  br label %if.end125

if.end125:                                        ; preds = %if.end124, %if.then100
  br label %if.end126

if.end126:                                        ; preds = %if.end125, %if.then83
  br label %if.end127

if.end127:                                        ; preds = %if.end126, %if.end76
  %82 = load i8**, i8*** %argv.addr, align 4
  %83 = load i8*, i8** %82, align 4
  %cmp128 = icmp ne i8* %83, null
  br i1 %cmp128, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %if.end127
  %84 = load %union.linkroot*, %union.linkroot** %assigns.addr, align 4
  %tobool130 = icmp ne %union.linkroot* %84, null
  br i1 %tobool130, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %lor.rhs
  %85 = load %union.linkroot*, %union.linkroot** %assigns.addr, align 4
  %list = bitcast %union.linkroot* %85 to %struct.linklist*
  %first = getelementptr inbounds %struct.linklist, %struct.linklist* %list, i32 0, i32 0
  %86 = load %struct.linknode*, %struct.linknode** %first, align 4
  %tobool131 = icmp ne %struct.linknode* %86, null
  br label %land.end

land.end:                                         ; preds = %land.rhs, %lor.rhs
  %87 = phi i1 [ false, %lor.rhs ], [ %tobool131, %land.rhs ]
  br label %lor.end

lor.end:                                          ; preds = %land.end, %if.end127
  %88 = phi i1 [ true, %if.end127 ], [ %87, %land.end ]
  %lor.ext = zext i1 %88 to i32
  store i32 %lor.ext, i32* %hasargs, align 4
  %89 = load i32, i32* %hasargs, align 4
  %tobool132 = icmp ne i32 %89, 0
  br i1 %tobool132, label %if.end179, label %if.then133

if.then133:                                       ; preds = %lor.end
  %90 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind134 = getelementptr inbounds %struct.options, %struct.options* %90, i32 0, i32 0
  %arrayidx135 = getelementptr inbounds [128 x i8], [128 x i8]* %ind134, i32 0, i32 112
  %91 = load i8, i8* %arrayidx135, align 4
  %conv136 = zext i8 %91 to i32
  %cmp137 = icmp ne i32 %conv136, 0
  br i1 %cmp137, label %if.end155, label %if.then139

if.then139:                                       ; preds = %if.then133
  %92 = load i32, i32* %on, align 4
  %93 = load i32, i32* %roff, align 4
  %or140 = or i32 %92, %93
  %tobool141 = icmp ne i32 %or140, 0
  br i1 %tobool141, label %if.end144, label %if.then142

if.then142:                                       ; preds = %if.then139
  %94 = load i32, i32* %printflags, align 4
  %or143 = or i32 %94, 2
  store i32 %or143, i32* %printflags, align 4
  br label %if.end144

if.end144:                                        ; preds = %if.then142, %if.then139
  %95 = load i32, i32* %roff, align 4
  %tobool145 = icmp ne i32 %95, 0
  br i1 %tobool145, label %if.then152, label %lor.lhs.false146

lor.lhs.false146:                                 ; preds = %if.end144
  %96 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind147 = getelementptr inbounds %struct.options, %struct.options* %96, i32 0, i32 0
  %arrayidx148 = getelementptr inbounds [128 x i8], [128 x i8]* %ind147, i32 0, i32 43
  %97 = load i8, i8* %arrayidx148, align 1
  %conv149 = zext i8 %97 to i32
  %cmp150 = icmp ne i32 %conv149, 0
  br i1 %cmp150, label %if.then152, label %if.end154

if.then152:                                       ; preds = %lor.lhs.false146, %if.end144
  %98 = load i32, i32* %printflags, align 4
  %or153 = or i32 %98, 1
  store i32 %or153, i32* %printflags, align 4
  br label %if.end154

if.end154:                                        ; preds = %if.then152, %lor.lhs.false146
  br label %if.end155

if.end155:                                        ; preds = %if.end154, %if.then133
  %99 = load %struct.hashtable*, %struct.hashtable** @paramtab, align 4
  %100 = load i32, i32* %on, align 4
  %101 = load i32, i32* %roff, align 4
  %or156 = or i32 %100, %101
  %102 = load %struct.hashtable*, %struct.hashtable** @paramtab, align 4
  %printnode = getelementptr inbounds %struct.hashtable, %struct.hashtable* %102, i32 0, i32 15
  %103 = load void (%struct.hashnode*, i32)*, void (%struct.hashnode*, i32)** %printnode, align 4
  %104 = load i32, i32* %printflags, align 4
  %call157 = call i32 @scanhashtable(%struct.hashtable* %99, i32 1, i32 %or156, i32 0, void (%struct.hashnode*, i32)* %103, i32 %104)
  br label %do.body158

do.body158:                                       ; preds = %if.end155
  %105 = load i32, i32* @queueing_enabled, align 4
  %dec159 = add nsw i32 %105, -1
  store i32 %dec159, i32* @queueing_enabled, align 4
  %tobool160 = icmp ne i32 %dec159, 0
  br i1 %tobool160, label %if.end177, label %if.then161

if.then161:                                       ; preds = %do.body158
  br label %do.body162

do.body162:                                       ; preds = %if.then161
  br label %while.cond163

while.cond163:                                    ; preds = %while.body166, %do.body162
  %106 = load i32, i32* @queue_front, align 4
  %107 = load i32, i32* @queue_rear, align 4
  %cmp164 = icmp ne i32 %106, %107
  br i1 %cmp164, label %while.body166, label %while.end175

while.body166:                                    ; preds = %while.cond163
  %108 = load i32, i32* @queue_front, align 4
  %add169 = add nsw i32 %108, 1
  %rem170 = srem i32 %add169, 128
  store i32 %rem170, i32* @queue_front, align 4
  %109 = load i32, i32* @queue_front, align 4
  %arrayidx171 = getelementptr inbounds [128 x %struct.__sigset_t], [128 x %struct.__sigset_t]* @signal_mask_queue, i32 0, i32 %109
  call void @signal_setmask(%struct.__sigset_t* sret %tmp172, %struct.__sigset_t* byval align 4 %arrayidx171)
  %110 = bitcast %struct.__sigset_t* %oset168 to i8*
  %111 = bitcast %struct.__sigset_t* %tmp172 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %110, i8* %111, i32 128, i32 4, i1 false)
  %112 = load i32, i32* @queue_front, align 4
  %arrayidx173 = getelementptr inbounds [128 x i32], [128 x i32]* @signal_queue, i32 0, i32 %112
  %113 = load i32, i32* %arrayidx173, align 4
  call void @zhandler(i32 %113)
  call void @signal_setmask(%struct.__sigset_t* sret %tmp174, %struct.__sigset_t* byval align 4 %oset168)
  br label %while.cond163

while.end175:                                     ; preds = %while.cond163
  br label %do.end176

do.end176:                                        ; preds = %while.end175
  br label %if.end177

if.end177:                                        ; preds = %do.end176, %do.body158
  br label %do.end178

do.end178:                                        ; preds = %if.end177
  store i32 0, i32* %retval, align 4
  br label %return

if.end179:                                        ; preds = %lor.end
  %114 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind180 = getelementptr inbounds %struct.options, %struct.options* %114, i32 0, i32 0
  %arrayidx181 = getelementptr inbounds [128 x i8], [128 x i8]* %ind180, i32 0, i32 103
  %115 = load i8, i8* %arrayidx181, align 1
  %conv182 = zext i8 %115 to i32
  %cmp183 = icmp ne i32 %conv182, 0
  br i1 %cmp183, label %lor.lhs.false197, label %lor.lhs.false185

lor.lhs.false185:                                 ; preds = %if.end179
  %116 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind186 = getelementptr inbounds %struct.options, %struct.options* %116, i32 0, i32 0
  %arrayidx187 = getelementptr inbounds [128 x i8], [128 x i8]* %ind186, i32 0, i32 120
  %117 = load i8, i8* %arrayidx187, align 4
  %conv188 = zext i8 %117 to i32
  %cmp189 = icmp ne i32 %conv188, 0
  br i1 %cmp189, label %lor.lhs.false197, label %lor.lhs.false191

lor.lhs.false191:                                 ; preds = %lor.lhs.false185
  %118 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind192 = getelementptr inbounds %struct.options, %struct.options* %118, i32 0, i32 0
  %arrayidx193 = getelementptr inbounds [128 x i8], [128 x i8]* %ind192, i32 0, i32 109
  %119 = load i8, i8* %arrayidx193, align 1
  %conv194 = zext i8 %119 to i32
  %cmp195 = icmp ne i32 %conv194, 0
  br i1 %cmp195, label %lor.lhs.false197, label %if.then215

lor.lhs.false197:                                 ; preds = %lor.lhs.false191, %lor.lhs.false185, %if.end179
  %120 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind198 = getelementptr inbounds %struct.options, %struct.options* %120, i32 0, i32 0
  %arrayidx199 = getelementptr inbounds [128 x i8], [128 x i8]* %ind198, i32 0, i32 103
  %121 = load i8, i8* %arrayidx199, align 1
  %conv200 = zext i8 %121 to i32
  %and201 = and i32 %conv200, 2
  %tobool202 = icmp ne i32 %and201, 0
  br i1 %tobool202, label %if.then215, label %lor.lhs.false203

lor.lhs.false203:                                 ; preds = %lor.lhs.false197
  %122 = load i8*, i8** %name.addr, align 4
  %123 = load i8, i8* %122, align 1
  %conv204 = sext i8 %123 to i32
  %cmp205 = icmp eq i32 %conv204, 108
  br i1 %cmp205, label %if.then215, label %lor.lhs.false207

lor.lhs.false207:                                 ; preds = %lor.lhs.false203
  %124 = load i8, i8* getelementptr inbounds ([181 x i8], [181 x i8]* @opts, i32 0, i32 61), align 1
  %tobool208 = icmp ne i8 %124, 0
  br i1 %tobool208, label %if.end217, label %land.lhs.true209

land.lhs.true209:                                 ; preds = %lor.lhs.false207
  %125 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind210 = getelementptr inbounds %struct.options, %struct.options* %125, i32 0, i32 0
  %arrayidx211 = getelementptr inbounds [128 x i8], [128 x i8]* %ind210, i32 0, i32 103
  %126 = load i8, i8* %arrayidx211, align 1
  %conv212 = zext i8 %126 to i32
  %cmp213 = icmp ne i32 %conv212, 0
  br i1 %cmp213, label %if.end217, label %if.then215

if.then215:                                       ; preds = %land.lhs.true209, %lor.lhs.false203, %lor.lhs.false197, %lor.lhs.false191
  %127 = load i32, i32* %on, align 4
  %or216 = or i32 %127, 2097152
  store i32 %or216, i32* %on, align 4
  br label %if.end217

if.end217:                                        ; preds = %if.then215, %land.lhs.true209, %lor.lhs.false207
  %128 = load i32, i32* %on, align 4
  %and218 = and i32 %128, 65536
  %tobool219 = icmp ne i32 %and218, 0
  br i1 %tobool219, label %if.then220, label %if.end824

if.then220:                                       ; preds = %if.end217
  store i8* null, i8** %oldval, align 4
  %129 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind228 = getelementptr inbounds %struct.options, %struct.options* %129, i32 0, i32 0
  %arrayidx229 = getelementptr inbounds [128 x i8], [128 x i8]* %ind228, i32 0, i32 109
  %130 = load i8, i8* %arrayidx229, align 1
  %conv230 = zext i8 %130 to i32
  %cmp231 = icmp ne i32 %conv230, 0
  br i1 %cmp231, label %if.then233, label %if.end255

if.then233:                                       ; preds = %if.then220
  %131 = load i8*, i8** %name.addr, align 4
  call void (i8*, i8*, ...) @zwarnnam(i8* %131, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.51, i32 0, i32 0))
  br label %do.body234

do.body234:                                       ; preds = %if.then233
  %132 = load i32, i32* @queueing_enabled, align 4
  %dec235 = add nsw i32 %132, -1
  store i32 %dec235, i32* @queueing_enabled, align 4
  %tobool236 = icmp ne i32 %dec235, 0
  br i1 %tobool236, label %if.end253, label %if.then237

if.then237:                                       ; preds = %do.body234
  br label %do.body238

do.body238:                                       ; preds = %if.then237
  br label %while.cond239

while.cond239:                                    ; preds = %while.body242, %do.body238
  %133 = load i32, i32* @queue_front, align 4
  %134 = load i32, i32* @queue_rear, align 4
  %cmp240 = icmp ne i32 %133, %134
  br i1 %cmp240, label %while.body242, label %while.end251

while.body242:                                    ; preds = %while.cond239
  %135 = load i32, i32* @queue_front, align 4
  %add245 = add nsw i32 %135, 1
  %rem246 = srem i32 %add245, 128
  store i32 %rem246, i32* @queue_front, align 4
  %136 = load i32, i32* @queue_front, align 4
  %arrayidx247 = getelementptr inbounds [128 x %struct.__sigset_t], [128 x %struct.__sigset_t]* @signal_mask_queue, i32 0, i32 %136
  call void @signal_setmask(%struct.__sigset_t* sret %tmp248, %struct.__sigset_t* byval align 4 %arrayidx247)
  %137 = bitcast %struct.__sigset_t* %oset244 to i8*
  %138 = bitcast %struct.__sigset_t* %tmp248 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %137, i8* %138, i32 128, i32 4, i1 false)
  %139 = load i32, i32* @queue_front, align 4
  %arrayidx249 = getelementptr inbounds [128 x i32], [128 x i32]* @signal_queue, i32 0, i32 %139
  %140 = load i32, i32* %arrayidx249, align 4
  call void @zhandler(i32 %140)
  call void @signal_setmask(%struct.__sigset_t* sret %tmp250, %struct.__sigset_t* byval align 4 %oset244)
  br label %while.cond239

while.end251:                                     ; preds = %while.cond239
  br label %do.end252

do.end252:                                        ; preds = %while.end251
  br label %if.end253

if.end253:                                        ; preds = %do.end252, %do.body234
  br label %do.end254

do.end254:                                        ; preds = %if.end253
  store i32 1, i32* %retval, align 4
  br label %return

if.end255:                                        ; preds = %if.then220
  %141 = load i32, i32* %off, align 4
  %neg256 = xor i32 %141, -1
  %142 = load i32, i32* %on, align 4
  %and257 = and i32 %142, %neg256
  store i32 %and257, i32* %on, align 4
  %143 = load i8**, i8*** %argv.addr, align 4
  %call258 = call i32 @arrlen(i8** %143)
  %144 = load %union.linkroot*, %union.linkroot** %assigns.addr, align 4
  %tobool259 = icmp ne %union.linkroot* %144, null
  br i1 %tobool259, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end255
  %145 = load %union.linkroot*, %union.linkroot** %assigns.addr, align 4
  %call260 = call i32 @countlinknodes(%union.linkroot* %145)
  br label %cond.end

cond.false:                                       ; preds = %if.end255
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call260, %cond.true ], [ 0, %cond.false ]
  %add261 = add nsw i32 %call258, %cond
  store i32 %add261, i32* %nargs, align 4
  %146 = load i32, i32* %nargs, align 4
  %cmp262 = icmp slt i32 %146, 2
  br i1 %cmp262, label %if.then264, label %if.end286

if.then264:                                       ; preds = %cond.end
  %147 = load i8*, i8** %name.addr, align 4
  call void (i8*, i8*, ...) @zwarnnam(i8* %147, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.52, i32 0, i32 0))
  br label %do.body265

do.body265:                                       ; preds = %if.then264
  %148 = load i32, i32* @queueing_enabled, align 4
  %dec266 = add nsw i32 %148, -1
  store i32 %dec266, i32* @queueing_enabled, align 4
  %tobool267 = icmp ne i32 %dec266, 0
  br i1 %tobool267, label %if.end284, label %if.then268

if.then268:                                       ; preds = %do.body265
  br label %do.body269

do.body269:                                       ; preds = %if.then268
  br label %while.cond270

while.cond270:                                    ; preds = %while.body273, %do.body269
  %149 = load i32, i32* @queue_front, align 4
  %150 = load i32, i32* @queue_rear, align 4
  %cmp271 = icmp ne i32 %149, %150
  br i1 %cmp271, label %while.body273, label %while.end282

while.body273:                                    ; preds = %while.cond270
  %151 = load i32, i32* @queue_front, align 4
  %add276 = add nsw i32 %151, 1
  %rem277 = srem i32 %add276, 128
  store i32 %rem277, i32* @queue_front, align 4
  %152 = load i32, i32* @queue_front, align 4
  %arrayidx278 = getelementptr inbounds [128 x %struct.__sigset_t], [128 x %struct.__sigset_t]* @signal_mask_queue, i32 0, i32 %152
  call void @signal_setmask(%struct.__sigset_t* sret %tmp279, %struct.__sigset_t* byval align 4 %arrayidx278)
  %153 = bitcast %struct.__sigset_t* %oset275 to i8*
  %154 = bitcast %struct.__sigset_t* %tmp279 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %153, i8* %154, i32 128, i32 4, i1 false)
  %155 = load i32, i32* @queue_front, align 4
  %arrayidx280 = getelementptr inbounds [128 x i32], [128 x i32]* @signal_queue, i32 0, i32 %155
  %156 = load i32, i32* %arrayidx280, align 4
  call void @zhandler(i32 %156)
  call void @signal_setmask(%struct.__sigset_t* sret %tmp281, %struct.__sigset_t* byval align 4 %oset275)
  br label %while.cond270

while.end282:                                     ; preds = %while.cond270
  br label %do.end283

do.end283:                                        ; preds = %while.end282
  br label %if.end284

if.end284:                                        ; preds = %do.end283, %do.body265
  br label %do.end285

do.end285:                                        ; preds = %if.end284
  store i32 1, i32* %retval, align 4
  br label %return

if.end286:                                        ; preds = %cond.end
  %157 = load i32, i32* %nargs, align 4
  %cmp287 = icmp sgt i32 %157, 3
  br i1 %cmp287, label %if.then289, label %if.end311

if.then289:                                       ; preds = %if.end286
  %158 = load i8*, i8** %name.addr, align 4
  call void (i8*, i8*, ...) @zwarnnam(i8* %158, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.53, i32 0, i32 0))
  br label %do.body290

do.body290:                                       ; preds = %if.then289
  %159 = load i32, i32* @queueing_enabled, align 4
  %dec291 = add nsw i32 %159, -1
  store i32 %dec291, i32* @queueing_enabled, align 4
  %tobool292 = icmp ne i32 %dec291, 0
  br i1 %tobool292, label %if.end309, label %if.then293

if.then293:                                       ; preds = %do.body290
  br label %do.body294

do.body294:                                       ; preds = %if.then293
  br label %while.cond295

while.cond295:                                    ; preds = %while.body298, %do.body294
  %160 = load i32, i32* @queue_front, align 4
  %161 = load i32, i32* @queue_rear, align 4
  %cmp296 = icmp ne i32 %160, %161
  br i1 %cmp296, label %while.body298, label %while.end307

while.body298:                                    ; preds = %while.cond295
  %162 = load i32, i32* @queue_front, align 4
  %add301 = add nsw i32 %162, 1
  %rem302 = srem i32 %add301, 128
  store i32 %rem302, i32* @queue_front, align 4
  %163 = load i32, i32* @queue_front, align 4
  %arrayidx303 = getelementptr inbounds [128 x %struct.__sigset_t], [128 x %struct.__sigset_t]* @signal_mask_queue, i32 0, i32 %163
  call void @signal_setmask(%struct.__sigset_t* sret %tmp304, %struct.__sigset_t* byval align 4 %arrayidx303)
  %164 = bitcast %struct.__sigset_t* %oset300 to i8*
  %165 = bitcast %struct.__sigset_t* %tmp304 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %164, i8* %165, i32 128, i32 4, i1 false)
  %166 = load i32, i32* @queue_front, align 4
  %arrayidx305 = getelementptr inbounds [128 x i32], [128 x i32]* @signal_queue, i32 0, i32 %166
  %167 = load i32, i32* %arrayidx305, align 4
  call void @zhandler(i32 %167)
  call void @signal_setmask(%struct.__sigset_t* sret %tmp306, %struct.__sigset_t* byval align 4 %oset300)
  br label %while.cond295

while.end307:                                     ; preds = %while.cond295
  br label %do.end308

do.end308:                                        ; preds = %while.end307
  br label %if.end309

if.end309:                                        ; preds = %do.end308, %do.body290
  br label %do.end310

do.end310:                                        ; preds = %if.end309
  store i32 1, i32* %retval, align 4
  br label %return

if.end311:                                        ; preds = %if.end286
  %168 = load %union.linkroot*, %union.linkroot** %assigns.addr, align 4
  %call312 = call %struct.asgment* @getasg(i8*** %argv.addr, %union.linkroot* %168)
  store %struct.asgment* %call312, %struct.asgment** %asg, align 4
  %tobool313 = icmp ne %struct.asgment* %call312, null
  br i1 %tobool313, label %if.end336, label %if.then314

if.then314:                                       ; preds = %if.end311
  br label %do.body315

do.body315:                                       ; preds = %if.then314
  %169 = load i32, i32* @queueing_enabled, align 4
  %dec316 = add nsw i32 %169, -1
  store i32 %dec316, i32* @queueing_enabled, align 4
  %tobool317 = icmp ne i32 %dec316, 0
  br i1 %tobool317, label %if.end334, label %if.then318

if.then318:                                       ; preds = %do.body315
  br label %do.body319

do.body319:                                       ; preds = %if.then318
  br label %while.cond320

while.cond320:                                    ; preds = %while.body323, %do.body319
  %170 = load i32, i32* @queue_front, align 4
  %171 = load i32, i32* @queue_rear, align 4
  %cmp321 = icmp ne i32 %170, %171
  br i1 %cmp321, label %while.body323, label %while.end332

while.body323:                                    ; preds = %while.cond320
  %172 = load i32, i32* @queue_front, align 4
  %add326 = add nsw i32 %172, 1
  %rem327 = srem i32 %add326, 128
  store i32 %rem327, i32* @queue_front, align 4
  %173 = load i32, i32* @queue_front, align 4
  %arrayidx328 = getelementptr inbounds [128 x %struct.__sigset_t], [128 x %struct.__sigset_t]* @signal_mask_queue, i32 0, i32 %173
  call void @signal_setmask(%struct.__sigset_t* sret %tmp329, %struct.__sigset_t* byval align 4 %arrayidx328)
  %174 = bitcast %struct.__sigset_t* %oset325 to i8*
  %175 = bitcast %struct.__sigset_t* %tmp329 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %174, i8* %175, i32 128, i32 4, i1 false)
  %176 = load i32, i32* @queue_front, align 4
  %arrayidx330 = getelementptr inbounds [128 x i32], [128 x i32]* @signal_queue, i32 0, i32 %176
  %177 = load i32, i32* %arrayidx330, align 4
  call void @zhandler(i32 %177)
  call void @signal_setmask(%struct.__sigset_t* sret %tmp331, %struct.__sigset_t* byval align 4 %oset325)
  br label %while.cond320

while.end332:                                     ; preds = %while.cond320
  br label %do.end333

do.end333:                                        ; preds = %while.end332
  br label %if.end334

if.end334:                                        ; preds = %do.end333, %do.body315
  br label %do.end335

do.end335:                                        ; preds = %if.end334
  store i32 1, i32* %retval, align 4
  br label %return

if.end336:                                        ; preds = %if.end311
  %178 = load %struct.asgment*, %struct.asgment** %asg, align 4
  %179 = bitcast %struct.asgment* %asg0 to i8*
  %180 = bitcast %struct.asgment* %178 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %179, i8* %180, i32 24, i32 4, i1 false)
  %flags = getelementptr inbounds %struct.asgment, %struct.asgment* %asg0, i32 0, i32 2
  %181 = load i32, i32* %flags, align 4
  %and337 = and i32 %181, 1
  %tobool338 = icmp ne i32 %and337, 0
  br i1 %tobool338, label %if.then339, label %if.end362

if.then339:                                       ; preds = %if.end336
  br label %do.body340

do.body340:                                       ; preds = %if.then339
  %182 = load i32, i32* @queueing_enabled, align 4
  %dec341 = add nsw i32 %182, -1
  store i32 %dec341, i32* @queueing_enabled, align 4
  %tobool342 = icmp ne i32 %dec341, 0
  br i1 %tobool342, label %if.end359, label %if.then343

if.then343:                                       ; preds = %do.body340
  br label %do.body344

do.body344:                                       ; preds = %if.then343
  br label %while.cond345

while.cond345:                                    ; preds = %while.body348, %do.body344
  %183 = load i32, i32* @queue_front, align 4
  %184 = load i32, i32* @queue_rear, align 4
  %cmp346 = icmp ne i32 %183, %184
  br i1 %cmp346, label %while.body348, label %while.end357

while.body348:                                    ; preds = %while.cond345
  %185 = load i32, i32* @queue_front, align 4
  %add351 = add nsw i32 %185, 1
  %rem352 = srem i32 %add351, 128
  store i32 %rem352, i32* @queue_front, align 4
  %186 = load i32, i32* @queue_front, align 4
  %arrayidx353 = getelementptr inbounds [128 x %struct.__sigset_t], [128 x %struct.__sigset_t]* @signal_mask_queue, i32 0, i32 %186
  call void @signal_setmask(%struct.__sigset_t* sret %tmp354, %struct.__sigset_t* byval align 4 %arrayidx353)
  %187 = bitcast %struct.__sigset_t* %oset350 to i8*
  %188 = bitcast %struct.__sigset_t* %tmp354 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %187, i8* %188, i32 128, i32 4, i1 false)
  %189 = load i32, i32* @queue_front, align 4
  %arrayidx355 = getelementptr inbounds [128 x i32], [128 x i32]* @signal_queue, i32 0, i32 %189
  %190 = load i32, i32* %arrayidx355, align 4
  call void @zhandler(i32 %190)
  call void @signal_setmask(%struct.__sigset_t* sret %tmp356, %struct.__sigset_t* byval align 4 %oset350)
  br label %while.cond345

while.end357:                                     ; preds = %while.cond345
  br label %do.end358

do.end358:                                        ; preds = %while.end357
  br label %if.end359

if.end359:                                        ; preds = %do.end358, %do.body340
  br label %do.end360

do.end360:                                        ; preds = %if.end359
  %191 = load i8*, i8** %name.addr, align 4
  %name361 = getelementptr inbounds %struct.asgment, %struct.asgment* %asg0, i32 0, i32 1
  %192 = load i8*, i8** %name361, align 4
  call void (i8*, i8*, ...) @zwarnnam(i8* %191, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.54, i32 0, i32 0), i8* %192)
  store i32 1, i32* %retval, align 4
  br label %return

if.end362:                                        ; preds = %if.end336
  %193 = load %union.linkroot*, %union.linkroot** %assigns.addr, align 4
  %call363 = call %struct.asgment* @getasg(i8*** %argv.addr, %union.linkroot* %193)
  store %struct.asgment* %call363, %struct.asgment** %asg, align 4
  %tobool364 = icmp ne %struct.asgment* %call363, null
  br i1 %tobool364, label %if.end387, label %if.then365

if.then365:                                       ; preds = %if.end362
  br label %do.body366

do.body366:                                       ; preds = %if.then365
  %194 = load i32, i32* @queueing_enabled, align 4
  %dec367 = add nsw i32 %194, -1
  store i32 %dec367, i32* @queueing_enabled, align 4
  %tobool368 = icmp ne i32 %dec367, 0
  br i1 %tobool368, label %if.end385, label %if.then369

if.then369:                                       ; preds = %do.body366
  br label %do.body370

do.body370:                                       ; preds = %if.then369
  br label %while.cond371

while.cond371:                                    ; preds = %while.body374, %do.body370
  %195 = load i32, i32* @queue_front, align 4
  %196 = load i32, i32* @queue_rear, align 4
  %cmp372 = icmp ne i32 %195, %196
  br i1 %cmp372, label %while.body374, label %while.end383

while.body374:                                    ; preds = %while.cond371
  %197 = load i32, i32* @queue_front, align 4
  %add377 = add nsw i32 %197, 1
  %rem378 = srem i32 %add377, 128
  store i32 %rem378, i32* @queue_front, align 4
  %198 = load i32, i32* @queue_front, align 4
  %arrayidx379 = getelementptr inbounds [128 x %struct.__sigset_t], [128 x %struct.__sigset_t]* @signal_mask_queue, i32 0, i32 %198
  call void @signal_setmask(%struct.__sigset_t* sret %tmp380, %struct.__sigset_t* byval align 4 %arrayidx379)
  %199 = bitcast %struct.__sigset_t* %oset376 to i8*
  %200 = bitcast %struct.__sigset_t* %tmp380 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %199, i8* %200, i32 128, i32 4, i1 false)
  %201 = load i32, i32* @queue_front, align 4
  %arrayidx381 = getelementptr inbounds [128 x i32], [128 x i32]* @signal_queue, i32 0, i32 %201
  %202 = load i32, i32* %arrayidx381, align 4
  call void @zhandler(i32 %202)
  call void @signal_setmask(%struct.__sigset_t* sret %tmp382, %struct.__sigset_t* byval align 4 %oset376)
  br label %while.cond371

while.end383:                                     ; preds = %while.cond371
  br label %do.end384

do.end384:                                        ; preds = %while.end383
  br label %if.end385

if.end385:                                        ; preds = %do.end384, %do.body366
  br label %do.end386

do.end386:                                        ; preds = %if.end385
  store i32 1, i32* %retval, align 4
  br label %return

if.end387:                                        ; preds = %if.end362
  %203 = load %struct.asgment*, %struct.asgment** %asg, align 4
  %flags388 = getelementptr inbounds %struct.asgment, %struct.asgment* %203, i32 0, i32 2
  %204 = load i32, i32* %flags388, align 4
  %and389 = and i32 %204, 1
  %tobool390 = icmp ne i32 %and389, 0
  br i1 %tobool390, label %if.end416, label %land.lhs.true391

land.lhs.true391:                                 ; preds = %if.end387
  %205 = load %struct.asgment*, %struct.asgment** %asg, align 4
  %value = getelementptr inbounds %struct.asgment, %struct.asgment* %205, i32 0, i32 3
  %scalar = bitcast %union.anon* %value to i8**
  %206 = load i8*, i8** %scalar, align 4
  %tobool392 = icmp ne i8* %206, null
  br i1 %tobool392, label %if.then393, label %if.end416

if.then393:                                       ; preds = %land.lhs.true391
  br label %do.body394

do.body394:                                       ; preds = %if.then393
  %207 = load i32, i32* @queueing_enabled, align 4
  %dec395 = add nsw i32 %207, -1
  store i32 %dec395, i32* @queueing_enabled, align 4
  %tobool396 = icmp ne i32 %dec395, 0
  br i1 %tobool396, label %if.end413, label %if.then397

if.then397:                                       ; preds = %do.body394
  br label %do.body398

do.body398:                                       ; preds = %if.then397
  br label %while.cond399

while.cond399:                                    ; preds = %while.body402, %do.body398
  %208 = load i32, i32* @queue_front, align 4
  %209 = load i32, i32* @queue_rear, align 4
  %cmp400 = icmp ne i32 %208, %209
  br i1 %cmp400, label %while.body402, label %while.end411

while.body402:                                    ; preds = %while.cond399
  %210 = load i32, i32* @queue_front, align 4
  %add405 = add nsw i32 %210, 1
  %rem406 = srem i32 %add405, 128
  store i32 %rem406, i32* @queue_front, align 4
  %211 = load i32, i32* @queue_front, align 4
  %arrayidx407 = getelementptr inbounds [128 x %struct.__sigset_t], [128 x %struct.__sigset_t]* @signal_mask_queue, i32 0, i32 %211
  call void @signal_setmask(%struct.__sigset_t* sret %tmp408, %struct.__sigset_t* byval align 4 %arrayidx407)
  %212 = bitcast %struct.__sigset_t* %oset404 to i8*
  %213 = bitcast %struct.__sigset_t* %tmp408 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %212, i8* %213, i32 128, i32 4, i1 false)
  %214 = load i32, i32* @queue_front, align 4
  %arrayidx409 = getelementptr inbounds [128 x i32], [128 x i32]* @signal_queue, i32 0, i32 %214
  %215 = load i32, i32* %arrayidx409, align 4
  call void @zhandler(i32 %215)
  call void @signal_setmask(%struct.__sigset_t* sret %tmp410, %struct.__sigset_t* byval align 4 %oset404)
  br label %while.cond399

while.end411:                                     ; preds = %while.cond399
  br label %do.end412

do.end412:                                        ; preds = %while.end411
  br label %if.end413

if.end413:                                        ; preds = %do.end412, %do.body394
  br label %do.end414

do.end414:                                        ; preds = %if.end413
  %216 = load i8*, i8** %name.addr, align 4
  %217 = load %struct.asgment*, %struct.asgment** %asg, align 4
  %name415 = getelementptr inbounds %struct.asgment, %struct.asgment* %217, i32 0, i32 1
  %218 = load i8*, i8** %name415, align 4
  call void (i8*, i8*, ...) @zwarnnam(i8* %216, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.55, i32 0, i32 0), i8* %218)
  store i32 1, i32* %retval, align 4
  br label %return

if.end416:                                        ; preds = %land.lhs.true391, %if.end387
  %name417 = getelementptr inbounds %struct.asgment, %struct.asgment* %asg0, i32 0, i32 1
  %219 = load i8*, i8** %name417, align 4
  %220 = load %struct.asgment*, %struct.asgment** %asg, align 4
  %name418 = getelementptr inbounds %struct.asgment, %struct.asgment* %220, i32 0, i32 1
  %221 = load i8*, i8** %name418, align 4
  %call419 = call i32 @strcmp(i8* %219, i8* %221)
  %tobool420 = icmp ne i32 %call419, 0
  br i1 %tobool420, label %if.end444, label %if.then421

if.then421:                                       ; preds = %if.end416
  br label %do.body422

do.body422:                                       ; preds = %if.then421
  %222 = load i32, i32* @queueing_enabled, align 4
  %dec423 = add nsw i32 %222, -1
  store i32 %dec423, i32* @queueing_enabled, align 4
  %tobool424 = icmp ne i32 %dec423, 0
  br i1 %tobool424, label %if.end441, label %if.then425

if.then425:                                       ; preds = %do.body422
  br label %do.body426

do.body426:                                       ; preds = %if.then425
  br label %while.cond427

while.cond427:                                    ; preds = %while.body430, %do.body426
  %223 = load i32, i32* @queue_front, align 4
  %224 = load i32, i32* @queue_rear, align 4
  %cmp428 = icmp ne i32 %223, %224
  br i1 %cmp428, label %while.body430, label %while.end439

while.body430:                                    ; preds = %while.cond427
  %225 = load i32, i32* @queue_front, align 4
  %add433 = add nsw i32 %225, 1
  %rem434 = srem i32 %add433, 128
  store i32 %rem434, i32* @queue_front, align 4
  %226 = load i32, i32* @queue_front, align 4
  %arrayidx435 = getelementptr inbounds [128 x %struct.__sigset_t], [128 x %struct.__sigset_t]* @signal_mask_queue, i32 0, i32 %226
  call void @signal_setmask(%struct.__sigset_t* sret %tmp436, %struct.__sigset_t* byval align 4 %arrayidx435)
  %227 = bitcast %struct.__sigset_t* %oset432 to i8*
  %228 = bitcast %struct.__sigset_t* %tmp436 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %227, i8* %228, i32 128, i32 4, i1 false)
  %229 = load i32, i32* @queue_front, align 4
  %arrayidx437 = getelementptr inbounds [128 x i32], [128 x i32]* @signal_queue, i32 0, i32 %229
  %230 = load i32, i32* %arrayidx437, align 4
  call void @zhandler(i32 %230)
  call void @signal_setmask(%struct.__sigset_t* sret %tmp438, %struct.__sigset_t* byval align 4 %oset432)
  br label %while.cond427

while.end439:                                     ; preds = %while.cond427
  br label %do.end440

do.end440:                                        ; preds = %while.end439
  br label %if.end441

if.end441:                                        ; preds = %do.end440, %do.body422
  br label %do.end442

do.end442:                                        ; preds = %if.end441
  %231 = load i8*, i8** %name.addr, align 4
  %name443 = getelementptr inbounds %struct.asgment, %struct.asgment* %asg0, i32 0, i32 1
  %232 = load i8*, i8** %name443, align 4
  call void (i8*, i8*, ...) @zerrnam(i8* %231, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.56, i32 0, i32 0), i8* %232)
  store i32 1, i32* %retval, align 4
  br label %return

if.end444:                                        ; preds = %if.end416
  %name445 = getelementptr inbounds %struct.asgment, %struct.asgment* %asg0, i32 0, i32 1
  %233 = load i8*, i8** %name445, align 4
  %call446 = call i8* @strchr(i8* %233, i32 91)
  %tobool447 = icmp ne i8* %call446, null
  br i1 %tobool447, label %if.then452, label %lor.lhs.false448

lor.lhs.false448:                                 ; preds = %if.end444
  %234 = load %struct.asgment*, %struct.asgment** %asg, align 4
  %name449 = getelementptr inbounds %struct.asgment, %struct.asgment* %234, i32 0, i32 1
  %235 = load i8*, i8** %name449, align 4
  %call450 = call i8* @strchr(i8* %235, i32 91)
  %tobool451 = icmp ne i8* %call450, null
  br i1 %tobool451, label %if.then452, label %if.end475

if.then452:                                       ; preds = %lor.lhs.false448, %if.end444
  br label %do.body453

do.body453:                                       ; preds = %if.then452
  %236 = load i32, i32* @queueing_enabled, align 4
  %dec454 = add nsw i32 %236, -1
  store i32 %dec454, i32* @queueing_enabled, align 4
  %tobool455 = icmp ne i32 %dec454, 0
  br i1 %tobool455, label %if.end472, label %if.then456

if.then456:                                       ; preds = %do.body453
  br label %do.body457

do.body457:                                       ; preds = %if.then456
  br label %while.cond458

while.cond458:                                    ; preds = %while.body461, %do.body457
  %237 = load i32, i32* @queue_front, align 4
  %238 = load i32, i32* @queue_rear, align 4
  %cmp459 = icmp ne i32 %237, %238
  br i1 %cmp459, label %while.body461, label %while.end470

while.body461:                                    ; preds = %while.cond458
  %239 = load i32, i32* @queue_front, align 4
  %add464 = add nsw i32 %239, 1
  %rem465 = srem i32 %add464, 128
  store i32 %rem465, i32* @queue_front, align 4
  %240 = load i32, i32* @queue_front, align 4
  %arrayidx466 = getelementptr inbounds [128 x %struct.__sigset_t], [128 x %struct.__sigset_t]* @signal_mask_queue, i32 0, i32 %240
  call void @signal_setmask(%struct.__sigset_t* sret %tmp467, %struct.__sigset_t* byval align 4 %arrayidx466)
  %241 = bitcast %struct.__sigset_t* %oset463 to i8*
  %242 = bitcast %struct.__sigset_t* %tmp467 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %241, i8* %242, i32 128, i32 4, i1 false)
  %243 = load i32, i32* @queue_front, align 4
  %arrayidx468 = getelementptr inbounds [128 x i32], [128 x i32]* @signal_queue, i32 0, i32 %243
  %244 = load i32, i32* %arrayidx468, align 4
  call void @zhandler(i32 %244)
  call void @signal_setmask(%struct.__sigset_t* sret %tmp469, %struct.__sigset_t* byval align 4 %oset463)
  br label %while.cond458

while.end470:                                     ; preds = %while.cond458
  br label %do.end471

do.end471:                                        ; preds = %while.end470
  br label %if.end472

if.end472:                                        ; preds = %do.end471, %do.body453
  br label %do.end473

do.end473:                                        ; preds = %if.end472
  %245 = load i8*, i8** %name.addr, align 4
  %name474 = getelementptr inbounds %struct.asgment, %struct.asgment* %asg0, i32 0, i32 1
  %246 = load i8*, i8** %name474, align 4
  call void (i8*, i8*, ...) @zerrnam(i8* %245, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.57, i32 0, i32 0), i8* %246)
  store i32 1, i32* %retval, align 4
  br label %return

if.end475:                                        ; preds = %lor.lhs.false448
  %247 = load %struct.asgment*, %struct.asgment** %asg, align 4
  %flags476 = getelementptr inbounds %struct.asgment, %struct.asgment* %247, i32 0, i32 2
  %248 = load i32, i32* %flags476, align 4
  %and477 = and i32 %248, 1
  %tobool478 = icmp ne i32 %and477, 0
  br i1 %tobool478, label %land.lhs.true484, label %lor.lhs.false479

lor.lhs.false479:                                 ; preds = %if.end475
  %249 = load %struct.asgment*, %struct.asgment** %asg, align 4
  %value480 = getelementptr inbounds %struct.asgment, %struct.asgment* %249, i32 0, i32 3
  %scalar481 = bitcast %union.anon* %value480 to i8**
  %250 = load i8*, i8** %scalar481, align 4
  %cmp482 = icmp ne i8* %250, null
  br i1 %cmp482, label %land.lhs.true484, label %if.end516

land.lhs.true484:                                 ; preds = %lor.lhs.false479, %if.end475
  %flags485 = getelementptr inbounds %struct.asgment, %struct.asgment* %asg0, i32 0, i32 2
  %251 = load i32, i32* %flags485, align 4
  %and486 = and i32 %251, 1
  %tobool487 = icmp ne i32 %and486, 0
  br i1 %tobool487, label %if.then493, label %lor.lhs.false488

lor.lhs.false488:                                 ; preds = %land.lhs.true484
  %value489 = getelementptr inbounds %struct.asgment, %struct.asgment* %asg0, i32 0, i32 3
  %scalar490 = bitcast %union.anon* %value489 to i8**
  %252 = load i8*, i8** %scalar490, align 4
  %cmp491 = icmp ne i8* %252, null
  br i1 %cmp491, label %if.then493, label %if.end516

if.then493:                                       ; preds = %lor.lhs.false488, %land.lhs.true484
  br label %do.body494

do.body494:                                       ; preds = %if.then493
  %253 = load i32, i32* @queueing_enabled, align 4
  %dec495 = add nsw i32 %253, -1
  store i32 %dec495, i32* @queueing_enabled, align 4
  %tobool496 = icmp ne i32 %dec495, 0
  br i1 %tobool496, label %if.end513, label %if.then497

if.then497:                                       ; preds = %do.body494
  br label %do.body498

do.body498:                                       ; preds = %if.then497
  br label %while.cond499

while.cond499:                                    ; preds = %while.body502, %do.body498
  %254 = load i32, i32* @queue_front, align 4
  %255 = load i32, i32* @queue_rear, align 4
  %cmp500 = icmp ne i32 %254, %255
  br i1 %cmp500, label %while.body502, label %while.end511

while.body502:                                    ; preds = %while.cond499
  %256 = load i32, i32* @queue_front, align 4
  %add505 = add nsw i32 %256, 1
  %rem506 = srem i32 %add505, 128
  store i32 %rem506, i32* @queue_front, align 4
  %257 = load i32, i32* @queue_front, align 4
  %arrayidx507 = getelementptr inbounds [128 x %struct.__sigset_t], [128 x %struct.__sigset_t]* @signal_mask_queue, i32 0, i32 %257
  call void @signal_setmask(%struct.__sigset_t* sret %tmp508, %struct.__sigset_t* byval align 4 %arrayidx507)
  %258 = bitcast %struct.__sigset_t* %oset504 to i8*
  %259 = bitcast %struct.__sigset_t* %tmp508 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %258, i8* %259, i32 128, i32 4, i1 false)
  %260 = load i32, i32* @queue_front, align 4
  %arrayidx509 = getelementptr inbounds [128 x i32], [128 x i32]* @signal_queue, i32 0, i32 %260
  %261 = load i32, i32* %arrayidx509, align 4
  call void @zhandler(i32 %261)
  call void @signal_setmask(%struct.__sigset_t* sret %tmp510, %struct.__sigset_t* byval align 4 %oset504)
  br label %while.cond499

while.end511:                                     ; preds = %while.cond499
  br label %do.end512

do.end512:                                        ; preds = %while.end511
  br label %if.end513

if.end513:                                        ; preds = %do.end512, %do.body494
  br label %do.end514

do.end514:                                        ; preds = %if.end513
  %262 = load i8*, i8** %name.addr, align 4
  %name515 = getelementptr inbounds %struct.asgment, %struct.asgment* %asg0, i32 0, i32 1
  %263 = load i8*, i8** %name515, align 4
  call void (i8*, i8*, ...) @zerrnam(i8* %262, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.58, i32 0, i32 0), i8* %263)
  store i32 1, i32* %retval, align 4
  br label %return

if.end516:                                        ; preds = %lor.lhs.false488, %lor.lhs.false479
  %264 = load i8**, i8*** %argv.addr, align 4
  %265 = load i8*, i8** %264, align 4
  %tobool517 = icmp ne i8* %265, null
  br i1 %tobool517, label %if.then518, label %if.else519

if.then518:                                       ; preds = %if.end516
  %266 = load i8**, i8*** %argv.addr, align 4
  %267 = load i8*, i8** %266, align 4
  store i8* %267, i8** %joinstr, align 4
  br label %if.end567

if.else519:                                       ; preds = %if.end516
  %268 = load %union.linkroot*, %union.linkroot** %assigns.addr, align 4
  %tobool520 = icmp ne %union.linkroot* %268, null
  br i1 %tobool520, label %land.lhs.true521, label %if.else565

land.lhs.true521:                                 ; preds = %if.else519
  %269 = load %union.linkroot*, %union.linkroot** %assigns.addr, align 4
  %list522 = bitcast %union.linkroot* %269 to %struct.linklist*
  %first523 = getelementptr inbounds %struct.linklist, %struct.linklist* %list522, i32 0, i32 0
  %270 = load %struct.linknode*, %struct.linknode** %first523, align 4
  %tobool524 = icmp ne %struct.linknode* %270, null
  br i1 %tobool524, label %if.then525, label %if.else565

if.then525:                                       ; preds = %land.lhs.true521
  %271 = load %union.linkroot*, %union.linkroot** %assigns.addr, align 4
  %list527 = bitcast %union.linkroot* %271 to %struct.linklist*
  %first528 = getelementptr inbounds %struct.linklist, %struct.linklist* %list527, i32 0, i32 0
  %272 = load %struct.linknode*, %struct.linknode** %first528, align 4
  %273 = bitcast %struct.linknode* %272 to %struct.asgment*
  store %struct.asgment* %273, %struct.asgment** %nextasg, align 4
  %274 = load %struct.asgment*, %struct.asgment** %nextasg, align 4
  %flags529 = getelementptr inbounds %struct.asgment, %struct.asgment* %274, i32 0, i32 2
  %275 = load i32, i32* %flags529, align 4
  %and530 = and i32 %275, 1
  %tobool531 = icmp ne i32 %and530, 0
  br i1 %tobool531, label %if.then541, label %lor.lhs.false532

lor.lhs.false532:                                 ; preds = %if.then525
  %276 = load %struct.asgment*, %struct.asgment** %nextasg, align 4
  %flags533 = getelementptr inbounds %struct.asgment, %struct.asgment* %276, i32 0, i32 2
  %277 = load i32, i32* %flags533, align 4
  %and534 = and i32 %277, 1
  %tobool535 = icmp ne i32 %and534, 0
  br i1 %tobool535, label %if.then541, label %lor.lhs.false536

lor.lhs.false536:                                 ; preds = %lor.lhs.false532
  %278 = load %struct.asgment*, %struct.asgment** %nextasg, align 4
  %value537 = getelementptr inbounds %struct.asgment, %struct.asgment* %278, i32 0, i32 3
  %scalar538 = bitcast %union.anon* %value537 to i8**
  %279 = load i8*, i8** %scalar538, align 4
  %cmp539 = icmp ne i8* %279, null
  br i1 %cmp539, label %if.then541, label %if.end563

if.then541:                                       ; preds = %lor.lhs.false536, %lor.lhs.false532, %if.then525
  %280 = load i8*, i8** %name.addr, align 4
  call void (i8*, i8*, ...) @zwarnnam(i8* %280, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.59, i32 0, i32 0))
  br label %do.body542

do.body542:                                       ; preds = %if.then541
  %281 = load i32, i32* @queueing_enabled, align 4
  %dec543 = add nsw i32 %281, -1
  store i32 %dec543, i32* @queueing_enabled, align 4
  %tobool544 = icmp ne i32 %dec543, 0
  br i1 %tobool544, label %if.end561, label %if.then545

if.then545:                                       ; preds = %do.body542
  br label %do.body546

do.body546:                                       ; preds = %if.then545
  br label %while.cond547

while.cond547:                                    ; preds = %while.body550, %do.body546
  %282 = load i32, i32* @queue_front, align 4
  %283 = load i32, i32* @queue_rear, align 4
  %cmp548 = icmp ne i32 %282, %283
  br i1 %cmp548, label %while.body550, label %while.end559

while.body550:                                    ; preds = %while.cond547
  %284 = load i32, i32* @queue_front, align 4
  %add553 = add nsw i32 %284, 1
  %rem554 = srem i32 %add553, 128
  store i32 %rem554, i32* @queue_front, align 4
  %285 = load i32, i32* @queue_front, align 4
  %arrayidx555 = getelementptr inbounds [128 x %struct.__sigset_t], [128 x %struct.__sigset_t]* @signal_mask_queue, i32 0, i32 %285
  call void @signal_setmask(%struct.__sigset_t* sret %tmp556, %struct.__sigset_t* byval align 4 %arrayidx555)
  %286 = bitcast %struct.__sigset_t* %oset552 to i8*
  %287 = bitcast %struct.__sigset_t* %tmp556 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %286, i8* %287, i32 128, i32 4, i1 false)
  %288 = load i32, i32* @queue_front, align 4
  %arrayidx557 = getelementptr inbounds [128 x i32], [128 x i32]* @signal_queue, i32 0, i32 %288
  %289 = load i32, i32* %arrayidx557, align 4
  call void @zhandler(i32 %289)
  call void @signal_setmask(%struct.__sigset_t* sret %tmp558, %struct.__sigset_t* byval align 4 %oset552)
  br label %while.cond547

while.end559:                                     ; preds = %while.cond547
  br label %do.end560

do.end560:                                        ; preds = %while.end559
  br label %if.end561

if.end561:                                        ; preds = %do.end560, %do.body542
  br label %do.end562

do.end562:                                        ; preds = %if.end561
  store i32 1, i32* %retval, align 4
  br label %return

if.end563:                                        ; preds = %lor.lhs.false536
  %290 = load %struct.asgment*, %struct.asgment** %nextasg, align 4
  %name564 = getelementptr inbounds %struct.asgment, %struct.asgment* %290, i32 0, i32 1
  %291 = load i8*, i8** %name564, align 4
  store i8* %291, i8** %joinstr, align 4
  br label %if.end566

if.else565:                                       ; preds = %land.lhs.true521, %if.else519
  store i8* null, i8** %joinstr, align 4
  br label %if.end566

if.end566:                                        ; preds = %if.else565, %if.end563
  br label %if.end567

if.end567:                                        ; preds = %if.end566, %if.then518
  %292 = load i8*, i8** %joinstr, align 4
  %tobool568 = icmp ne i8* %292, null
  br i1 %tobool568, label %if.else570, label %if.then569

if.then569:                                       ; preds = %if.end567
  store i32 58, i32* %joinchar, align 4
  br label %if.end584

if.else570:                                       ; preds = %if.end567
  %293 = load i8*, i8** %joinstr, align 4
  %294 = load i8, i8* %293, align 1
  %tobool571 = icmp ne i8 %294, 0
  br i1 %tobool571, label %if.else573, label %if.then572

if.then572:                                       ; preds = %if.else570
  store i32 0, i32* %joinchar, align 4
  br label %if.end583

if.else573:                                       ; preds = %if.else570
  %295 = load i8*, i8** %joinstr, align 4
  %296 = load i8, i8* %295, align 1
  %conv574 = sext i8 %296 to i32
  %cmp575 = icmp eq i32 %conv574, -125
  br i1 %cmp575, label %if.then577, label %if.else580

if.then577:                                       ; preds = %if.else573
  %297 = load i8*, i8** %joinstr, align 4
  %arrayidx578 = getelementptr inbounds i8, i8* %297, i32 1
  %298 = load i8, i8* %arrayidx578, align 1
  %conv579 = sext i8 %298 to i32
  %xor = xor i32 %conv579, 32
  store i32 %xor, i32* %joinchar, align 4
  br label %if.end582

if.else580:                                       ; preds = %if.else573
  %299 = load i8*, i8** %joinstr, align 4
  %300 = load i8, i8* %299, align 1
  %conv581 = sext i8 %300 to i32
  store i32 %conv581, i32* %joinchar, align 4
  br label %if.end582

if.end582:                                        ; preds = %if.else580, %if.then577
  br label %if.end583

if.end583:                                        ; preds = %if.end582, %if.then572
  br label %if.end584

if.end584:                                        ; preds = %if.end583, %if.then569
  %301 = load %struct.hashtable*, %struct.hashtable** @paramtab, align 4
  %getnode = getelementptr inbounds %struct.hashtable, %struct.hashtable* %301, i32 0, i32 9
  %302 = load %struct.hashnode* (%struct.hashtable*, i8*)*, %struct.hashnode* (%struct.hashtable*, i8*)** %getnode, align 4
  %303 = load %struct.hashtable*, %struct.hashtable** @paramtab, align 4
  %name585 = getelementptr inbounds %struct.asgment, %struct.asgment* %asg0, i32 0, i32 1
  %304 = load i8*, i8** %name585, align 4
  %call586 = call %struct.hashnode* %302(%struct.hashtable* %303, i8* %304)
  %305 = bitcast %struct.hashnode* %call586 to %struct.param*
  store %struct.param* %305, %struct.param** %pm, align 4
  %tobool587 = icmp ne %struct.param* %305, null
  br i1 %tobool587, label %land.lhs.true588, label %if.end692

land.lhs.true588:                                 ; preds = %if.end584
  %306 = load %struct.param*, %struct.param** %pm, align 4
  %node = getelementptr inbounds %struct.param, %struct.param* %306, i32 0, i32 0
  %flags589 = getelementptr inbounds %struct.hashnode, %struct.hashnode* %node, i32 0, i32 2
  %307 = load i32, i32* %flags589, align 8
  %and590 = and i32 %307, 33554432
  %tobool591 = icmp ne i32 %and590, 0
  br i1 %tobool591, label %if.end692, label %land.lhs.true592

land.lhs.true592:                                 ; preds = %land.lhs.true588
  %308 = load i32, i32* @locallevel, align 4
  %309 = load %struct.param*, %struct.param** %pm, align 4
  %level = getelementptr inbounds %struct.param, %struct.param* %309, i32 0, i32 8
  %310 = load i32, i32* %level, align 8
  %cmp593 = icmp eq i32 %308, %310
  br i1 %cmp593, label %if.then598, label %lor.lhs.false595

lor.lhs.false595:                                 ; preds = %land.lhs.true592
  %311 = load i32, i32* %on, align 4
  %and596 = and i32 %311, 2097152
  %tobool597 = icmp ne i32 %and596, 0
  br i1 %tobool597, label %if.end692, label %if.then598

if.then598:                                       ; preds = %lor.lhs.false595, %land.lhs.true592
  %312 = load %struct.param*, %struct.param** %pm, align 4
  %node599 = getelementptr inbounds %struct.param, %struct.param* %312, i32 0, i32 0
  %flags600 = getelementptr inbounds %struct.hashnode, %struct.hashnode* %node599, i32 0, i32 2
  %313 = load i32, i32* %flags600, align 8
  %and601 = and i32 %313, 65536
  %tobool602 = icmp ne i32 %and601, 0
  br i1 %tobool602, label %if.then603, label %if.end669

if.then603:                                       ; preds = %if.then598
  br label %do.body604

do.body604:                                       ; preds = %if.then603
  %314 = load i32, i32* @queueing_enabled, align 4
  %dec605 = add nsw i32 %314, -1
  store i32 %dec605, i32* @queueing_enabled, align 4
  %tobool606 = icmp ne i32 %dec605, 0
  br i1 %tobool606, label %if.end623, label %if.then607

if.then607:                                       ; preds = %do.body604
  br label %do.body608

do.body608:                                       ; preds = %if.then607
  br label %while.cond609

while.cond609:                                    ; preds = %while.body612, %do.body608
  %315 = load i32, i32* @queue_front, align 4
  %316 = load i32, i32* @queue_rear, align 4
  %cmp610 = icmp ne i32 %315, %316
  br i1 %cmp610, label %while.body612, label %while.end621

while.body612:                                    ; preds = %while.cond609
  %317 = load i32, i32* @queue_front, align 4
  %add615 = add nsw i32 %317, 1
  %rem616 = srem i32 %add615, 128
  store i32 %rem616, i32* @queue_front, align 4
  %318 = load i32, i32* @queue_front, align 4
  %arrayidx617 = getelementptr inbounds [128 x %struct.__sigset_t], [128 x %struct.__sigset_t]* @signal_mask_queue, i32 0, i32 %318
  call void @signal_setmask(%struct.__sigset_t* sret %tmp618, %struct.__sigset_t* byval align 4 %arrayidx617)
  %319 = bitcast %struct.__sigset_t* %oset614 to i8*
  %320 = bitcast %struct.__sigset_t* %tmp618 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %319, i8* %320, i32 128, i32 4, i1 false)
  %321 = load i32, i32* @queue_front, align 4
  %arrayidx619 = getelementptr inbounds [128 x i32], [128 x i32]* @signal_queue, i32 0, i32 %321
  %322 = load i32, i32* %arrayidx619, align 4
  call void @zhandler(i32 %322)
  call void @signal_setmask(%struct.__sigset_t* sret %tmp620, %struct.__sigset_t* byval align 4 %oset614)
  br label %while.cond609

while.end621:                                     ; preds = %while.cond609
  br label %do.end622

do.end622:                                        ; preds = %while.end621
  br label %if.end623

if.end623:                                        ; preds = %do.end622, %do.body604
  br label %do.end624

do.end624:                                        ; preds = %if.end623
  %323 = load %struct.param*, %struct.param** %pm, align 4
  %node625 = getelementptr inbounds %struct.param, %struct.param* %323, i32 0, i32 0
  %flags626 = getelementptr inbounds %struct.hashnode, %struct.hashnode* %node625, i32 0, i32 2
  %324 = load i32, i32* %flags626, align 8
  %and627 = and i32 %324, 31
  %cmp628 = icmp ne i32 %and627, 0
  br i1 %cmp628, label %if.then630, label %if.else632

if.then630:                                       ; preds = %do.end624
  %325 = load i8*, i8** %name.addr, align 4
  %name631 = getelementptr inbounds %struct.asgment, %struct.asgment* %asg0, i32 0, i32 1
  %326 = load i8*, i8** %name631, align 4
  call void (i8*, i8*, ...) @zwarnnam(i8* %325, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.60, i32 0, i32 0), i8* %326)
  br label %if.end668

if.else632:                                       ; preds = %do.end624
  %327 = load %struct.asgment*, %struct.asgment** %asg, align 4
  %name633 = getelementptr inbounds %struct.asgment, %struct.asgment* %327, i32 0, i32 1
  %328 = load i8*, i8** %name633, align 4
  %329 = load %struct.param*, %struct.param** %pm, align 4
  %ename = getelementptr inbounds %struct.param, %struct.param* %329, i32 0, i32 6
  %330 = load i8*, i8** %ename, align 8
  %call634 = call i32 @strcmp(i8* %328, i8* %330)
  %tobool635 = icmp ne i32 %call634, 0
  br i1 %tobool635, label %if.else665, label %if.then636

if.then636:                                       ; preds = %if.else632
  %331 = load %struct.param*, %struct.param** %pm, align 4
  %u = getelementptr inbounds %struct.param, %struct.param* %331, i32 0, i32 1
  %data = bitcast %union.anon.0* %u to i8**
  %332 = load i8*, i8** %data, align 8
  %333 = bitcast i8* %332 to %struct.tieddata*
  store %struct.tieddata* %333, %struct.tieddata** %tdp, align 4
  %334 = load %struct.asgment*, %struct.asgment** %asg, align 4
  %flags640 = getelementptr inbounds %struct.asgment, %struct.asgment* %334, i32 0, i32 2
  %335 = load i32, i32* %flags640, align 4
  %and641 = and i32 %335, 2
  %tobool642 = icmp ne i32 %and641, 0
  %cond643 = select i1 %tobool642, i32 16, i32 0
  store i32 %cond643, i32* %flags639, align 4
  %336 = load i32, i32* %joinchar, align 4
  %337 = load %struct.tieddata*, %struct.tieddata** %tdp, align 4
  %joinchar644 = getelementptr inbounds %struct.tieddata, %struct.tieddata* %337, i32 0, i32 1
  store i32 %336, i32* %joinchar644, align 4
  %value645 = getelementptr inbounds %struct.asgment, %struct.asgment* %asg0, i32 0, i32 3
  %scalar646 = bitcast %union.anon* %value645 to i8**
  %338 = load i8*, i8** %scalar646, align 4
  %tobool647 = icmp ne i8* %338, null
  br i1 %tobool647, label %if.then648, label %if.else654

if.then648:                                       ; preds = %if.then636
  %name649 = getelementptr inbounds %struct.asgment, %struct.asgment* %asg0, i32 0, i32 1
  %339 = load i8*, i8** %name649, align 4
  %value650 = getelementptr inbounds %struct.asgment, %struct.asgment* %asg0, i32 0, i32 3
  %scalar651 = bitcast %union.anon* %value650 to i8**
  %340 = load i8*, i8** %scalar651, align 4
  %call652 = call i8* @ztrdup(i8* %340)
  %call653 = call %struct.param* @assignsparam(i8* %339, i8* %call652, i32 0)
  br label %if.end664

if.else654:                                       ; preds = %if.then636
  %341 = load %struct.asgment*, %struct.asgment** %asg, align 4
  %value655 = getelementptr inbounds %struct.asgment, %struct.asgment* %341, i32 0, i32 3
  %array = bitcast %union.anon* %value655 to %union.linkroot**
  %342 = load %union.linkroot*, %union.linkroot** %array, align 4
  %tobool656 = icmp ne %union.linkroot* %342, null
  br i1 %tobool656, label %if.then657, label %if.end663

if.then657:                                       ; preds = %if.else654
  %343 = load %struct.asgment*, %struct.asgment** %asg, align 4
  %name658 = getelementptr inbounds %struct.asgment, %struct.asgment* %343, i32 0, i32 1
  %344 = load i8*, i8** %name658, align 4
  %345 = load %struct.asgment*, %struct.asgment** %asg, align 4
  %value659 = getelementptr inbounds %struct.asgment, %struct.asgment* %345, i32 0, i32 3
  %array660 = bitcast %union.anon* %value659 to %union.linkroot**
  %346 = load %union.linkroot*, %union.linkroot** %array660, align 4
  %call661 = call i8** @zlinklist2array(%union.linkroot* %346)
  %347 = load i32, i32* %flags639, align 4
  %call662 = call %struct.param* @assignaparam(i8* %344, i8** %call661, i32 %347)
  br label %if.end663

if.end663:                                        ; preds = %if.then657, %if.else654
  br label %if.end664

if.end664:                                        ; preds = %if.end663, %if.then648
  store i32 0, i32* %retval, align 4
  br label %return

if.else665:                                       ; preds = %if.else632
  %348 = load i8*, i8** %name.addr, align 4
  %name666 = getelementptr inbounds %struct.asgment, %struct.asgment* %asg0, i32 0, i32 1
  %349 = load i8*, i8** %name666, align 4
  call void (i8*, i8*, ...) @zwarnnam(i8* %348, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.61, i32 0, i32 0), i8* %349)
  br label %if.end667

if.end667:                                        ; preds = %if.else665
  br label %if.end668

if.end668:                                        ; preds = %if.end667, %if.then630
  store i32 1, i32* %retval, align 4
  br label %return

if.end669:                                        ; preds = %if.then598
  %value670 = getelementptr inbounds %struct.asgment, %struct.asgment* %asg0, i32 0, i32 3
  %scalar671 = bitcast %union.anon* %value670 to i8**
  %350 = load i8*, i8** %scalar671, align 4
  %tobool672 = icmp ne i8* %350, null
  br i1 %tobool672, label %if.end687, label %land.lhs.true673

land.lhs.true673:                                 ; preds = %if.end669
  %351 = load %struct.asgment*, %struct.asgment** %asg, align 4
  %value674 = getelementptr inbounds %struct.asgment, %struct.asgment* %351, i32 0, i32 3
  %array675 = bitcast %union.anon* %value674 to %union.linkroot**
  %352 = load %union.linkroot*, %union.linkroot** %array675, align 4
  %tobool676 = icmp ne %union.linkroot* %352, null
  br i1 %tobool676, label %if.end687, label %land.lhs.true677

land.lhs.true677:                                 ; preds = %land.lhs.true673
  %353 = load %struct.param*, %struct.param** %pm, align 4
  %node678 = getelementptr inbounds %struct.param, %struct.param* %353, i32 0, i32 0
  %flags679 = getelementptr inbounds %struct.hashnode, %struct.hashnode* %node678, i32 0, i32 2
  %354 = load i32, i32* %flags679, align 8
  %and680 = and i32 %354, 31
  %and681 = and i32 %and680, 17
  %tobool682 = icmp ne i32 %and681, 0
  br i1 %tobool682, label %if.end687, label %if.then683

if.then683:                                       ; preds = %land.lhs.true677
  %name684 = getelementptr inbounds %struct.asgment, %struct.asgment* %asg0, i32 0, i32 1
  %355 = load i8*, i8** %name684, align 4
  %call685 = call i8* @getsparam(i8* %355)
  %call686 = call i8* @ztrdup(i8* %call685)
  store i8* %call686, i8** %oldval, align 4
  br label %if.end687

if.end687:                                        ; preds = %if.then683, %land.lhs.true677, %land.lhs.true673, %if.end669
  %356 = load %struct.param*, %struct.param** %pm, align 4
  %node688 = getelementptr inbounds %struct.param, %struct.param* %356, i32 0, i32 0
  %flags689 = getelementptr inbounds %struct.hashnode, %struct.hashnode* %node688, i32 0, i32 2
  %357 = load i32, i32* %flags689, align 8
  %and690 = and i32 %357, 4096
  %358 = load i32, i32* %on, align 4
  %or691 = or i32 %358, %and690
  store i32 %or691, i32* %on, align 4
  br label %if.end692

if.end692:                                        ; preds = %if.end687, %lor.lhs.false595, %land.lhs.true588, %if.end584
  %359 = load %struct.asgment*, %struct.asgment** %asg, align 4
  %name693 = getelementptr inbounds %struct.asgment, %struct.asgment* %359, i32 0, i32 1
  %360 = load i8*, i8** %name693, align 4
  %name694 = getelementptr inbounds %struct.asgment, %struct.asgment* %asg2, i32 0, i32 1
  store i8* %360, i8** %name694, align 4
  %flags695 = getelementptr inbounds %struct.asgment, %struct.asgment* %asg2, i32 0, i32 2
  store i32 0, i32* %flags695, align 4
  %value696 = getelementptr inbounds %struct.asgment, %struct.asgment* %asg2, i32 0, i32 3
  %array697 = bitcast %union.anon* %value696 to %union.linkroot**
  store %union.linkroot* null, %union.linkroot** %array697, align 4
  %361 = load i8*, i8** %name.addr, align 4
  %362 = load %struct.asgment*, %struct.asgment** %asg, align 4
  %name698 = getelementptr inbounds %struct.asgment, %struct.asgment* %362, i32 0, i32 1
  %363 = load i8*, i8** %name698, align 4
  %364 = load %struct.hashtable*, %struct.hashtable** @paramtab, align 4
  %getnode699 = getelementptr inbounds %struct.hashtable, %struct.hashtable* %364, i32 0, i32 9
  %365 = load %struct.hashnode* (%struct.hashtable*, i8*)*, %struct.hashnode* (%struct.hashtable*, i8*)** %getnode699, align 4
  %366 = load %struct.hashtable*, %struct.hashtable** @paramtab, align 4
  %367 = load %struct.asgment*, %struct.asgment** %asg, align 4
  %name700 = getelementptr inbounds %struct.asgment, %struct.asgment* %367, i32 0, i32 1
  %368 = load i8*, i8** %name700, align 4
  %call701 = call %struct.hashnode* %365(%struct.hashtable* %366, i8* %368)
  %369 = bitcast %struct.hashnode* %call701 to %struct.param*
  %370 = load i32, i32* %func.addr, align 4
  %371 = load i32, i32* %on, align 4
  %or702 = or i32 %371, 1
  %and703 = and i32 %or702, -4097
  %372 = load i32, i32* %off, align 4
  %373 = load i32, i32* %roff, align 4
  %374 = load %struct.options*, %struct.options** %ops.addr, align 4
  %call704 = call %struct.param* @typeset_single(i8* %361, i8* %363, %struct.param* %369, i32 %370, i32 %and703, i32 %372, i32 %373, %struct.asgment* %asg2, %struct.param* null, %struct.options* %374, i32 0)
  store %struct.param* %call704, %struct.param** %apm, align 4
  %tobool705 = icmp ne %struct.param* %call704, null
  br i1 %tobool705, label %if.end731, label %if.then706

if.then706:                                       ; preds = %if.end692
  %375 = load i8*, i8** %oldval, align 4
  %tobool707 = icmp ne i8* %375, null
  br i1 %tobool707, label %if.then708, label %if.end709

if.then708:                                       ; preds = %if.then706
  %376 = load i8*, i8** %oldval, align 4
  call void @zsfree(i8* %376)
  br label %if.end709

if.end709:                                        ; preds = %if.then708, %if.then706
  br label %do.body710

do.body710:                                       ; preds = %if.end709
  %377 = load i32, i32* @queueing_enabled, align 4
  %dec711 = add nsw i32 %377, -1
  store i32 %dec711, i32* @queueing_enabled, align 4
  %tobool712 = icmp ne i32 %dec711, 0
  br i1 %tobool712, label %if.end729, label %if.then713

if.then713:                                       ; preds = %do.body710
  br label %do.body714

do.body714:                                       ; preds = %if.then713
  br label %while.cond715

while.cond715:                                    ; preds = %while.body718, %do.body714
  %378 = load i32, i32* @queue_front, align 4
  %379 = load i32, i32* @queue_rear, align 4
  %cmp716 = icmp ne i32 %378, %379
  br i1 %cmp716, label %while.body718, label %while.end727

while.body718:                                    ; preds = %while.cond715
  %380 = load i32, i32* @queue_front, align 4
  %add721 = add nsw i32 %380, 1
  %rem722 = srem i32 %add721, 128
  store i32 %rem722, i32* @queue_front, align 4
  %381 = load i32, i32* @queue_front, align 4
  %arrayidx723 = getelementptr inbounds [128 x %struct.__sigset_t], [128 x %struct.__sigset_t]* @signal_mask_queue, i32 0, i32 %381
  call void @signal_setmask(%struct.__sigset_t* sret %tmp724, %struct.__sigset_t* byval align 4 %arrayidx723)
  %382 = bitcast %struct.__sigset_t* %oset720 to i8*
  %383 = bitcast %struct.__sigset_t* %tmp724 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %382, i8* %383, i32 128, i32 4, i1 false)
  %384 = load i32, i32* @queue_front, align 4
  %arrayidx725 = getelementptr inbounds [128 x i32], [128 x i32]* @signal_queue, i32 0, i32 %384
  %385 = load i32, i32* %arrayidx725, align 4
  call void @zhandler(i32 %385)
  call void @signal_setmask(%struct.__sigset_t* sret %tmp726, %struct.__sigset_t* byval align 4 %oset720)
  br label %while.cond715

while.end727:                                     ; preds = %while.cond715
  br label %do.end728

do.end728:                                        ; preds = %while.end727
  br label %if.end729

if.end729:                                        ; preds = %do.end728, %do.body710
  br label %do.end730

do.end730:                                        ; preds = %if.end729
  store i32 1, i32* %retval, align 4
  br label %return

if.end731:                                        ; preds = %if.end692
  %386 = load i8*, i8** %name.addr, align 4
  %name732 = getelementptr inbounds %struct.asgment, %struct.asgment* %asg0, i32 0, i32 1
  %387 = load i8*, i8** %name732, align 4
  %388 = load %struct.hashtable*, %struct.hashtable** @paramtab, align 4
  %getnode733 = getelementptr inbounds %struct.hashtable, %struct.hashtable* %388, i32 0, i32 9
  %389 = load %struct.hashnode* (%struct.hashtable*, i8*)*, %struct.hashnode* (%struct.hashtable*, i8*)** %getnode733, align 4
  %390 = load %struct.hashtable*, %struct.hashtable** @paramtab, align 4
  %name734 = getelementptr inbounds %struct.asgment, %struct.asgment* %asg0, i32 0, i32 1
  %391 = load i8*, i8** %name734, align 4
  %call735 = call %struct.hashnode* %389(%struct.hashtable* %390, i8* %391)
  %392 = bitcast %struct.hashnode* %call735 to %struct.param*
  %393 = load i32, i32* %func.addr, align 4
  %394 = load i32, i32* %on, align 4
  %395 = load i32, i32* %off, align 4
  %396 = load i32, i32* %roff, align 4
  %397 = load %struct.param*, %struct.param** %apm, align 4
  %398 = load %struct.options*, %struct.options** %ops.addr, align 4
  %399 = load i32, i32* %joinchar, align 4
  %call736 = call %struct.param* @typeset_single(i8* %386, i8* %387, %struct.param* %392, i32 %393, i32 %394, i32 %395, i32 %396, %struct.asgment* %asg0, %struct.param* %397, %struct.options* %398, i32 %399)
  store %struct.param* %call736, %struct.param** %pm, align 4
  %tobool737 = icmp ne %struct.param* %call736, null
  br i1 %tobool737, label %if.end764, label %if.then738

if.then738:                                       ; preds = %if.end731
  %400 = load i8*, i8** %oldval, align 4
  %tobool739 = icmp ne i8* %400, null
  br i1 %tobool739, label %if.then740, label %if.end741

if.then740:                                       ; preds = %if.then738
  %401 = load i8*, i8** %oldval, align 4
  call void @zsfree(i8* %401)
  br label %if.end741

if.end741:                                        ; preds = %if.then740, %if.then738
  %402 = load %struct.param*, %struct.param** %apm, align 4
  %call742 = call i32 @unsetparam_pm(%struct.param* %402, i32 1, i32 1)
  br label %do.body743

do.body743:                                       ; preds = %if.end741
  %403 = load i32, i32* @queueing_enabled, align 4
  %dec744 = add nsw i32 %403, -1
  store i32 %dec744, i32* @queueing_enabled, align 4
  %tobool745 = icmp ne i32 %dec744, 0
  br i1 %tobool745, label %if.end762, label %if.then746

if.then746:                                       ; preds = %do.body743
  br label %do.body747

do.body747:                                       ; preds = %if.then746
  br label %while.cond748

while.cond748:                                    ; preds = %while.body751, %do.body747
  %404 = load i32, i32* @queue_front, align 4
  %405 = load i32, i32* @queue_rear, align 4
  %cmp749 = icmp ne i32 %404, %405
  br i1 %cmp749, label %while.body751, label %while.end760

while.body751:                                    ; preds = %while.cond748
  %406 = load i32, i32* @queue_front, align 4
  %add754 = add nsw i32 %406, 1
  %rem755 = srem i32 %add754, 128
  store i32 %rem755, i32* @queue_front, align 4
  %407 = load i32, i32* @queue_front, align 4
  %arrayidx756 = getelementptr inbounds [128 x %struct.__sigset_t], [128 x %struct.__sigset_t]* @signal_mask_queue, i32 0, i32 %407
  call void @signal_setmask(%struct.__sigset_t* sret %tmp757, %struct.__sigset_t* byval align 4 %arrayidx756)
  %408 = bitcast %struct.__sigset_t* %oset753 to i8*
  %409 = bitcast %struct.__sigset_t* %tmp757 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %408, i8* %409, i32 128, i32 4, i1 false)
  %410 = load i32, i32* @queue_front, align 4
  %arrayidx758 = getelementptr inbounds [128 x i32], [128 x i32]* @signal_queue, i32 0, i32 %410
  %411 = load i32, i32* %arrayidx758, align 4
  call void @zhandler(i32 %411)
  call void @signal_setmask(%struct.__sigset_t* sret %tmp759, %struct.__sigset_t* byval align 4 %oset753)
  br label %while.cond748

while.end760:                                     ; preds = %while.cond748
  br label %do.end761

do.end761:                                        ; preds = %while.end760
  br label %if.end762

if.end762:                                        ; preds = %do.end761, %do.body743
  br label %do.end763

do.end763:                                        ; preds = %if.end762
  store i32 1, i32* %retval, align 4
  br label %return

if.end764:                                        ; preds = %if.end731
  %412 = load %struct.param*, %struct.param** %pm, align 4
  %ename765 = getelementptr inbounds %struct.param, %struct.param* %412, i32 0, i32 6
  %413 = load i8*, i8** %ename765, align 8
  %tobool766 = icmp ne i8* %413, null
  br i1 %tobool766, label %if.then767, label %if.end769

if.then767:                                       ; preds = %if.end764
  %414 = load %struct.param*, %struct.param** %pm, align 4
  %ename768 = getelementptr inbounds %struct.param, %struct.param* %414, i32 0, i32 6
  %415 = load i8*, i8** %ename768, align 8
  call void @zsfree(i8* %415)
  br label %if.end769

if.end769:                                        ; preds = %if.then767, %if.end764
  %416 = load %struct.asgment*, %struct.asgment** %asg, align 4
  %name770 = getelementptr inbounds %struct.asgment, %struct.asgment* %416, i32 0, i32 1
  %417 = load i8*, i8** %name770, align 4
  %call771 = call i8* @ztrdup(i8* %417)
  %418 = load %struct.param*, %struct.param** %pm, align 4
  %ename772 = getelementptr inbounds %struct.param, %struct.param* %418, i32 0, i32 6
  store i8* %call771, i8** %ename772, align 8
  %419 = load %struct.param*, %struct.param** %apm, align 4
  %ename773 = getelementptr inbounds %struct.param, %struct.param* %419, i32 0, i32 6
  %420 = load i8*, i8** %ename773, align 8
  %tobool774 = icmp ne i8* %420, null
  br i1 %tobool774, label %if.then775, label %if.end777

if.then775:                                       ; preds = %if.end769
  %421 = load %struct.param*, %struct.param** %apm, align 4
  %ename776 = getelementptr inbounds %struct.param, %struct.param* %421, i32 0, i32 6
  %422 = load i8*, i8** %ename776, align 8
  call void @zsfree(i8* %422)
  br label %if.end777

if.end777:                                        ; preds = %if.then775, %if.end769
  %name778 = getelementptr inbounds %struct.asgment, %struct.asgment* %asg0, i32 0, i32 1
  %423 = load i8*, i8** %name778, align 4
  %call779 = call i8* @ztrdup(i8* %423)
  %424 = load %struct.param*, %struct.param** %apm, align 4
  %ename780 = getelementptr inbounds %struct.param, %struct.param* %424, i32 0, i32 6
  store i8* %call779, i8** %ename780, align 8
  %425 = load %struct.asgment*, %struct.asgment** %asg, align 4
  %value781 = getelementptr inbounds %struct.asgment, %struct.asgment* %425, i32 0, i32 3
  %array782 = bitcast %union.anon* %value781 to %union.linkroot**
  %426 = load %union.linkroot*, %union.linkroot** %array782, align 4
  %tobool783 = icmp ne %union.linkroot* %426, null
  br i1 %tobool783, label %if.then784, label %if.else796

if.then784:                                       ; preds = %if.end777
  %427 = load %struct.asgment*, %struct.asgment** %asg, align 4
  %flags787 = getelementptr inbounds %struct.asgment, %struct.asgment* %427, i32 0, i32 2
  %428 = load i32, i32* %flags787, align 4
  %and788 = and i32 %428, 2
  %tobool789 = icmp ne i32 %and788, 0
  %cond790 = select i1 %tobool789, i32 16, i32 0
  store i32 %cond790, i32* %flags786, align 4
  %429 = load %struct.asgment*, %struct.asgment** %asg, align 4
  %name791 = getelementptr inbounds %struct.asgment, %struct.asgment* %429, i32 0, i32 1
  %430 = load i8*, i8** %name791, align 4
  %431 = load %struct.asgment*, %struct.asgment** %asg, align 4
  %value792 = getelementptr inbounds %struct.asgment, %struct.asgment* %431, i32 0, i32 3
  %array793 = bitcast %union.anon* %value792 to %union.linkroot**
  %432 = load %union.linkroot*, %union.linkroot** %array793, align 4
  %call794 = call i8** @zlinklist2array(%union.linkroot* %432)
  %433 = load i32, i32* %flags786, align 4
  %call795 = call %struct.param* @assignaparam(i8* %430, i8** %call794, i32 %433)
  br label %if.end802

if.else796:                                       ; preds = %if.end777
  %434 = load i8*, i8** %oldval, align 4
  %tobool797 = icmp ne i8* %434, null
  br i1 %tobool797, label %if.then798, label %if.end801

if.then798:                                       ; preds = %if.else796
  %name799 = getelementptr inbounds %struct.asgment, %struct.asgment* %asg0, i32 0, i32 1
  %435 = load i8*, i8** %name799, align 4
  %436 = load i8*, i8** %oldval, align 4
  %call800 = call %struct.param* @assignsparam(i8* %435, i8* %436, i32 0)
  br label %if.end801

if.end801:                                        ; preds = %if.then798, %if.else796
  br label %if.end802

if.end802:                                        ; preds = %if.end801, %if.then784
  br label %do.body803

do.body803:                                       ; preds = %if.end802
  %437 = load i32, i32* @queueing_enabled, align 4
  %dec804 = add nsw i32 %437, -1
  store i32 %dec804, i32* @queueing_enabled, align 4
  %tobool805 = icmp ne i32 %dec804, 0
  br i1 %tobool805, label %if.end822, label %if.then806

if.then806:                                       ; preds = %do.body803
  br label %do.body807

do.body807:                                       ; preds = %if.then806
  br label %while.cond808

while.cond808:                                    ; preds = %while.body811, %do.body807
  %438 = load i32, i32* @queue_front, align 4
  %439 = load i32, i32* @queue_rear, align 4
  %cmp809 = icmp ne i32 %438, %439
  br i1 %cmp809, label %while.body811, label %while.end820

while.body811:                                    ; preds = %while.cond808
  %440 = load i32, i32* @queue_front, align 4
  %add814 = add nsw i32 %440, 1
  %rem815 = srem i32 %add814, 128
  store i32 %rem815, i32* @queue_front, align 4
  %441 = load i32, i32* @queue_front, align 4
  %arrayidx816 = getelementptr inbounds [128 x %struct.__sigset_t], [128 x %struct.__sigset_t]* @signal_mask_queue, i32 0, i32 %441
  call void @signal_setmask(%struct.__sigset_t* sret %tmp817, %struct.__sigset_t* byval align 4 %arrayidx816)
  %442 = bitcast %struct.__sigset_t* %oset813 to i8*
  %443 = bitcast %struct.__sigset_t* %tmp817 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %442, i8* %443, i32 128, i32 4, i1 false)
  %444 = load i32, i32* @queue_front, align 4
  %arrayidx818 = getelementptr inbounds [128 x i32], [128 x i32]* @signal_queue, i32 0, i32 %444
  %445 = load i32, i32* %arrayidx818, align 4
  call void @zhandler(i32 %445)
  call void @signal_setmask(%struct.__sigset_t* sret %tmp819, %struct.__sigset_t* byval align 4 %oset813)
  br label %while.cond808

while.end820:                                     ; preds = %while.cond808
  br label %do.end821

do.end821:                                        ; preds = %while.end820
  br label %if.end822

if.end822:                                        ; preds = %do.end821, %do.body803
  br label %do.end823

do.end823:                                        ; preds = %if.end822
  store i32 0, i32* %retval, align 4
  br label %return

if.end824:                                        ; preds = %if.end217
  %446 = load i32, i32* %off, align 4
  %and825 = and i32 %446, 65536
  %tobool826 = icmp ne i32 %and825, 0
  br i1 %tobool826, label %if.then827, label %if.end849

if.then827:                                       ; preds = %if.end824
  br label %do.body828

do.body828:                                       ; preds = %if.then827
  %447 = load i32, i32* @queueing_enabled, align 4
  %dec829 = add nsw i32 %447, -1
  store i32 %dec829, i32* @queueing_enabled, align 4
  %tobool830 = icmp ne i32 %dec829, 0
  br i1 %tobool830, label %if.end847, label %if.then831

if.then831:                                       ; preds = %do.body828
  br label %do.body832

do.body832:                                       ; preds = %if.then831
  br label %while.cond833

while.cond833:                                    ; preds = %while.body836, %do.body832
  %448 = load i32, i32* @queue_front, align 4
  %449 = load i32, i32* @queue_rear, align 4
  %cmp834 = icmp ne i32 %448, %449
  br i1 %cmp834, label %while.body836, label %while.end845

while.body836:                                    ; preds = %while.cond833
  %450 = load i32, i32* @queue_front, align 4
  %add839 = add nsw i32 %450, 1
  %rem840 = srem i32 %add839, 128
  store i32 %rem840, i32* @queue_front, align 4
  %451 = load i32, i32* @queue_front, align 4
  %arrayidx841 = getelementptr inbounds [128 x %struct.__sigset_t], [128 x %struct.__sigset_t]* @signal_mask_queue, i32 0, i32 %451
  call void @signal_setmask(%struct.__sigset_t* sret %tmp842, %struct.__sigset_t* byval align 4 %arrayidx841)
  %452 = bitcast %struct.__sigset_t* %oset838 to i8*
  %453 = bitcast %struct.__sigset_t* %tmp842 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %452, i8* %453, i32 128, i32 4, i1 false)
  %454 = load i32, i32* @queue_front, align 4
  %arrayidx843 = getelementptr inbounds [128 x i32], [128 x i32]* @signal_queue, i32 0, i32 %454
  %455 = load i32, i32* %arrayidx843, align 4
  call void @zhandler(i32 %455)
  call void @signal_setmask(%struct.__sigset_t* sret %tmp844, %struct.__sigset_t* byval align 4 %oset838)
  br label %while.cond833

while.end845:                                     ; preds = %while.cond833
  br label %do.end846

do.end846:                                        ; preds = %while.end845
  br label %if.end847

if.end847:                                        ; preds = %do.end846, %do.body828
  br label %do.end848

do.end848:                                        ; preds = %if.end847
  %456 = load i8*, i8** %name.addr, align 4
  call void (i8*, i8*, ...) @zerrnam(i8* %456, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.62, i32 0, i32 0))
  store i32 1, i32* %retval, align 4
  br label %return

if.end849:                                        ; preds = %if.end824
  %457 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind850 = getelementptr inbounds %struct.options, %struct.options* %457, i32 0, i32 0
  %arrayidx851 = getelementptr inbounds [128 x i8], [128 x i8]* %ind850, i32 0, i32 109
  %458 = load i8, i8* %arrayidx851, align 1
  %conv852 = zext i8 %458 to i32
  %cmp853 = icmp ne i32 %conv852, 0
  br i1 %cmp853, label %if.then855, label %if.end977

if.then855:                                       ; preds = %if.end849
  %459 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind856 = getelementptr inbounds %struct.options, %struct.options* %459, i32 0, i32 0
  %arrayidx857 = getelementptr inbounds [128 x i8], [128 x i8]* %ind856, i32 0, i32 112
  %460 = load i8, i8* %arrayidx857, align 4
  %conv858 = zext i8 %460 to i32
  %cmp859 = icmp ne i32 %conv858, 0
  br i1 %cmp859, label %if.end871, label %if.then861

if.then861:                                       ; preds = %if.then855
  %461 = load i32, i32* %on, align 4
  %462 = load i32, i32* %roff, align 4
  %or862 = or i32 %461, %462
  %tobool863 = icmp ne i32 %or862, 0
  br i1 %tobool863, label %if.end866, label %if.then864

if.then864:                                       ; preds = %if.then861
  %463 = load i32, i32* %printflags, align 4
  %or865 = or i32 %463, 2
  store i32 %or865, i32* %printflags, align 4
  br label %if.end866

if.end866:                                        ; preds = %if.then864, %if.then861
  %464 = load i32, i32* %on, align 4
  %tobool867 = icmp ne i32 %464, 0
  br i1 %tobool867, label %if.end870, label %if.then868

if.then868:                                       ; preds = %if.end866
  %465 = load i32, i32* %printflags, align 4
  %or869 = or i32 %465, 1
  store i32 %or869, i32* %printflags, align 4
  br label %if.end870

if.end870:                                        ; preds = %if.then868, %if.end866
  br label %if.end871

if.end871:                                        ; preds = %if.end870, %if.then855
  br label %while.cond872

while.cond872:                                    ; preds = %for.end954, %if.then901, %if.then883, %if.end871
  %466 = load %union.linkroot*, %union.linkroot** %assigns.addr, align 4
  %call873 = call %struct.asgment* @getasg(i8*** %argv.addr, %union.linkroot* %466)
  store %struct.asgment* %call873, %struct.asgment** %asg, align 4
  %tobool874 = icmp ne %struct.asgment* %call873, null
  br i1 %tobool874, label %while.body875, label %while.end955

while.body875:                                    ; preds = %while.cond872
  %call877 = call %union.linkroot* @newlinklist()
  store %union.linkroot* %call877, %union.linkroot** %pmlist, align 4
  %467 = load %struct.asgment*, %struct.asgment** %asg, align 4
  %name879 = getelementptr inbounds %struct.asgment, %struct.asgment* %467, i32 0, i32 1
  %468 = load i8*, i8** %name879, align 4
  call void @tokenize(i8* %468)
  %469 = load %struct.asgment*, %struct.asgment** %asg, align 4
  %name880 = getelementptr inbounds %struct.asgment, %struct.asgment* %469, i32 0, i32 1
  %470 = load i8*, i8** %name880, align 4
  %call881 = call %struct.patprog* @patcompile(i8* %470, i32 0, i8** null)
  store %struct.patprog* %call881, %struct.patprog** %pprog, align 4
  %tobool882 = icmp ne %struct.patprog* %call881, null
  br i1 %tobool882, label %if.end886, label %if.then883

if.then883:                                       ; preds = %while.body875
  %471 = load %struct.asgment*, %struct.asgment** %asg, align 4
  %name884 = getelementptr inbounds %struct.asgment, %struct.asgment* %471, i32 0, i32 1
  %472 = load i8*, i8** %name884, align 4
  call void @untokenize(i8* %472)
  %473 = load i8*, i8** %name.addr, align 4
  %474 = load %struct.asgment*, %struct.asgment** %asg, align 4
  %name885 = getelementptr inbounds %struct.asgment, %struct.asgment* %474, i32 0, i32 1
  %475 = load i8*, i8** %name885, align 4
  call void (i8*, i8*, ...) @zwarnnam(i8* %473, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.15, i32 0, i32 0), i8* %475)
  store i32 1, i32* %returnval, align 4
  br label %while.cond872

if.end886:                                        ; preds = %while.body875
  %476 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind887 = getelementptr inbounds %struct.options, %struct.options* %476, i32 0, i32 0
  %arrayidx888 = getelementptr inbounds [128 x i8], [128 x i8]* %ind887, i32 0, i32 109
  %477 = load i8, i8* %arrayidx888, align 1
  %conv889 = zext i8 %477 to i32
  %and890 = and i32 %conv889, 2
  %tobool891 = icmp ne i32 %and890, 0
  br i1 %tobool891, label %land.lhs.true892, label %if.end905

land.lhs.true892:                                 ; preds = %if.end886
  %478 = load %struct.asgment*, %struct.asgment** %asg, align 4
  %flags893 = getelementptr inbounds %struct.asgment, %struct.asgment* %478, i32 0, i32 2
  %479 = load i32, i32* %flags893, align 4
  %and894 = and i32 %479, 1
  %tobool895 = icmp ne i32 %and894, 0
  br i1 %tobool895, label %if.end905, label %lor.lhs.false896

lor.lhs.false896:                                 ; preds = %land.lhs.true892
  %480 = load %struct.asgment*, %struct.asgment** %asg, align 4
  %value897 = getelementptr inbounds %struct.asgment, %struct.asgment* %480, i32 0, i32 3
  %scalar898 = bitcast %union.anon* %value897 to i8**
  %481 = load i8*, i8** %scalar898, align 4
  %cmp899 = icmp ne i8* %481, null
  br i1 %cmp899, label %if.end905, label %if.then901

if.then901:                                       ; preds = %lor.lhs.false896
  %482 = load %struct.hashtable*, %struct.hashtable** @paramtab, align 4
  %483 = load %struct.patprog*, %struct.patprog** %pprog, align 4
  %484 = load i32, i32* %on, align 4
  %485 = load i32, i32* %roff, align 4
  %or902 = or i32 %484, %485
  %486 = load %struct.hashtable*, %struct.hashtable** @paramtab, align 4
  %printnode903 = getelementptr inbounds %struct.hashtable, %struct.hashtable* %486, i32 0, i32 15
  %487 = load void (%struct.hashnode*, i32)*, void (%struct.hashnode*, i32)** %printnode903, align 4
  %488 = load i32, i32* %printflags, align 4
  %call904 = call i32 @scanmatchtable(%struct.hashtable* %482, %struct.patprog* %483, i32 1, i32 %or902, i32 0, void (%struct.hashnode*, i32)* %487, i32 %488)
  br label %while.cond872

if.end905:                                        ; preds = %lor.lhs.false896, %land.lhs.true892, %if.end886
  store i32 0, i32* %i, align 4
  br label %for.cond906

for.cond906:                                      ; preds = %for.inc938, %if.end905
  %489 = load i32, i32* %i, align 4
  %490 = load %struct.hashtable*, %struct.hashtable** @paramtab, align 4
  %hsize = getelementptr inbounds %struct.hashtable, %struct.hashtable* %490, i32 0, i32 0
  %491 = load i32, i32* %hsize, align 4
  %cmp907 = icmp slt i32 %489, %491
  br i1 %cmp907, label %for.body909, label %for.end940

for.body909:                                      ; preds = %for.cond906
  %492 = load %struct.hashtable*, %struct.hashtable** @paramtab, align 4
  %nodes = getelementptr inbounds %struct.hashtable, %struct.hashtable* %492, i32 0, i32 2
  %493 = load %struct.hashnode**, %struct.hashnode*** %nodes, align 4
  %494 = load i32, i32* %i, align 4
  %arrayidx910 = getelementptr inbounds %struct.hashnode*, %struct.hashnode** %493, i32 %494
  %495 = load %struct.hashnode*, %struct.hashnode** %arrayidx910, align 4
  %496 = bitcast %struct.hashnode* %495 to %struct.param*
  store %struct.param* %496, %struct.param** %pm, align 4
  br label %for.cond911

for.cond911:                                      ; preds = %for.inc935, %for.body909
  %497 = load %struct.param*, %struct.param** %pm, align 4
  %tobool912 = icmp ne %struct.param* %497, null
  br i1 %tobool912, label %for.body913, label %for.end937

for.body913:                                      ; preds = %for.cond911
  %498 = load %struct.param*, %struct.param** %pm, align 4
  %node914 = getelementptr inbounds %struct.param, %struct.param* %498, i32 0, i32 0
  %flags915 = getelementptr inbounds %struct.hashnode, %struct.hashnode* %node914, i32 0, i32 2
  %499 = load i32, i32* %flags915, align 8
  %and916 = and i32 %499, 16777216
  %tobool917 = icmp ne i32 %and916, 0
  br i1 %tobool917, label %land.lhs.true918, label %lor.lhs.false921

land.lhs.true918:                                 ; preds = %for.body913
  %500 = load i8, i8* getelementptr inbounds ([181 x i8], [181 x i8]* @opts, i32 0, i32 155), align 1
  %conv919 = sext i8 %500 to i32
  %tobool920 = icmp ne i32 %conv919, 0
  br i1 %tobool920, label %if.then926, label %lor.lhs.false921

lor.lhs.false921:                                 ; preds = %land.lhs.true918, %for.body913
  %501 = load %struct.param*, %struct.param** %pm, align 4
  %node922 = getelementptr inbounds %struct.param, %struct.param* %501, i32 0, i32 0
  %flags923 = getelementptr inbounds %struct.hashnode, %struct.hashnode* %node922, i32 0, i32 2
  %502 = load i32, i32* %flags923, align 8
  %and924 = and i32 %502, 33554432
  %tobool925 = icmp ne i32 %and924, 0
  br i1 %tobool925, label %if.then926, label %if.end927

if.then926:                                       ; preds = %lor.lhs.false921, %land.lhs.true918
  br label %for.inc935

if.end927:                                        ; preds = %lor.lhs.false921
  %503 = load %struct.patprog*, %struct.patprog** %pprog, align 4
  %504 = load %struct.param*, %struct.param** %pm, align 4
  %node928 = getelementptr inbounds %struct.param, %struct.param* %504, i32 0, i32 0
  %nam = getelementptr inbounds %struct.hashnode, %struct.hashnode* %node928, i32 0, i32 1
  %505 = load i8*, i8** %nam, align 4
  %call929 = call i32 @pattry(%struct.patprog* %503, i8* %505)
  %tobool930 = icmp ne i32 %call929, 0
  br i1 %tobool930, label %if.then931, label %if.end934

if.then931:                                       ; preds = %if.end927
  %506 = load %union.linkroot*, %union.linkroot** %pmlist, align 4
  %507 = load %union.linkroot*, %union.linkroot** %pmlist, align 4
  %list932 = bitcast %union.linkroot* %507 to %struct.linklist*
  %last = getelementptr inbounds %struct.linklist, %struct.linklist* %list932, i32 0, i32 1
  %508 = load %struct.linknode*, %struct.linknode** %last, align 4
  %509 = load %struct.param*, %struct.param** %pm, align 4
  %510 = bitcast %struct.param* %509 to i8*
  %call933 = call %struct.linknode* @insertlinknode(%union.linkroot* %506, %struct.linknode* %508, i8* %510)
  br label %if.end934

if.end934:                                        ; preds = %if.then931, %if.end927
  br label %for.inc935

for.inc935:                                       ; preds = %if.end934, %if.then926
  %511 = load %struct.param*, %struct.param** %pm, align 4
  %node936 = getelementptr inbounds %struct.param, %struct.param* %511, i32 0, i32 0
  %next = getelementptr inbounds %struct.hashnode, %struct.hashnode* %node936, i32 0, i32 0
  %512 = load %struct.hashnode*, %struct.hashnode** %next, align 8
  %513 = bitcast %struct.hashnode* %512 to %struct.param*
  store %struct.param* %513, %struct.param** %pm, align 4
  br label %for.cond911

for.end937:                                       ; preds = %for.cond911
  br label %for.inc938

for.inc938:                                       ; preds = %for.end937
  %514 = load i32, i32* %i, align 4
  %inc939 = add nsw i32 %514, 1
  store i32 %inc939, i32* %i, align 4
  br label %for.cond906

for.end940:                                       ; preds = %for.cond906
  %515 = load %union.linkroot*, %union.linkroot** %pmlist, align 4
  %list941 = bitcast %union.linkroot* %515 to %struct.linklist*
  %first942 = getelementptr inbounds %struct.linklist, %struct.linklist* %list941, i32 0, i32 0
  %516 = load %struct.linknode*, %struct.linknode** %first942, align 4
  store %struct.linknode* %516, %struct.linknode** %pmnode, align 4
  br label %for.cond943

for.cond943:                                      ; preds = %for.inc952, %for.end940
  %517 = load %struct.linknode*, %struct.linknode** %pmnode, align 4
  %tobool944 = icmp ne %struct.linknode* %517, null
  br i1 %tobool944, label %for.body945, label %for.end954

for.body945:                                      ; preds = %for.cond943
  %518 = load %struct.linknode*, %struct.linknode** %pmnode, align 4
  %dat = getelementptr inbounds %struct.linknode, %struct.linknode* %518, i32 0, i32 2
  %519 = load i8*, i8** %dat, align 4
  %520 = bitcast i8* %519 to %struct.param*
  store %struct.param* %520, %struct.param** %pm, align 4
  %521 = load i8*, i8** %name.addr, align 4
  %522 = load %struct.param*, %struct.param** %pm, align 4
  %node946 = getelementptr inbounds %struct.param, %struct.param* %522, i32 0, i32 0
  %nam947 = getelementptr inbounds %struct.hashnode, %struct.hashnode* %node946, i32 0, i32 1
  %523 = load i8*, i8** %nam947, align 4
  %524 = load %struct.param*, %struct.param** %pm, align 4
  %525 = load i32, i32* %func.addr, align 4
  %526 = load i32, i32* %on, align 4
  %527 = load i32, i32* %off, align 4
  %528 = load i32, i32* %roff, align 4
  %529 = load %struct.asgment*, %struct.asgment** %asg, align 4
  %530 = load %struct.options*, %struct.options** %ops.addr, align 4
  %call948 = call %struct.param* @typeset_single(i8* %521, i8* %523, %struct.param* %524, i32 %525, i32 %526, i32 %527, i32 %528, %struct.asgment* %529, %struct.param* null, %struct.options* %530, i32 0)
  %tobool949 = icmp ne %struct.param* %call948, null
  br i1 %tobool949, label %if.end951, label %if.then950

if.then950:                                       ; preds = %for.body945
  store i32 1, i32* %returnval, align 4
  br label %if.end951

if.end951:                                        ; preds = %if.then950, %for.body945
  br label %for.inc952

for.inc952:                                       ; preds = %if.end951
  %531 = load %struct.linknode*, %struct.linknode** %pmnode, align 4
  %next953 = getelementptr inbounds %struct.linknode, %struct.linknode* %531, i32 0, i32 0
  %532 = load %struct.linknode*, %struct.linknode** %next953, align 4
  store %struct.linknode* %532, %struct.linknode** %pmnode, align 4
  br label %for.cond943

for.end954:                                       ; preds = %for.cond943
  br label %while.cond872

while.end955:                                     ; preds = %while.cond872
  br label %do.body956

do.body956:                                       ; preds = %while.end955
  %533 = load i32, i32* @queueing_enabled, align 4
  %dec957 = add nsw i32 %533, -1
  store i32 %dec957, i32* @queueing_enabled, align 4
  %tobool958 = icmp ne i32 %dec957, 0
  br i1 %tobool958, label %if.end975, label %if.then959

if.then959:                                       ; preds = %do.body956
  br label %do.body960

do.body960:                                       ; preds = %if.then959
  br label %while.cond961

while.cond961:                                    ; preds = %while.body964, %do.body960
  %534 = load i32, i32* @queue_front, align 4
  %535 = load i32, i32* @queue_rear, align 4
  %cmp962 = icmp ne i32 %534, %535
  br i1 %cmp962, label %while.body964, label %while.end973

while.body964:                                    ; preds = %while.cond961
  %536 = load i32, i32* @queue_front, align 4
  %add967 = add nsw i32 %536, 1
  %rem968 = srem i32 %add967, 128
  store i32 %rem968, i32* @queue_front, align 4
  %537 = load i32, i32* @queue_front, align 4
  %arrayidx969 = getelementptr inbounds [128 x %struct.__sigset_t], [128 x %struct.__sigset_t]* @signal_mask_queue, i32 0, i32 %537
  call void @signal_setmask(%struct.__sigset_t* sret %tmp970, %struct.__sigset_t* byval align 4 %arrayidx969)
  %538 = bitcast %struct.__sigset_t* %oset966 to i8*
  %539 = bitcast %struct.__sigset_t* %tmp970 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %538, i8* %539, i32 128, i32 4, i1 false)
  %540 = load i32, i32* @queue_front, align 4
  %arrayidx971 = getelementptr inbounds [128 x i32], [128 x i32]* @signal_queue, i32 0, i32 %540
  %541 = load i32, i32* %arrayidx971, align 4
  call void @zhandler(i32 %541)
  call void @signal_setmask(%struct.__sigset_t* sret %tmp972, %struct.__sigset_t* byval align 4 %oset966)
  br label %while.cond961

while.end973:                                     ; preds = %while.cond961
  br label %do.end974

do.end974:                                        ; preds = %while.end973
  br label %if.end975

if.end975:                                        ; preds = %do.end974, %do.body956
  br label %do.end976

do.end976:                                        ; preds = %if.end975
  %542 = load i32, i32* %returnval, align 4
  store i32 %542, i32* %retval, align 4
  br label %return

if.end977:                                        ; preds = %if.end849
  br label %while.cond978

while.cond978:                                    ; preds = %if.end1011, %if.end1005, %if.end977
  %543 = load %union.linkroot*, %union.linkroot** %assigns.addr, align 4
  %call979 = call %struct.asgment* @getasg(i8*** %argv.addr, %union.linkroot* %543)
  store %struct.asgment* %call979, %struct.asgment** %asg, align 4
  %tobool980 = icmp ne %struct.asgment* %call979, null
  br i1 %tobool980, label %while.body981, label %while.end1012

while.body981:                                    ; preds = %while.cond978
  %544 = load %struct.hashtable*, %struct.hashtable** @paramtab, align 4
  %545 = load %struct.hashtable*, %struct.hashtable** @realparamtab, align 4
  %cmp983 = icmp eq %struct.hashtable* %544, %545
  br i1 %cmp983, label %cond.true985, label %cond.false988

cond.true985:                                     ; preds = %while.body981
  %546 = load %struct.hashtable*, %struct.hashtable** @paramtab, align 4
  %getnode2 = getelementptr inbounds %struct.hashtable, %struct.hashtable* %546, i32 0, i32 10
  %547 = load %struct.hashnode* (%struct.hashtable*, i8*)*, %struct.hashnode* (%struct.hashtable*, i8*)** %getnode2, align 4
  %548 = load %struct.hashtable*, %struct.hashtable** @paramtab, align 4
  %549 = load %struct.asgment*, %struct.asgment** %asg, align 4
  %name986 = getelementptr inbounds %struct.asgment, %struct.asgment* %549, i32 0, i32 1
  %550 = load i8*, i8** %name986, align 4
  %call987 = call %struct.hashnode* %547(%struct.hashtable* %548, i8* %550)
  br label %cond.end992

cond.false988:                                    ; preds = %while.body981
  %551 = load %struct.hashtable*, %struct.hashtable** @paramtab, align 4
  %getnode989 = getelementptr inbounds %struct.hashtable, %struct.hashtable* %551, i32 0, i32 9
  %552 = load %struct.hashnode* (%struct.hashtable*, i8*)*, %struct.hashnode* (%struct.hashtable*, i8*)** %getnode989, align 4
  %553 = load %struct.hashtable*, %struct.hashtable** @paramtab, align 4
  %554 = load %struct.asgment*, %struct.asgment** %asg, align 4
  %name990 = getelementptr inbounds %struct.asgment, %struct.asgment* %554, i32 0, i32 1
  %555 = load i8*, i8** %name990, align 4
  %call991 = call %struct.hashnode* %552(%struct.hashtable* %553, i8* %555)
  br label %cond.end992

cond.end992:                                      ; preds = %cond.false988, %cond.true985
  %cond993 = phi %struct.hashnode* [ %call987, %cond.true985 ], [ %call991, %cond.false988 ]
  store %struct.hashnode* %cond993, %struct.hashnode** %hn, align 4
  %556 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind994 = getelementptr inbounds %struct.options, %struct.options* %556, i32 0, i32 0
  %arrayidx995 = getelementptr inbounds [128 x i8], [128 x i8]* %ind994, i32 0, i32 112
  %557 = load i8, i8* %arrayidx995, align 4
  %conv996 = zext i8 %557 to i32
  %cmp997 = icmp ne i32 %conv996, 0
  br i1 %cmp997, label %if.then999, label %if.end1006

if.then999:                                       ; preds = %cond.end992
  %558 = load %struct.hashnode*, %struct.hashnode** %hn, align 4
  %tobool1000 = icmp ne %struct.hashnode* %558, null
  br i1 %tobool1000, label %if.then1001, label %if.else1003

if.then1001:                                      ; preds = %if.then999
  %559 = load %struct.hashtable*, %struct.hashtable** @paramtab, align 4
  %printnode1002 = getelementptr inbounds %struct.hashtable, %struct.hashtable* %559, i32 0, i32 15
  %560 = load void (%struct.hashnode*, i32)*, void (%struct.hashnode*, i32)** %printnode1002, align 4
  %561 = load %struct.hashnode*, %struct.hashnode** %hn, align 4
  %562 = load i32, i32* %printflags, align 4
  call void %560(%struct.hashnode* %561, i32 %562)
  br label %if.end1005

if.else1003:                                      ; preds = %if.then999
  %563 = load i8*, i8** %name.addr, align 4
  %564 = load %struct.asgment*, %struct.asgment** %asg, align 4
  %name1004 = getelementptr inbounds %struct.asgment, %struct.asgment* %564, i32 0, i32 1
  %565 = load i8*, i8** %name1004, align 4
  call void (i8*, i8*, ...) @zwarnnam(i8* %563, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.63, i32 0, i32 0), i8* %565)
  store i32 1, i32* %returnval, align 4
  br label %if.end1005

if.end1005:                                       ; preds = %if.else1003, %if.then1001
  br label %while.cond978

if.end1006:                                       ; preds = %cond.end992
  %566 = load i8*, i8** %name.addr, align 4
  %567 = load %struct.asgment*, %struct.asgment** %asg, align 4
  %name1007 = getelementptr inbounds %struct.asgment, %struct.asgment* %567, i32 0, i32 1
  %568 = load i8*, i8** %name1007, align 4
  %569 = load %struct.hashnode*, %struct.hashnode** %hn, align 4
  %570 = bitcast %struct.hashnode* %569 to %struct.param*
  %571 = load i32, i32* %func.addr, align 4
  %572 = load i32, i32* %on, align 4
  %573 = load i32, i32* %off, align 4
  %574 = load i32, i32* %roff, align 4
  %575 = load %struct.asgment*, %struct.asgment** %asg, align 4
  %576 = load %struct.options*, %struct.options** %ops.addr, align 4
  %call1008 = call %struct.param* @typeset_single(i8* %566, i8* %568, %struct.param* %570, i32 %571, i32 %572, i32 %573, i32 %574, %struct.asgment* %575, %struct.param* null, %struct.options* %576, i32 0)
  %tobool1009 = icmp ne %struct.param* %call1008, null
  br i1 %tobool1009, label %if.end1011, label %if.then1010

if.then1010:                                      ; preds = %if.end1006
  store i32 1, i32* %returnval, align 4
  br label %if.end1011

if.end1011:                                       ; preds = %if.then1010, %if.end1006
  br label %while.cond978

while.end1012:                                    ; preds = %while.cond978
  br label %do.body1013

do.body1013:                                      ; preds = %while.end1012
  %577 = load i32, i32* @queueing_enabled, align 4
  %dec1014 = add nsw i32 %577, -1
  store i32 %dec1014, i32* @queueing_enabled, align 4
  %tobool1015 = icmp ne i32 %dec1014, 0
  br i1 %tobool1015, label %if.end1032, label %if.then1016

if.then1016:                                      ; preds = %do.body1013
  br label %do.body1017

do.body1017:                                      ; preds = %if.then1016
  br label %while.cond1018

while.cond1018:                                   ; preds = %while.body1021, %do.body1017
  %578 = load i32, i32* @queue_front, align 4
  %579 = load i32, i32* @queue_rear, align 4
  %cmp1019 = icmp ne i32 %578, %579
  br i1 %cmp1019, label %while.body1021, label %while.end1030

while.body1021:                                   ; preds = %while.cond1018
  %580 = load i32, i32* @queue_front, align 4
  %add1024 = add nsw i32 %580, 1
  %rem1025 = srem i32 %add1024, 128
  store i32 %rem1025, i32* @queue_front, align 4
  %581 = load i32, i32* @queue_front, align 4
  %arrayidx1026 = getelementptr inbounds [128 x %struct.__sigset_t], [128 x %struct.__sigset_t]* @signal_mask_queue, i32 0, i32 %581
  call void @signal_setmask(%struct.__sigset_t* sret %tmp1027, %struct.__sigset_t* byval align 4 %arrayidx1026)
  %582 = bitcast %struct.__sigset_t* %oset1023 to i8*
  %583 = bitcast %struct.__sigset_t* %tmp1027 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %582, i8* %583, i32 128, i32 4, i1 false)
  %584 = load i32, i32* @queue_front, align 4
  %arrayidx1028 = getelementptr inbounds [128 x i32], [128 x i32]* @signal_queue, i32 0, i32 %584
  %585 = load i32, i32* %arrayidx1028, align 4
  call void @zhandler(i32 %585)
  call void @signal_setmask(%struct.__sigset_t* sret %tmp1029, %struct.__sigset_t* byval align 4 %oset1023)
  br label %while.cond1018

while.end1030:                                    ; preds = %while.cond1018
  br label %do.end1031

do.end1031:                                       ; preds = %while.end1030
  br label %if.end1032

if.end1032:                                       ; preds = %do.end1031, %do.body1013
  br label %do.end1033

do.end1033:                                       ; preds = %if.end1032
  %586 = load i32, i32* %returnval, align 4
  store i32 %586, i32* %retval, align 4
  br label %return

return:                                           ; preds = %do.end1033, %do.end976, %do.end848, %do.end823, %do.end763, %do.end730, %if.end668, %if.end664, %do.end562, %do.end514, %do.end473, %do.end442, %do.end414, %do.end386, %do.end360, %do.end335, %do.end310, %do.end285, %do.end254, %do.end178, %do.end123, %if.then
  %587 = load i32, i32* %retval, align 4
  ret i32 %587
}

; Function Attrs: noinline nounwind
define i32 @bin_functions(i8* %name, i8** %argv, %struct.options* %ops, i32 %func) #0 {
entry:
  %retval = alloca i32, align 4
  %name.addr = alloca i8*, align 4
  %argv.addr = alloca i8**, align 4
  %ops.addr = alloca %struct.options*, align 4
  %func.addr = alloca i32, align 4
  %pprog = alloca %struct.patprog*, align 4
  %shf = alloca %struct.shfunc*, align 4
  %i = alloca i32, align 4
  %returnval = alloca i32, align 4
  %on = alloca i32, align 4
  %off = alloca i32, align 4
  %pflags = alloca i32, align 4
  %roff = alloca i32, align 4
  %expand = alloca i32, align 4
  %eptr = alloca i8*, align 4
  %p = alloca %struct.mathfunc*, align 4
  %q = alloca %struct.mathfunc*, align 4
  %prev = alloca %struct.mathfunc*, align 4
  %oset = alloca %struct.__sigset_t, align 4
  %tmp = alloca %struct.__sigset_t, align 4
  %tmp270 = alloca %struct.__sigset_t, align 4
  %next291 = alloca %struct.mathfunc*, align 4
  %oset331 = alloca %struct.__sigset_t, align 4
  %tmp335 = alloca %struct.__sigset_t, align 4
  %tmp337 = alloca %struct.__sigset_t, align 4
  %oset383 = alloca %struct.__sigset_t, align 4
  %tmp387 = alloca %struct.__sigset_t, align 4
  %tmp389 = alloca %struct.__sigset_t, align 4
  %minargs = alloca i32, align 4
  %maxargs = alloca i32, align 4
  %funcname = alloca i8*, align 4
  %modname = alloca i8*, align 4
  %ptr = alloca i8*, align 4
  %oset524 = alloca %struct.__sigset_t, align 4
  %tmp528 = alloca %struct.__sigset_t, align 4
  %tmp530 = alloca %struct.__sigset_t, align 4
  %fs = alloca %struct.funcstack*, align 4
  %funcname549 = alloca i8*, align 4
  %ret = alloca i32, align 4
  %oset598 = alloca %struct.__sigset_t, align 4
  %tmp602 = alloca %struct.__sigset_t, align 4
  %tmp604 = alloca %struct.__sigset_t, align 4
  %ret615 = alloca i32, align 4
  %oset643 = alloca %struct.__sigset_t, align 4
  %tmp647 = alloca %struct.__sigset_t, align 4
  %tmp649 = alloca %struct.__sigset_t, align 4
  %oset735 = alloca %struct.__sigset_t, align 4
  %tmp739 = alloca %struct.__sigset_t, align 4
  %tmp741 = alloca %struct.__sigset_t, align 4
  %signum = alloca i32, align 4
  %ok = alloca i32, align 4
  %base = alloca i8*, align 4
  %dir = alloca i8*, align 4
  %oset887 = alloca %struct.__sigset_t, align 4
  %tmp891 = alloca %struct.__sigset_t, align 4
  %tmp893 = alloca %struct.__sigset_t, align 4
  store i8* %name, i8** %name.addr, align 4
  store i8** %argv, i8*** %argv.addr, align 4
  store %struct.options* %ops, %struct.options** %ops.addr, align 4
  store i32 %func, i32* %func.addr, align 4
  store i32 0, i32* %returnval, align 4
  store i32 0, i32* %on, align 4
  store i32 0, i32* %off, align 4
  store i32 0, i32* %pflags, align 4
  store i32 0, i32* %expand, align 4
  %0 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind = getelementptr inbounds %struct.options, %struct.options* %0, i32 0, i32 0
  %arrayidx = getelementptr inbounds [128 x i8], [128 x i8]* %ind, i32 0, i32 117
  %1 = load i8, i8* %arrayidx, align 1
  %conv = zext i8 %1 to i32
  %and = and i32 %conv, 2
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %2 = load i32, i32* %off, align 4
  %or = or i32 %2, 512
  store i32 %or, i32* %off, align 4
  br label %if.end12

if.else:                                          ; preds = %entry
  %3 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind1 = getelementptr inbounds %struct.options, %struct.options* %3, i32 0, i32 0
  %arrayidx2 = getelementptr inbounds [128 x i8], [128 x i8]* %ind1, i32 0, i32 117
  %4 = load i8, i8* %arrayidx2, align 1
  %conv3 = zext i8 %4 to i32
  %and4 = and i32 %conv3, 1
  %tobool5 = icmp ne i32 %and4, 0
  br i1 %tobool5, label %if.then10, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.else
  %5 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind6 = getelementptr inbounds %struct.options, %struct.options* %5, i32 0, i32 0
  %arrayidx7 = getelementptr inbounds [128 x i8], [128 x i8]* %ind6, i32 0, i32 88
  %6 = load i8, i8* %arrayidx7, align 4
  %conv8 = zext i8 %6 to i32
  %cmp = icmp ne i32 %conv8, 0
  br i1 %cmp, label %if.then10, label %if.end

if.then10:                                        ; preds = %lor.lhs.false, %if.else
  %7 = load i32, i32* %on, align 4
  %or11 = or i32 %7, 512
  store i32 %or11, i32* %on, align 4
  br label %if.end

if.end:                                           ; preds = %if.then10, %lor.lhs.false
  br label %if.end12

if.end12:                                         ; preds = %if.end, %if.then
  %8 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind13 = getelementptr inbounds %struct.options, %struct.options* %8, i32 0, i32 0
  %arrayidx14 = getelementptr inbounds [128 x i8], [128 x i8]* %ind13, i32 0, i32 85
  %9 = load i8, i8* %arrayidx14, align 1
  %conv15 = zext i8 %9 to i32
  %and16 = and i32 %conv15, 1
  %tobool17 = icmp ne i32 %and16, 0
  br i1 %tobool17, label %if.then18, label %if.else20

if.then18:                                        ; preds = %if.end12
  %10 = load i32, i32* %on, align 4
  %or19 = or i32 %10, 8704
  store i32 %or19, i32* %on, align 4
  br label %if.end29

if.else20:                                        ; preds = %if.end12
  %11 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind21 = getelementptr inbounds %struct.options, %struct.options* %11, i32 0, i32 0
  %arrayidx22 = getelementptr inbounds [128 x i8], [128 x i8]* %ind21, i32 0, i32 85
  %12 = load i8, i8* %arrayidx22, align 1
  %conv23 = zext i8 %12 to i32
  %and24 = and i32 %conv23, 2
  %tobool25 = icmp ne i32 %and24, 0
  br i1 %tobool25, label %if.then26, label %if.end28

if.then26:                                        ; preds = %if.else20
  %13 = load i32, i32* %off, align 4
  %or27 = or i32 %13, 8192
  store i32 %or27, i32* %off, align 4
  br label %if.end28

if.end28:                                         ; preds = %if.then26, %if.else20
  br label %if.end29

if.end29:                                         ; preds = %if.end28, %if.then18
  %14 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind30 = getelementptr inbounds %struct.options, %struct.options* %14, i32 0, i32 0
  %arrayidx31 = getelementptr inbounds [128 x i8], [128 x i8]* %ind30, i32 0, i32 116
  %15 = load i8, i8* %arrayidx31, align 4
  %conv32 = zext i8 %15 to i32
  %and33 = and i32 %conv32, 1
  %tobool34 = icmp ne i32 %and33, 0
  br i1 %tobool34, label %if.then35, label %if.else37

if.then35:                                        ; preds = %if.end29
  %16 = load i32, i32* %on, align 4
  %or36 = or i32 %16, 2048
  store i32 %or36, i32* %on, align 4
  br label %if.end46

if.else37:                                        ; preds = %if.end29
  %17 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind38 = getelementptr inbounds %struct.options, %struct.options* %17, i32 0, i32 0
  %arrayidx39 = getelementptr inbounds [128 x i8], [128 x i8]* %ind38, i32 0, i32 116
  %18 = load i8, i8* %arrayidx39, align 4
  %conv40 = zext i8 %18 to i32
  %and41 = and i32 %conv40, 2
  %tobool42 = icmp ne i32 %and41, 0
  br i1 %tobool42, label %if.then43, label %if.end45

if.then43:                                        ; preds = %if.else37
  %19 = load i32, i32* %off, align 4
  %or44 = or i32 %19, 2048
  store i32 %or44, i32* %off, align 4
  br label %if.end45

if.end45:                                         ; preds = %if.then43, %if.else37
  br label %if.end46

if.end46:                                         ; preds = %if.end45, %if.then35
  %20 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind47 = getelementptr inbounds %struct.options, %struct.options* %20, i32 0, i32 0
  %arrayidx48 = getelementptr inbounds [128 x i8], [128 x i8]* %ind47, i32 0, i32 84
  %21 = load i8, i8* %arrayidx48, align 4
  %conv49 = zext i8 %21 to i32
  %and50 = and i32 %conv49, 1
  %tobool51 = icmp ne i32 %and50, 0
  br i1 %tobool51, label %if.then52, label %if.else54

if.then52:                                        ; preds = %if.end46
  %22 = load i32, i32* %on, align 4
  %or53 = or i32 %22, 65536
  store i32 %or53, i32* %on, align 4
  br label %if.end63

if.else54:                                        ; preds = %if.end46
  %23 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind55 = getelementptr inbounds %struct.options, %struct.options* %23, i32 0, i32 0
  %arrayidx56 = getelementptr inbounds [128 x i8], [128 x i8]* %ind55, i32 0, i32 84
  %24 = load i8, i8* %arrayidx56, align 4
  %conv57 = zext i8 %24 to i32
  %and58 = and i32 %conv57, 2
  %tobool59 = icmp ne i32 %and58, 0
  br i1 %tobool59, label %if.then60, label %if.end62

if.then60:                                        ; preds = %if.else54
  %25 = load i32, i32* %off, align 4
  %or61 = or i32 %25, 65536
  store i32 %or61, i32* %off, align 4
  br label %if.end62

if.end62:                                         ; preds = %if.then60, %if.else54
  br label %if.end63

if.end63:                                         ; preds = %if.end62, %if.then52
  %26 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind64 = getelementptr inbounds %struct.options, %struct.options* %26, i32 0, i32 0
  %arrayidx65 = getelementptr inbounds [128 x i8], [128 x i8]* %ind64, i32 0, i32 87
  %27 = load i8, i8* %arrayidx65, align 1
  %conv66 = zext i8 %27 to i32
  %and67 = and i32 %conv66, 1
  %tobool68 = icmp ne i32 %and67, 0
  br i1 %tobool68, label %if.then69, label %if.else71

if.then69:                                        ; preds = %if.end63
  %28 = load i32, i32* %on, align 4
  %or70 = or i32 %28, 32768
  store i32 %or70, i32* %on, align 4
  br label %if.end80

if.else71:                                        ; preds = %if.end63
  %29 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind72 = getelementptr inbounds %struct.options, %struct.options* %29, i32 0, i32 0
  %arrayidx73 = getelementptr inbounds [128 x i8], [128 x i8]* %ind72, i32 0, i32 87
  %30 = load i8, i8* %arrayidx73, align 1
  %conv74 = zext i8 %30 to i32
  %and75 = and i32 %conv74, 2
  %tobool76 = icmp ne i32 %and75, 0
  br i1 %tobool76, label %if.then77, label %if.end79

if.then77:                                        ; preds = %if.else71
  %31 = load i32, i32* %off, align 4
  %or78 = or i32 %31, 32768
  store i32 %or78, i32* %off, align 4
  br label %if.end79

if.end79:                                         ; preds = %if.then77, %if.else71
  br label %if.end80

if.end80:                                         ; preds = %if.end79, %if.then69
  %32 = load i32, i32* %off, align 4
  store i32 %32, i32* %roff, align 4
  %33 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind81 = getelementptr inbounds %struct.options, %struct.options* %33, i32 0, i32 0
  %arrayidx82 = getelementptr inbounds [128 x i8], [128 x i8]* %ind81, i32 0, i32 122
  %34 = load i8, i8* %arrayidx82, align 2
  %conv83 = zext i8 %34 to i32
  %and84 = and i32 %conv83, 1
  %tobool85 = icmp ne i32 %and84, 0
  br i1 %tobool85, label %if.then86, label %if.else89

if.then86:                                        ; preds = %if.end80
  %35 = load i32, i32* %on, align 4
  %or87 = or i32 %35, 262144
  store i32 %or87, i32* %on, align 4
  %36 = load i32, i32* %off, align 4
  %or88 = or i32 %36, 131072
  store i32 %or88, i32* %off, align 4
  br label %if.end99

if.else89:                                        ; preds = %if.end80
  %37 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind90 = getelementptr inbounds %struct.options, %struct.options* %37, i32 0, i32 0
  %arrayidx91 = getelementptr inbounds [128 x i8], [128 x i8]* %ind90, i32 0, i32 122
  %38 = load i8, i8* %arrayidx91, align 2
  %conv92 = zext i8 %38 to i32
  %and93 = and i32 %conv92, 2
  %tobool94 = icmp ne i32 %and93, 0
  br i1 %tobool94, label %if.then95, label %if.end98

if.then95:                                        ; preds = %if.else89
  %39 = load i32, i32* %off, align 4
  %or96 = or i32 %39, 262144
  store i32 %or96, i32* %off, align 4
  %40 = load i32, i32* %roff, align 4
  %or97 = or i32 %40, 262144
  store i32 %or97, i32* %roff, align 4
  br label %if.end98

if.end98:                                         ; preds = %if.then95, %if.else89
  br label %if.end99

if.end99:                                         ; preds = %if.end98, %if.then86
  %41 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind100 = getelementptr inbounds %struct.options, %struct.options* %41, i32 0, i32 0
  %arrayidx101 = getelementptr inbounds [128 x i8], [128 x i8]* %ind100, i32 0, i32 107
  %42 = load i8, i8* %arrayidx101, align 1
  %conv102 = zext i8 %42 to i32
  %and103 = and i32 %conv102, 1
  %tobool104 = icmp ne i32 %and103, 0
  br i1 %tobool104, label %if.then105, label %if.else108

if.then105:                                       ; preds = %if.end99
  %43 = load i32, i32* %on, align 4
  %or106 = or i32 %43, 131072
  store i32 %or106, i32* %on, align 4
  %44 = load i32, i32* %off, align 4
  %or107 = or i32 %44, 262144
  store i32 %or107, i32* %off, align 4
  br label %if.end118

if.else108:                                       ; preds = %if.end99
  %45 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind109 = getelementptr inbounds %struct.options, %struct.options* %45, i32 0, i32 0
  %arrayidx110 = getelementptr inbounds [128 x i8], [128 x i8]* %ind109, i32 0, i32 107
  %46 = load i8, i8* %arrayidx110, align 1
  %conv111 = zext i8 %46 to i32
  %and112 = and i32 %conv111, 2
  %tobool113 = icmp ne i32 %and112, 0
  br i1 %tobool113, label %if.then114, label %if.end117

if.then114:                                       ; preds = %if.else108
  %47 = load i32, i32* %off, align 4
  %or115 = or i32 %47, 131072
  store i32 %or115, i32* %off, align 4
  %48 = load i32, i32* %roff, align 4
  %or116 = or i32 %48, 131072
  store i32 %or116, i32* %roff, align 4
  br label %if.end117

if.end117:                                        ; preds = %if.then114, %if.else108
  br label %if.end118

if.end118:                                        ; preds = %if.end117, %if.then105
  %49 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind119 = getelementptr inbounds %struct.options, %struct.options* %49, i32 0, i32 0
  %arrayidx120 = getelementptr inbounds [128 x i8], [128 x i8]* %ind119, i32 0, i32 100
  %50 = load i8, i8* %arrayidx120, align 4
  %conv121 = zext i8 %50 to i32
  %and122 = and i32 %conv121, 1
  %tobool123 = icmp ne i32 %and122, 0
  br i1 %tobool123, label %if.then124, label %if.else127

if.then124:                                       ; preds = %if.end118
  %51 = load i32, i32* %on, align 4
  %or125 = or i32 %51, 16384
  store i32 %or125, i32* %on, align 4
  %52 = load i32, i32* %off, align 4
  %or126 = or i32 %52, 16384
  store i32 %or126, i32* %off, align 4
  br label %if.end137

if.else127:                                       ; preds = %if.end118
  %53 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind128 = getelementptr inbounds %struct.options, %struct.options* %53, i32 0, i32 0
  %arrayidx129 = getelementptr inbounds [128 x i8], [128 x i8]* %ind128, i32 0, i32 100
  %54 = load i8, i8* %arrayidx129, align 4
  %conv130 = zext i8 %54 to i32
  %and131 = and i32 %conv130, 2
  %tobool132 = icmp ne i32 %and131, 0
  br i1 %tobool132, label %if.then133, label %if.end136

if.then133:                                       ; preds = %if.else127
  %55 = load i32, i32* %off, align 4
  %or134 = or i32 %55, 16384
  store i32 %or134, i32* %off, align 4
  %56 = load i32, i32* %roff, align 4
  %or135 = or i32 %56, 16384
  store i32 %or135, i32* %roff, align 4
  br label %if.end136

if.end136:                                        ; preds = %if.then133, %if.else127
  br label %if.end137

if.end137:                                        ; preds = %if.end136, %if.then124
  %57 = load i32, i32* %off, align 4
  %and138 = and i32 %57, 512
  %tobool139 = icmp ne i32 %and138, 0
  br i1 %tobool139, label %if.then177, label %lor.lhs.false140

lor.lhs.false140:                                 ; preds = %if.end137
  %58 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind141 = getelementptr inbounds %struct.options, %struct.options* %58, i32 0, i32 0
  %arrayidx142 = getelementptr inbounds [128 x i8], [128 x i8]* %ind141, i32 0, i32 107
  %59 = load i8, i8* %arrayidx142, align 1
  %conv143 = zext i8 %59 to i32
  %cmp144 = icmp ne i32 %conv143, 0
  br i1 %cmp144, label %land.lhs.true, label %lor.lhs.false151

land.lhs.true:                                    ; preds = %lor.lhs.false140
  %60 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind146 = getelementptr inbounds %struct.options, %struct.options* %60, i32 0, i32 0
  %arrayidx147 = getelementptr inbounds [128 x i8], [128 x i8]* %ind146, i32 0, i32 122
  %61 = load i8, i8* %arrayidx147, align 2
  %conv148 = zext i8 %61 to i32
  %cmp149 = icmp ne i32 %conv148, 0
  br i1 %cmp149, label %if.then177, label %lor.lhs.false151

lor.lhs.false151:                                 ; preds = %land.lhs.true, %lor.lhs.false140
  %62 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind152 = getelementptr inbounds %struct.options, %struct.options* %62, i32 0, i32 0
  %arrayidx153 = getelementptr inbounds [128 x i8], [128 x i8]* %ind152, i32 0, i32 120
  %63 = load i8, i8* %arrayidx153, align 4
  %conv154 = zext i8 %63 to i32
  %cmp155 = icmp ne i32 %conv154, 0
  br i1 %cmp155, label %land.lhs.true157, label %lor.lhs.false163

land.lhs.true157:                                 ; preds = %lor.lhs.false151
  %64 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind158 = getelementptr inbounds %struct.options, %struct.options* %64, i32 0, i32 0
  %arrayidx159 = getelementptr inbounds [128 x i8], [128 x i8]* %ind158, i32 0, i32 120
  %65 = load i8, i8* %arrayidx159, align 4
  %conv160 = zext i8 %65 to i32
  %cmp161 = icmp sgt i32 %conv160, 3
  br i1 %cmp161, label %lor.lhs.false163, label %if.then177

lor.lhs.false163:                                 ; preds = %land.lhs.true157, %lor.lhs.false151
  %66 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind164 = getelementptr inbounds %struct.options, %struct.options* %66, i32 0, i32 0
  %arrayidx165 = getelementptr inbounds [128 x i8], [128 x i8]* %ind164, i32 0, i32 88
  %67 = load i8, i8* %arrayidx165, align 4
  %conv166 = zext i8 %67 to i32
  %and167 = and i32 %conv166, 1
  %tobool168 = icmp ne i32 %and167, 0
  br i1 %tobool168, label %land.lhs.true169, label %if.end178

land.lhs.true169:                                 ; preds = %lor.lhs.false163
  %68 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind170 = getelementptr inbounds %struct.options, %struct.options* %68, i32 0, i32 0
  %arrayidx171 = getelementptr inbounds [128 x i8], [128 x i8]* %ind170, i32 0, i32 109
  %69 = load i8, i8* %arrayidx171, align 1
  %conv172 = zext i8 %69 to i32
  %cmp173 = icmp ne i32 %conv172, 0
  br i1 %cmp173, label %if.then177, label %lor.lhs.false175

lor.lhs.false175:                                 ; preds = %land.lhs.true169
  %70 = load i8*, i8** @scriptname, align 4
  %tobool176 = icmp ne i8* %70, null
  br i1 %tobool176, label %if.end178, label %if.then177

if.then177:                                       ; preds = %lor.lhs.false175, %land.lhs.true169, %land.lhs.true157, %land.lhs.true, %if.end137
  %71 = load i8*, i8** %name.addr, align 4
  call void (i8*, i8*, ...) @zwarnnam(i8* %71, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.65, i32 0, i32 0))
  store i32 1, i32* %retval, align 4
  br label %return

if.end178:                                        ; preds = %lor.lhs.false175, %lor.lhs.false163
  %72 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind179 = getelementptr inbounds %struct.options, %struct.options* %72, i32 0, i32 0
  %arrayidx180 = getelementptr inbounds [128 x i8], [128 x i8]* %ind179, i32 0, i32 120
  %73 = load i8, i8* %arrayidx180, align 4
  %conv181 = zext i8 %73 to i32
  %cmp182 = icmp ne i32 %conv181, 0
  br i1 %cmp182, label %if.then184, label %if.end196

if.then184:                                       ; preds = %if.end178
  %74 = load %struct.options*, %struct.options** %ops.addr, align 4
  %args = getelementptr inbounds %struct.options, %struct.options* %74, i32 0, i32 1
  %75 = load i8**, i8*** %args, align 4
  %76 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind185 = getelementptr inbounds %struct.options, %struct.options* %76, i32 0, i32 0
  %arrayidx186 = getelementptr inbounds [128 x i8], [128 x i8]* %ind185, i32 0, i32 120
  %77 = load i8, i8* %arrayidx186, align 4
  %conv187 = zext i8 %77 to i32
  %shr = ashr i32 %conv187, 2
  %sub = sub nsw i32 %shr, 1
  %arrayidx188 = getelementptr inbounds i8*, i8** %75, i32 %sub
  %78 = load i8*, i8** %arrayidx188, align 4
  %call = call i32 @zstrtol(i8* %78, i8** %eptr, i32 10)
  store i32 %call, i32* %expand, align 4
  %79 = load i8*, i8** %eptr, align 4
  %80 = load i8, i8* %79, align 1
  %tobool189 = icmp ne i8 %80, 0
  br i1 %tobool189, label %if.then190, label %if.end191

if.then190:                                       ; preds = %if.then184
  %81 = load i8*, i8** %name.addr, align 4
  call void (i8*, i8*, ...) @zwarnnam(i8* %81, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.66, i32 0, i32 0))
  store i32 1, i32* %retval, align 4
  br label %return

if.end191:                                        ; preds = %if.then184
  %82 = load i32, i32* %expand, align 4
  %cmp192 = icmp eq i32 %82, 0
  br i1 %cmp192, label %if.then194, label %if.end195

if.then194:                                       ; preds = %if.end191
  store i32 -1, i32* %expand, align 4
  br label %if.end195

if.end195:                                        ; preds = %if.then194, %if.end191
  br label %if.end196

if.end196:                                        ; preds = %if.end195, %if.end178
  %83 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind197 = getelementptr inbounds %struct.options, %struct.options* %83, i32 0, i32 0
  %arrayidx198 = getelementptr inbounds [128 x i8], [128 x i8]* %ind197, i32 0, i32 102
  %84 = load i8, i8* %arrayidx198, align 2
  %conv199 = zext i8 %84 to i32
  %and200 = and i32 %conv199, 2
  %tobool201 = icmp ne i32 %and200, 0
  br i1 %tobool201, label %if.then210, label %lor.lhs.false202

lor.lhs.false202:                                 ; preds = %if.end196
  %85 = load i32, i32* %roff, align 4
  %tobool203 = icmp ne i32 %85, 0
  br i1 %tobool203, label %if.then210, label %lor.lhs.false204

lor.lhs.false204:                                 ; preds = %lor.lhs.false202
  %86 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind205 = getelementptr inbounds %struct.options, %struct.options* %86, i32 0, i32 0
  %arrayidx206 = getelementptr inbounds [128 x i8], [128 x i8]* %ind205, i32 0, i32 43
  %87 = load i8, i8* %arrayidx206, align 1
  %conv207 = zext i8 %87 to i32
  %cmp208 = icmp ne i32 %conv207, 0
  br i1 %cmp208, label %if.then210, label %if.end212

if.then210:                                       ; preds = %lor.lhs.false204, %lor.lhs.false202, %if.end196
  %88 = load i32, i32* %pflags, align 4
  %or211 = or i32 %88, 1
  store i32 %or211, i32* %pflags, align 4
  br label %if.end212

if.end212:                                        ; preds = %if.then210, %lor.lhs.false204
  %89 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind213 = getelementptr inbounds %struct.options, %struct.options* %89, i32 0, i32 0
  %arrayidx214 = getelementptr inbounds [128 x i8], [128 x i8]* %ind213, i32 0, i32 77
  %90 = load i8, i8* %arrayidx214, align 1
  %conv215 = zext i8 %90 to i32
  %and216 = and i32 %conv215, 1
  %tobool217 = icmp ne i32 %and216, 0
  br i1 %tobool217, label %if.then224, label %lor.lhs.false218

lor.lhs.false218:                                 ; preds = %if.end212
  %91 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind219 = getelementptr inbounds %struct.options, %struct.options* %91, i32 0, i32 0
  %arrayidx220 = getelementptr inbounds [128 x i8], [128 x i8]* %ind219, i32 0, i32 77
  %92 = load i8, i8* %arrayidx220, align 1
  %conv221 = zext i8 %92 to i32
  %and222 = and i32 %conv221, 2
  %tobool223 = icmp ne i32 %and222, 0
  br i1 %tobool223, label %if.then224, label %if.end540

if.then224:                                       ; preds = %lor.lhs.false218, %if.end212
  %93 = load i32, i32* %on, align 4
  %tobool225 = icmp ne i32 %93, 0
  br i1 %tobool225, label %if.then254, label %lor.lhs.false226

lor.lhs.false226:                                 ; preds = %if.then224
  %94 = load i32, i32* %off, align 4
  %tobool227 = icmp ne i32 %94, 0
  br i1 %tobool227, label %if.then254, label %lor.lhs.false228

lor.lhs.false228:                                 ; preds = %lor.lhs.false226
  %95 = load i32, i32* %pflags, align 4
  %tobool229 = icmp ne i32 %95, 0
  br i1 %tobool229, label %if.then254, label %lor.lhs.false230

lor.lhs.false230:                                 ; preds = %lor.lhs.false228
  %96 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind231 = getelementptr inbounds %struct.options, %struct.options* %96, i32 0, i32 0
  %arrayidx232 = getelementptr inbounds [128 x i8], [128 x i8]* %ind231, i32 0, i32 88
  %97 = load i8, i8* %arrayidx232, align 4
  %conv233 = zext i8 %97 to i32
  %cmp234 = icmp ne i32 %conv233, 0
  br i1 %cmp234, label %if.then254, label %lor.lhs.false236

lor.lhs.false236:                                 ; preds = %lor.lhs.false230
  %98 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind237 = getelementptr inbounds %struct.options, %struct.options* %98, i32 0, i32 0
  %arrayidx238 = getelementptr inbounds [128 x i8], [128 x i8]* %ind237, i32 0, i32 117
  %99 = load i8, i8* %arrayidx238, align 1
  %conv239 = zext i8 %99 to i32
  %cmp240 = icmp ne i32 %conv239, 0
  br i1 %cmp240, label %if.then254, label %lor.lhs.false242

lor.lhs.false242:                                 ; preds = %lor.lhs.false236
  %100 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind243 = getelementptr inbounds %struct.options, %struct.options* %100, i32 0, i32 0
  %arrayidx244 = getelementptr inbounds [128 x i8], [128 x i8]* %ind243, i32 0, i32 85
  %101 = load i8, i8* %arrayidx244, align 1
  %conv245 = zext i8 %101 to i32
  %cmp246 = icmp ne i32 %conv245, 0
  br i1 %cmp246, label %if.then254, label %lor.lhs.false248

lor.lhs.false248:                                 ; preds = %lor.lhs.false242
  %102 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind249 = getelementptr inbounds %struct.options, %struct.options* %102, i32 0, i32 0
  %arrayidx250 = getelementptr inbounds [128 x i8], [128 x i8]* %ind249, i32 0, i32 119
  %103 = load i8, i8* %arrayidx250, align 1
  %conv251 = zext i8 %103 to i32
  %cmp252 = icmp ne i32 %conv251, 0
  br i1 %cmp252, label %if.then254, label %if.end255

if.then254:                                       ; preds = %lor.lhs.false248, %lor.lhs.false242, %lor.lhs.false236, %lor.lhs.false230, %lor.lhs.false228, %lor.lhs.false226, %if.then224
  %104 = load i8*, i8** %name.addr, align 4
  call void (i8*, i8*, ...) @zwarnnam(i8* %104, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.65, i32 0, i32 0))
  store i32 1, i32* %retval, align 4
  br label %return

if.end255:                                        ; preds = %lor.lhs.false248
  %105 = load i8**, i8*** %argv.addr, align 4
  %106 = load i8*, i8** %105, align 4
  %tobool256 = icmp ne i8* %106, null
  br i1 %tobool256, label %if.else273, label %if.then257

if.then257:                                       ; preds = %if.end255
  %107 = load i32, i32* @queueing_enabled, align 4
  %inc = add nsw i32 %107, 1
  store i32 %inc, i32* @queueing_enabled, align 4
  %108 = load %struct.mathfunc*, %struct.mathfunc** @mathfuncs, align 4
  store %struct.mathfunc* %108, %struct.mathfunc** %p, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then257
  %109 = load %struct.mathfunc*, %struct.mathfunc** %p, align 4
  %tobool258 = icmp ne %struct.mathfunc* %109, null
  br i1 %tobool258, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %110 = load %struct.mathfunc*, %struct.mathfunc** %p, align 4
  %flags = getelementptr inbounds %struct.mathfunc, %struct.mathfunc* %110, i32 0, i32 2
  %111 = load i32, i32* %flags, align 4
  %and259 = and i32 %111, 4
  %tobool260 = icmp ne i32 %and259, 0
  br i1 %tobool260, label %if.then261, label %if.end262

if.then261:                                       ; preds = %for.body
  %112 = load %struct.mathfunc*, %struct.mathfunc** %p, align 4
  call void @listusermathfunc(%struct.mathfunc* %112)
  br label %if.end262

if.end262:                                        ; preds = %if.then261, %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end262
  %113 = load %struct.mathfunc*, %struct.mathfunc** %p, align 4
  %next = getelementptr inbounds %struct.mathfunc, %struct.mathfunc* %113, i32 0, i32 0
  %114 = load %struct.mathfunc*, %struct.mathfunc** %next, align 4
  store %struct.mathfunc* %114, %struct.mathfunc** %p, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  br label %do.body

do.body:                                          ; preds = %for.end
  %115 = load i32, i32* @queueing_enabled, align 4
  %dec = add nsw i32 %115, -1
  store i32 %dec, i32* @queueing_enabled, align 4
  %tobool263 = icmp ne i32 %dec, 0
  br i1 %tobool263, label %if.end271, label %if.then264

if.then264:                                       ; preds = %do.body
  br label %do.body265

do.body265:                                       ; preds = %if.then264
  br label %while.cond

while.cond:                                       ; preds = %while.body, %do.body265
  %116 = load i32, i32* @queue_front, align 4
  %117 = load i32, i32* @queue_rear, align 4
  %cmp266 = icmp ne i32 %116, %117
  br i1 %cmp266, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %118 = load i32, i32* @queue_front, align 4
  %add = add nsw i32 %118, 1
  %rem = srem i32 %add, 128
  store i32 %rem, i32* @queue_front, align 4
  %119 = load i32, i32* @queue_front, align 4
  %arrayidx268 = getelementptr inbounds [128 x %struct.__sigset_t], [128 x %struct.__sigset_t]* @signal_mask_queue, i32 0, i32 %119
  call void @signal_setmask(%struct.__sigset_t* sret %tmp, %struct.__sigset_t* byval align 4 %arrayidx268)
  %120 = bitcast %struct.__sigset_t* %oset to i8*
  %121 = bitcast %struct.__sigset_t* %tmp to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %120, i8* %121, i32 128, i32 4, i1 false)
  %122 = load i32, i32* @queue_front, align 4
  %arrayidx269 = getelementptr inbounds [128 x i32], [128 x i32]* @signal_queue, i32 0, i32 %122
  %123 = load i32, i32* %arrayidx269, align 4
  call void @zhandler(i32 %123)
  call void @signal_setmask(%struct.__sigset_t* sret %tmp270, %struct.__sigset_t* byval align 4 %oset)
  br label %while.cond

while.end:                                        ; preds = %while.cond
  br label %do.end

do.end:                                           ; preds = %while.end
  br label %if.end271

if.end271:                                        ; preds = %do.end, %do.body
  br label %do.end272

do.end272:                                        ; preds = %if.end271
  br label %if.end539

if.else273:                                       ; preds = %if.end255
  %124 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind274 = getelementptr inbounds %struct.options, %struct.options* %124, i32 0, i32 0
  %arrayidx275 = getelementptr inbounds [128 x i8], [128 x i8]* %ind274, i32 0, i32 109
  %125 = load i8, i8* %arrayidx275, align 1
  %conv276 = zext i8 %125 to i32
  %cmp277 = icmp ne i32 %conv276, 0
  br i1 %cmp277, label %if.then279, label %if.else346

if.then279:                                       ; preds = %if.else273
  br label %for.cond280

for.cond280:                                      ; preds = %for.inc344, %if.then279
  %126 = load i8**, i8*** %argv.addr, align 4
  %127 = load i8*, i8** %126, align 4
  %tobool281 = icmp ne i8* %127, null
  br i1 %tobool281, label %for.body282, label %for.end345

for.body282:                                      ; preds = %for.cond280
  %128 = load i32, i32* @queueing_enabled, align 4
  %inc283 = add nsw i32 %128, 1
  store i32 %inc283, i32* @queueing_enabled, align 4
  %129 = load i8**, i8*** %argv.addr, align 4
  %130 = load i8*, i8** %129, align 4
  call void @tokenize(i8* %130)
  %131 = load i8**, i8*** %argv.addr, align 4
  %132 = load i8*, i8** %131, align 4
  %call284 = call %struct.patprog* @patcompile(i8* %132, i32 64, i8** null)
  store %struct.patprog* %call284, %struct.patprog** %pprog, align 4
  %tobool285 = icmp ne %struct.patprog* %call284, null
  br i1 %tobool285, label %if.then286, label %if.else319

if.then286:                                       ; preds = %for.body282
  %133 = load %struct.mathfunc*, %struct.mathfunc** @mathfuncs, align 4
  store %struct.mathfunc* %133, %struct.mathfunc** %p, align 4
  store %struct.mathfunc* null, %struct.mathfunc** %q, align 4
  br label %for.cond287

for.cond287:                                      ; preds = %for.inc317, %if.then286
  %134 = load %struct.mathfunc*, %struct.mathfunc** %p, align 4
  %tobool288 = icmp ne %struct.mathfunc* %134, null
  br i1 %tobool288, label %for.body289, label %for.end318

for.body289:                                      ; preds = %for.cond287
  br label %do.body292

do.body292:                                       ; preds = %do.cond, %for.body289
  store %struct.mathfunc* null, %struct.mathfunc** %next291, align 4
  %135 = load %struct.mathfunc*, %struct.mathfunc** %p, align 4
  %flags293 = getelementptr inbounds %struct.mathfunc, %struct.mathfunc* %135, i32 0, i32 2
  %136 = load i32, i32* %flags293, align 4
  %and294 = and i32 %136, 4
  %tobool295 = icmp ne i32 %and294, 0
  br i1 %tobool295, label %land.lhs.true296, label %if.end310

land.lhs.true296:                                 ; preds = %do.body292
  %137 = load %struct.patprog*, %struct.patprog** %pprog, align 4
  %138 = load %struct.mathfunc*, %struct.mathfunc** %p, align 4
  %name297 = getelementptr inbounds %struct.mathfunc, %struct.mathfunc* %138, i32 0, i32 1
  %139 = load i8*, i8** %name297, align 4
  %call298 = call i32 @pattry(%struct.patprog* %137, i8* %139)
  %tobool299 = icmp ne i32 %call298, 0
  br i1 %tobool299, label %if.then300, label %if.end310

if.then300:                                       ; preds = %land.lhs.true296
  %140 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind301 = getelementptr inbounds %struct.options, %struct.options* %140, i32 0, i32 0
  %arrayidx302 = getelementptr inbounds [128 x i8], [128 x i8]* %ind301, i32 0, i32 77
  %141 = load i8, i8* %arrayidx302, align 1
  %conv303 = zext i8 %141 to i32
  %and304 = and i32 %conv303, 2
  %tobool305 = icmp ne i32 %and304, 0
  br i1 %tobool305, label %if.then306, label %if.else308

if.then306:                                       ; preds = %if.then300
  %142 = load %struct.mathfunc*, %struct.mathfunc** %p, align 4
  %next307 = getelementptr inbounds %struct.mathfunc, %struct.mathfunc* %142, i32 0, i32 0
  %143 = load %struct.mathfunc*, %struct.mathfunc** %next307, align 4
  store %struct.mathfunc* %143, %struct.mathfunc** %next291, align 4
  %144 = load %struct.mathfunc*, %struct.mathfunc** %q, align 4
  %145 = load %struct.mathfunc*, %struct.mathfunc** %p, align 4
  call void @removemathfunc(%struct.mathfunc* %144, %struct.mathfunc* %145)
  %146 = load %struct.mathfunc*, %struct.mathfunc** %next291, align 4
  store %struct.mathfunc* %146, %struct.mathfunc** %p, align 4
  br label %if.end309

if.else308:                                       ; preds = %if.then300
  %147 = load %struct.mathfunc*, %struct.mathfunc** %p, align 4
  call void @listusermathfunc(%struct.mathfunc* %147)
  br label %if.end309

if.end309:                                        ; preds = %if.else308, %if.then306
  br label %if.end310

if.end310:                                        ; preds = %if.end309, %land.lhs.true296, %do.body292
  br label %do.cond

do.cond:                                          ; preds = %if.end310
  %148 = load %struct.mathfunc*, %struct.mathfunc** %next291, align 4
  %tobool311 = icmp ne %struct.mathfunc* %148, null
  br i1 %tobool311, label %do.body292, label %do.end312

do.end312:                                        ; preds = %do.cond
  %149 = load %struct.mathfunc*, %struct.mathfunc** %p, align 4
  %tobool313 = icmp ne %struct.mathfunc* %149, null
  br i1 %tobool313, label %if.then314, label %if.end316

if.then314:                                       ; preds = %do.end312
  %150 = load %struct.mathfunc*, %struct.mathfunc** %p, align 4
  %next315 = getelementptr inbounds %struct.mathfunc, %struct.mathfunc* %150, i32 0, i32 0
  %151 = load %struct.mathfunc*, %struct.mathfunc** %next315, align 4
  store %struct.mathfunc* %151, %struct.mathfunc** %p, align 4
  br label %if.end316

if.end316:                                        ; preds = %if.then314, %do.end312
  br label %for.inc317

for.inc317:                                       ; preds = %if.end316
  %152 = load %struct.mathfunc*, %struct.mathfunc** %p, align 4
  store %struct.mathfunc* %152, %struct.mathfunc** %q, align 4
  br label %for.cond287

for.end318:                                       ; preds = %for.cond287
  br label %if.end320

if.else319:                                       ; preds = %for.body282
  %153 = load i8**, i8*** %argv.addr, align 4
  %154 = load i8*, i8** %153, align 4
  call void @untokenize(i8* %154)
  %155 = load i8*, i8** %name.addr, align 4
  %156 = load i8**, i8*** %argv.addr, align 4
  %157 = load i8*, i8** %156, align 4
  call void (i8*, i8*, ...) @zwarnnam(i8* %155, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.15, i32 0, i32 0), i8* %157)
  store i32 1, i32* %returnval, align 4
  br label %if.end320

if.end320:                                        ; preds = %if.else319, %for.end318
  br label %do.body321

do.body321:                                       ; preds = %if.end320
  %158 = load i32, i32* @queueing_enabled, align 4
  %dec322 = add nsw i32 %158, -1
  store i32 %dec322, i32* @queueing_enabled, align 4
  %tobool323 = icmp ne i32 %dec322, 0
  br i1 %tobool323, label %if.end341, label %if.then324

if.then324:                                       ; preds = %do.body321
  br label %do.body325

do.body325:                                       ; preds = %if.then324
  br label %while.cond326

while.cond326:                                    ; preds = %while.body329, %do.body325
  %159 = load i32, i32* @queue_front, align 4
  %160 = load i32, i32* @queue_rear, align 4
  %cmp327 = icmp ne i32 %159, %160
  br i1 %cmp327, label %while.body329, label %while.end338

while.body329:                                    ; preds = %while.cond326
  %161 = load i32, i32* @queue_front, align 4
  %add332 = add nsw i32 %161, 1
  %rem333 = srem i32 %add332, 128
  store i32 %rem333, i32* @queue_front, align 4
  %162 = load i32, i32* @queue_front, align 4
  %arrayidx334 = getelementptr inbounds [128 x %struct.__sigset_t], [128 x %struct.__sigset_t]* @signal_mask_queue, i32 0, i32 %162
  call void @signal_setmask(%struct.__sigset_t* sret %tmp335, %struct.__sigset_t* byval align 4 %arrayidx334)
  %163 = bitcast %struct.__sigset_t* %oset331 to i8*
  %164 = bitcast %struct.__sigset_t* %tmp335 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %163, i8* %164, i32 128, i32 4, i1 false)
  %165 = load i32, i32* @queue_front, align 4
  %arrayidx336 = getelementptr inbounds [128 x i32], [128 x i32]* @signal_queue, i32 0, i32 %165
  %166 = load i32, i32* %arrayidx336, align 4
  call void @zhandler(i32 %166)
  call void @signal_setmask(%struct.__sigset_t* sret %tmp337, %struct.__sigset_t* byval align 4 %oset331)
  br label %while.cond326

while.end338:                                     ; preds = %while.cond326
  br label %do.end340

do.end340:                                        ; preds = %while.end338
  br label %if.end341

if.end341:                                        ; preds = %do.end340, %do.body321
  br label %do.end343

do.end343:                                        ; preds = %if.end341
  br label %for.inc344

for.inc344:                                       ; preds = %do.end343
  %167 = load i8**, i8*** %argv.addr, align 4
  %incdec.ptr = getelementptr inbounds i8*, i8** %167, i32 1
  store i8** %incdec.ptr, i8*** %argv.addr, align 4
  br label %for.cond280

for.end345:                                       ; preds = %for.cond280
  br label %if.end538

if.else346:                                       ; preds = %if.else273
  %168 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind347 = getelementptr inbounds %struct.options, %struct.options* %168, i32 0, i32 0
  %arrayidx348 = getelementptr inbounds [128 x i8], [128 x i8]* %ind347, i32 0, i32 77
  %169 = load i8, i8* %arrayidx348, align 1
  %conv349 = zext i8 %169 to i32
  %and350 = and i32 %conv349, 2
  %tobool351 = icmp ne i32 %and350, 0
  br i1 %tobool351, label %if.then352, label %if.else399

if.then352:                                       ; preds = %if.else346
  br label %for.cond353

for.cond353:                                      ; preds = %for.inc396, %if.then352
  %170 = load i8**, i8*** %argv.addr, align 4
  %171 = load i8*, i8** %170, align 4
  %tobool354 = icmp ne i8* %171, null
  br i1 %tobool354, label %for.body355, label %for.end398

for.body355:                                      ; preds = %for.cond353
  %172 = load i32, i32* @queueing_enabled, align 4
  %inc356 = add nsw i32 %172, 1
  store i32 %inc356, i32* @queueing_enabled, align 4
  %173 = load %struct.mathfunc*, %struct.mathfunc** @mathfuncs, align 4
  store %struct.mathfunc* %173, %struct.mathfunc** %p, align 4
  store %struct.mathfunc* null, %struct.mathfunc** %q, align 4
  br label %for.cond357

for.cond357:                                      ; preds = %for.inc370, %for.body355
  %174 = load %struct.mathfunc*, %struct.mathfunc** %p, align 4
  %tobool358 = icmp ne %struct.mathfunc* %174, null
  br i1 %tobool358, label %for.body359, label %for.end372

for.body359:                                      ; preds = %for.cond357
  %175 = load %struct.mathfunc*, %struct.mathfunc** %p, align 4
  %name360 = getelementptr inbounds %struct.mathfunc, %struct.mathfunc* %175, i32 0, i32 1
  %176 = load i8*, i8** %name360, align 4
  %177 = load i8**, i8*** %argv.addr, align 4
  %178 = load i8*, i8** %177, align 4
  %call361 = call i32 @strcmp(i8* %176, i8* %178)
  %tobool362 = icmp ne i32 %call361, 0
  br i1 %tobool362, label %if.end369, label %if.then363

if.then363:                                       ; preds = %for.body359
  %179 = load %struct.mathfunc*, %struct.mathfunc** %p, align 4
  %flags364 = getelementptr inbounds %struct.mathfunc, %struct.mathfunc* %179, i32 0, i32 2
  %180 = load i32, i32* %flags364, align 4
  %and365 = and i32 %180, 4
  %tobool366 = icmp ne i32 %and365, 0
  br i1 %tobool366, label %if.end368, label %if.then367

if.then367:                                       ; preds = %if.then363
  %181 = load i8*, i8** %name.addr, align 4
  %182 = load i8**, i8*** %argv.addr, align 4
  %183 = load i8*, i8** %182, align 4
  call void (i8*, i8*, ...) @zwarnnam(i8* %181, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.67, i32 0, i32 0), i8* %183)
  store i32 1, i32* %returnval, align 4
  br label %for.end372

if.end368:                                        ; preds = %if.then363
  %184 = load %struct.mathfunc*, %struct.mathfunc** %q, align 4
  %185 = load %struct.mathfunc*, %struct.mathfunc** %p, align 4
  call void @removemathfunc(%struct.mathfunc* %184, %struct.mathfunc* %185)
  br label %for.end372

if.end369:                                        ; preds = %for.body359
  br label %for.inc370

for.inc370:                                       ; preds = %if.end369
  %186 = load %struct.mathfunc*, %struct.mathfunc** %p, align 4
  store %struct.mathfunc* %186, %struct.mathfunc** %q, align 4
  %187 = load %struct.mathfunc*, %struct.mathfunc** %p, align 4
  %next371 = getelementptr inbounds %struct.mathfunc, %struct.mathfunc* %187, i32 0, i32 0
  %188 = load %struct.mathfunc*, %struct.mathfunc** %next371, align 4
  store %struct.mathfunc* %188, %struct.mathfunc** %p, align 4
  br label %for.cond357

for.end372:                                       ; preds = %if.end368, %if.then367, %for.cond357
  br label %do.body373

do.body373:                                       ; preds = %for.end372
  %189 = load i32, i32* @queueing_enabled, align 4
  %dec374 = add nsw i32 %189, -1
  store i32 %dec374, i32* @queueing_enabled, align 4
  %tobool375 = icmp ne i32 %dec374, 0
  br i1 %tobool375, label %if.end393, label %if.then376

if.then376:                                       ; preds = %do.body373
  br label %do.body377

do.body377:                                       ; preds = %if.then376
  br label %while.cond378

while.cond378:                                    ; preds = %while.body381, %do.body377
  %190 = load i32, i32* @queue_front, align 4
  %191 = load i32, i32* @queue_rear, align 4
  %cmp379 = icmp ne i32 %190, %191
  br i1 %cmp379, label %while.body381, label %while.end390

while.body381:                                    ; preds = %while.cond378
  %192 = load i32, i32* @queue_front, align 4
  %add384 = add nsw i32 %192, 1
  %rem385 = srem i32 %add384, 128
  store i32 %rem385, i32* @queue_front, align 4
  %193 = load i32, i32* @queue_front, align 4
  %arrayidx386 = getelementptr inbounds [128 x %struct.__sigset_t], [128 x %struct.__sigset_t]* @signal_mask_queue, i32 0, i32 %193
  call void @signal_setmask(%struct.__sigset_t* sret %tmp387, %struct.__sigset_t* byval align 4 %arrayidx386)
  %194 = bitcast %struct.__sigset_t* %oset383 to i8*
  %195 = bitcast %struct.__sigset_t* %tmp387 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %194, i8* %195, i32 128, i32 4, i1 false)
  %196 = load i32, i32* @queue_front, align 4
  %arrayidx388 = getelementptr inbounds [128 x i32], [128 x i32]* @signal_queue, i32 0, i32 %196
  %197 = load i32, i32* %arrayidx388, align 4
  call void @zhandler(i32 %197)
  call void @signal_setmask(%struct.__sigset_t* sret %tmp389, %struct.__sigset_t* byval align 4 %oset383)
  br label %while.cond378

while.end390:                                     ; preds = %while.cond378
  br label %do.end392

do.end392:                                        ; preds = %while.end390
  br label %if.end393

if.end393:                                        ; preds = %do.end392, %do.body373
  br label %do.end395

do.end395:                                        ; preds = %if.end393
  br label %for.inc396

for.inc396:                                       ; preds = %do.end395
  %198 = load i8**, i8*** %argv.addr, align 4
  %incdec.ptr397 = getelementptr inbounds i8*, i8** %198, i32 1
  store i8** %incdec.ptr397, i8*** %argv.addr, align 4
  br label %for.cond353

for.end398:                                       ; preds = %for.cond353
  br label %if.end537

if.else399:                                       ; preds = %if.else346
  %199 = load i8**, i8*** %argv.addr, align 4
  %incdec.ptr403 = getelementptr inbounds i8*, i8** %199, i32 1
  store i8** %incdec.ptr403, i8*** %argv.addr, align 4
  %200 = load i8*, i8** %199, align 4
  store i8* %200, i8** %funcname, align 4
  store i8* null, i8** %modname, align 4
  %201 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind406 = getelementptr inbounds %struct.options, %struct.options* %201, i32 0, i32 0
  %arrayidx407 = getelementptr inbounds [128 x i8], [128 x i8]* %ind406, i32 0, i32 115
  %202 = load i8, i8* %arrayidx407, align 1
  %conv408 = zext i8 %202 to i32
  %cmp409 = icmp ne i32 %conv408, 0
  br i1 %cmp409, label %if.then411, label %if.else412

if.then411:                                       ; preds = %if.else399
  store i32 1, i32* %maxargs, align 4
  store i32 1, i32* %minargs, align 4
  br label %if.end413

if.else412:                                       ; preds = %if.else399
  store i32 0, i32* %minargs, align 4
  store i32 -1, i32* %maxargs, align 4
  br label %if.end413

if.end413:                                        ; preds = %if.else412, %if.then411
  %203 = load i8*, i8** %funcname, align 4
  %call414 = call i8* @itype_end(i8* %203, i32 128, i32 0)
  store i8* %call414, i8** %ptr, align 4
  %204 = load i8*, i8** %funcname, align 4
  %205 = load i8, i8* %204, align 1
  %idxprom = zext i8 %205 to i32
  %arrayidx415 = getelementptr inbounds [256 x i16], [256 x i16]* @typtab, i32 0, i32 %idxprom
  %206 = load i16, i16* %arrayidx415, align 2
  %conv416 = sext i16 %206 to i32
  %and417 = and i32 %conv416, 1
  %tobool418 = icmp ne i32 %and417, 0
  br i1 %tobool418, label %if.then425, label %lor.lhs.false419

lor.lhs.false419:                                 ; preds = %if.end413
  %207 = load i8*, i8** %funcname, align 4
  %208 = load i8*, i8** %ptr, align 4
  %cmp420 = icmp eq i8* %207, %208
  br i1 %cmp420, label %if.then425, label %lor.lhs.false422

lor.lhs.false422:                                 ; preds = %lor.lhs.false419
  %209 = load i8*, i8** %ptr, align 4
  %210 = load i8, i8* %209, align 1
  %conv423 = sext i8 %210 to i32
  %tobool424 = icmp ne i32 %conv423, 0
  br i1 %tobool424, label %if.then425, label %if.end426

if.then425:                                       ; preds = %lor.lhs.false422, %lor.lhs.false419, %if.end413
  %211 = load i8*, i8** %name.addr, align 4
  %212 = load i8*, i8** %funcname, align 4
  call void (i8*, i8*, ...) @zwarnnam(i8* %211, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.68, i32 0, i32 0), i8* %212)
  store i32 1, i32* %retval, align 4
  br label %return

if.end426:                                        ; preds = %lor.lhs.false422
  %213 = load i8**, i8*** %argv.addr, align 4
  %214 = load i8*, i8** %213, align 4
  %tobool427 = icmp ne i8* %214, null
  br i1 %tobool427, label %if.then428, label %if.end448

if.then428:                                       ; preds = %if.end426
  %215 = load i8**, i8*** %argv.addr, align 4
  %216 = load i8*, i8** %215, align 4
  %call429 = call i32 @zstrtol(i8* %216, i8** %ptr, i32 0)
  store i32 %call429, i32* %minargs, align 4
  %217 = load i32, i32* %minargs, align 4
  %cmp430 = icmp slt i32 %217, 0
  br i1 %cmp430, label %if.then435, label %lor.lhs.false432

lor.lhs.false432:                                 ; preds = %if.then428
  %218 = load i8*, i8** %ptr, align 4
  %219 = load i8, i8* %218, align 1
  %conv433 = sext i8 %219 to i32
  %tobool434 = icmp ne i32 %conv433, 0
  br i1 %tobool434, label %if.then435, label %if.end436

if.then435:                                       ; preds = %lor.lhs.false432, %if.then428
  %220 = load i8*, i8** %name.addr, align 4
  %221 = load i8**, i8*** %argv.addr, align 4
  %222 = load i8*, i8** %221, align 4
  call void (i8*, i8*, ...) @zwarnnam(i8* %220, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.69, i32 0, i32 0), i8* %222)
  store i32 1, i32* %retval, align 4
  br label %return

if.end436:                                        ; preds = %lor.lhs.false432
  %223 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind437 = getelementptr inbounds %struct.options, %struct.options* %223, i32 0, i32 0
  %arrayidx438 = getelementptr inbounds [128 x i8], [128 x i8]* %ind437, i32 0, i32 115
  %224 = load i8, i8* %arrayidx438, align 1
  %conv439 = zext i8 %224 to i32
  %cmp440 = icmp ne i32 %conv439, 0
  br i1 %cmp440, label %land.lhs.true442, label %if.end446

land.lhs.true442:                                 ; preds = %if.end436
  %225 = load i32, i32* %minargs, align 4
  %cmp443 = icmp ne i32 %225, 1
  br i1 %cmp443, label %if.then445, label %if.end446

if.then445:                                       ; preds = %land.lhs.true442
  %226 = load i8*, i8** %name.addr, align 4
  call void (i8*, i8*, ...) @zwarnnam(i8* %226, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.70, i32 0, i32 0))
  store i32 1, i32* %retval, align 4
  br label %return

if.end446:                                        ; preds = %land.lhs.true442, %if.end436
  %227 = load i32, i32* %minargs, align 4
  store i32 %227, i32* %maxargs, align 4
  %228 = load i8**, i8*** %argv.addr, align 4
  %incdec.ptr447 = getelementptr inbounds i8*, i8** %228, i32 1
  store i8** %incdec.ptr447, i8*** %argv.addr, align 4
  br label %if.end448

if.end448:                                        ; preds = %if.end446, %if.end426
  %229 = load i8**, i8*** %argv.addr, align 4
  %230 = load i8*, i8** %229, align 4
  %tobool449 = icmp ne i8* %230, null
  br i1 %tobool449, label %if.then450, label %if.end476

if.then450:                                       ; preds = %if.end448
  %231 = load i8**, i8*** %argv.addr, align 4
  %232 = load i8*, i8** %231, align 4
  %call451 = call i32 @zstrtol(i8* %232, i8** %ptr, i32 0)
  store i32 %call451, i32* %maxargs, align 4
  %233 = load i32, i32* %maxargs, align 4
  %cmp452 = icmp slt i32 %233, -1
  br i1 %cmp452, label %if.then463, label %lor.lhs.false454

lor.lhs.false454:                                 ; preds = %if.then450
  %234 = load i32, i32* %maxargs, align 4
  %cmp455 = icmp ne i32 %234, -1
  br i1 %cmp455, label %land.lhs.true457, label %lor.lhs.false460

land.lhs.true457:                                 ; preds = %lor.lhs.false454
  %235 = load i32, i32* %maxargs, align 4
  %236 = load i32, i32* %minargs, align 4
  %cmp458 = icmp slt i32 %235, %236
  br i1 %cmp458, label %if.then463, label %lor.lhs.false460

lor.lhs.false460:                                 ; preds = %land.lhs.true457, %lor.lhs.false454
  %237 = load i8*, i8** %ptr, align 4
  %238 = load i8, i8* %237, align 1
  %conv461 = sext i8 %238 to i32
  %tobool462 = icmp ne i32 %conv461, 0
  br i1 %tobool462, label %if.then463, label %if.end464

if.then463:                                       ; preds = %lor.lhs.false460, %land.lhs.true457, %if.then450
  %239 = load i8*, i8** %name.addr, align 4
  %240 = load i8**, i8*** %argv.addr, align 4
  %241 = load i8*, i8** %240, align 4
  call void (i8*, i8*, ...) @zwarnnam(i8* %239, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.71, i32 0, i32 0), i8* %241)
  store i32 1, i32* %retval, align 4
  br label %return

if.end464:                                        ; preds = %lor.lhs.false460
  %242 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind465 = getelementptr inbounds %struct.options, %struct.options* %242, i32 0, i32 0
  %arrayidx466 = getelementptr inbounds [128 x i8], [128 x i8]* %ind465, i32 0, i32 115
  %243 = load i8, i8* %arrayidx466, align 1
  %conv467 = zext i8 %243 to i32
  %cmp468 = icmp ne i32 %conv467, 0
  br i1 %cmp468, label %land.lhs.true470, label %if.end474

land.lhs.true470:                                 ; preds = %if.end464
  %244 = load i32, i32* %maxargs, align 4
  %cmp471 = icmp ne i32 %244, 1
  br i1 %cmp471, label %if.then473, label %if.end474

if.then473:                                       ; preds = %land.lhs.true470
  %245 = load i8*, i8** %name.addr, align 4
  call void (i8*, i8*, ...) @zwarnnam(i8* %245, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.70, i32 0, i32 0))
  store i32 1, i32* %retval, align 4
  br label %return

if.end474:                                        ; preds = %land.lhs.true470, %if.end464
  %246 = load i8**, i8*** %argv.addr, align 4
  %incdec.ptr475 = getelementptr inbounds i8*, i8** %246, i32 1
  store i8** %incdec.ptr475, i8*** %argv.addr, align 4
  br label %if.end476

if.end476:                                        ; preds = %if.end474, %if.end448
  %247 = load i8**, i8*** %argv.addr, align 4
  %248 = load i8*, i8** %247, align 4
  %tobool477 = icmp ne i8* %248, null
  br i1 %tobool477, label %if.then478, label %if.end480

if.then478:                                       ; preds = %if.end476
  %249 = load i8**, i8*** %argv.addr, align 4
  %incdec.ptr479 = getelementptr inbounds i8*, i8** %249, i32 1
  store i8** %incdec.ptr479, i8*** %argv.addr, align 4
  %250 = load i8*, i8** %249, align 4
  store i8* %250, i8** %modname, align 4
  br label %if.end480

if.end480:                                        ; preds = %if.then478, %if.end476
  %251 = load i8**, i8*** %argv.addr, align 4
  %252 = load i8*, i8** %251, align 4
  %tobool481 = icmp ne i8* %252, null
  br i1 %tobool481, label %if.then482, label %if.end483

if.then482:                                       ; preds = %if.end480
  %253 = load i8*, i8** %name.addr, align 4
  call void (i8*, i8*, ...) @zwarnnam(i8* %253, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.72, i32 0, i32 0))
  store i32 1, i32* %retval, align 4
  br label %return

if.end483:                                        ; preds = %if.end480
  %call484 = call i8* @zshcalloc(i32 36)
  %254 = bitcast i8* %call484 to %struct.mathfunc*
  store %struct.mathfunc* %254, %struct.mathfunc** %p, align 4
  %255 = load i8*, i8** %funcname, align 4
  %call485 = call i8* @ztrdup(i8* %255)
  %256 = load %struct.mathfunc*, %struct.mathfunc** %p, align 4
  %name486 = getelementptr inbounds %struct.mathfunc, %struct.mathfunc* %256, i32 0, i32 1
  store i8* %call485, i8** %name486, align 4
  %257 = load %struct.mathfunc*, %struct.mathfunc** %p, align 4
  %flags487 = getelementptr inbounds %struct.mathfunc, %struct.mathfunc* %257, i32 0, i32 2
  store i32 4, i32* %flags487, align 4
  %258 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind488 = getelementptr inbounds %struct.options, %struct.options* %258, i32 0, i32 0
  %arrayidx489 = getelementptr inbounds [128 x i8], [128 x i8]* %ind488, i32 0, i32 115
  %259 = load i8, i8* %arrayidx489, align 1
  %conv490 = zext i8 %259 to i32
  %cmp491 = icmp ne i32 %conv490, 0
  br i1 %cmp491, label %if.then493, label %if.end496

if.then493:                                       ; preds = %if.end483
  %260 = load %struct.mathfunc*, %struct.mathfunc** %p, align 4
  %flags494 = getelementptr inbounds %struct.mathfunc, %struct.mathfunc* %260, i32 0, i32 2
  %261 = load i32, i32* %flags494, align 4
  %or495 = or i32 %261, 1
  store i32 %or495, i32* %flags494, align 4
  br label %if.end496

if.end496:                                        ; preds = %if.then493, %if.end483
  %262 = load i8*, i8** %modname, align 4
  %tobool497 = icmp ne i8* %262, null
  br i1 %tobool497, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end496
  %263 = load i8*, i8** %modname, align 4
  %call498 = call i8* @ztrdup(i8* %263)
  br label %cond.end

cond.false:                                       ; preds = %if.end496
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %call498, %cond.true ], [ null, %cond.false ]
  %264 = load %struct.mathfunc*, %struct.mathfunc** %p, align 4
  %module = getelementptr inbounds %struct.mathfunc, %struct.mathfunc* %264, i32 0, i32 5
  store i8* %cond, i8** %module, align 4
  %265 = load i32, i32* %minargs, align 4
  %266 = load %struct.mathfunc*, %struct.mathfunc** %p, align 4
  %minargs499 = getelementptr inbounds %struct.mathfunc, %struct.mathfunc* %266, i32 0, i32 6
  store i32 %265, i32* %minargs499, align 4
  %267 = load i32, i32* %maxargs, align 4
  %268 = load %struct.mathfunc*, %struct.mathfunc** %p, align 4
  %maxargs500 = getelementptr inbounds %struct.mathfunc, %struct.mathfunc* %268, i32 0, i32 7
  store i32 %267, i32* %maxargs500, align 4
  %269 = load i32, i32* @queueing_enabled, align 4
  %inc501 = add nsw i32 %269, 1
  store i32 %inc501, i32* @queueing_enabled, align 4
  %270 = load %struct.mathfunc*, %struct.mathfunc** @mathfuncs, align 4
  store %struct.mathfunc* %270, %struct.mathfunc** %q, align 4
  store %struct.mathfunc* null, %struct.mathfunc** %prev, align 4
  br label %for.cond502

for.cond502:                                      ; preds = %for.inc510, %cond.end
  %271 = load %struct.mathfunc*, %struct.mathfunc** %q, align 4
  %tobool503 = icmp ne %struct.mathfunc* %271, null
  br i1 %tobool503, label %for.body504, label %for.end512

for.body504:                                      ; preds = %for.cond502
  %272 = load %struct.mathfunc*, %struct.mathfunc** %q, align 4
  %name505 = getelementptr inbounds %struct.mathfunc, %struct.mathfunc* %272, i32 0, i32 1
  %273 = load i8*, i8** %name505, align 4
  %274 = load i8*, i8** %funcname, align 4
  %call506 = call i32 @strcmp(i8* %273, i8* %274)
  %tobool507 = icmp ne i32 %call506, 0
  br i1 %tobool507, label %if.end509, label %if.then508

if.then508:                                       ; preds = %for.body504
  %275 = load %struct.mathfunc*, %struct.mathfunc** %prev, align 4
  %276 = load %struct.mathfunc*, %struct.mathfunc** %q, align 4
  call void @removemathfunc(%struct.mathfunc* %275, %struct.mathfunc* %276)
  br label %for.end512

if.end509:                                        ; preds = %for.body504
  br label %for.inc510

for.inc510:                                       ; preds = %if.end509
  %277 = load %struct.mathfunc*, %struct.mathfunc** %q, align 4
  store %struct.mathfunc* %277, %struct.mathfunc** %prev, align 4
  %278 = load %struct.mathfunc*, %struct.mathfunc** %q, align 4
  %next511 = getelementptr inbounds %struct.mathfunc, %struct.mathfunc* %278, i32 0, i32 0
  %279 = load %struct.mathfunc*, %struct.mathfunc** %next511, align 4
  store %struct.mathfunc* %279, %struct.mathfunc** %q, align 4
  br label %for.cond502

for.end512:                                       ; preds = %if.then508, %for.cond502
  %280 = load %struct.mathfunc*, %struct.mathfunc** @mathfuncs, align 4
  %281 = load %struct.mathfunc*, %struct.mathfunc** %p, align 4
  %next513 = getelementptr inbounds %struct.mathfunc, %struct.mathfunc* %281, i32 0, i32 0
  store %struct.mathfunc* %280, %struct.mathfunc** %next513, align 4
  %282 = load %struct.mathfunc*, %struct.mathfunc** %p, align 4
  store %struct.mathfunc* %282, %struct.mathfunc** @mathfuncs, align 4
  br label %do.body514

do.body514:                                       ; preds = %for.end512
  %283 = load i32, i32* @queueing_enabled, align 4
  %dec515 = add nsw i32 %283, -1
  store i32 %dec515, i32* @queueing_enabled, align 4
  %tobool516 = icmp ne i32 %dec515, 0
  br i1 %tobool516, label %if.end534, label %if.then517

if.then517:                                       ; preds = %do.body514
  br label %do.body518

do.body518:                                       ; preds = %if.then517
  br label %while.cond519

while.cond519:                                    ; preds = %while.body522, %do.body518
  %284 = load i32, i32* @queue_front, align 4
  %285 = load i32, i32* @queue_rear, align 4
  %cmp520 = icmp ne i32 %284, %285
  br i1 %cmp520, label %while.body522, label %while.end531

while.body522:                                    ; preds = %while.cond519
  %286 = load i32, i32* @queue_front, align 4
  %add525 = add nsw i32 %286, 1
  %rem526 = srem i32 %add525, 128
  store i32 %rem526, i32* @queue_front, align 4
  %287 = load i32, i32* @queue_front, align 4
  %arrayidx527 = getelementptr inbounds [128 x %struct.__sigset_t], [128 x %struct.__sigset_t]* @signal_mask_queue, i32 0, i32 %287
  call void @signal_setmask(%struct.__sigset_t* sret %tmp528, %struct.__sigset_t* byval align 4 %arrayidx527)
  %288 = bitcast %struct.__sigset_t* %oset524 to i8*
  %289 = bitcast %struct.__sigset_t* %tmp528 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %288, i8* %289, i32 128, i32 4, i1 false)
  %290 = load i32, i32* @queue_front, align 4
  %arrayidx529 = getelementptr inbounds [128 x i32], [128 x i32]* @signal_queue, i32 0, i32 %290
  %291 = load i32, i32* %arrayidx529, align 4
  call void @zhandler(i32 %291)
  call void @signal_setmask(%struct.__sigset_t* sret %tmp530, %struct.__sigset_t* byval align 4 %oset524)
  br label %while.cond519

while.end531:                                     ; preds = %while.cond519
  br label %do.end533

do.end533:                                        ; preds = %while.end531
  br label %if.end534

if.end534:                                        ; preds = %do.end533, %do.body514
  br label %do.end536

do.end536:                                        ; preds = %if.end534
  br label %if.end537

if.end537:                                        ; preds = %do.end536, %for.end398
  br label %if.end538

if.end538:                                        ; preds = %if.end537, %for.end345
  br label %if.end539

if.end539:                                        ; preds = %if.end538, %do.end272
  %292 = load i32, i32* %returnval, align 4
  store i32 %292, i32* %retval, align 4
  br label %return

if.end540:                                        ; preds = %lor.lhs.false218
  %293 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind541 = getelementptr inbounds %struct.options, %struct.options* %293, i32 0, i32 0
  %arrayidx542 = getelementptr inbounds [128 x i8], [128 x i8]* %ind541, i32 0, i32 88
  %294 = load i8, i8* %arrayidx542, align 4
  %conv543 = zext i8 %294 to i32
  %and544 = and i32 %conv543, 1
  %tobool545 = icmp ne i32 %and544, 0
  br i1 %tobool545, label %if.then546, label %if.else611

if.then546:                                       ; preds = %if.end540
  store i8* null, i8** %funcname549, align 4
  %295 = load i8**, i8*** %argv.addr, align 4
  %296 = load i8*, i8** %295, align 4
  %tobool551 = icmp ne i8* %296, null
  br i1 %tobool551, label %land.lhs.true552, label %if.end556

land.lhs.true552:                                 ; preds = %if.then546
  %297 = load i8**, i8*** %argv.addr, align 4
  %arrayidx553 = getelementptr inbounds i8*, i8** %297, i32 1
  %298 = load i8*, i8** %arrayidx553, align 4
  %tobool554 = icmp ne i8* %298, null
  br i1 %tobool554, label %if.then555, label %if.end556

if.then555:                                       ; preds = %land.lhs.true552
  %299 = load i8*, i8** %name.addr, align 4
  call void (i8*, i8*, ...) @zwarnnam(i8* %299, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.73, i32 0, i32 0))
  store i32 1, i32* %retval, align 4
  br label %return

if.end556:                                        ; preds = %land.lhs.true552, %if.then546
  %300 = load i32, i32* @queueing_enabled, align 4
  %inc557 = add nsw i32 %300, 1
  store i32 %inc557, i32* @queueing_enabled, align 4
  %301 = load %struct.funcstack*, %struct.funcstack** @funcstack, align 4
  store %struct.funcstack* %301, %struct.funcstack** %fs, align 4
  br label %for.cond558

for.cond558:                                      ; preds = %for.inc567, %if.end556
  %302 = load %struct.funcstack*, %struct.funcstack** %fs, align 4
  %tobool559 = icmp ne %struct.funcstack* %302, null
  br i1 %tobool559, label %for.body560, label %for.end569

for.body560:                                      ; preds = %for.cond558
  %303 = load %struct.funcstack*, %struct.funcstack** %fs, align 4
  %tp = getelementptr inbounds %struct.funcstack, %struct.funcstack* %303, i32 0, i32 6
  %304 = load i32, i32* %tp, align 4
  %cmp561 = icmp eq i32 %304, 1
  br i1 %cmp561, label %if.then563, label %if.end566

if.then563:                                       ; preds = %for.body560
  %305 = load %struct.funcstack*, %struct.funcstack** %fs, align 4
  %name564 = getelementptr inbounds %struct.funcstack, %struct.funcstack* %305, i32 0, i32 1
  %306 = load i8*, i8** %name564, align 4
  %call565 = call i8* @dupstring(i8* %306)
  store i8* %call565, i8** %funcname549, align 4
  br label %for.end569

if.end566:                                        ; preds = %for.body560
  br label %for.inc567

for.inc567:                                       ; preds = %if.end566
  %307 = load %struct.funcstack*, %struct.funcstack** %fs, align 4
  %prev568 = getelementptr inbounds %struct.funcstack, %struct.funcstack* %307, i32 0, i32 0
  %308 = load %struct.funcstack*, %struct.funcstack** %prev568, align 4
  store %struct.funcstack* %308, %struct.funcstack** %fs, align 4
  br label %for.cond558

for.end569:                                       ; preds = %if.then563, %for.cond558
  %309 = load i8*, i8** %funcname549, align 4
  %tobool570 = icmp ne i8* %309, null
  br i1 %tobool570, label %if.else572, label %if.then571

if.then571:                                       ; preds = %for.end569
  %310 = load i8*, i8** %name.addr, align 4
  call void (i8*, i8*, ...) @zerrnam(i8* %310, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.74, i32 0, i32 0))
  store i32 1, i32* %ret, align 4
  br label %if.end587

if.else572:                                       ; preds = %for.end569
  %311 = load %struct.hashtable*, %struct.hashtable** @shfunctab, align 4
  %getnode = getelementptr inbounds %struct.hashtable, %struct.hashtable* %311, i32 0, i32 9
  %312 = load %struct.hashnode* (%struct.hashtable*, i8*)*, %struct.hashnode* (%struct.hashtable*, i8*)** %getnode, align 4
  %313 = load %struct.hashtable*, %struct.hashtable** @shfunctab, align 4
  %314 = load i8*, i8** %funcname549, align 4
  %call573 = call %struct.hashnode* %312(%struct.hashtable* %313, i8* %314)
  %315 = bitcast %struct.hashnode* %call573 to %struct.shfunc*
  store %struct.shfunc* %315, %struct.shfunc** %shf, align 4
  %tobool574 = icmp ne %struct.shfunc* %315, null
  br i1 %tobool574, label %if.then575, label %if.else576

if.then575:                                       ; preds = %if.else572
  br label %if.end579

if.else576:                                       ; preds = %if.else572
  %call577 = call i8* @zshcalloc(i32 32)
  %316 = bitcast i8* %call577 to %struct.shfunc*
  store %struct.shfunc* %316, %struct.shfunc** %shf, align 4
  %317 = load %struct.hashtable*, %struct.hashtable** @shfunctab, align 4
  %addnode = getelementptr inbounds %struct.hashtable, %struct.hashtable* %317, i32 0, i32 8
  %318 = load void (%struct.hashtable*, i8*, i8*)*, void (%struct.hashtable*, i8*, i8*)** %addnode, align 4
  %319 = load %struct.hashtable*, %struct.hashtable** @shfunctab, align 4
  %320 = load i8*, i8** %funcname549, align 4
  %call578 = call i8* @ztrdup(i8* %320)
  %321 = load %struct.shfunc*, %struct.shfunc** %shf, align 4
  %322 = bitcast %struct.shfunc* %321 to i8*
  call void %318(%struct.hashtable* %319, i8* %call578, i8* %322)
  br label %if.end579

if.end579:                                        ; preds = %if.else576, %if.then575
  %323 = load i8**, i8*** %argv.addr, align 4
  %324 = load i8*, i8** %323, align 4
  %tobool580 = icmp ne i8* %324, null
  br i1 %tobool580, label %if.then581, label %if.end584

if.then581:                                       ; preds = %if.end579
  %325 = load %struct.shfunc*, %struct.shfunc** %shf, align 4
  %filename = getelementptr inbounds %struct.shfunc, %struct.shfunc* %325, i32 0, i32 1
  call void @dircache_set(i8** %filename, i8* null)
  %326 = load %struct.shfunc*, %struct.shfunc** %shf, align 4
  %filename582 = getelementptr inbounds %struct.shfunc, %struct.shfunc* %326, i32 0, i32 1
  %327 = load i8**, i8*** %argv.addr, align 4
  %328 = load i8*, i8** %327, align 4
  call void @dircache_set(i8** %filename582, i8* %328)
  %329 = load i32, i32* %on, align 4
  %or583 = or i32 %329, 524288
  store i32 %or583, i32* %on, align 4
  br label %if.end584

if.end584:                                        ; preds = %if.then581, %if.end579
  %330 = load i32, i32* %on, align 4
  %331 = load %struct.shfunc*, %struct.shfunc** %shf, align 4
  %node = getelementptr inbounds %struct.shfunc, %struct.shfunc* %331, i32 0, i32 0
  %flags585 = getelementptr inbounds %struct.hashnode, %struct.hashnode* %node, i32 0, i32 2
  store i32 %330, i32* %flags585, align 4
  %332 = load %struct.shfunc*, %struct.shfunc** %shf, align 4
  %333 = load i8*, i8** %funcname549, align 4
  %334 = load %struct.options*, %struct.options** %ops.addr, align 4
  %335 = load i32, i32* %func.addr, align 4
  %call586 = call i32 @eval_autoload(%struct.shfunc* %332, i8* %333, %struct.options* %334, i32 %335)
  store i32 %call586, i32* %ret, align 4
  br label %if.end587

if.end587:                                        ; preds = %if.end584, %if.then571
  br label %do.body588

do.body588:                                       ; preds = %if.end587
  %336 = load i32, i32* @queueing_enabled, align 4
  %dec589 = add nsw i32 %336, -1
  store i32 %dec589, i32* @queueing_enabled, align 4
  %tobool590 = icmp ne i32 %dec589, 0
  br i1 %tobool590, label %if.end608, label %if.then591

if.then591:                                       ; preds = %do.body588
  br label %do.body592

do.body592:                                       ; preds = %if.then591
  br label %while.cond593

while.cond593:                                    ; preds = %while.body596, %do.body592
  %337 = load i32, i32* @queue_front, align 4
  %338 = load i32, i32* @queue_rear, align 4
  %cmp594 = icmp ne i32 %337, %338
  br i1 %cmp594, label %while.body596, label %while.end605

while.body596:                                    ; preds = %while.cond593
  %339 = load i32, i32* @queue_front, align 4
  %add599 = add nsw i32 %339, 1
  %rem600 = srem i32 %add599, 128
  store i32 %rem600, i32* @queue_front, align 4
  %340 = load i32, i32* @queue_front, align 4
  %arrayidx601 = getelementptr inbounds [128 x %struct.__sigset_t], [128 x %struct.__sigset_t]* @signal_mask_queue, i32 0, i32 %340
  call void @signal_setmask(%struct.__sigset_t* sret %tmp602, %struct.__sigset_t* byval align 4 %arrayidx601)
  %341 = bitcast %struct.__sigset_t* %oset598 to i8*
  %342 = bitcast %struct.__sigset_t* %tmp602 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %341, i8* %342, i32 128, i32 4, i1 false)
  %343 = load i32, i32* @queue_front, align 4
  %arrayidx603 = getelementptr inbounds [128 x i32], [128 x i32]* @signal_queue, i32 0, i32 %343
  %344 = load i32, i32* %arrayidx603, align 4
  call void @zhandler(i32 %344)
  call void @signal_setmask(%struct.__sigset_t* sret %tmp604, %struct.__sigset_t* byval align 4 %oset598)
  br label %while.cond593

while.end605:                                     ; preds = %while.cond593
  br label %do.end607

do.end607:                                        ; preds = %while.end605
  br label %if.end608

if.end608:                                        ; preds = %do.end607, %do.body588
  br label %do.end610

do.end610:                                        ; preds = %if.end608
  %345 = load i32, i32* %ret, align 4
  store i32 %345, i32* %retval, align 4
  br label %return

if.else611:                                       ; preds = %if.end540
  %346 = load i8**, i8*** %argv.addr, align 4
  %347 = load i8*, i8** %346, align 4
  %tobool612 = icmp ne i8* %347, null
  br i1 %tobool612, label %if.end656, label %if.then613

if.then613:                                       ; preds = %if.else611
  store i32 0, i32* %ret615, align 4
  %348 = load i32, i32* @queueing_enabled, align 4
  %inc616 = add nsw i32 %348, 1
  store i32 %inc616, i32* @queueing_enabled, align 4
  %349 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind617 = getelementptr inbounds %struct.options, %struct.options* %349, i32 0, i32 0
  %arrayidx618 = getelementptr inbounds [128 x i8], [128 x i8]* %ind617, i32 0, i32 85
  %350 = load i8, i8* %arrayidx618, align 1
  %conv619 = zext i8 %350 to i32
  %cmp620 = icmp ne i32 %conv619, 0
  br i1 %cmp620, label %land.lhs.true622, label %if.end630

land.lhs.true622:                                 ; preds = %if.then613
  %351 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind623 = getelementptr inbounds %struct.options, %struct.options* %351, i32 0, i32 0
  %arrayidx624 = getelementptr inbounds [128 x i8], [128 x i8]* %ind623, i32 0, i32 117
  %352 = load i8, i8* %arrayidx624, align 1
  %conv625 = zext i8 %352 to i32
  %cmp626 = icmp ne i32 %conv625, 0
  br i1 %cmp626, label %if.end630, label %if.then628

if.then628:                                       ; preds = %land.lhs.true622
  %353 = load i32, i32* %on, align 4
  %and629 = and i32 %353, -513
  store i32 %and629, i32* %on, align 4
  br label %if.end630

if.end630:                                        ; preds = %if.then628, %land.lhs.true622, %if.then613
  %354 = load i32, i32* %on, align 4
  %355 = load i32, i32* %off, align 4
  %or631 = or i32 %354, %355
  %356 = load %struct.hashtable*, %struct.hashtable** @shfunctab, align 4
  %printnode = getelementptr inbounds %struct.hashtable, %struct.hashtable* %356, i32 0, i32 15
  %357 = load void (%struct.hashnode*, i32)*, void (%struct.hashnode*, i32)** %printnode, align 4
  %358 = load i32, i32* %pflags, align 4
  %359 = load i32, i32* %expand, align 4
  %call632 = call i32 @scanshfunc(i32 1, i32 %or631, i32 1, void (%struct.hashnode*, i32)* %357, i32 %358, i32 %359)
  br label %do.body633

do.body633:                                       ; preds = %if.end630
  %360 = load i32, i32* @queueing_enabled, align 4
  %dec634 = add nsw i32 %360, -1
  store i32 %dec634, i32* @queueing_enabled, align 4
  %tobool635 = icmp ne i32 %dec634, 0
  br i1 %tobool635, label %if.end653, label %if.then636

if.then636:                                       ; preds = %do.body633
  br label %do.body637

do.body637:                                       ; preds = %if.then636
  br label %while.cond638

while.cond638:                                    ; preds = %while.body641, %do.body637
  %361 = load i32, i32* @queue_front, align 4
  %362 = load i32, i32* @queue_rear, align 4
  %cmp639 = icmp ne i32 %361, %362
  br i1 %cmp639, label %while.body641, label %while.end650

while.body641:                                    ; preds = %while.cond638
  %363 = load i32, i32* @queue_front, align 4
  %add644 = add nsw i32 %363, 1
  %rem645 = srem i32 %add644, 128
  store i32 %rem645, i32* @queue_front, align 4
  %364 = load i32, i32* @queue_front, align 4
  %arrayidx646 = getelementptr inbounds [128 x %struct.__sigset_t], [128 x %struct.__sigset_t]* @signal_mask_queue, i32 0, i32 %364
  call void @signal_setmask(%struct.__sigset_t* sret %tmp647, %struct.__sigset_t* byval align 4 %arrayidx646)
  %365 = bitcast %struct.__sigset_t* %oset643 to i8*
  %366 = bitcast %struct.__sigset_t* %tmp647 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %365, i8* %366, i32 128, i32 4, i1 false)
  %367 = load i32, i32* @queue_front, align 4
  %arrayidx648 = getelementptr inbounds [128 x i32], [128 x i32]* @signal_queue, i32 0, i32 %367
  %368 = load i32, i32* %arrayidx648, align 4
  call void @zhandler(i32 %368)
  call void @signal_setmask(%struct.__sigset_t* sret %tmp649, %struct.__sigset_t* byval align 4 %oset643)
  br label %while.cond638

while.end650:                                     ; preds = %while.cond638
  br label %do.end652

do.end652:                                        ; preds = %while.end650
  br label %if.end653

if.end653:                                        ; preds = %do.end652, %do.body633
  br label %do.end655

do.end655:                                        ; preds = %if.end653
  %369 = load i32, i32* %ret615, align 4
  store i32 %369, i32* %retval, align 4
  br label %return

if.end656:                                        ; preds = %if.else611
  br label %if.end657

if.end657:                                        ; preds = %if.end656
  %370 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind658 = getelementptr inbounds %struct.options, %struct.options* %370, i32 0, i32 0
  %arrayidx659 = getelementptr inbounds [128 x i8], [128 x i8]* %ind658, i32 0, i32 109
  %371 = load i8, i8* %arrayidx659, align 1
  %conv660 = zext i8 %371 to i32
  %cmp661 = icmp ne i32 %conv660, 0
  br i1 %cmp661, label %if.then663, label %if.end751

if.then663:                                       ; preds = %if.end657
  %372 = load i32, i32* %on, align 4
  %and664 = and i32 %372, -513
  store i32 %and664, i32* %on, align 4
  br label %for.cond665

for.cond665:                                      ; preds = %for.inc748, %if.then663
  %373 = load i8**, i8*** %argv.addr, align 4
  %374 = load i8*, i8** %373, align 4
  %tobool666 = icmp ne i8* %374, null
  br i1 %tobool666, label %for.body667, label %for.end750

for.body667:                                      ; preds = %for.cond665
  %375 = load i32, i32* @queueing_enabled, align 4
  %inc668 = add nsw i32 %375, 1
  store i32 %inc668, i32* @queueing_enabled, align 4
  %376 = load i8**, i8*** %argv.addr, align 4
  %377 = load i8*, i8** %376, align 4
  call void @tokenize(i8* %377)
  %378 = load i8**, i8*** %argv.addr, align 4
  %379 = load i8*, i8** %378, align 4
  %call669 = call %struct.patprog* @patcompile(i8* %379, i32 64, i8** null)
  store %struct.patprog* %call669, %struct.patprog** %pprog, align 4
  %tobool670 = icmp ne %struct.patprog* %call669, null
  br i1 %tobool670, label %if.then671, label %if.else723

if.then671:                                       ; preds = %for.body667
  %380 = load i32, i32* %on, align 4
  %381 = load i32, i32* %off, align 4
  %or672 = or i32 %380, %381
  %tobool673 = icmp ne i32 %or672, 0
  br i1 %tobool673, label %if.else683, label %land.lhs.true674

land.lhs.true674:                                 ; preds = %if.then671
  %382 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind675 = getelementptr inbounds %struct.options, %struct.options* %382, i32 0, i32 0
  %arrayidx676 = getelementptr inbounds [128 x i8], [128 x i8]* %ind675, i32 0, i32 88
  %383 = load i8, i8* %arrayidx676, align 4
  %conv677 = zext i8 %383 to i32
  %cmp678 = icmp ne i32 %conv677, 0
  br i1 %cmp678, label %if.else683, label %if.then680

if.then680:                                       ; preds = %land.lhs.true674
  %384 = load %struct.patprog*, %struct.patprog** %pprog, align 4
  %385 = load %struct.hashtable*, %struct.hashtable** @shfunctab, align 4
  %printnode681 = getelementptr inbounds %struct.hashtable, %struct.hashtable* %385, i32 0, i32 15
  %386 = load void (%struct.hashnode*, i32)*, void (%struct.hashnode*, i32)** %printnode681, align 4
  %387 = load i32, i32* %pflags, align 4
  %388 = load i32, i32* %expand, align 4
  %call682 = call i32 @scanmatchshfunc(%struct.patprog* %384, i32 1, i32 0, i32 1, void (%struct.hashnode*, i32)* %386, i32 %387, i32 %388)
  br label %if.end722

if.else683:                                       ; preds = %land.lhs.true674, %if.then671
  store i32 0, i32* %i, align 4
  br label %for.cond684

for.cond684:                                      ; preds = %for.inc719, %if.else683
  %389 = load i32, i32* %i, align 4
  %390 = load %struct.hashtable*, %struct.hashtable** @shfunctab, align 4
  %hsize = getelementptr inbounds %struct.hashtable, %struct.hashtable* %390, i32 0, i32 0
  %391 = load i32, i32* %hsize, align 4
  %cmp685 = icmp slt i32 %389, %391
  br i1 %cmp685, label %for.body687, label %for.end721

for.body687:                                      ; preds = %for.cond684
  %392 = load %struct.hashtable*, %struct.hashtable** @shfunctab, align 4
  %nodes = getelementptr inbounds %struct.hashtable, %struct.hashtable* %392, i32 0, i32 2
  %393 = load %struct.hashnode**, %struct.hashnode*** %nodes, align 4
  %394 = load i32, i32* %i, align 4
  %arrayidx688 = getelementptr inbounds %struct.hashnode*, %struct.hashnode** %393, i32 %394
  %395 = load %struct.hashnode*, %struct.hashnode** %arrayidx688, align 4
  %396 = bitcast %struct.hashnode* %395 to %struct.shfunc*
  store %struct.shfunc* %396, %struct.shfunc** %shf, align 4
  br label %for.cond689

for.cond689:                                      ; preds = %for.inc715, %for.body687
  %397 = load %struct.shfunc*, %struct.shfunc** %shf, align 4
  %tobool690 = icmp ne %struct.shfunc* %397, null
  br i1 %tobool690, label %for.body691, label %for.end718

for.body691:                                      ; preds = %for.cond689
  %398 = load %struct.patprog*, %struct.patprog** %pprog, align 4
  %399 = load %struct.shfunc*, %struct.shfunc** %shf, align 4
  %node692 = getelementptr inbounds %struct.shfunc, %struct.shfunc* %399, i32 0, i32 0
  %nam = getelementptr inbounds %struct.hashnode, %struct.hashnode* %node692, i32 0, i32 1
  %400 = load i8*, i8** %nam, align 4
  %call693 = call i32 @pattry(%struct.patprog* %398, i8* %400)
  %tobool694 = icmp ne i32 %call693, 0
  br i1 %tobool694, label %land.lhs.true695, label %if.end714

land.lhs.true695:                                 ; preds = %for.body691
  %401 = load %struct.shfunc*, %struct.shfunc** %shf, align 4
  %node696 = getelementptr inbounds %struct.shfunc, %struct.shfunc* %401, i32 0, i32 0
  %flags697 = getelementptr inbounds %struct.hashnode, %struct.hashnode* %node696, i32 0, i32 2
  %402 = load i32, i32* %flags697, align 4
  %and698 = and i32 %402, 1
  %tobool699 = icmp ne i32 %and698, 0
  br i1 %tobool699, label %if.end714, label %if.then700

if.then700:                                       ; preds = %land.lhs.true695
  %403 = load %struct.shfunc*, %struct.shfunc** %shf, align 4
  %node701 = getelementptr inbounds %struct.shfunc, %struct.shfunc* %403, i32 0, i32 0
  %flags702 = getelementptr inbounds %struct.hashnode, %struct.hashnode* %node701, i32 0, i32 2
  %404 = load i32, i32* %flags702, align 4
  %405 = load i32, i32* %on, align 4
  %and703 = and i32 %405, -513
  %or704 = or i32 %404, %and703
  %406 = load i32, i32* %off, align 4
  %neg = xor i32 %406, -1
  %and705 = and i32 %or704, %neg
  %407 = load %struct.shfunc*, %struct.shfunc** %shf, align 4
  %node706 = getelementptr inbounds %struct.shfunc, %struct.shfunc* %407, i32 0, i32 0
  %flags707 = getelementptr inbounds %struct.hashnode, %struct.hashnode* %node706, i32 0, i32 2
  store i32 %and705, i32* %flags707, align 4
  %408 = load %struct.shfunc*, %struct.shfunc** %shf, align 4
  %409 = load %struct.shfunc*, %struct.shfunc** %shf, align 4
  %node708 = getelementptr inbounds %struct.shfunc, %struct.shfunc* %409, i32 0, i32 0
  %nam709 = getelementptr inbounds %struct.hashnode, %struct.hashnode* %node708, i32 0, i32 1
  %410 = load i8*, i8** %nam709, align 4
  %411 = load %struct.options*, %struct.options** %ops.addr, align 4
  %412 = load i32, i32* %func.addr, align 4
  %call710 = call i32 @check_autoload(%struct.shfunc* %408, i8* %410, %struct.options* %411, i32 %412)
  %tobool711 = icmp ne i32 %call710, 0
  br i1 %tobool711, label %if.then712, label %if.end713

if.then712:                                       ; preds = %if.then700
  store i32 1, i32* %returnval, align 4
  br label %if.end713

if.end713:                                        ; preds = %if.then712, %if.then700
  br label %if.end714

if.end714:                                        ; preds = %if.end713, %land.lhs.true695, %for.body691
  br label %for.inc715

for.inc715:                                       ; preds = %if.end714
  %413 = load %struct.shfunc*, %struct.shfunc** %shf, align 4
  %node716 = getelementptr inbounds %struct.shfunc, %struct.shfunc* %413, i32 0, i32 0
  %next717 = getelementptr inbounds %struct.hashnode, %struct.hashnode* %node716, i32 0, i32 0
  %414 = load %struct.hashnode*, %struct.hashnode** %next717, align 4
  %415 = bitcast %struct.hashnode* %414 to %struct.shfunc*
  store %struct.shfunc* %415, %struct.shfunc** %shf, align 4
  br label %for.cond689

for.end718:                                       ; preds = %for.cond689
  br label %for.inc719

for.inc719:                                       ; preds = %for.end718
  %416 = load i32, i32* %i, align 4
  %inc720 = add nsw i32 %416, 1
  store i32 %inc720, i32* %i, align 4
  br label %for.cond684

for.end721:                                       ; preds = %for.cond684
  br label %if.end722

if.end722:                                        ; preds = %for.end721, %if.then680
  br label %if.end724

if.else723:                                       ; preds = %for.body667
  %417 = load i8**, i8*** %argv.addr, align 4
  %418 = load i8*, i8** %417, align 4
  call void @untokenize(i8* %418)
  %419 = load i8*, i8** %name.addr, align 4
  %420 = load i8**, i8*** %argv.addr, align 4
  %421 = load i8*, i8** %420, align 4
  call void (i8*, i8*, ...) @zwarnnam(i8* %419, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.15, i32 0, i32 0), i8* %421)
  store i32 1, i32* %returnval, align 4
  br label %if.end724

if.end724:                                        ; preds = %if.else723, %if.end722
  br label %do.body725

do.body725:                                       ; preds = %if.end724
  %422 = load i32, i32* @queueing_enabled, align 4
  %dec726 = add nsw i32 %422, -1
  store i32 %dec726, i32* @queueing_enabled, align 4
  %tobool727 = icmp ne i32 %dec726, 0
  br i1 %tobool727, label %if.end745, label %if.then728

if.then728:                                       ; preds = %do.body725
  br label %do.body729

do.body729:                                       ; preds = %if.then728
  br label %while.cond730

while.cond730:                                    ; preds = %while.body733, %do.body729
  %423 = load i32, i32* @queue_front, align 4
  %424 = load i32, i32* @queue_rear, align 4
  %cmp731 = icmp ne i32 %423, %424
  br i1 %cmp731, label %while.body733, label %while.end742

while.body733:                                    ; preds = %while.cond730
  %425 = load i32, i32* @queue_front, align 4
  %add736 = add nsw i32 %425, 1
  %rem737 = srem i32 %add736, 128
  store i32 %rem737, i32* @queue_front, align 4
  %426 = load i32, i32* @queue_front, align 4
  %arrayidx738 = getelementptr inbounds [128 x %struct.__sigset_t], [128 x %struct.__sigset_t]* @signal_mask_queue, i32 0, i32 %426
  call void @signal_setmask(%struct.__sigset_t* sret %tmp739, %struct.__sigset_t* byval align 4 %arrayidx738)
  %427 = bitcast %struct.__sigset_t* %oset735 to i8*
  %428 = bitcast %struct.__sigset_t* %tmp739 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %427, i8* %428, i32 128, i32 4, i1 false)
  %429 = load i32, i32* @queue_front, align 4
  %arrayidx740 = getelementptr inbounds [128 x i32], [128 x i32]* @signal_queue, i32 0, i32 %429
  %430 = load i32, i32* %arrayidx740, align 4
  call void @zhandler(i32 %430)
  call void @signal_setmask(%struct.__sigset_t* sret %tmp741, %struct.__sigset_t* byval align 4 %oset735)
  br label %while.cond730

while.end742:                                     ; preds = %while.cond730
  br label %do.end744

do.end744:                                        ; preds = %while.end742
  br label %if.end745

if.end745:                                        ; preds = %do.end744, %do.body725
  br label %do.end747

do.end747:                                        ; preds = %if.end745
  br label %for.inc748

for.inc748:                                       ; preds = %do.end747
  %431 = load i8**, i8*** %argv.addr, align 4
  %incdec.ptr749 = getelementptr inbounds i8*, i8** %431, i32 1
  store i8** %incdec.ptr749, i8*** %argv.addr, align 4
  br label %for.cond665

for.end750:                                       ; preds = %for.cond665
  %432 = load i32, i32* %returnval, align 4
  store i32 %432, i32* %retval, align 4
  br label %return

if.end751:                                        ; preds = %if.end657
  %433 = load i32, i32* @queueing_enabled, align 4
  %inc752 = add nsw i32 %433, 1
  store i32 %inc752, i32* @queueing_enabled, align 4
  br label %for.cond753

for.cond753:                                      ; preds = %for.inc874, %if.end751
  %434 = load i8**, i8*** %argv.addr, align 4
  %435 = load i8*, i8** %434, align 4
  %tobool754 = icmp ne i8* %435, null
  br i1 %tobool754, label %for.body755, label %for.end876

for.body755:                                      ; preds = %for.cond753
  %436 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind756 = getelementptr inbounds %struct.options, %struct.options* %436, i32 0, i32 0
  %arrayidx757 = getelementptr inbounds [128 x i8], [128 x i8]* %ind756, i32 0, i32 119
  %437 = load i8, i8* %arrayidx757, align 1
  %conv758 = zext i8 %437 to i32
  %cmp759 = icmp ne i32 %conv758, 0
  br i1 %cmp759, label %if.then761, label %if.else763

if.then761:                                       ; preds = %for.body755
  %438 = load i8*, i8** %name.addr, align 4
  %439 = load i8**, i8*** %argv.addr, align 4
  %440 = load i8*, i8** %439, align 4
  %441 = load i32, i32* %on, align 4
  %442 = load %struct.options*, %struct.options** %ops.addr, align 4
  %443 = load i32, i32* %func.addr, align 4
  %call762 = call i32 @dump_autoload(i8* %438, i8* %440, i32 %441, %struct.options* %442, i32 %443)
  store i32 %call762, i32* %returnval, align 4
  br label %if.end873

if.else763:                                       ; preds = %for.body755
  %444 = load %struct.hashtable*, %struct.hashtable** @shfunctab, align 4
  %getnode764 = getelementptr inbounds %struct.hashtable, %struct.hashtable* %444, i32 0, i32 9
  %445 = load %struct.hashnode* (%struct.hashtable*, i8*)*, %struct.hashnode* (%struct.hashtable*, i8*)** %getnode764, align 4
  %446 = load %struct.hashtable*, %struct.hashtable** @shfunctab, align 4
  %447 = load i8**, i8*** %argv.addr, align 4
  %448 = load i8*, i8** %447, align 4
  %call765 = call %struct.hashnode* %445(%struct.hashtable* %446, i8* %448)
  %449 = bitcast %struct.hashnode* %call765 to %struct.shfunc*
  store %struct.shfunc* %449, %struct.shfunc** %shf, align 4
  %tobool766 = icmp ne %struct.shfunc* %449, null
  br i1 %tobool766, label %if.then767, label %if.else788

if.then767:                                       ; preds = %if.else763
  %450 = load i32, i32* %on, align 4
  %451 = load i32, i32* %off, align 4
  %or768 = or i32 %450, %451
  %tobool769 = icmp ne i32 %or768, 0
  br i1 %tobool769, label %if.then770, label %if.else785

if.then770:                                       ; preds = %if.then767
  %452 = load %struct.shfunc*, %struct.shfunc** %shf, align 4
  %node771 = getelementptr inbounds %struct.shfunc, %struct.shfunc* %452, i32 0, i32 0
  %flags772 = getelementptr inbounds %struct.hashnode, %struct.hashnode* %node771, i32 0, i32 2
  %453 = load i32, i32* %flags772, align 4
  %454 = load i32, i32* %on, align 4
  %and773 = and i32 %454, -513
  %or774 = or i32 %453, %and773
  %455 = load i32, i32* %off, align 4
  %neg775 = xor i32 %455, -1
  %and776 = and i32 %or774, %neg775
  %456 = load %struct.shfunc*, %struct.shfunc** %shf, align 4
  %node777 = getelementptr inbounds %struct.shfunc, %struct.shfunc* %456, i32 0, i32 0
  %flags778 = getelementptr inbounds %struct.hashnode, %struct.hashnode* %node777, i32 0, i32 2
  store i32 %and776, i32* %flags778, align 4
  %457 = load %struct.shfunc*, %struct.shfunc** %shf, align 4
  %458 = load %struct.shfunc*, %struct.shfunc** %shf, align 4
  %node779 = getelementptr inbounds %struct.shfunc, %struct.shfunc* %458, i32 0, i32 0
  %nam780 = getelementptr inbounds %struct.hashnode, %struct.hashnode* %node779, i32 0, i32 1
  %459 = load i8*, i8** %nam780, align 4
  %460 = load %struct.options*, %struct.options** %ops.addr, align 4
  %461 = load i32, i32* %func.addr, align 4
  %call781 = call i32 @check_autoload(%struct.shfunc* %457, i8* %459, %struct.options* %460, i32 %461)
  %tobool782 = icmp ne i32 %call781, 0
  br i1 %tobool782, label %if.then783, label %if.end784

if.then783:                                       ; preds = %if.then770
  store i32 1, i32* %returnval, align 4
  br label %if.end784

if.end784:                                        ; preds = %if.then783, %if.then770
  br label %if.end787

if.else785:                                       ; preds = %if.then767
  %462 = load %struct.shfunc*, %struct.shfunc** %shf, align 4
  %node786 = getelementptr inbounds %struct.shfunc, %struct.shfunc* %462, i32 0, i32 0
  %463 = load i32, i32* %pflags, align 4
  %464 = load i32, i32* %expand, align 4
  call void @printshfuncexpand(%struct.hashnode* %node786, i32 %463, i32 %464)
  br label %if.end787

if.end787:                                        ; preds = %if.else785, %if.end784
  br label %if.end872

if.else788:                                       ; preds = %if.else763
  %465 = load i32, i32* %on, align 4
  %and789 = and i32 %465, 512
  %tobool790 = icmp ne i32 %and789, 0
  br i1 %tobool790, label %if.then791, label %if.else870

if.then791:                                       ; preds = %if.else788
  store i32 -1, i32* %signum, align 4
  store i32 1, i32* %ok, align 4
  %466 = load i8**, i8*** %argv.addr, align 4
  %467 = load i8*, i8** %466, align 4
  %call794 = call i32 @strncmp(i8* %467, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.75, i32 0, i32 0), i32 4)
  %tobool795 = icmp ne i32 %call794, 0
  br i1 %tobool795, label %if.end801, label %land.lhs.true796

land.lhs.true796:                                 ; preds = %if.then791
  %468 = load i8**, i8*** %argv.addr, align 4
  %469 = load i8*, i8** %468, align 4
  %add.ptr = getelementptr inbounds i8, i8* %469, i32 4
  %call797 = call i32 @getsignum(i8* %add.ptr)
  store i32 %call797, i32* %signum, align 4
  %cmp798 = icmp ne i32 %call797, -1
  br i1 %cmp798, label %if.then800, label %if.end801

if.then800:                                       ; preds = %land.lhs.true796
  %470 = load i32, i32* %signum, align 4
  call void @removetrapnode(i32 %470)
  br label %if.end801

if.end801:                                        ; preds = %if.then800, %land.lhs.true796, %if.then791
  %471 = load i8**, i8*** %argv.addr, align 4
  %472 = load i8*, i8** %471, align 4
  %473 = load i8, i8* %472, align 1
  %conv802 = sext i8 %473 to i32
  %cmp803 = icmp eq i32 %conv802, 47
  br i1 %cmp803, label %if.then805, label %if.end847

if.then805:                                       ; preds = %if.end801
  %474 = load i8**, i8*** %argv.addr, align 4
  %475 = load i8*, i8** %474, align 4
  %call807 = call i8* @strrchr(i8* %475, i32 47)
  %add.ptr808 = getelementptr inbounds i8, i8* %call807, i32 1
  store i8* %add.ptr808, i8** %base, align 4
  %476 = load i8*, i8** %base, align 4
  %477 = load i8, i8* %476, align 1
  %conv809 = sext i8 %477 to i32
  %tobool810 = icmp ne i32 %conv809, 0
  br i1 %tobool810, label %land.lhs.true811, label %if.end846

land.lhs.true811:                                 ; preds = %if.then805
  %478 = load %struct.hashtable*, %struct.hashtable** @shfunctab, align 4
  %getnode812 = getelementptr inbounds %struct.hashtable, %struct.hashtable* %478, i32 0, i32 9
  %479 = load %struct.hashnode* (%struct.hashtable*, i8*)*, %struct.hashnode* (%struct.hashtable*, i8*)** %getnode812, align 4
  %480 = load %struct.hashtable*, %struct.hashtable** @shfunctab, align 4
  %481 = load i8*, i8** %base, align 4
  %call813 = call %struct.hashnode* %479(%struct.hashtable* %480, i8* %481)
  %482 = bitcast %struct.hashnode* %call813 to %struct.shfunc*
  store %struct.shfunc* %482, %struct.shfunc** %shf, align 4
  %tobool814 = icmp ne %struct.shfunc* %482, null
  br i1 %tobool814, label %if.then815, label %if.end846

if.then815:                                       ; preds = %land.lhs.true811
  %483 = load %struct.shfunc*, %struct.shfunc** %shf, align 4
  %node817 = getelementptr inbounds %struct.shfunc, %struct.shfunc* %483, i32 0, i32 0
  %flags818 = getelementptr inbounds %struct.hashnode, %struct.hashnode* %node817, i32 0, i32 2
  %484 = load i32, i32* %flags818, align 4
  %485 = load i32, i32* %on, align 4
  %and819 = and i32 %485, -513
  %or820 = or i32 %484, %and819
  %486 = load i32, i32* %off, align 4
  %neg821 = xor i32 %486, -1
  %and822 = and i32 %or820, %neg821
  %487 = load %struct.shfunc*, %struct.shfunc** %shf, align 4
  %node823 = getelementptr inbounds %struct.shfunc, %struct.shfunc* %487, i32 0, i32 0
  %flags824 = getelementptr inbounds %struct.hashnode, %struct.hashnode* %node823, i32 0, i32 2
  store i32 %and822, i32* %flags824, align 4
  %488 = load %struct.shfunc*, %struct.shfunc** %shf, align 4
  %node825 = getelementptr inbounds %struct.shfunc, %struct.shfunc* %488, i32 0, i32 0
  %flags826 = getelementptr inbounds %struct.hashnode, %struct.hashnode* %node825, i32 0, i32 2
  %489 = load i32, i32* %flags826, align 4
  %and827 = and i32 %489, 512
  %tobool828 = icmp ne i32 %and827, 0
  br i1 %tobool828, label %if.then829, label %if.end839

if.then829:                                       ; preds = %if.then815
  %490 = load i8*, i8** %base, align 4
  %491 = load i8**, i8*** %argv.addr, align 4
  %492 = load i8*, i8** %491, align 4
  %add.ptr830 = getelementptr inbounds i8, i8* %492, i32 1
  %cmp831 = icmp eq i8* %490, %add.ptr830
  br i1 %cmp831, label %if.then833, label %if.else834

if.then833:                                       ; preds = %if.then829
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.76, i32 0, i32 0), i8** %dir, align 4
  br label %if.end836

if.else834:                                       ; preds = %if.then829
  %493 = load i8**, i8*** %argv.addr, align 4
  %494 = load i8*, i8** %493, align 4
  store i8* %494, i8** %dir, align 4
  %495 = load i8*, i8** %base, align 4
  %arrayidx835 = getelementptr inbounds i8, i8* %495, i32 -1
  store i8 0, i8* %arrayidx835, align 1
  br label %if.end836

if.end836:                                        ; preds = %if.else834, %if.then833
  %496 = load %struct.shfunc*, %struct.shfunc** %shf, align 4
  %filename837 = getelementptr inbounds %struct.shfunc, %struct.shfunc* %496, i32 0, i32 1
  call void @dircache_set(i8** %filename837, i8* null)
  %497 = load %struct.shfunc*, %struct.shfunc** %shf, align 4
  %filename838 = getelementptr inbounds %struct.shfunc, %struct.shfunc* %497, i32 0, i32 1
  %498 = load i8*, i8** %dir, align 4
  call void @dircache_set(i8** %filename838, i8* %498)
  br label %if.end839

if.end839:                                        ; preds = %if.end836, %if.then815
  %499 = load %struct.shfunc*, %struct.shfunc** %shf, align 4
  %500 = load %struct.shfunc*, %struct.shfunc** %shf, align 4
  %node840 = getelementptr inbounds %struct.shfunc, %struct.shfunc* %500, i32 0, i32 0
  %nam841 = getelementptr inbounds %struct.hashnode, %struct.hashnode* %node840, i32 0, i32 1
  %501 = load i8*, i8** %nam841, align 4
  %502 = load %struct.options*, %struct.options** %ops.addr, align 4
  %503 = load i32, i32* %func.addr, align 4
  %call842 = call i32 @check_autoload(%struct.shfunc* %499, i8* %501, %struct.options* %502, i32 %503)
  %tobool843 = icmp ne i32 %call842, 0
  br i1 %tobool843, label %if.then844, label %if.end845

if.then844:                                       ; preds = %if.end839
  store i32 1, i32* %returnval, align 4
  br label %if.end845

if.end845:                                        ; preds = %if.then844, %if.end839
  br label %for.inc874

if.end846:                                        ; preds = %land.lhs.true811, %if.then805
  br label %if.end847

if.end847:                                        ; preds = %if.end846, %if.end801
  %call848 = call i8* @zshcalloc(i32 32)
  %504 = bitcast i8* %call848 to %struct.shfunc*
  store %struct.shfunc* %504, %struct.shfunc** %shf, align 4
  %505 = load i32, i32* %on, align 4
  %506 = load %struct.shfunc*, %struct.shfunc** %shf, align 4
  %node849 = getelementptr inbounds %struct.shfunc, %struct.shfunc* %506, i32 0, i32 0
  %flags850 = getelementptr inbounds %struct.hashnode, %struct.hashnode* %node849, i32 0, i32 2
  store i32 %505, i32* %flags850, align 4
  %507 = load %struct.shfunc*, %struct.shfunc** %shf, align 4
  %call851 = call %struct.eprog* @mkautofn(%struct.shfunc* %507)
  %508 = load %struct.shfunc*, %struct.shfunc** %shf, align 4
  %funcdef = getelementptr inbounds %struct.shfunc, %struct.shfunc* %508, i32 0, i32 3
  store %struct.eprog* %call851, %struct.eprog** %funcdef, align 4
  %509 = load %struct.shfunc*, %struct.shfunc** %shf, align 4
  call void @shfunc_set_sticky(%struct.shfunc* %509)
  %510 = load %struct.shfunc*, %struct.shfunc** %shf, align 4
  %511 = load i8**, i8*** %argv.addr, align 4
  %512 = load i8*, i8** %511, align 4
  call void @add_autoload_function(%struct.shfunc* %510, i8* %512)
  %513 = load i32, i32* %signum, align 4
  %cmp852 = icmp ne i32 %513, -1
  br i1 %cmp852, label %if.then854, label %if.end861

if.then854:                                       ; preds = %if.end847
  %514 = load i32, i32* %signum, align 4
  %call855 = call i32 @settrap(i32 %514, %struct.eprog* null, i32 4)
  %tobool856 = icmp ne i32 %call855, 0
  br i1 %tobool856, label %if.then857, label %if.end860

if.then857:                                       ; preds = %if.then854
  %515 = load %struct.hashtable*, %struct.hashtable** @shfunctab, align 4
  %removenode = getelementptr inbounds %struct.hashtable, %struct.hashtable* %515, i32 0, i32 11
  %516 = load %struct.hashnode* (%struct.hashtable*, i8*)*, %struct.hashnode* (%struct.hashtable*, i8*)** %removenode, align 4
  %517 = load %struct.hashtable*, %struct.hashtable** @shfunctab, align 4
  %518 = load i8**, i8*** %argv.addr, align 4
  %519 = load i8*, i8** %518, align 4
  %call858 = call %struct.hashnode* %516(%struct.hashtable* %517, i8* %519)
  %520 = load %struct.hashtable*, %struct.hashtable** @shfunctab, align 4
  %freenode = getelementptr inbounds %struct.hashtable, %struct.hashtable* %520, i32 0, i32 14
  %521 = load void (%struct.hashnode*)*, void (%struct.hashnode*)** %freenode, align 4
  %522 = load %struct.shfunc*, %struct.shfunc** %shf, align 4
  %node859 = getelementptr inbounds %struct.shfunc, %struct.shfunc* %522, i32 0, i32 0
  call void %521(%struct.hashnode* %node859)
  store i32 1, i32* %returnval, align 4
  store i32 0, i32* %ok, align 4
  br label %if.end860

if.end860:                                        ; preds = %if.then857, %if.then854
  br label %if.end861

if.end861:                                        ; preds = %if.end860, %if.end847
  %523 = load i32, i32* %ok, align 4
  %tobool862 = icmp ne i32 %523, 0
  br i1 %tobool862, label %land.lhs.true863, label %if.end869

land.lhs.true863:                                 ; preds = %if.end861
  %524 = load %struct.shfunc*, %struct.shfunc** %shf, align 4
  %525 = load %struct.shfunc*, %struct.shfunc** %shf, align 4
  %node864 = getelementptr inbounds %struct.shfunc, %struct.shfunc* %525, i32 0, i32 0
  %nam865 = getelementptr inbounds %struct.hashnode, %struct.hashnode* %node864, i32 0, i32 1
  %526 = load i8*, i8** %nam865, align 4
  %527 = load %struct.options*, %struct.options** %ops.addr, align 4
  %528 = load i32, i32* %func.addr, align 4
  %call866 = call i32 @check_autoload(%struct.shfunc* %524, i8* %526, %struct.options* %527, i32 %528)
  %tobool867 = icmp ne i32 %call866, 0
  br i1 %tobool867, label %if.then868, label %if.end869

if.then868:                                       ; preds = %land.lhs.true863
  store i32 1, i32* %returnval, align 4
  br label %if.end869

if.end869:                                        ; preds = %if.then868, %land.lhs.true863, %if.end861
  br label %if.end871

if.else870:                                       ; preds = %if.else788
  store i32 1, i32* %returnval, align 4
  br label %if.end871

if.end871:                                        ; preds = %if.else870, %if.end869
  br label %if.end872

if.end872:                                        ; preds = %if.end871, %if.end787
  br label %if.end873

if.end873:                                        ; preds = %if.end872, %if.then761
  br label %for.inc874

for.inc874:                                       ; preds = %if.end873, %if.end845
  %529 = load i8**, i8*** %argv.addr, align 4
  %incdec.ptr875 = getelementptr inbounds i8*, i8** %529, i32 1
  store i8** %incdec.ptr875, i8*** %argv.addr, align 4
  br label %for.cond753

for.end876:                                       ; preds = %for.cond753
  br label %do.body877

do.body877:                                       ; preds = %for.end876
  %530 = load i32, i32* @queueing_enabled, align 4
  %dec878 = add nsw i32 %530, -1
  store i32 %dec878, i32* @queueing_enabled, align 4
  %tobool879 = icmp ne i32 %dec878, 0
  br i1 %tobool879, label %if.end897, label %if.then880

if.then880:                                       ; preds = %do.body877
  br label %do.body881

do.body881:                                       ; preds = %if.then880
  br label %while.cond882

while.cond882:                                    ; preds = %while.body885, %do.body881
  %531 = load i32, i32* @queue_front, align 4
  %532 = load i32, i32* @queue_rear, align 4
  %cmp883 = icmp ne i32 %531, %532
  br i1 %cmp883, label %while.body885, label %while.end894

while.body885:                                    ; preds = %while.cond882
  %533 = load i32, i32* @queue_front, align 4
  %add888 = add nsw i32 %533, 1
  %rem889 = srem i32 %add888, 128
  store i32 %rem889, i32* @queue_front, align 4
  %534 = load i32, i32* @queue_front, align 4
  %arrayidx890 = getelementptr inbounds [128 x %struct.__sigset_t], [128 x %struct.__sigset_t]* @signal_mask_queue, i32 0, i32 %534
  call void @signal_setmask(%struct.__sigset_t* sret %tmp891, %struct.__sigset_t* byval align 4 %arrayidx890)
  %535 = bitcast %struct.__sigset_t* %oset887 to i8*
  %536 = bitcast %struct.__sigset_t* %tmp891 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %535, i8* %536, i32 128, i32 4, i1 false)
  %537 = load i32, i32* @queue_front, align 4
  %arrayidx892 = getelementptr inbounds [128 x i32], [128 x i32]* @signal_queue, i32 0, i32 %537
  %538 = load i32, i32* %arrayidx892, align 4
  call void @zhandler(i32 %538)
  call void @signal_setmask(%struct.__sigset_t* sret %tmp893, %struct.__sigset_t* byval align 4 %oset887)
  br label %while.cond882

while.end894:                                     ; preds = %while.cond882
  br label %do.end896

do.end896:                                        ; preds = %while.end894
  br label %if.end897

if.end897:                                        ; preds = %do.end896, %do.body877
  br label %do.end899

do.end899:                                        ; preds = %if.end897
  %539 = load i32, i32* %returnval, align 4
  store i32 %539, i32* %retval, align 4
  br label %return

return:                                           ; preds = %do.end899, %for.end750, %do.end655, %do.end610, %if.then555, %if.end539, %if.then482, %if.then473, %if.then463, %if.then445, %if.then435, %if.then425, %if.then254, %if.then190, %if.then177
  %540 = load i32, i32* %retval, align 4
  ret i32 %540
}

; Function Attrs: noinline nounwind
define internal %struct.asgment* @getasg(i8*** %argvp, %union.linkroot* %assigns) #0 {
entry:
  %retval = alloca %struct.asgment*, align 4
  %argvp.addr = alloca i8***, align 4
  %assigns.addr = alloca %union.linkroot*, align 4
  %s = alloca i8*, align 4
  %asgp = alloca %struct.asgment*, align 4
  store i8*** %argvp, i8**** %argvp.addr, align 4
  store %union.linkroot* %assigns, %union.linkroot** %assigns.addr, align 4
  %0 = load i8***, i8**** %argvp.addr, align 4
  %1 = load i8**, i8*** %0, align 4
  %2 = load i8*, i8** %1, align 4
  store i8* %2, i8** %s, align 4
  %3 = load i8*, i8** %s, align 4
  %tobool = icmp ne i8* %3, null
  br i1 %tobool, label %if.end6, label %if.then

if.then:                                          ; preds = %entry
  %4 = load %union.linkroot*, %union.linkroot** %assigns.addr, align 4
  %tobool1 = icmp ne %union.linkroot* %4, null
  br i1 %tobool1, label %if.then2, label %if.end5

if.then2:                                         ; preds = %if.then
  %5 = load %union.linkroot*, %union.linkroot** %assigns.addr, align 4
  %list = bitcast %union.linkroot* %5 to %struct.linklist*
  %first = getelementptr inbounds %struct.linklist, %struct.linklist* %list, i32 0, i32 0
  %6 = load %struct.linknode*, %struct.linknode** %first, align 4
  %7 = bitcast %struct.linknode* %6 to %struct.asgment*
  store %struct.asgment* %7, %struct.asgment** %asgp, align 4
  %8 = load %struct.asgment*, %struct.asgment** %asgp, align 4
  %tobool3 = icmp ne %struct.asgment* %8, null
  br i1 %tobool3, label %if.end, label %if.then4

if.then4:                                         ; preds = %if.then2
  store %struct.asgment* null, %struct.asgment** %retval, align 4
  br label %return

if.end:                                           ; preds = %if.then2
  %9 = load %union.linkroot*, %union.linkroot** %assigns.addr, align 4
  %10 = load %struct.asgment*, %struct.asgment** %asgp, align 4
  %node = getelementptr inbounds %struct.asgment, %struct.asgment* %10, i32 0, i32 0
  %call = call i8* @uremnode(%union.linkroot* %9, %struct.linknode* %node)
  %11 = load %struct.asgment*, %struct.asgment** %asgp, align 4
  store %struct.asgment* %11, %struct.asgment** %retval, align 4
  br label %return

if.end5:                                          ; preds = %if.then
  store %struct.asgment* null, %struct.asgment** %retval, align 4
  br label %return

if.end6:                                          ; preds = %entry
  %12 = load i8*, i8** %s, align 4
  %13 = load i8, i8* %12, align 1
  %conv = sext i8 %13 to i32
  %cmp = icmp eq i32 %conv, 61
  br i1 %cmp, label %if.then8, label %if.end9

if.then8:                                         ; preds = %if.end6
  call void (i8*, ...) @zerr(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.85, i32 0, i32 0))
  store %struct.asgment* null, %struct.asgment** %retval, align 4
  br label %return

if.end9:                                          ; preds = %if.end6
  %14 = load i8*, i8** %s, align 4
  store i8* %14, i8** getelementptr inbounds (%struct.asgment, %struct.asgment* @getasg.asg, i32 0, i32 1), align 4
  store i32 0, i32* getelementptr inbounds (%struct.asgment, %struct.asgment* @getasg.asg, i32 0, i32 2), align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end9
  %15 = load i8*, i8** %s, align 4
  %16 = load i8, i8* %15, align 1
  %conv10 = sext i8 %16 to i32
  %tobool11 = icmp ne i32 %conv10, 0
  br i1 %tobool11, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %for.cond
  %17 = load i8*, i8** %s, align 4
  %18 = load i8, i8* %17, align 1
  %conv12 = sext i8 %18 to i32
  %cmp13 = icmp ne i32 %conv12, 61
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %19 = phi i1 [ false, %for.cond ], [ %cmp13, %land.rhs ]
  br i1 %19, label %for.body, label %for.end

for.body:                                         ; preds = %land.end
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %20 = load i8*, i8** %s, align 4
  %incdec.ptr = getelementptr inbounds i8, i8* %20, i32 1
  store i8* %incdec.ptr, i8** %s, align 4
  br label %for.cond

for.end:                                          ; preds = %land.end
  %21 = load i8*, i8** %s, align 4
  %22 = load i8, i8* %21, align 1
  %tobool15 = icmp ne i8 %22, 0
  br i1 %tobool15, label %if.then16, label %if.else

if.then16:                                        ; preds = %for.end
  %23 = load i8*, i8** %s, align 4
  store i8 0, i8* %23, align 1
  %24 = load i8*, i8** %s, align 4
  %add.ptr = getelementptr inbounds i8, i8* %24, i32 1
  store i8* %add.ptr, i8** getelementptr inbounds (%struct.asgment, %struct.asgment* @getasg.asg, i32 0, i32 3, i32 0), align 4
  br label %if.end17

if.else:                                          ; preds = %for.end
  store i8* null, i8** getelementptr inbounds (%struct.asgment, %struct.asgment* @getasg.asg, i32 0, i32 3, i32 0), align 4
  br label %if.end17

if.end17:                                         ; preds = %if.else, %if.then16
  %25 = load i8***, i8**** %argvp.addr, align 4
  %26 = load i8**, i8*** %25, align 4
  %incdec.ptr18 = getelementptr inbounds i8*, i8** %26, i32 1
  store i8** %incdec.ptr18, i8*** %25, align 4
  store %struct.asgment* @getasg.asg, %struct.asgment** %retval, align 4
  br label %return

return:                                           ; preds = %if.end17, %if.then8, %if.end5, %if.end, %if.then4
  %27 = load %struct.asgment*, %struct.asgment** %retval, align 4
  ret %struct.asgment* %27
}

declare %struct.param* @assignaparam(i8*, i8**, i32) #1

declare i8** @zlinklist2array(%union.linkroot*) #1

; Function Attrs: noinline nounwind
define internal %struct.param* @typeset_single(i8* %cname, i8* %pname, %struct.param* %pm, i32 %func, i32 %on, i32 %off, i32 %roff, %struct.asgment* %asg, %struct.param* %altpm, %struct.options* %ops, i32 %joinchar) #0 {
entry:
  %retval = alloca %struct.param*, align 4
  %cname.addr = alloca i8*, align 4
  %pname.addr = alloca i8*, align 4
  %pm.addr = alloca %struct.param*, align 4
  %func.addr = alloca i32, align 4
  %on.addr = alloca i32, align 4
  %off.addr = alloca i32, align 4
  %roff.addr = alloca i32, align 4
  %asg.addr = alloca %struct.asgment*, align 4
  %altpm.addr = alloca %struct.param*, align 4
  %ops.addr = alloca %struct.options*, align 4
  %joinchar.addr = alloca i32, align 4
  %usepm = alloca i32, align 4
  %tc = alloca i32, align 4
  %keeplocal = alloca i32, align 4
  %newspecial = alloca i32, align 4
  %readonly = alloca i32, align 4
  %dont_set = alloca i32, align 4
  %subscript = alloca i8*, align 4
  %chflags = alloca i32, align 4
  %err = alloca i32, align 4
  %apm = alloca %struct.param*, align 4
  %x = alloca i8**, align 4
  %flags459 = alloca i32, align 4
  %tpm = alloca %struct.param*, align 4
  %pm2 = alloca %struct.param*, align 4
  %flags701 = alloca i32, align 4
  %tdp = alloca %struct.tieddata*, align 4
  %ipm = alloca %struct.param*, align 4
  %arrayval = alloca i8**, align 4
  %flags822 = alloca i32, align 4
  store i8* %cname, i8** %cname.addr, align 4
  store i8* %pname, i8** %pname.addr, align 4
  store %struct.param* %pm, %struct.param** %pm.addr, align 4
  store i32 %func, i32* %func.addr, align 4
  store i32 %on, i32* %on.addr, align 4
  store i32 %off, i32* %off.addr, align 4
  store i32 %roff, i32* %roff.addr, align 4
  store %struct.asgment* %asg, %struct.asgment** %asg.addr, align 4
  store %struct.param* %altpm, %struct.param** %altpm.addr, align 4
  store %struct.options* %ops, %struct.options** %ops.addr, align 4
  store i32 %joinchar, i32* %joinchar.addr, align 4
  store i32 0, i32* %keeplocal, align 4
  store i32 0, i32* %newspecial, align 4
  store i32 0, i32* %dont_set, align 4
  %0 = load %struct.param*, %struct.param** %pm.addr, align 4
  %tobool = icmp ne %struct.param* %0, null
  br i1 %tobool, label %land.rhs, label %land.end8

land.rhs:                                         ; preds = %entry
  %1 = load %struct.param*, %struct.param** %pm.addr, align 4
  %node = getelementptr inbounds %struct.param, %struct.param* %1, i32 0, i32 0
  %flags = getelementptr inbounds %struct.hashnode, %struct.hashnode* %node, i32 0, i32 2
  %2 = load i32, i32* %flags, align 8
  %and = and i32 %2, 33554432
  %tobool1 = icmp ne i32 %and, 0
  br i1 %tobool1, label %lor.rhs, label %lor.end

lor.rhs:                                          ; preds = %land.rhs
  %3 = load i8, i8* getelementptr inbounds ([181 x i8], [181 x i8]* @opts, i32 0, i32 132), align 1
  %conv = sext i8 %3 to i32
  %tobool2 = icmp ne i32 %conv, 0
  br i1 %tobool2, label %land.rhs3, label %land.end

land.rhs3:                                        ; preds = %lor.rhs
  %4 = load %struct.param*, %struct.param** %pm.addr, align 4
  %node4 = getelementptr inbounds %struct.param, %struct.param* %4, i32 0, i32 0
  %flags5 = getelementptr inbounds %struct.hashnode, %struct.hashnode* %node4, i32 0, i32 2
  %5 = load i32, i32* %flags5, align 8
  %and6 = and i32 %5, 5120
  %tobool7 = icmp ne i32 %and6, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs3, %lor.rhs
  %6 = phi i1 [ false, %lor.rhs ], [ %tobool7, %land.rhs3 ]
  br label %lor.end

lor.end:                                          ; preds = %land.end, %land.rhs
  %7 = phi i1 [ true, %land.rhs ], [ %6, %land.end ]
  br label %land.end8

land.end8:                                        ; preds = %lor.end, %entry
  %8 = phi i1 [ false, %entry ], [ %7, %lor.end ]
  %land.ext = zext i1 %8 to i32
  store i32 %land.ext, i32* %usepm, align 4
  %9 = load i32, i32* %usepm, align 4
  %tobool9 = icmp ne i32 %9, 0
  br i1 %tobool9, label %if.end, label %land.lhs.true

land.lhs.true:                                    ; preds = %land.end8
  %10 = load %struct.param*, %struct.param** %pm.addr, align 4
  %tobool10 = icmp ne %struct.param* %10, null
  br i1 %tobool10, label %land.lhs.true11, label %if.end

land.lhs.true11:                                  ; preds = %land.lhs.true
  %11 = load %struct.param*, %struct.param** %pm.addr, align 4
  %node12 = getelementptr inbounds %struct.param, %struct.param* %11, i32 0, i32 0
  %flags13 = getelementptr inbounds %struct.hashnode, %struct.hashnode* %node12, i32 0, i32 2
  %12 = load i32, i32* %flags13, align 8
  %and14 = and i32 %12, 4194304
  %tobool15 = icmp ne i32 %and14, 0
  br i1 %tobool15, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true11
  store i32 2, i32* %usepm, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %land.lhs.true11, %land.lhs.true, %land.end8
  %13 = load i32, i32* %usepm, align 4
  %tobool16 = icmp ne i32 %13, 0
  br i1 %tobool16, label %land.lhs.true17, label %if.end38

land.lhs.true17:                                  ; preds = %if.end
  %14 = load i32, i32* @locallevel, align 4
  %15 = load %struct.param*, %struct.param** %pm.addr, align 4
  %level = getelementptr inbounds %struct.param, %struct.param* %15, i32 0, i32 8
  %16 = load i32, i32* %level, align 8
  %cmp = icmp ne i32 %14, %16
  br i1 %cmp, label %land.lhs.true19, label %if.end38

land.lhs.true19:                                  ; preds = %land.lhs.true17
  %17 = load i32, i32* %on.addr, align 4
  %and20 = and i32 %17, 2097152
  %tobool21 = icmp ne i32 %and20, 0
  br i1 %tobool21, label %if.then22, label %if.end38

if.then22:                                        ; preds = %land.lhs.true19
  %18 = load %struct.param*, %struct.param** %pm.addr, align 4
  %node23 = getelementptr inbounds %struct.param, %struct.param* %18, i32 0, i32 0
  %flags24 = getelementptr inbounds %struct.hashnode, %struct.hashnode* %node23, i32 0, i32 2
  %19 = load i32, i32* %flags24, align 8
  %and25 = and i32 %19, 4194304
  %tobool26 = icmp ne i32 %and25, 0
  br i1 %tobool26, label %land.lhs.true27, label %if.end37

land.lhs.true27:                                  ; preds = %if.then22
  %20 = load i32, i32* %on.addr, align 4
  %and28 = and i32 %20, 16384
  %tobool29 = icmp ne i32 %and28, 0
  br i1 %tobool29, label %if.end37, label %land.lhs.true30

land.lhs.true30:                                  ; preds = %land.lhs.true27
  %21 = load %struct.param*, %struct.param** %pm.addr, align 4
  %node31 = getelementptr inbounds %struct.param, %struct.param* %21, i32 0, i32 0
  %flags32 = getelementptr inbounds %struct.hashnode, %struct.hashnode* %node31, i32 0, i32 2
  %22 = load i32, i32* %flags32, align 8
  %and33 = and i32 %22, 16384
  %23 = load i32, i32* %off.addr, align 4
  %neg = xor i32 %23, -1
  %and34 = and i32 %and33, %neg
  %tobool35 = icmp ne i32 %and34, 0
  br i1 %tobool35, label %if.end37, label %if.then36

if.then36:                                        ; preds = %land.lhs.true30
  store i32 1, i32* %newspecial, align 4
  br label %if.end37

if.end37:                                         ; preds = %if.then36, %land.lhs.true30, %land.lhs.true27, %if.then22
  store i32 0, i32* %usepm, align 4
  br label %if.end38

if.end38:                                         ; preds = %if.end37, %land.lhs.true19, %land.lhs.true17, %if.end
  store i32 0, i32* %tc, align 4
  %24 = load %struct.asgment*, %struct.asgment** %asg.addr, align 4
  %flags39 = getelementptr inbounds %struct.asgment, %struct.asgment* %24, i32 0, i32 2
  %25 = load i32, i32* %flags39, align 4
  %and40 = and i32 %25, 1
  %tobool41 = icmp ne i32 %and40, 0
  br i1 %tobool41, label %land.lhs.true42, label %if.end55

land.lhs.true42:                                  ; preds = %if.end38
  %26 = load i32, i32* %on.addr, align 4
  %and43 = and i32 %26, 31
  %cmp44 = icmp eq i32 %and43, 0
  br i1 %cmp44, label %land.lhs.true46, label %if.end55

land.lhs.true46:                                  ; preds = %land.lhs.true42
  %27 = load i32, i32* %usepm, align 4
  %tobool47 = icmp ne i32 %27, 0
  br i1 %tobool47, label %land.lhs.true48, label %if.then54

land.lhs.true48:                                  ; preds = %land.lhs.true46
  %28 = load %struct.param*, %struct.param** %pm.addr, align 4
  %node49 = getelementptr inbounds %struct.param, %struct.param* %28, i32 0, i32 0
  %flags50 = getelementptr inbounds %struct.hashnode, %struct.hashnode* %node49, i32 0, i32 2
  %29 = load i32, i32* %flags50, align 8
  %and51 = and i32 %29, 31
  %and52 = and i32 %and51, 17
  %tobool53 = icmp ne i32 %and52, 0
  br i1 %tobool53, label %if.end55, label %if.then54

if.then54:                                        ; preds = %land.lhs.true48, %land.lhs.true46
  %30 = load i32, i32* %on.addr, align 4
  %or = or i32 %30, 1
  store i32 %or, i32* %on.addr, align 4
  br label %if.end55

if.end55:                                         ; preds = %if.then54, %land.lhs.true48, %land.lhs.true42, %if.end38
  %31 = load i32, i32* %usepm, align 4
  %tobool56 = icmp ne i32 %31, 0
  br i1 %tobool56, label %land.lhs.true57, label %if.else

land.lhs.true57:                                  ; preds = %if.end55
  %32 = load %struct.asgment*, %struct.asgment** %asg.addr, align 4
  %flags58 = getelementptr inbounds %struct.asgment, %struct.asgment* %32, i32 0, i32 2
  %33 = load i32, i32* %flags58, align 4
  %and59 = and i32 %33, 1
  %tobool60 = icmp ne i32 %and59, 0
  br i1 %tobool60, label %land.lhs.true61, label %if.else

land.lhs.true61:                                  ; preds = %land.lhs.true57
  %34 = load i32, i32* %newspecial, align 4
  %cmp62 = icmp eq i32 %34, 0
  br i1 %cmp62, label %land.lhs.true64, label %if.else

land.lhs.true64:                                  ; preds = %land.lhs.true61
  %35 = load %struct.param*, %struct.param** %pm.addr, align 4
  %node65 = getelementptr inbounds %struct.param, %struct.param* %35, i32 0, i32 0
  %flags66 = getelementptr inbounds %struct.hashnode, %struct.hashnode* %node65, i32 0, i32 2
  %36 = load i32, i32* %flags66, align 8
  %and67 = and i32 %36, 31
  %cmp68 = icmp ne i32 %and67, 1
  br i1 %cmp68, label %land.lhs.true70, label %if.else

land.lhs.true70:                                  ; preds = %land.lhs.true64
  %37 = load %struct.param*, %struct.param** %pm.addr, align 4
  %node71 = getelementptr inbounds %struct.param, %struct.param* %37, i32 0, i32 0
  %flags72 = getelementptr inbounds %struct.hashnode, %struct.hashnode* %node71, i32 0, i32 2
  %38 = load i32, i32* %flags72, align 8
  %and73 = and i32 %38, 31
  %cmp74 = icmp ne i32 %and73, 16
  br i1 %cmp74, label %if.then76, label %if.else

if.then76:                                        ; preds = %land.lhs.true70
  %39 = load i32, i32* %on.addr, align 4
  %and77 = and i32 %39, 14
  %tobool78 = icmp ne i32 %and77, 0
  br i1 %tobool78, label %if.then79, label %if.end80

if.then79:                                        ; preds = %if.then76
  %40 = load i8*, i8** %cname.addr, align 4
  %41 = load i8*, i8** %pname.addr, align 4
  call void (i8*, i8*, ...) @zerrnam(i8* %40, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.313, i32 0, i32 0), i8* %41)
  store %struct.param* null, %struct.param** %retval, align 4
  br label %return

if.end80:                                         ; preds = %if.then76
  %42 = load %struct.param*, %struct.param** %pm.addr, align 4
  %node81 = getelementptr inbounds %struct.param, %struct.param* %42, i32 0, i32 0
  %flags82 = getelementptr inbounds %struct.hashnode, %struct.hashnode* %node81, i32 0, i32 2
  %43 = load i32, i32* %flags82, align 8
  %and83 = and i32 %43, 4194304
  %tobool84 = icmp ne i32 %and83, 0
  br i1 %tobool84, label %if.then85, label %if.end86

if.then85:                                        ; preds = %if.end80
  %44 = load i8*, i8** %cname.addr, align 4
  %45 = load i8*, i8** %pname.addr, align 4
  call void (i8*, i8*, ...) @zerrnam(i8* %44, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.314, i32 0, i32 0), i8* %45)
  store %struct.param* null, %struct.param** %retval, align 4
  br label %return

if.end86:                                         ; preds = %if.end80
  store i32 1, i32* %tc, align 4
  store i32 0, i32* %usepm, align 4
  br label %if.end109

if.else:                                          ; preds = %land.lhs.true70, %land.lhs.true64, %land.lhs.true61, %land.lhs.true57, %if.end55
  %46 = load i32, i32* %usepm, align 4
  %tobool87 = icmp ne i32 %46, 0
  br i1 %tobool87, label %if.then90, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.else
  %47 = load i32, i32* %newspecial, align 4
  %cmp88 = icmp ne i32 %47, 0
  br i1 %cmp88, label %if.then90, label %if.end108

if.then90:                                        ; preds = %lor.lhs.false, %if.else
  %48 = load i32, i32* %off.addr, align 4
  %49 = load %struct.param*, %struct.param** %pm.addr, align 4
  %node91 = getelementptr inbounds %struct.param, %struct.param* %49, i32 0, i32 0
  %flags92 = getelementptr inbounds %struct.hashnode, %struct.hashnode* %node91, i32 0, i32 2
  %50 = load i32, i32* %flags92, align 8
  %and93 = and i32 %48, %50
  %51 = load i32, i32* %on.addr, align 4
  %52 = load %struct.param*, %struct.param** %pm.addr, align 4
  %node94 = getelementptr inbounds %struct.param, %struct.param* %52, i32 0, i32 0
  %flags95 = getelementptr inbounds %struct.hashnode, %struct.hashnode* %node94, i32 0, i32 2
  %53 = load i32, i32* %flags95, align 8
  %neg96 = xor i32 %53, -1
  %and97 = and i32 %51, %neg96
  %or98 = or i32 %and93, %and97
  %and99 = and i32 %or98, 134283295
  store i32 %and99, i32* %chflags, align 4
  %54 = load i32, i32* %chflags, align 4
  %tobool100 = icmp ne i32 %54, 0
  br i1 %tobool100, label %land.rhs101, label %land.end104

land.rhs101:                                      ; preds = %if.then90
  %55 = load i32, i32* %chflags, align 4
  %cmp102 = icmp ne i32 %55, 12
  br label %land.end104

land.end104:                                      ; preds = %land.rhs101, %if.then90
  %56 = phi i1 [ false, %if.then90 ], [ %cmp102, %land.rhs101 ]
  %land.ext105 = zext i1 %56 to i32
  store i32 %land.ext105, i32* %tc, align 4
  br i1 %56, label %if.then106, label %if.end107

if.then106:                                       ; preds = %land.end104
  store i32 0, i32* %usepm, align 4
  br label %if.end107

if.end107:                                        ; preds = %if.then106, %land.end104
  br label %if.end108

if.end108:                                        ; preds = %if.end107, %lor.lhs.false
  br label %if.end109

if.end109:                                        ; preds = %if.end108, %if.end86
  %57 = load i32, i32* %usepm, align 4
  %tobool110 = icmp ne i32 %57, 0
  br i1 %tobool110, label %land.rhs114, label %lor.lhs.false111

lor.lhs.false111:                                 ; preds = %if.end109
  %58 = load i32, i32* %newspecial, align 4
  %cmp112 = icmp ne i32 %58, 0
  br i1 %cmp112, label %land.rhs114, label %land.end120

land.rhs114:                                      ; preds = %lor.lhs.false111, %if.end109
  %59 = load i32, i32* %off.addr, align 4
  %60 = load %struct.param*, %struct.param** %pm.addr, align 4
  %node115 = getelementptr inbounds %struct.param, %struct.param* %60, i32 0, i32 0
  %flags116 = getelementptr inbounds %struct.hashnode, %struct.hashnode* %node115, i32 0, i32 2
  %61 = load i32, i32* %flags116, align 8
  %and117 = and i32 %59, %61
  %and118 = and i32 %and117, 1024
  %tobool119 = icmp ne i32 %and118, 0
  br label %land.end120

land.end120:                                      ; preds = %land.rhs114, %lor.lhs.false111
  %62 = phi i1 [ false, %lor.lhs.false111 ], [ %tobool119, %land.rhs114 ]
  %land.ext121 = zext i1 %62 to i32
  store i32 %land.ext121, i32* %readonly, align 4
  br i1 %62, label %if.then124, label %lor.lhs.false122

lor.lhs.false122:                                 ; preds = %land.end120
  %63 = load i32, i32* %tc, align 4
  %tobool123 = icmp ne i32 %63, 0
  br i1 %tobool123, label %if.then124, label %if.else181

if.then124:                                       ; preds = %lor.lhs.false122, %land.end120
  %64 = load %struct.param*, %struct.param** %pm.addr, align 4
  %node125 = getelementptr inbounds %struct.param, %struct.param* %64, i32 0, i32 0
  %flags126 = getelementptr inbounds %struct.hashnode, %struct.hashnode* %node125, i32 0, i32 2
  %65 = load i32, i32* %flags126, align 8
  %and127 = and i32 %65, 4194304
  %tobool128 = icmp ne i32 %and127, 0
  br i1 %tobool128, label %if.then129, label %if.else173

if.then129:                                       ; preds = %if.then124
  store i32 1, i32* %err, align 4
  %66 = load i32, i32* %readonly, align 4
  %tobool130 = icmp ne i32 %66, 0
  br i1 %tobool130, label %if.end169, label %land.lhs.true131

land.lhs.true131:                                 ; preds = %if.then129
  %67 = load i8*, i8** %pname.addr, align 4
  %call = call i32 @strcmp(i8* %67, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.315, i32 0, i32 0))
  %tobool132 = icmp ne i32 %call, 0
  br i1 %tobool132, label %if.end169, label %if.then133

if.then133:                                       ; preds = %land.lhs.true131
  %68 = load i32, i32* %newspecial, align 4
  %cmp134 = icmp ne i32 %68, 0
  br i1 %cmp134, label %if.then136, label %if.else154

if.then136:                                       ; preds = %if.then133
  %69 = load i32, i32* %on.addr, align 4
  %and137 = and i32 %69, 31
  %cmp138 = icmp eq i32 %and137, 0
  br i1 %cmp138, label %if.then152, label %lor.lhs.false140

lor.lhs.false140:                                 ; preds = %if.then136
  %70 = load i32, i32* %on.addr, align 4
  %and141 = and i32 %70, 31
  %cmp142 = icmp eq i32 %and141, 2
  br i1 %cmp142, label %if.then152, label %lor.lhs.false144

lor.lhs.false144:                                 ; preds = %lor.lhs.false140
  %71 = load i32, i32* %on.addr, align 4
  %and145 = and i32 %71, 31
  %cmp146 = icmp eq i32 %and145, 8
  br i1 %cmp146, label %if.then152, label %lor.lhs.false148

lor.lhs.false148:                                 ; preds = %lor.lhs.false144
  %72 = load i32, i32* %on.addr, align 4
  %and149 = and i32 %72, 31
  %cmp150 = icmp eq i32 %and149, 4
  br i1 %cmp150, label %if.then152, label %if.end153

if.then152:                                       ; preds = %lor.lhs.false148, %lor.lhs.false144, %lor.lhs.false140, %if.then136
  store i32 2, i32* %newspecial, align 4
  store i32 0, i32* %err, align 4
  store i32 0, i32* %tc, align 4
  br label %if.end153

if.end153:                                        ; preds = %if.then152, %lor.lhs.false148
  br label %if.end168

if.else154:                                       ; preds = %if.then133
  %73 = load %struct.param*, %struct.param** %pm.addr, align 4
  %74 = load i32, i32* %on.addr, align 4
  %75 = load i32, i32* %off.addr, align 4
  %call155 = call i32 @setsecondstype(%struct.param* %73, i32 %74, i32 %75)
  %tobool156 = icmp ne i32 %call155, 0
  br i1 %tobool156, label %if.end167, label %if.then157

if.then157:                                       ; preds = %if.else154
  %76 = load %struct.asgment*, %struct.asgment** %asg.addr, align 4
  %value = getelementptr inbounds %struct.asgment, %struct.asgment* %76, i32 0, i32 3
  %scalar = bitcast %union.anon* %value to i8**
  %77 = load i8*, i8** %scalar, align 4
  %tobool158 = icmp ne i8* %77, null
  br i1 %tobool158, label %land.lhs.true159, label %if.end166

land.lhs.true159:                                 ; preds = %if.then157
  %78 = load i8*, i8** %pname.addr, align 4
  %79 = load %struct.asgment*, %struct.asgment** %asg.addr, align 4
  %value160 = getelementptr inbounds %struct.asgment, %struct.asgment* %79, i32 0, i32 3
  %scalar161 = bitcast %union.anon* %value160 to i8**
  %80 = load i8*, i8** %scalar161, align 4
  %call162 = call i8* @ztrdup(i8* %80)
  %call163 = call %struct.param* @assignsparam(i8* %78, i8* %call162, i32 0)
  store %struct.param* %call163, %struct.param** %pm.addr, align 4
  %tobool164 = icmp ne %struct.param* %call163, null
  br i1 %tobool164, label %if.end166, label %if.then165

if.then165:                                       ; preds = %land.lhs.true159
  store %struct.param* null, %struct.param** %retval, align 4
  br label %return

if.end166:                                        ; preds = %land.lhs.true159, %if.then157
  store i32 1, i32* %usepm, align 4
  store i32 0, i32* %err, align 4
  br label %if.end167

if.end167:                                        ; preds = %if.end166, %if.else154
  br label %if.end168

if.end168:                                        ; preds = %if.end167, %if.end153
  br label %if.end169

if.end169:                                        ; preds = %if.end168, %land.lhs.true131, %if.then129
  %81 = load i32, i32* %err, align 4
  %tobool170 = icmp ne i32 %81, 0
  br i1 %tobool170, label %if.then171, label %if.end172

if.then171:                                       ; preds = %if.end169
  %82 = load i8*, i8** %cname.addr, align 4
  %83 = load i8*, i8** %pname.addr, align 4
  call void (i8*, i8*, ...) @zerrnam(i8* %82, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.316, i32 0, i32 0), i8* %83)
  store %struct.param* null, %struct.param** %retval, align 4
  br label %return

if.end172:                                        ; preds = %if.end169
  br label %if.end180

if.else173:                                       ; preds = %if.then124
  %84 = load %struct.param*, %struct.param** %pm.addr, align 4
  %node174 = getelementptr inbounds %struct.param, %struct.param* %84, i32 0, i32 0
  %flags175 = getelementptr inbounds %struct.hashnode, %struct.hashnode* %node174, i32 0, i32 2
  %85 = load i32, i32* %flags175, align 8
  %and176 = and i32 %85, 134217728
  %tobool177 = icmp ne i32 %and176, 0
  br i1 %tobool177, label %if.then178, label %if.end179

if.then178:                                       ; preds = %if.else173
  %86 = load i8*, i8** %cname.addr, align 4
  %87 = load i8*, i8** %pname.addr, align 4
  call void (i8*, i8*, ...) @zerrnam(i8* %86, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.317, i32 0, i32 0), i8* %87)
  store %struct.param* null, %struct.param** %retval, align 4
  br label %return

if.end179:                                        ; preds = %if.else173
  br label %if.end180

if.end180:                                        ; preds = %if.end179, %if.end172
  br label %if.end190

if.else181:                                       ; preds = %lor.lhs.false122
  %88 = load i32, i32* %newspecial, align 4
  %cmp182 = icmp ne i32 %88, 0
  br i1 %cmp182, label %land.lhs.true184, label %if.end189

land.lhs.true184:                                 ; preds = %if.else181
  %89 = load i8*, i8** %pname.addr, align 4
  %call185 = call i32 @strcmp(i8* %89, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.315, i32 0, i32 0))
  %cmp186 = icmp eq i32 %call185, 0
  br i1 %cmp186, label %if.then188, label %if.end189

if.then188:                                       ; preds = %land.lhs.true184
  store i32 2, i32* %newspecial, align 4
  br label %if.end189

if.end189:                                        ; preds = %if.then188, %land.lhs.true184, %if.else181
  br label %if.end190

if.end190:                                        ; preds = %if.end189, %if.end180
  %90 = load i8, i8* getelementptr inbounds ([181 x i8], [181 x i8]* @opts, i32 0, i32 132), align 1
  %tobool191 = icmp ne i8 %90, 0
  br i1 %tobool191, label %if.then192, label %if.end227

if.then192:                                       ; preds = %if.end190
  %91 = load i32, i32* %on.addr, align 4
  %and193 = and i32 %91, 5120
  %tobool194 = icmp ne i32 %and193, 0
  br i1 %tobool194, label %land.lhs.true195, label %if.else213

land.lhs.true195:                                 ; preds = %if.then192
  %92 = load i32, i32* %usepm, align 4
  %tobool196 = icmp ne i32 %92, 0
  br i1 %tobool196, label %lor.lhs.false197, label %land.lhs.true202

lor.lhs.false197:                                 ; preds = %land.lhs.true195
  %93 = load %struct.param*, %struct.param** %pm.addr, align 4
  %node198 = getelementptr inbounds %struct.param, %struct.param* %93, i32 0, i32 0
  %flags199 = getelementptr inbounds %struct.hashnode, %struct.hashnode* %node198, i32 0, i32 2
  %94 = load i32, i32* %flags199, align 8
  %and200 = and i32 %94, 33554432
  %tobool201 = icmp ne i32 %and200, 0
  br i1 %tobool201, label %land.lhs.true202, label %if.else213

land.lhs.true202:                                 ; preds = %lor.lhs.false197, %land.lhs.true195
  %95 = load %struct.asgment*, %struct.asgment** %asg.addr, align 4
  %flags203 = getelementptr inbounds %struct.asgment, %struct.asgment* %95, i32 0, i32 2
  %96 = load i32, i32* %flags203, align 4
  %and204 = and i32 %96, 1
  %tobool205 = icmp ne i32 %and204, 0
  br i1 %tobool205, label %if.else213, label %lor.lhs.false206

lor.lhs.false206:                                 ; preds = %land.lhs.true202
  %97 = load %struct.asgment*, %struct.asgment** %asg.addr, align 4
  %value207 = getelementptr inbounds %struct.asgment, %struct.asgment* %97, i32 0, i32 3
  %scalar208 = bitcast %union.anon* %value207 to i8**
  %98 = load i8*, i8** %scalar208, align 4
  %cmp209 = icmp ne i8* %98, null
  br i1 %cmp209, label %if.else213, label %if.then211

if.then211:                                       ; preds = %lor.lhs.false206
  %99 = load i32, i32* %on.addr, align 4
  %or212 = or i32 %99, 33554432
  store i32 %or212, i32* %on.addr, align 4
  br label %if.end226

if.else213:                                       ; preds = %lor.lhs.false206, %land.lhs.true202, %lor.lhs.false197, %if.then192
  %100 = load i32, i32* %usepm, align 4
  %tobool214 = icmp ne i32 %100, 0
  br i1 %tobool214, label %land.lhs.true215, label %if.end225

land.lhs.true215:                                 ; preds = %if.else213
  %101 = load %struct.param*, %struct.param** %pm.addr, align 4
  %node216 = getelementptr inbounds %struct.param, %struct.param* %101, i32 0, i32 0
  %flags217 = getelementptr inbounds %struct.hashnode, %struct.hashnode* %node216, i32 0, i32 2
  %102 = load i32, i32* %flags217, align 8
  %and218 = and i32 %102, 1024
  %tobool219 = icmp ne i32 %and218, 0
  br i1 %tobool219, label %land.lhs.true220, label %if.end225

land.lhs.true220:                                 ; preds = %land.lhs.true215
  %103 = load i32, i32* %on.addr, align 4
  %and221 = and i32 %103, 1024
  %tobool222 = icmp ne i32 %and221, 0
  br i1 %tobool222, label %if.end225, label %if.then223

if.then223:                                       ; preds = %land.lhs.true220
  %104 = load %struct.param*, %struct.param** %pm.addr, align 4
  %node224 = getelementptr inbounds %struct.param, %struct.param* %104, i32 0, i32 0
  %nam = getelementptr inbounds %struct.hashnode, %struct.hashnode* %node224, i32 0, i32 1
  %105 = load i8*, i8** %nam, align 4
  call void (i8*, ...) @zerr(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.318, i32 0, i32 0), i8* %105)
  store %struct.param* null, %struct.param** %retval, align 4
  br label %return

if.end225:                                        ; preds = %land.lhs.true220, %land.lhs.true215, %if.else213
  br label %if.end226

if.end226:                                        ; preds = %if.end225, %if.then211
  br label %if.end227

if.end227:                                        ; preds = %if.end226, %if.end190
  %106 = load i32, i32* %usepm, align 4
  %tobool228 = icmp ne i32 %106, 0
  br i1 %tobool228, label %if.then229, label %if.end494

if.then229:                                       ; preds = %if.end227
  %107 = load %struct.asgment*, %struct.asgment** %asg.addr, align 4
  %flags230 = getelementptr inbounds %struct.asgment, %struct.asgment* %107, i32 0, i32 2
  %108 = load i32, i32* %flags230, align 4
  %and231 = and i32 %108, 1
  %tobool232 = icmp ne i32 %and231, 0
  br i1 %tobool232, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.then229
  %109 = load %struct.param*, %struct.param** %pm.addr, align 4
  %node233 = getelementptr inbounds %struct.param, %struct.param* %109, i32 0, i32 0
  %flags234 = getelementptr inbounds %struct.hashnode, %struct.hashnode* %node233, i32 0, i32 2
  %110 = load i32, i32* %flags234, align 8
  %and235 = and i32 %110, 31
  %and236 = and i32 %and235, 17
  %tobool237 = icmp ne i32 %and236, 0
  br i1 %tobool237, label %if.end248, label %if.then247

cond.false:                                       ; preds = %if.then229
  %111 = load %struct.asgment*, %struct.asgment** %asg.addr, align 4
  %value238 = getelementptr inbounds %struct.asgment, %struct.asgment* %111, i32 0, i32 3
  %scalar239 = bitcast %union.anon* %value238 to i8**
  %112 = load i8*, i8** %scalar239, align 4
  %tobool240 = icmp ne i8* %112, null
  br i1 %tobool240, label %land.lhs.true241, label %if.end248

land.lhs.true241:                                 ; preds = %cond.false
  %113 = load %struct.param*, %struct.param** %pm.addr, align 4
  %node242 = getelementptr inbounds %struct.param, %struct.param* %113, i32 0, i32 0
  %flags243 = getelementptr inbounds %struct.hashnode, %struct.hashnode* %node242, i32 0, i32 2
  %114 = load i32, i32* %flags243, align 8
  %and244 = and i32 %114, 17
  %and245 = and i32 %and244, 31
  %tobool246 = icmp ne i32 %and245, 0
  br i1 %tobool246, label %if.then247, label %if.end248

if.then247:                                       ; preds = %land.lhs.true241, %cond.true
  %115 = load i8*, i8** %cname.addr, align 4
  %116 = load i8*, i8** %pname.addr, align 4
  call void (i8*, i8*, ...) @zerrnam(i8* %115, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.319, i32 0, i32 0), i8* %116)
  store %struct.param* null, %struct.param** %retval, align 4
  br label %return

if.end248:                                        ; preds = %land.lhs.true241, %cond.false, %cond.true
  %117 = load i32, i32* %on.addr, align 4
  %and249 = and i32 %117, -2097153
  store i32 %and249, i32* %on.addr, align 4
  %118 = load i32, i32* %on.addr, align 4
  %tobool250 = icmp ne i32 %118, 0
  br i1 %tobool250, label %if.end287, label %land.lhs.true251

land.lhs.true251:                                 ; preds = %if.end248
  %119 = load i32, i32* %roff.addr, align 4
  %tobool252 = icmp ne i32 %119, 0
  br i1 %tobool252, label %if.end287, label %land.lhs.true253

land.lhs.true253:                                 ; preds = %land.lhs.true251
  %120 = load %struct.asgment*, %struct.asgment** %asg.addr, align 4
  %flags254 = getelementptr inbounds %struct.asgment, %struct.asgment* %120, i32 0, i32 2
  %121 = load i32, i32* %flags254, align 4
  %and255 = and i32 %121, 1
  %tobool256 = icmp ne i32 %and255, 0
  br i1 %tobool256, label %if.end287, label %lor.lhs.false257

lor.lhs.false257:                                 ; preds = %land.lhs.true253
  %122 = load %struct.asgment*, %struct.asgment** %asg.addr, align 4
  %value258 = getelementptr inbounds %struct.asgment, %struct.asgment* %122, i32 0, i32 3
  %scalar259 = bitcast %union.anon* %value258 to i8**
  %123 = load i8*, i8** %scalar259, align 4
  %cmp260 = icmp ne i8* %123, null
  br i1 %cmp260, label %if.end287, label %if.then262

if.then262:                                       ; preds = %lor.lhs.false257
  %124 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind = getelementptr inbounds %struct.options, %struct.options* %124, i32 0, i32 0
  %arrayidx = getelementptr inbounds [128 x i8], [128 x i8]* %ind, i32 0, i32 112
  %125 = load i8, i8* %arrayidx, align 4
  %conv263 = zext i8 %125 to i32
  %cmp264 = icmp ne i32 %conv263, 0
  br i1 %cmp264, label %if.then266, label %if.else268

if.then266:                                       ; preds = %if.then262
  %126 = load %struct.hashtable*, %struct.hashtable** @paramtab, align 4
  %printnode = getelementptr inbounds %struct.hashtable, %struct.hashtable* %126, i32 0, i32 15
  %127 = load void (%struct.hashnode*, i32)*, void (%struct.hashnode*, i32)** %printnode, align 4
  %128 = load %struct.param*, %struct.param** %pm.addr, align 4
  %node267 = getelementptr inbounds %struct.param, %struct.param* %128, i32 0, i32 0
  call void %127(%struct.hashnode* %node267, i32 32)
  br label %if.end286

if.else268:                                       ; preds = %if.then262
  %129 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind269 = getelementptr inbounds %struct.options, %struct.options* %129, i32 0, i32 0
  %arrayidx270 = getelementptr inbounds [128 x i8], [128 x i8]* %ind269, i32 0, i32 103
  %130 = load i8, i8* %arrayidx270, align 1
  %conv271 = zext i8 %130 to i32
  %cmp272 = icmp ne i32 %conv271, 0
  br i1 %cmp272, label %if.end285, label %land.lhs.true274

land.lhs.true274:                                 ; preds = %if.else268
  %131 = load i8, i8* getelementptr inbounds ([181 x i8], [181 x i8]* @opts, i32 0, i32 172), align 1
  %tobool275 = icmp ne i8 %131, 0
  br i1 %tobool275, label %lor.lhs.false276, label %if.then282

lor.lhs.false276:                                 ; preds = %land.lhs.true274
  %132 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind277 = getelementptr inbounds %struct.options, %struct.options* %132, i32 0, i32 0
  %arrayidx278 = getelementptr inbounds [128 x i8], [128 x i8]* %ind277, i32 0, i32 109
  %133 = load i8, i8* %arrayidx278, align 1
  %conv279 = zext i8 %133 to i32
  %cmp280 = icmp ne i32 %conv279, 0
  br i1 %cmp280, label %if.then282, label %if.end285

if.then282:                                       ; preds = %lor.lhs.false276, %land.lhs.true274
  %134 = load %struct.hashtable*, %struct.hashtable** @paramtab, align 4
  %printnode283 = getelementptr inbounds %struct.hashtable, %struct.hashtable* %134, i32 0, i32 15
  %135 = load void (%struct.hashnode*, i32)*, void (%struct.hashnode*, i32)** %printnode283, align 4
  %136 = load %struct.param*, %struct.param** %pm.addr, align 4
  %node284 = getelementptr inbounds %struct.param, %struct.param* %136, i32 0, i32 0
  call void %135(%struct.hashnode* %node284, i32 16)
  br label %if.end285

if.end285:                                        ; preds = %if.then282, %lor.lhs.false276, %if.else268
  br label %if.end286

if.end286:                                        ; preds = %if.end285, %if.then266
  %137 = load %struct.param*, %struct.param** %pm.addr, align 4
  store %struct.param* %137, %struct.param** %retval, align 4
  br label %return

if.end287:                                        ; preds = %lor.lhs.false257, %land.lhs.true253, %land.lhs.true251, %if.end248
  %138 = load %struct.param*, %struct.param** %pm.addr, align 4
  %node288 = getelementptr inbounds %struct.param, %struct.param* %138, i32 0, i32 0
  %flags289 = getelementptr inbounds %struct.hashnode, %struct.hashnode* %node288, i32 0, i32 2
  %139 = load i32, i32* %flags289, align 8
  %and290 = and i32 %139, 16777216
  %tobool291 = icmp ne i32 %and290, 0
  br i1 %tobool291, label %land.lhs.true292, label %if.end296

land.lhs.true292:                                 ; preds = %if.end287
  %140 = load i8, i8* getelementptr inbounds ([181 x i8], [181 x i8]* @opts, i32 0, i32 155), align 1
  %conv293 = sext i8 %140 to i32
  %tobool294 = icmp ne i32 %conv293, 0
  br i1 %tobool294, label %if.then295, label %if.end296

if.then295:                                       ; preds = %land.lhs.true292
  %141 = load i8*, i8** %cname.addr, align 4
  %142 = load i8*, i8** %pname.addr, align 4
  call void (i8*, i8*, ...) @zerrnam(i8* %141, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.78, i32 0, i32 0), i8* %142)
  %143 = load %struct.param*, %struct.param** %pm.addr, align 4
  store %struct.param* %143, %struct.param** %retval, align 4
  br label %return

if.end296:                                        ; preds = %land.lhs.true292, %if.end287
  %144 = load i32, i32* %on.addr, align 4
  %and297 = and i32 %144, 8192
  %tobool298 = icmp ne i32 %and297, 0
  br i1 %tobool298, label %land.lhs.true299, label %if.end359

land.lhs.true299:                                 ; preds = %if.end296
  %145 = load %struct.param*, %struct.param** %pm.addr, align 4
  %node300 = getelementptr inbounds %struct.param, %struct.param* %145, i32 0, i32 0
  %flags301 = getelementptr inbounds %struct.hashnode, %struct.hashnode* %node300, i32 0, i32 2
  %146 = load i32, i32* %flags301, align 8
  %and302 = and i32 %146, 1024
  %147 = load i32, i32* %off.addr, align 4
  %neg303 = xor i32 %147, -1
  %and304 = and i32 %and302, %neg303
  %tobool305 = icmp ne i32 %and304, 0
  br i1 %tobool305, label %if.end359, label %if.then306

if.then306:                                       ; preds = %land.lhs.true299
  %148 = load %struct.param*, %struct.param** %pm.addr, align 4
  %node307 = getelementptr inbounds %struct.param, %struct.param* %148, i32 0, i32 0
  %flags308 = getelementptr inbounds %struct.hashnode, %struct.hashnode* %node307, i32 0, i32 2
  %149 = load i32, i32* %flags308, align 8
  %and309 = and i32 %149, 31
  %cmp310 = icmp eq i32 %and309, 1
  br i1 %cmp310, label %if.then312, label %if.else334

if.then312:                                       ; preds = %if.then306
  %150 = load %struct.param*, %struct.param** %pm.addr, align 4
  %gsu = getelementptr inbounds %struct.param, %struct.param* %150, i32 0, i32 2
  %a = bitcast %union.anon.1* %gsu to %struct.gsu_array**
  %151 = load %struct.gsu_array*, %struct.gsu_array** %a, align 8
  %getfn = getelementptr inbounds %struct.gsu_array, %struct.gsu_array* %151, i32 0, i32 0
  %152 = load i8** (%struct.param*)*, i8** (%struct.param*)** %getfn, align 4
  %153 = load %struct.param*, %struct.param** %pm.addr, align 4
  %call313 = call i8** %152(%struct.param* %153)
  store i8** %call313, i8*** %x, align 4
  %154 = load i8**, i8*** %x, align 4
  call void @uniqarray(i8** %154)
  %155 = load %struct.param*, %struct.param** %pm.addr, align 4
  %node314 = getelementptr inbounds %struct.param, %struct.param* %155, i32 0, i32 0
  %flags315 = getelementptr inbounds %struct.hashnode, %struct.hashnode* %node314, i32 0, i32 2
  %156 = load i32, i32* %flags315, align 8
  %and316 = and i32 %156, 4194304
  %tobool317 = icmp ne i32 %and316, 0
  br i1 %tobool317, label %if.then318, label %if.else326

if.then318:                                       ; preds = %if.then312
  %157 = load i8**, i8*** %x, align 4
  %158 = bitcast i8** %157 to i8*
  %call319 = call i8* @zheapptr(i8* %158)
  %tobool320 = icmp ne i8* %call319, null
  br i1 %tobool320, label %if.then321, label %if.end323

if.then321:                                       ; preds = %if.then318
  %159 = load i8**, i8*** %x, align 4
  %call322 = call i8** @zarrdup(i8** %159)
  store i8** %call322, i8*** %x, align 4
  br label %if.end323

if.end323:                                        ; preds = %if.then321, %if.then318
  %160 = load %struct.param*, %struct.param** %pm.addr, align 4
  %gsu324 = getelementptr inbounds %struct.param, %struct.param* %160, i32 0, i32 2
  %a325 = bitcast %union.anon.1* %gsu324 to %struct.gsu_array**
  %161 = load %struct.gsu_array*, %struct.gsu_array** %a325, align 8
  %setfn = getelementptr inbounds %struct.gsu_array, %struct.gsu_array* %161, i32 0, i32 1
  %162 = load void (%struct.param*, i8**)*, void (%struct.param*, i8**)** %setfn, align 4
  %163 = load %struct.param*, %struct.param** %pm.addr, align 4
  %164 = load i8**, i8*** %x, align 4
  call void %162(%struct.param* %163, i8** %164)
  br label %if.end333

if.else326:                                       ; preds = %if.then312
  %165 = load %struct.param*, %struct.param** %pm.addr, align 4
  %ename = getelementptr inbounds %struct.param, %struct.param* %165, i32 0, i32 6
  %166 = load i8*, i8** %ename, align 8
  %tobool327 = icmp ne i8* %166, null
  br i1 %tobool327, label %land.lhs.true328, label %if.end332

land.lhs.true328:                                 ; preds = %if.else326
  %167 = load i8**, i8*** %x, align 4
  %tobool329 = icmp ne i8** %167, null
  br i1 %tobool329, label %if.then330, label %if.end332

if.then330:                                       ; preds = %land.lhs.true328
  %168 = load %struct.param*, %struct.param** %pm.addr, align 4
  %ename331 = getelementptr inbounds %struct.param, %struct.param* %168, i32 0, i32 6
  %169 = load i8*, i8** %ename331, align 8
  %170 = load i8**, i8*** %x, align 4
  call void @arrfixenv(i8* %169, i8** %170)
  br label %if.end332

if.end332:                                        ; preds = %if.then330, %land.lhs.true328, %if.else326
  br label %if.end333

if.end333:                                        ; preds = %if.end332, %if.end323
  br label %if.end358

if.else334:                                       ; preds = %if.then306
  %171 = load %struct.param*, %struct.param** %pm.addr, align 4
  %node335 = getelementptr inbounds %struct.param, %struct.param* %171, i32 0, i32 0
  %flags336 = getelementptr inbounds %struct.hashnode, %struct.hashnode* %node335, i32 0, i32 2
  %172 = load i32, i32* %flags336, align 8
  %and337 = and i32 %172, 31
  %cmp338 = icmp eq i32 %and337, 0
  br i1 %cmp338, label %land.lhs.true340, label %if.end357

land.lhs.true340:                                 ; preds = %if.else334
  %173 = load %struct.param*, %struct.param** %pm.addr, align 4
  %ename341 = getelementptr inbounds %struct.param, %struct.param* %173, i32 0, i32 6
  %174 = load i8*, i8** %ename341, align 8
  %tobool342 = icmp ne i8* %174, null
  br i1 %tobool342, label %land.lhs.true343, label %if.end357

land.lhs.true343:                                 ; preds = %land.lhs.true340
  %175 = load %struct.hashtable*, %struct.hashtable** @paramtab, align 4
  %getnode = getelementptr inbounds %struct.hashtable, %struct.hashtable* %175, i32 0, i32 9
  %176 = load %struct.hashnode* (%struct.hashtable*, i8*)*, %struct.hashnode* (%struct.hashtable*, i8*)** %getnode, align 4
  %177 = load %struct.hashtable*, %struct.hashtable** @paramtab, align 4
  %178 = load %struct.param*, %struct.param** %pm.addr, align 4
  %ename344 = getelementptr inbounds %struct.param, %struct.param* %178, i32 0, i32 6
  %179 = load i8*, i8** %ename344, align 8
  %call345 = call %struct.hashnode* %176(%struct.hashtable* %177, i8* %179)
  %180 = bitcast %struct.hashnode* %call345 to %struct.param*
  store %struct.param* %180, %struct.param** %apm, align 4
  %tobool346 = icmp ne %struct.param* %180, null
  br i1 %tobool346, label %if.then347, label %if.end357

if.then347:                                       ; preds = %land.lhs.true343
  %181 = load %struct.param*, %struct.param** %apm, align 4
  %gsu348 = getelementptr inbounds %struct.param, %struct.param* %181, i32 0, i32 2
  %a349 = bitcast %union.anon.1* %gsu348 to %struct.gsu_array**
  %182 = load %struct.gsu_array*, %struct.gsu_array** %a349, align 8
  %getfn350 = getelementptr inbounds %struct.gsu_array, %struct.gsu_array* %182, i32 0, i32 0
  %183 = load i8** (%struct.param*)*, i8** (%struct.param*)** %getfn350, align 4
  %184 = load %struct.param*, %struct.param** %apm, align 4
  %call351 = call i8** %183(%struct.param* %184)
  store i8** %call351, i8*** %x, align 4
  %185 = load i8**, i8*** %x, align 4
  call void @uniqarray(i8** %185)
  %186 = load i8**, i8*** %x, align 4
  %tobool352 = icmp ne i8** %186, null
  br i1 %tobool352, label %if.then353, label %if.end356

if.then353:                                       ; preds = %if.then347
  %187 = load %struct.param*, %struct.param** %pm.addr, align 4
  %node354 = getelementptr inbounds %struct.param, %struct.param* %187, i32 0, i32 0
  %nam355 = getelementptr inbounds %struct.hashnode, %struct.hashnode* %node354, i32 0, i32 1
  %188 = load i8*, i8** %nam355, align 4
  %189 = load i8**, i8*** %x, align 4
  call void @arrfixenv(i8* %188, i8** %189)
  br label %if.end356

if.end356:                                        ; preds = %if.then353, %if.then347
  br label %if.end357

if.end357:                                        ; preds = %if.end356, %land.lhs.true343, %land.lhs.true340, %if.else334
  br label %if.end358

if.end358:                                        ; preds = %if.end357, %if.end333
  br label %if.end359

if.end359:                                        ; preds = %if.end358, %land.lhs.true299, %if.end296
  %190 = load i32, i32* %usepm, align 4
  %cmp360 = icmp eq i32 %190, 2
  br i1 %cmp360, label %if.then362, label %if.else371

if.then362:                                       ; preds = %if.end359
  %191 = load %struct.param*, %struct.param** %pm.addr, align 4
  %node363 = getelementptr inbounds %struct.param, %struct.param* %191, i32 0, i32 0
  %flags364 = getelementptr inbounds %struct.hashnode, %struct.hashnode* %node363, i32 0, i32 2
  %192 = load i32, i32* %flags364, align 8
  %193 = load i32, i32* %on.addr, align 4
  %and365 = and i32 %193, -1025
  %or366 = or i32 %192, %and365
  %194 = load i32, i32* %off.addr, align 4
  %neg367 = xor i32 %194, -1
  %and368 = and i32 %or366, %neg367
  %195 = load %struct.param*, %struct.param** %pm.addr, align 4
  %node369 = getelementptr inbounds %struct.param, %struct.param* %195, i32 0, i32 0
  %flags370 = getelementptr inbounds %struct.hashnode, %struct.hashnode* %node369, i32 0, i32 2
  store i32 %and368, i32* %flags370, align 8
  br label %if.end387

if.else371:                                       ; preds = %if.end359
  %196 = load i32, i32* %on.addr, align 4
  %and372 = and i32 %196, 1024
  %tobool373 = icmp ne i32 %and372, 0
  br i1 %tobool373, label %lor.lhs.false374, label %if.then376

lor.lhs.false374:                                 ; preds = %if.else371
  %197 = load i8, i8* getelementptr inbounds ([181 x i8], [181 x i8]* @opts, i32 0, i32 132), align 1
  %tobool375 = icmp ne i8 %197, 0
  br i1 %tobool375, label %if.end378, label %if.then376

if.then376:                                       ; preds = %lor.lhs.false374, %if.else371
  %198 = load i32, i32* %off.addr, align 4
  %or377 = or i32 %198, 33554432
  store i32 %or377, i32* %off.addr, align 4
  br label %if.end378

if.end378:                                        ; preds = %if.then376, %lor.lhs.false374
  %199 = load %struct.param*, %struct.param** %pm.addr, align 4
  %node379 = getelementptr inbounds %struct.param, %struct.param* %199, i32 0, i32 0
  %flags380 = getelementptr inbounds %struct.hashnode, %struct.hashnode* %node379, i32 0, i32 2
  %200 = load i32, i32* %flags380, align 8
  %201 = load i32, i32* %on.addr, align 4
  %and381 = and i32 %201, -1025
  %or382 = or i32 %200, %and381
  %202 = load i32, i32* %off.addr, align 4
  %neg383 = xor i32 %202, -1
  %and384 = and i32 %or382, %neg383
  %203 = load %struct.param*, %struct.param** %pm.addr, align 4
  %node385 = getelementptr inbounds %struct.param, %struct.param* %203, i32 0, i32 0
  %flags386 = getelementptr inbounds %struct.hashnode, %struct.hashnode* %node385, i32 0, i32 2
  store i32 %and384, i32* %flags386, align 8
  br label %if.end387

if.end387:                                        ; preds = %if.end378, %if.then362
  %204 = load i32, i32* %on.addr, align 4
  %and388 = and i32 %204, 224
  %tobool389 = icmp ne i32 %and388, 0
  br i1 %tobool389, label %if.then390, label %if.end395

if.then390:                                       ; preds = %if.end387
  %205 = load i8*, i8** %cname.addr, align 4
  %206 = load %struct.param*, %struct.param** %pm.addr, align 4
  %207 = load %struct.options*, %struct.options** %ops.addr, align 4
  %208 = load i32, i32* %on.addr, align 4
  %call391 = call i32 @typeset_setwidth(i8* %205, %struct.param* %206, %struct.options* %207, i32 %208, i32 0)
  %tobool392 = icmp ne i32 %call391, 0
  br i1 %tobool392, label %if.then393, label %if.end394

if.then393:                                       ; preds = %if.then390
  store %struct.param* null, %struct.param** %retval, align 4
  br label %return

if.end394:                                        ; preds = %if.then390
  br label %if.end395

if.end395:                                        ; preds = %if.end394, %if.end387
  %209 = load i32, i32* %on.addr, align 4
  %and396 = and i32 %209, 14
  %tobool397 = icmp ne i32 %and396, 0
  br i1 %tobool397, label %if.then398, label %if.end403

if.then398:                                       ; preds = %if.end395
  %210 = load i8*, i8** %cname.addr, align 4
  %211 = load %struct.param*, %struct.param** %pm.addr, align 4
  %212 = load %struct.options*, %struct.options** %ops.addr, align 4
  %213 = load i32, i32* %on.addr, align 4
  %call399 = call i32 @typeset_setbase(i8* %210, %struct.param* %211, %struct.options* %212, i32 %213, i32 0)
  %tobool400 = icmp ne i32 %call399, 0
  br i1 %tobool400, label %if.then401, label %if.end402

if.then401:                                       ; preds = %if.then398
  store %struct.param* null, %struct.param** %retval, align 4
  br label %return

if.end402:                                        ; preds = %if.then398
  br label %if.end403

if.end403:                                        ; preds = %if.end402, %if.end395
  %214 = load %struct.param*, %struct.param** %pm.addr, align 4
  %node404 = getelementptr inbounds %struct.param, %struct.param* %214, i32 0, i32 0
  %flags405 = getelementptr inbounds %struct.hashnode, %struct.hashnode* %node404, i32 0, i32 2
  %215 = load i32, i32* %flags405, align 8
  %and406 = and i32 %215, 17
  %tobool407 = icmp ne i32 %and406, 0
  br i1 %tobool407, label %if.else454, label %if.then408

if.then408:                                       ; preds = %if.end403
  %216 = load %struct.param*, %struct.param** %pm.addr, align 4
  %node409 = getelementptr inbounds %struct.param, %struct.param* %216, i32 0, i32 0
  %flags410 = getelementptr inbounds %struct.hashnode, %struct.hashnode* %node409, i32 0, i32 2
  %217 = load i32, i32* %flags410, align 8
  %and411 = and i32 %217, 4096
  %tobool412 = icmp ne i32 %and411, 0
  br i1 %tobool412, label %if.then413, label %if.else432

if.then413:                                       ; preds = %if.then408
  %218 = load %struct.param*, %struct.param** %pm.addr, align 4
  %node414 = getelementptr inbounds %struct.param, %struct.param* %218, i32 0, i32 0
  %flags415 = getelementptr inbounds %struct.hashnode, %struct.hashnode* %node414, i32 0, i32 2
  %219 = load i32, i32* %flags415, align 8
  %and416 = and i32 %219, 33554432
  %tobool417 = icmp ne i32 %and416, 0
  br i1 %tobool417, label %if.end431, label %land.lhs.true418

land.lhs.true418:                                 ; preds = %if.then413
  %220 = load %struct.param*, %struct.param** %pm.addr, align 4
  %env = getelementptr inbounds %struct.param, %struct.param* %220, i32 0, i32 5
  %221 = load i8*, i8** %env, align 4
  %tobool419 = icmp ne i8* %221, null
  br i1 %tobool419, label %if.end431, label %land.lhs.true420

land.lhs.true420:                                 ; preds = %land.lhs.true418
  %222 = load %struct.asgment*, %struct.asgment** %asg.addr, align 4
  %flags421 = getelementptr inbounds %struct.asgment, %struct.asgment* %222, i32 0, i32 2
  %223 = load i32, i32* %flags421, align 4
  %and422 = and i32 %223, 1
  %tobool423 = icmp ne i32 %and422, 0
  br i1 %tobool423, label %if.end431, label %lor.lhs.false424

lor.lhs.false424:                                 ; preds = %land.lhs.true420
  %224 = load %struct.asgment*, %struct.asgment** %asg.addr, align 4
  %value425 = getelementptr inbounds %struct.asgment, %struct.asgment* %224, i32 0, i32 3
  %scalar426 = bitcast %union.anon* %value425 to i8**
  %225 = load i8*, i8** %scalar426, align 4
  %cmp427 = icmp ne i8* %225, null
  br i1 %cmp427, label %if.end431, label %if.then429

if.then429:                                       ; preds = %lor.lhs.false424
  %226 = load %struct.param*, %struct.param** %pm.addr, align 4
  %227 = load i8*, i8** %pname.addr, align 4
  %call430 = call i8* @getsparam(i8* %227)
  call void @addenv(%struct.param* %226, i8* %call430)
  br label %if.end431

if.end431:                                        ; preds = %if.then429, %lor.lhs.false424, %land.lhs.true420, %land.lhs.true418, %if.then413
  br label %if.end442

if.else432:                                       ; preds = %if.then408
  %228 = load %struct.param*, %struct.param** %pm.addr, align 4
  %env433 = getelementptr inbounds %struct.param, %struct.param* %228, i32 0, i32 5
  %229 = load i8*, i8** %env433, align 4
  %tobool434 = icmp ne i8* %229, null
  br i1 %tobool434, label %land.lhs.true435, label %if.end441

land.lhs.true435:                                 ; preds = %if.else432
  %230 = load %struct.param*, %struct.param** %pm.addr, align 4
  %node436 = getelementptr inbounds %struct.param, %struct.param* %230, i32 0, i32 0
  %flags437 = getelementptr inbounds %struct.hashnode, %struct.hashnode* %node436, i32 0, i32 2
  %231 = load i32, i32* %flags437, align 8
  %and438 = and i32 %231, 536870912
  %tobool439 = icmp ne i32 %and438, 0
  br i1 %tobool439, label %if.end441, label %if.then440

if.then440:                                       ; preds = %land.lhs.true435
  %232 = load %struct.param*, %struct.param** %pm.addr, align 4
  call void @delenv(%struct.param* %232)
  br label %if.end441

if.end441:                                        ; preds = %if.then440, %land.lhs.true435, %if.else432
  br label %if.end442

if.end442:                                        ; preds = %if.end441, %if.end431
  %233 = load %struct.asgment*, %struct.asgment** %asg.addr, align 4
  %value443 = getelementptr inbounds %struct.asgment, %struct.asgment* %233, i32 0, i32 3
  %scalar444 = bitcast %union.anon* %value443 to i8**
  %234 = load i8*, i8** %scalar444, align 4
  %tobool445 = icmp ne i8* %234, null
  br i1 %tobool445, label %land.lhs.true446, label %if.end453

land.lhs.true446:                                 ; preds = %if.end442
  %235 = load i8*, i8** %pname.addr, align 4
  %236 = load %struct.asgment*, %struct.asgment** %asg.addr, align 4
  %value447 = getelementptr inbounds %struct.asgment, %struct.asgment* %236, i32 0, i32 3
  %scalar448 = bitcast %union.anon* %value447 to i8**
  %237 = load i8*, i8** %scalar448, align 4
  %call449 = call i8* @ztrdup(i8* %237)
  %call450 = call %struct.param* @assignsparam(i8* %235, i8* %call449, i32 0)
  store %struct.param* %call450, %struct.param** %pm.addr, align 4
  %tobool451 = icmp ne %struct.param* %call450, null
  br i1 %tobool451, label %if.end453, label %if.then452

if.then452:                                       ; preds = %land.lhs.true446
  store %struct.param* null, %struct.param** %retval, align 4
  br label %return

if.end453:                                        ; preds = %land.lhs.true446, %if.end442
  br label %if.end477

if.else454:                                       ; preds = %if.end403
  %238 = load %struct.asgment*, %struct.asgment** %asg.addr, align 4
  %flags455 = getelementptr inbounds %struct.asgment, %struct.asgment* %238, i32 0, i32 2
  %239 = load i32, i32* %flags455, align 4
  %and456 = and i32 %239, 1
  %tobool457 = icmp ne i32 %and456, 0
  br i1 %tobool457, label %if.then458, label %if.end476

if.then458:                                       ; preds = %if.else454
  %240 = load %struct.asgment*, %struct.asgment** %asg.addr, align 4
  %flags460 = getelementptr inbounds %struct.asgment, %struct.asgment* %240, i32 0, i32 2
  %241 = load i32, i32* %flags460, align 4
  %and461 = and i32 %241, 2
  %tobool462 = icmp ne i32 %and461, 0
  %cond = select i1 %tobool462, i32 16, i32 0
  store i32 %cond, i32* %flags459, align 4
  %242 = load i8*, i8** %pname.addr, align 4
  %243 = load %struct.asgment*, %struct.asgment** %asg.addr, align 4
  %value463 = getelementptr inbounds %struct.asgment, %struct.asgment* %243, i32 0, i32 3
  %array = bitcast %union.anon* %value463 to %union.linkroot**
  %244 = load %union.linkroot*, %union.linkroot** %array, align 4
  %tobool464 = icmp ne %union.linkroot* %244, null
  br i1 %tobool464, label %cond.true465, label %cond.false469

cond.true465:                                     ; preds = %if.then458
  %245 = load %struct.asgment*, %struct.asgment** %asg.addr, align 4
  %value466 = getelementptr inbounds %struct.asgment, %struct.asgment* %245, i32 0, i32 3
  %array467 = bitcast %union.anon* %value466 to %union.linkroot**
  %246 = load %union.linkroot*, %union.linkroot** %array467, align 4
  %call468 = call i8** @zlinklist2array(%union.linkroot* %246)
  br label %cond.end

cond.false469:                                    ; preds = %if.then458
  %call470 = call i8** @mkarray(i8* null)
  br label %cond.end

cond.end:                                         ; preds = %cond.false469, %cond.true465
  %cond471 = phi i8** [ %call468, %cond.true465 ], [ %call470, %cond.false469 ]
  %247 = load i32, i32* %flags459, align 4
  %call472 = call %struct.param* @assignaparam(i8* %242, i8** %cond471, i32 %247)
  store %struct.param* %call472, %struct.param** %pm.addr, align 4
  %tobool473 = icmp ne %struct.param* %call472, null
  br i1 %tobool473, label %if.end475, label %if.then474

if.then474:                                       ; preds = %cond.end
  store %struct.param* null, %struct.param** %retval, align 4
  br label %return

if.end475:                                        ; preds = %cond.end
  br label %if.end476

if.end476:                                        ; preds = %if.end475, %if.else454
  br label %if.end477

if.end477:                                        ; preds = %if.end476, %if.end453
  %248 = load i32, i32* @errflag, align 4
  %tobool478 = icmp ne i32 %248, 0
  br i1 %tobool478, label %if.then479, label %if.end480

if.then479:                                       ; preds = %if.end477
  store %struct.param* null, %struct.param** %retval, align 4
  br label %return

if.end480:                                        ; preds = %if.end477
  %249 = load i32, i32* %on.addr, align 4
  %and481 = and i32 %249, 1024
  %250 = load %struct.param*, %struct.param** %pm.addr, align 4
  %node482 = getelementptr inbounds %struct.param, %struct.param* %250, i32 0, i32 0
  %flags483 = getelementptr inbounds %struct.hashnode, %struct.hashnode* %node482, i32 0, i32 2
  %251 = load i32, i32* %flags483, align 8
  %or484 = or i32 %251, %and481
  store i32 %or484, i32* %flags483, align 8
  %252 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind485 = getelementptr inbounds %struct.options, %struct.options* %252, i32 0, i32 0
  %arrayidx486 = getelementptr inbounds [128 x i8], [128 x i8]* %ind485, i32 0, i32 112
  %253 = load i8, i8* %arrayidx486, align 4
  %conv487 = zext i8 %253 to i32
  %cmp488 = icmp ne i32 %conv487, 0
  br i1 %cmp488, label %if.then490, label %if.end493

if.then490:                                       ; preds = %if.end480
  %254 = load %struct.hashtable*, %struct.hashtable** @paramtab, align 4
  %printnode491 = getelementptr inbounds %struct.hashtable, %struct.hashtable* %254, i32 0, i32 15
  %255 = load void (%struct.hashnode*, i32)*, void (%struct.hashnode*, i32)** %printnode491, align 4
  %256 = load %struct.param*, %struct.param** %pm.addr, align 4
  %node492 = getelementptr inbounds %struct.param, %struct.param* %256, i32 0, i32 0
  call void %255(%struct.hashnode* %node492, i32 32)
  br label %if.end493

if.end493:                                        ; preds = %if.then490, %if.end480
  %257 = load %struct.param*, %struct.param** %pm.addr, align 4
  store %struct.param* %257, %struct.param** %retval, align 4
  br label %return

if.end494:                                        ; preds = %if.end227
  %258 = load %struct.asgment*, %struct.asgment** %asg.addr, align 4
  %flags495 = getelementptr inbounds %struct.asgment, %struct.asgment* %258, i32 0, i32 2
  %259 = load i32, i32* %flags495, align 4
  %and496 = and i32 %259, 1
  %tobool497 = icmp ne i32 %and496, 0
  br i1 %tobool497, label %cond.true498, label %cond.false501

cond.true498:                                     ; preds = %if.end494
  %260 = load i32, i32* %on.addr, align 4
  %and499 = and i32 %260, 17
  %tobool500 = icmp ne i32 %and499, 0
  br i1 %tobool500, label %if.end509, label %if.then508

cond.false501:                                    ; preds = %if.end494
  %261 = load %struct.asgment*, %struct.asgment** %asg.addr, align 4
  %value502 = getelementptr inbounds %struct.asgment, %struct.asgment* %261, i32 0, i32 3
  %scalar503 = bitcast %union.anon* %value502 to i8**
  %262 = load i8*, i8** %scalar503, align 4
  %tobool504 = icmp ne i8* %262, null
  br i1 %tobool504, label %land.lhs.true505, label %if.end509

land.lhs.true505:                                 ; preds = %cond.false501
  %263 = load i32, i32* %on.addr, align 4
  %and506 = and i32 %263, 17
  %tobool507 = icmp ne i32 %and506, 0
  br i1 %tobool507, label %if.then508, label %if.end509

if.then508:                                       ; preds = %land.lhs.true505, %cond.true498
  %264 = load i8*, i8** %cname.addr, align 4
  %265 = load i8*, i8** %pname.addr, align 4
  call void (i8*, i8*, ...) @zerrnam(i8* %264, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.319, i32 0, i32 0), i8* %265)
  store %struct.param* null, %struct.param** %retval, align 4
  br label %return

if.end509:                                        ; preds = %land.lhs.true505, %cond.false501, %cond.true498
  %266 = load i32, i32* %tc, align 4
  %tobool510 = icmp ne i32 %266, 0
  br i1 %tobool510, label %if.then511, label %if.end545

if.then511:                                       ; preds = %if.end509
  %267 = load i32, i32* %off.addr, align 4
  %neg512 = xor i32 %267, -1
  %and513 = and i32 %neg512, 5120
  %268 = load %struct.param*, %struct.param** %pm.addr, align 4
  %node514 = getelementptr inbounds %struct.param, %struct.param* %268, i32 0, i32 0
  %flags515 = getelementptr inbounds %struct.hashnode, %struct.hashnode* %node514, i32 0, i32 2
  %269 = load i32, i32* %flags515, align 8
  %and516 = and i32 %and513, %269
  %270 = load i32, i32* %on.addr, align 4
  %or517 = or i32 %270, %and516
  store i32 %or517, i32* %on.addr, align 4
  %271 = load %struct.param*, %struct.param** %pm.addr, align 4
  %node518 = getelementptr inbounds %struct.param, %struct.param* %271, i32 0, i32 0
  %flags519 = getelementptr inbounds %struct.hashnode, %struct.hashnode* %node518, i32 0, i32 2
  %272 = load i32, i32* %flags519, align 8
  %and520 = and i32 %272, -1025
  store i32 %and520, i32* %flags519, align 8
  %273 = load %struct.param*, %struct.param** %pm.addr, align 4
  %level521 = getelementptr inbounds %struct.param, %struct.param* %273, i32 0, i32 8
  %274 = load i32, i32* %level521, align 8
  store i32 %274, i32* %keeplocal, align 4
  %275 = load %struct.asgment*, %struct.asgment** %asg.addr, align 4
  %flags522 = getelementptr inbounds %struct.asgment, %struct.asgment* %275, i32 0, i32 2
  %276 = load i32, i32* %flags522, align 4
  %and523 = and i32 %276, 1
  %tobool524 = icmp ne i32 %and523, 0
  br i1 %tobool524, label %if.end542, label %lor.lhs.false525

lor.lhs.false525:                                 ; preds = %if.then511
  %277 = load %struct.asgment*, %struct.asgment** %asg.addr, align 4
  %value526 = getelementptr inbounds %struct.asgment, %struct.asgment* %277, i32 0, i32 3
  %scalar527 = bitcast %union.anon* %value526 to i8**
  %278 = load i8*, i8** %scalar527, align 4
  %cmp528 = icmp ne i8* %278, null
  br i1 %cmp528, label %if.end542, label %land.lhs.true530

land.lhs.true530:                                 ; preds = %lor.lhs.false525
  %279 = load %struct.param*, %struct.param** %pm.addr, align 4
  %node531 = getelementptr inbounds %struct.param, %struct.param* %279, i32 0, i32 0
  %flags532 = getelementptr inbounds %struct.hashnode, %struct.hashnode* %node531, i32 0, i32 2
  %280 = load i32, i32* %flags532, align 8
  %281 = load i32, i32* %on.addr, align 4
  %or533 = or i32 %280, %281
  %and534 = and i32 %or533, 17
  %tobool535 = icmp ne i32 %and534, 0
  br i1 %tobool535, label %if.end542, label %if.then536

if.then536:                                       ; preds = %land.lhs.true530
  %282 = load i8*, i8** %pname.addr, align 4
  %call537 = call i8* @getsparam(i8* %282)
  %call538 = call i8* @dupstring(i8* %call537)
  %283 = load %struct.asgment*, %struct.asgment** %asg.addr, align 4
  %value539 = getelementptr inbounds %struct.asgment, %struct.asgment* %283, i32 0, i32 3
  %scalar540 = bitcast %union.anon* %value539 to i8**
  store i8* %call538, i8** %scalar540, align 4
  %284 = load %struct.asgment*, %struct.asgment** %asg.addr, align 4
  %flags541 = getelementptr inbounds %struct.asgment, %struct.asgment* %284, i32 0, i32 2
  store i32 0, i32* %flags541, align 4
  br label %if.end542

if.end542:                                        ; preds = %if.then536, %land.lhs.true530, %lor.lhs.false525, %if.then511
  %285 = load i8*, i8** %pname.addr, align 4
  %call543 = call i8* @dupstring(i8* %285)
  store i8* %call543, i8** %pname.addr, align 4
  %286 = load %struct.param*, %struct.param** %pm.addr, align 4
  %call544 = call i32 @unsetparam_pm(%struct.param* %286, i32 0, i32 1)
  br label %if.end545

if.end545:                                        ; preds = %if.end542, %if.end509
  %287 = load i32, i32* %newspecial, align 4
  %cmp546 = icmp ne i32 %287, 0
  br i1 %cmp546, label %if.then548, label %if.else636

if.then548:                                       ; preds = %if.end545
  %288 = load %struct.param*, %struct.param** %pm.addr, align 4
  %node549 = getelementptr inbounds %struct.param, %struct.param* %288, i32 0, i32 0
  %flags550 = getelementptr inbounds %struct.hashnode, %struct.hashnode* %node549, i32 0, i32 2
  %289 = load i32, i32* %flags550, align 8
  %and551 = and i32 %289, 16777216
  %tobool552 = icmp ne i32 %and551, 0
  br i1 %tobool552, label %land.lhs.true553, label %if.end557

land.lhs.true553:                                 ; preds = %if.then548
  %290 = load i8, i8* getelementptr inbounds ([181 x i8], [181 x i8]* @opts, i32 0, i32 155), align 1
  %conv554 = sext i8 %290 to i32
  %tobool555 = icmp ne i32 %conv554, 0
  br i1 %tobool555, label %if.then556, label %if.end557

if.then556:                                       ; preds = %land.lhs.true553
  %291 = load i8*, i8** %cname.addr, align 4
  %292 = load i8*, i8** %pname.addr, align 4
  call void (i8*, i8*, ...) @zerrnam(i8* %291, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.78, i32 0, i32 0), i8* %292)
  %293 = load %struct.param*, %struct.param** %pm.addr, align 4
  store %struct.param* %293, %struct.param** %retval, align 4
  br label %return

if.end557:                                        ; preds = %land.lhs.true553, %if.then548
  %294 = load %struct.param*, %struct.param** %pm.addr, align 4
  %node558 = getelementptr inbounds %struct.param, %struct.param* %294, i32 0, i32 0
  %flags559 = getelementptr inbounds %struct.hashnode, %struct.hashnode* %node558, i32 0, i32 2
  %295 = load i32, i32* %flags559, align 8
  %and560 = and i32 %295, 1048576
  %tobool561 = icmp ne i32 %and560, 0
  br i1 %tobool561, label %if.then562, label %if.end563

if.then562:                                       ; preds = %if.end557
  %296 = load i8*, i8** %cname.addr, align 4
  %297 = load i8*, i8** %pname.addr, align 4
  call void (i8*, i8*, ...) @zerrnam(i8* %296, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.320, i32 0, i32 0), i8* %297)
  %298 = load %struct.param*, %struct.param** %pm.addr, align 4
  store %struct.param* %298, %struct.param** %retval, align 4
  br label %return

if.end563:                                        ; preds = %if.end557
  %call564 = call i8* @zshcalloc(i32 56)
  %299 = bitcast i8* %call564 to %struct.param*
  store %struct.param* %299, %struct.param** %tpm, align 4
  %300 = load %struct.param*, %struct.param** %pm.addr, align 4
  %node565 = getelementptr inbounds %struct.param, %struct.param* %300, i32 0, i32 0
  %nam566 = getelementptr inbounds %struct.hashnode, %struct.hashnode* %node565, i32 0, i32 1
  %301 = load i8*, i8** %nam566, align 4
  %302 = load %struct.param*, %struct.param** %tpm, align 4
  %node567 = getelementptr inbounds %struct.param, %struct.param* %302, i32 0, i32 0
  %nam568 = getelementptr inbounds %struct.hashnode, %struct.hashnode* %node567, i32 0, i32 1
  store i8* %301, i8** %nam568, align 4
  %303 = load %struct.param*, %struct.param** %pm.addr, align 4
  %ename569 = getelementptr inbounds %struct.param, %struct.param* %303, i32 0, i32 6
  %304 = load i8*, i8** %ename569, align 8
  %tobool570 = icmp ne i8* %304, null
  br i1 %tobool570, label %land.lhs.true571, label %if.else586

land.lhs.true571:                                 ; preds = %if.end563
  %305 = load %struct.hashtable*, %struct.hashtable** @paramtab, align 4
  %getnode572 = getelementptr inbounds %struct.hashtable, %struct.hashtable* %305, i32 0, i32 9
  %306 = load %struct.hashnode* (%struct.hashtable*, i8*)*, %struct.hashnode* (%struct.hashtable*, i8*)** %getnode572, align 4
  %307 = load %struct.hashtable*, %struct.hashtable** @paramtab, align 4
  %308 = load %struct.param*, %struct.param** %pm.addr, align 4
  %ename573 = getelementptr inbounds %struct.param, %struct.param* %308, i32 0, i32 6
  %309 = load i8*, i8** %ename573, align 8
  %call574 = call %struct.hashnode* %306(%struct.hashtable* %307, i8* %309)
  %310 = bitcast %struct.hashnode* %call574 to %struct.param*
  store %struct.param* %310, %struct.param** %pm2, align 4
  %tobool575 = icmp ne %struct.param* %310, null
  br i1 %tobool575, label %land.lhs.true576, label %if.else586

land.lhs.true576:                                 ; preds = %land.lhs.true571
  %311 = load %struct.param*, %struct.param** %pm2, align 4
  %level577 = getelementptr inbounds %struct.param, %struct.param* %311, i32 0, i32 8
  %312 = load i32, i32* %level577, align 8
  %313 = load i32, i32* @locallevel, align 4
  %cmp578 = icmp eq i32 %312, %313
  br i1 %cmp578, label %if.then580, label %if.else586

if.then580:                                       ; preds = %land.lhs.true576
  %314 = load %struct.param*, %struct.param** %pm.addr, align 4
  %node581 = getelementptr inbounds %struct.param, %struct.param* %314, i32 0, i32 0
  %flags582 = getelementptr inbounds %struct.hashnode, %struct.hashnode* %node581, i32 0, i32 2
  %315 = load i32, i32* %flags582, align 8
  %or583 = or i32 %315, 268435456
  %316 = load %struct.param*, %struct.param** %tpm, align 4
  %node584 = getelementptr inbounds %struct.param, %struct.param* %316, i32 0, i32 0
  %flags585 = getelementptr inbounds %struct.hashnode, %struct.hashnode* %node584, i32 0, i32 2
  store i32 %or583, i32* %flags585, align 8
  br label %if.end587

if.else586:                                       ; preds = %land.lhs.true576, %land.lhs.true571, %if.end563
  %317 = load %struct.param*, %struct.param** %tpm, align 4
  %318 = load %struct.param*, %struct.param** %pm.addr, align 4
  call void @copyparam(%struct.param* %317, %struct.param* %318, i32 1)
  br label %if.end587

if.end587:                                        ; preds = %if.else586, %if.then580
  %319 = load %struct.param*, %struct.param** %pm.addr, align 4
  %old = getelementptr inbounds %struct.param, %struct.param* %319, i32 0, i32 7
  %320 = load %struct.param*, %struct.param** %old, align 4
  %321 = load %struct.param*, %struct.param** %tpm, align 4
  %old588 = getelementptr inbounds %struct.param, %struct.param* %321, i32 0, i32 7
  store %struct.param* %320, %struct.param** %old588, align 4
  %322 = load %struct.param*, %struct.param** %pm.addr, align 4
  %level589 = getelementptr inbounds %struct.param, %struct.param* %322, i32 0, i32 8
  %323 = load i32, i32* %level589, align 8
  %324 = load %struct.param*, %struct.param** %tpm, align 4
  %level590 = getelementptr inbounds %struct.param, %struct.param* %324, i32 0, i32 8
  store i32 %323, i32* %level590, align 8
  %325 = load %struct.param*, %struct.param** %pm.addr, align 4
  %base = getelementptr inbounds %struct.param, %struct.param* %325, i32 0, i32 3
  %326 = load i32, i32* %base, align 4
  %327 = load %struct.param*, %struct.param** %tpm, align 4
  %base591 = getelementptr inbounds %struct.param, %struct.param* %327, i32 0, i32 3
  store i32 %326, i32* %base591, align 4
  %328 = load %struct.param*, %struct.param** %pm.addr, align 4
  %width = getelementptr inbounds %struct.param, %struct.param* %328, i32 0, i32 4
  %329 = load i32, i32* %width, align 8
  %330 = load %struct.param*, %struct.param** %tpm, align 4
  %width592 = getelementptr inbounds %struct.param, %struct.param* %330, i32 0, i32 4
  store i32 %329, i32* %width592, align 8
  %331 = load %struct.param*, %struct.param** %pm.addr, align 4
  %env593 = getelementptr inbounds %struct.param, %struct.param* %331, i32 0, i32 5
  %332 = load i8*, i8** %env593, align 4
  %tobool594 = icmp ne i8* %332, null
  br i1 %tobool594, label %if.then595, label %if.end596

if.then595:                                       ; preds = %if.end587
  %333 = load %struct.param*, %struct.param** %pm.addr, align 4
  call void @delenv(%struct.param* %333)
  br label %if.end596

if.end596:                                        ; preds = %if.then595, %if.end587
  %334 = load %struct.param*, %struct.param** %tpm, align 4
  %env597 = getelementptr inbounds %struct.param, %struct.param* %334, i32 0, i32 5
  store i8* null, i8** %env597, align 4
  %335 = load %struct.param*, %struct.param** %tpm, align 4
  %336 = load %struct.param*, %struct.param** %pm.addr, align 4
  %old598 = getelementptr inbounds %struct.param, %struct.param* %336, i32 0, i32 7
  store %struct.param* %335, %struct.param** %old598, align 4
  %337 = load %struct.param*, %struct.param** %pm.addr, align 4
  %node599 = getelementptr inbounds %struct.param, %struct.param* %337, i32 0, i32 0
  %flags600 = getelementptr inbounds %struct.hashnode, %struct.hashnode* %node599, i32 0, i32 2
  %338 = load i32, i32* %flags600, align 8
  %and601 = and i32 %338, 31
  %339 = load i32, i32* %on.addr, align 4
  %or602 = or i32 %and601, %339
  %or603 = or i32 %or602, 4194304
  %340 = load i32, i32* %off.addr, align 4
  %neg604 = xor i32 %340, -1
  %and605 = and i32 %or603, %neg604
  %341 = load %struct.param*, %struct.param** %pm.addr, align 4
  %node606 = getelementptr inbounds %struct.param, %struct.param* %341, i32 0, i32 0
  %flags607 = getelementptr inbounds %struct.hashnode, %struct.hashnode* %node606, i32 0, i32 2
  store i32 %and605, i32* %flags607, align 8
  %342 = load %struct.param*, %struct.param** %tpm, align 4
  %node608 = getelementptr inbounds %struct.param, %struct.param* %342, i32 0, i32 0
  %flags609 = getelementptr inbounds %struct.hashnode, %struct.hashnode* %node608, i32 0, i32 2
  %343 = load i32, i32* %flags609, align 8
  %and610 = and i32 %343, 1024
  %344 = load %struct.param*, %struct.param** %pm.addr, align 4
  %node611 = getelementptr inbounds %struct.param, %struct.param* %344, i32 0, i32 0
  %flags612 = getelementptr inbounds %struct.hashnode, %struct.hashnode* %node611, i32 0, i32 2
  %345 = load i32, i32* %flags612, align 8
  %or613 = or i32 %345, %and610
  store i32 %or613, i32* %flags612, align 8
  %346 = load i32, i32* %newspecial, align 4
  %cmp614 = icmp eq i32 %346, 2
  br i1 %cmp614, label %if.then616, label %if.end619

if.then616:                                       ; preds = %if.end596
  %call617 = call double @getrawseconds()
  %347 = load %struct.param*, %struct.param** %tpm, align 4
  %u = getelementptr inbounds %struct.param, %struct.param* %347, i32 0, i32 1
  %dval = bitcast %union.anon.0* %u to double*
  store double %call617, double* %dval, align 8
  %348 = load %struct.param*, %struct.param** %pm.addr, align 4
  %349 = load i32, i32* %on.addr, align 4
  %350 = load i32, i32* %off.addr, align 4
  %call618 = call i32 @setsecondstype(%struct.param* %348, i32 %349, i32 %350)
  br label %if.end619

if.end619:                                        ; preds = %if.then616, %if.end596
  %351 = load i32, i32* %on.addr, align 4
  %and620 = and i32 %351, 224
  %tobool621 = icmp ne i32 %and620, 0
  br i1 %tobool621, label %if.then622, label %if.end627

if.then622:                                       ; preds = %if.end619
  %352 = load i8*, i8** %cname.addr, align 4
  %353 = load %struct.param*, %struct.param** %pm.addr, align 4
  %354 = load %struct.options*, %struct.options** %ops.addr, align 4
  %355 = load i32, i32* %on.addr, align 4
  %call623 = call i32 @typeset_setwidth(i8* %352, %struct.param* %353, %struct.options* %354, i32 %355, i32 1)
  %tobool624 = icmp ne i32 %call623, 0
  br i1 %tobool624, label %if.then625, label %if.end626

if.then625:                                       ; preds = %if.then622
  store %struct.param* null, %struct.param** %retval, align 4
  br label %return

if.end626:                                        ; preds = %if.then622
  br label %if.end627

if.end627:                                        ; preds = %if.end626, %if.end619
  %356 = load i32, i32* %on.addr, align 4
  %and628 = and i32 %356, 14
  %tobool629 = icmp ne i32 %and628, 0
  br i1 %tobool629, label %if.then630, label %if.end635

if.then630:                                       ; preds = %if.end627
  %357 = load i8*, i8** %cname.addr, align 4
  %358 = load %struct.param*, %struct.param** %pm.addr, align 4
  %359 = load %struct.options*, %struct.options** %ops.addr, align 4
  %360 = load i32, i32* %on.addr, align 4
  %call631 = call i32 @typeset_setbase(i8* %357, %struct.param* %358, %struct.options* %359, i32 %360, i32 1)
  %tobool632 = icmp ne i32 %call631, 0
  br i1 %tobool632, label %if.then633, label %if.end634

if.then633:                                       ; preds = %if.then630
  store %struct.param* null, %struct.param** %retval, align 4
  br label %return

if.end634:                                        ; preds = %if.then630
  br label %if.end635

if.end635:                                        ; preds = %if.end634, %if.end627
  br label %if.end778

if.else636:                                       ; preds = %if.end545
  %361 = load i8*, i8** %pname.addr, align 4
  %call637 = call i8* @strchr(i8* %361, i32 91)
  store i8* %call637, i8** %subscript, align 4
  %tobool638 = icmp ne i8* %call637, null
  br i1 %tobool638, label %if.then639, label %if.else726

if.then639:                                       ; preds = %if.else636
  %362 = load i32, i32* %on.addr, align 4
  %and640 = and i32 %362, 1024
  %tobool641 = icmp ne i32 %and640, 0
  br i1 %tobool641, label %if.then642, label %if.else643

if.then642:                                       ; preds = %if.then639
  %363 = load i8*, i8** %cname.addr, align 4
  %364 = load i8*, i8** %pname.addr, align 4
  call void (i8*, i8*, ...) @zerrnam(i8* %363, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.321, i32 0, i32 0), i8* %364)
  store %struct.param* null, %struct.param** %retval, align 4
  br label %return

if.else643:                                       ; preds = %if.then639
  %365 = load i32, i32* %on.addr, align 4
  %and644 = and i32 %365, 2097152
  %tobool645 = icmp ne i32 %and644, 0
  br i1 %tobool645, label %land.lhs.true646, label %if.end665

land.lhs.true646:                                 ; preds = %if.else643
  %366 = load i32, i32* @locallevel, align 4
  %tobool647 = icmp ne i32 %366, 0
  br i1 %tobool647, label %if.then648, label %if.end665

if.then648:                                       ; preds = %land.lhs.true646
  %367 = load i8*, i8** %subscript, align 4
  store i8 0, i8* %367, align 1
  %368 = load %struct.hashtable*, %struct.hashtable** @paramtab, align 4
  %369 = load %struct.hashtable*, %struct.hashtable** @realparamtab, align 4
  %cmp649 = icmp eq %struct.hashtable* %368, %369
  br i1 %cmp649, label %cond.true651, label %cond.false653

cond.true651:                                     ; preds = %if.then648
  %370 = load %struct.hashtable*, %struct.hashtable** @paramtab, align 4
  %getnode2 = getelementptr inbounds %struct.hashtable, %struct.hashtable* %370, i32 0, i32 10
  %371 = load %struct.hashnode* (%struct.hashtable*, i8*)*, %struct.hashnode* (%struct.hashtable*, i8*)** %getnode2, align 4
  %372 = load %struct.hashtable*, %struct.hashtable** @paramtab, align 4
  %373 = load i8*, i8** %pname.addr, align 4
  %call652 = call %struct.hashnode* %371(%struct.hashtable* %372, i8* %373)
  br label %cond.end656

cond.false653:                                    ; preds = %if.then648
  %374 = load %struct.hashtable*, %struct.hashtable** @paramtab, align 4
  %getnode654 = getelementptr inbounds %struct.hashtable, %struct.hashtable* %374, i32 0, i32 9
  %375 = load %struct.hashnode* (%struct.hashtable*, i8*)*, %struct.hashnode* (%struct.hashtable*, i8*)** %getnode654, align 4
  %376 = load %struct.hashtable*, %struct.hashtable** @paramtab, align 4
  %377 = load i8*, i8** %pname.addr, align 4
  %call655 = call %struct.hashnode* %375(%struct.hashtable* %376, i8* %377)
  br label %cond.end656

cond.end656:                                      ; preds = %cond.false653, %cond.true651
  %cond657 = phi %struct.hashnode* [ %call652, %cond.true651 ], [ %call655, %cond.false653 ]
  %378 = bitcast %struct.hashnode* %cond657 to %struct.param*
  store %struct.param* %378, %struct.param** %pm.addr, align 4
  %379 = load i8*, i8** %subscript, align 4
  store i8 91, i8* %379, align 1
  %380 = load %struct.param*, %struct.param** %pm.addr, align 4
  %tobool658 = icmp ne %struct.param* %380, null
  br i1 %tobool658, label %lor.lhs.false659, label %if.then663

lor.lhs.false659:                                 ; preds = %cond.end656
  %381 = load %struct.param*, %struct.param** %pm.addr, align 4
  %level660 = getelementptr inbounds %struct.param, %struct.param* %381, i32 0, i32 8
  %382 = load i32, i32* %level660, align 8
  %383 = load i32, i32* @locallevel, align 4
  %cmp661 = icmp ne i32 %382, %383
  br i1 %cmp661, label %if.then663, label %if.end664

if.then663:                                       ; preds = %lor.lhs.false659, %cond.end656
  %384 = load i8*, i8** %cname.addr, align 4
  %385 = load i8*, i8** %pname.addr, align 4
  call void (i8*, i8*, ...) @zerrnam(i8* %384, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.322, i32 0, i32 0), i8* %385)
  store %struct.param* null, %struct.param** %retval, align 4
  br label %return

if.end664:                                        ; preds = %lor.lhs.false659
  br label %if.end665

if.end665:                                        ; preds = %if.end664, %land.lhs.true646, %if.else643
  br label %if.end666

if.end666:                                        ; preds = %if.end665
  %386 = load i32, i32* %on.addr, align 4
  %and667 = and i32 %386, 31
  %cmp668 = icmp eq i32 %and667, 0
  br i1 %cmp668, label %land.lhs.true670, label %if.else692

land.lhs.true670:                                 ; preds = %if.end666
  %387 = load %struct.asgment*, %struct.asgment** %asg.addr, align 4
  %flags671 = getelementptr inbounds %struct.asgment, %struct.asgment* %387, i32 0, i32 2
  %388 = load i32, i32* %flags671, align 4
  %and672 = and i32 %388, 1
  %tobool673 = icmp ne i32 %and672, 0
  br i1 %tobool673, label %if.else692, label %if.then674

if.then674:                                       ; preds = %land.lhs.true670
  %389 = load i8*, i8** %pname.addr, align 4
  %390 = load %struct.asgment*, %struct.asgment** %asg.addr, align 4
  %value675 = getelementptr inbounds %struct.asgment, %struct.asgment* %390, i32 0, i32 3
  %scalar676 = bitcast %union.anon* %value675 to i8**
  %391 = load i8*, i8** %scalar676, align 4
  %tobool677 = icmp ne i8* %391, null
  br i1 %tobool677, label %cond.true678, label %cond.false681

cond.true678:                                     ; preds = %if.then674
  %392 = load %struct.asgment*, %struct.asgment** %asg.addr, align 4
  %value679 = getelementptr inbounds %struct.asgment, %struct.asgment* %392, i32 0, i32 3
  %scalar680 = bitcast %union.anon* %value679 to i8**
  %393 = load i8*, i8** %scalar680, align 4
  br label %cond.end682

cond.false681:                                    ; preds = %if.then674
  br label %cond.end682

cond.end682:                                      ; preds = %cond.false681, %cond.true678
  %cond683 = phi i8* [ %393, %cond.true678 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.34, i32 0, i32 0), %cond.false681 ]
  %call684 = call i8* @ztrdup(i8* %cond683)
  %call685 = call %struct.param* @assignsparam(i8* %389, i8* %call684, i32 0)
  store %struct.param* %call685, %struct.param** %pm.addr, align 4
  %tobool686 = icmp ne %struct.param* %call685, null
  br i1 %tobool686, label %if.end688, label %if.then687

if.then687:                                       ; preds = %cond.end682
  store %struct.param* null, %struct.param** %retval, align 4
  br label %return

if.end688:                                        ; preds = %cond.end682
  store i32 1, i32* %dont_set, align 4
  %394 = load %struct.asgment*, %struct.asgment** %asg.addr, align 4
  %flags689 = getelementptr inbounds %struct.asgment, %struct.asgment* %394, i32 0, i32 2
  store i32 0, i32* %flags689, align 4
  store i32 0, i32* %keeplocal, align 4
  %395 = load %struct.param*, %struct.param** %pm.addr, align 4
  %node690 = getelementptr inbounds %struct.param, %struct.param* %395, i32 0, i32 0
  %flags691 = getelementptr inbounds %struct.hashnode, %struct.hashnode* %node690, i32 0, i32 2
  %396 = load i32, i32* %flags691, align 8
  store i32 %396, i32* %on.addr, align 4
  br label %if.end725

if.else692:                                       ; preds = %land.lhs.true670, %if.end666
  %397 = load i32, i32* %on.addr, align 4
  %and693 = and i32 %397, 31
  %cmp694 = icmp eq i32 %and693, 1
  br i1 %cmp694, label %land.lhs.true696, label %if.else723

land.lhs.true696:                                 ; preds = %if.else692
  %398 = load %struct.asgment*, %struct.asgment** %asg.addr, align 4
  %flags697 = getelementptr inbounds %struct.asgment, %struct.asgment* %398, i32 0, i32 2
  %399 = load i32, i32* %flags697, align 4
  %and698 = and i32 %399, 1
  %tobool699 = icmp ne i32 %and698, 0
  br i1 %tobool699, label %if.then700, label %if.else723

if.then700:                                       ; preds = %land.lhs.true696
  %400 = load %struct.asgment*, %struct.asgment** %asg.addr, align 4
  %flags702 = getelementptr inbounds %struct.asgment, %struct.asgment* %400, i32 0, i32 2
  %401 = load i32, i32* %flags702, align 4
  %and703 = and i32 %401, 2
  %tobool704 = icmp ne i32 %and703, 0
  %cond705 = select i1 %tobool704, i32 16, i32 0
  store i32 %cond705, i32* %flags701, align 4
  %402 = load i8*, i8** %pname.addr, align 4
  %403 = load %struct.asgment*, %struct.asgment** %asg.addr, align 4
  %value706 = getelementptr inbounds %struct.asgment, %struct.asgment* %403, i32 0, i32 3
  %array707 = bitcast %union.anon* %value706 to %union.linkroot**
  %404 = load %union.linkroot*, %union.linkroot** %array707, align 4
  %tobool708 = icmp ne %union.linkroot* %404, null
  br i1 %tobool708, label %cond.true709, label %cond.false713

cond.true709:                                     ; preds = %if.then700
  %405 = load %struct.asgment*, %struct.asgment** %asg.addr, align 4
  %value710 = getelementptr inbounds %struct.asgment, %struct.asgment* %405, i32 0, i32 3
  %array711 = bitcast %union.anon* %value710 to %union.linkroot**
  %406 = load %union.linkroot*, %union.linkroot** %array711, align 4
  %call712 = call i8** @zlinklist2array(%union.linkroot* %406)
  br label %cond.end715

cond.false713:                                    ; preds = %if.then700
  %call714 = call i8** @mkarray(i8* null)
  br label %cond.end715

cond.end715:                                      ; preds = %cond.false713, %cond.true709
  %cond716 = phi i8** [ %call712, %cond.true709 ], [ %call714, %cond.false713 ]
  %407 = load i32, i32* %flags701, align 4
  %call717 = call %struct.param* @assignaparam(i8* %402, i8** %cond716, i32 %407)
  store %struct.param* %call717, %struct.param** %pm.addr, align 4
  %tobool718 = icmp ne %struct.param* %call717, null
  br i1 %tobool718, label %if.end720, label %if.then719

if.then719:                                       ; preds = %cond.end715
  store %struct.param* null, %struct.param** %retval, align 4
  br label %return

if.end720:                                        ; preds = %cond.end715
  store i32 1, i32* %dont_set, align 4
  store i32 0, i32* %keeplocal, align 4
  %408 = load %struct.param*, %struct.param** %pm.addr, align 4
  %node721 = getelementptr inbounds %struct.param, %struct.param* %408, i32 0, i32 0
  %flags722 = getelementptr inbounds %struct.hashnode, %struct.hashnode* %node721, i32 0, i32 2
  %409 = load i32, i32* %flags722, align 8
  store i32 %409, i32* %on.addr, align 4
  br label %if.end724

if.else723:                                       ; preds = %land.lhs.true696, %if.else692
  %410 = load i8*, i8** %cname.addr, align 4
  %411 = load i8*, i8** %pname.addr, align 4
  call void (i8*, i8*, ...) @zerrnam(i8* %410, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.323, i32 0, i32 0), i8* %411)
  store %struct.param* null, %struct.param** %retval, align 4
  br label %return

if.end724:                                        ; preds = %if.end720
  br label %if.end725

if.end725:                                        ; preds = %if.end724, %if.end688
  br label %if.end777

if.else726:                                       ; preds = %if.else636
  %412 = load i8*, i8** %pname.addr, align 4
  %call727 = call i32 @isident(i8* %412)
  %tobool728 = icmp ne i32 %call727, 0
  br i1 %tobool728, label %land.lhs.true733, label %lor.lhs.false729

lor.lhs.false729:                                 ; preds = %if.else726
  %413 = load %struct.hashtable*, %struct.hashtable** @paramtab, align 4
  %getnode730 = getelementptr inbounds %struct.hashtable, %struct.hashtable* %413, i32 0, i32 9
  %414 = load %struct.hashnode* (%struct.hashtable*, i8*)*, %struct.hashnode* (%struct.hashtable*, i8*)** %getnode730, align 4
  %415 = load %struct.hashtable*, %struct.hashtable** @paramtab, align 4
  %416 = load i8*, i8** %pname.addr, align 4
  %call731 = call %struct.hashnode* %414(%struct.hashtable* %415, i8* %416)
  %tobool732 = icmp ne %struct.hashnode* %call731, null
  br i1 %tobool732, label %land.lhs.true733, label %if.else767

land.lhs.true733:                                 ; preds = %lor.lhs.false729, %if.else726
  %417 = load i8*, i8** %pname.addr, align 4
  %418 = load i8, i8* %417, align 1
  %idxprom = zext i8 %418 to i32
  %arrayidx734 = getelementptr inbounds [256 x i16], [256 x i16]* @typtab, i32 0, i32 %idxprom
  %419 = load i16, i16* %arrayidx734, align 2
  %conv735 = sext i16 %419 to i32
  %and736 = and i32 %conv735, 1
  %tobool737 = icmp ne i32 %and736, 0
  br i1 %tobool737, label %lor.lhs.false738, label %if.then741

lor.lhs.false738:                                 ; preds = %land.lhs.true733
  %420 = load i8*, i8** %pname.addr, align 4
  %call739 = call i32 @strcmp(i8* %420, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.324, i32 0, i32 0))
  %tobool740 = icmp ne i32 %call739, 0
  br i1 %tobool740, label %if.else767, label %if.then741

if.then741:                                       ; preds = %lor.lhs.false738, %land.lhs.true733
  %421 = load i8*, i8** %pname.addr, align 4
  %422 = load i32, i32* %on.addr, align 4
  %and742 = and i32 %422, -1025
  %call743 = call %struct.param* @createparam(i8* %421, i32 %and742)
  store %struct.param* %call743, %struct.param** %pm.addr, align 4
  %423 = load %struct.param*, %struct.param** %pm.addr, align 4
  %tobool744 = icmp ne %struct.param* %423, null
  br i1 %tobool744, label %if.end750, label %if.then745

if.then745:                                       ; preds = %if.then741
  %424 = load i32, i32* %on.addr, align 4
  %and746 = and i32 %424, 238
  %tobool747 = icmp ne i32 %and746, 0
  br i1 %tobool747, label %if.then748, label %if.end749

if.then748:                                       ; preds = %if.then745
  %425 = load i8*, i8** %cname.addr, align 4
  %426 = load i8*, i8** %pname.addr, align 4
  call void (i8*, i8*, ...) @zerrnam(i8* %425, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.325, i32 0, i32 0), i8* %426)
  br label %if.end749

if.end749:                                        ; preds = %if.then748, %if.then745
  store %struct.param* null, %struct.param** %retval, align 4
  br label %return

if.end750:                                        ; preds = %if.then741
  %427 = load i32, i32* %on.addr, align 4
  %and751 = and i32 %427, 224
  %tobool752 = icmp ne i32 %and751, 0
  br i1 %tobool752, label %if.then753, label %if.end758

if.then753:                                       ; preds = %if.end750
  %428 = load i8*, i8** %cname.addr, align 4
  %429 = load %struct.param*, %struct.param** %pm.addr, align 4
  %430 = load %struct.options*, %struct.options** %ops.addr, align 4
  %431 = load i32, i32* %on.addr, align 4
  %call754 = call i32 @typeset_setwidth(i8* %428, %struct.param* %429, %struct.options* %430, i32 %431, i32 0)
  %tobool755 = icmp ne i32 %call754, 0
  br i1 %tobool755, label %if.then756, label %if.end757

if.then756:                                       ; preds = %if.then753
  store %struct.param* null, %struct.param** %retval, align 4
  br label %return

if.end757:                                        ; preds = %if.then753
  br label %if.end758

if.end758:                                        ; preds = %if.end757, %if.end750
  %432 = load i32, i32* %on.addr, align 4
  %and759 = and i32 %432, 14
  %tobool760 = icmp ne i32 %and759, 0
  br i1 %tobool760, label %if.then761, label %if.end766

if.then761:                                       ; preds = %if.end758
  %433 = load i8*, i8** %cname.addr, align 4
  %434 = load %struct.param*, %struct.param** %pm.addr, align 4
  %435 = load %struct.options*, %struct.options** %ops.addr, align 4
  %436 = load i32, i32* %on.addr, align 4
  %call762 = call i32 @typeset_setbase(i8* %433, %struct.param* %434, %struct.options* %435, i32 %436, i32 0)
  %tobool763 = icmp ne i32 %call762, 0
  br i1 %tobool763, label %if.then764, label %if.end765

if.then764:                                       ; preds = %if.then761
  store %struct.param* null, %struct.param** %retval, align 4
  br label %return

if.end765:                                        ; preds = %if.then761
  br label %if.end766

if.end766:                                        ; preds = %if.end765, %if.end758
  br label %if.end776

if.else767:                                       ; preds = %lor.lhs.false738, %lor.lhs.false729
  %437 = load i8*, i8** %pname.addr, align 4
  %438 = load i8, i8* %437, align 1
  %idxprom768 = zext i8 %438 to i32
  %arrayidx769 = getelementptr inbounds [256 x i16], [256 x i16]* @typtab, i32 0, i32 %idxprom768
  %439 = load i16, i16* %arrayidx769, align 2
  %conv770 = sext i16 %439 to i32
  %and771 = and i32 %conv770, 1
  %tobool772 = icmp ne i32 %and771, 0
  br i1 %tobool772, label %if.then773, label %if.else774

if.then773:                                       ; preds = %if.else767
  %440 = load i8*, i8** %cname.addr, align 4
  %441 = load i8*, i8** %pname.addr, align 4
  call void (i8*, i8*, ...) @zerrnam(i8* %440, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.326, i32 0, i32 0), i8* %441)
  br label %if.end775

if.else774:                                       ; preds = %if.else767
  %442 = load i8*, i8** %cname.addr, align 4
  %443 = load i8*, i8** %pname.addr, align 4
  call void (i8*, i8*, ...) @zerrnam(i8* %442, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.327, i32 0, i32 0), i8* %443)
  br label %if.end775

if.end775:                                        ; preds = %if.else774, %if.then773
  store %struct.param* null, %struct.param** %retval, align 4
  br label %return

if.end776:                                        ; preds = %if.end766
  br label %if.end777

if.end777:                                        ; preds = %if.end776, %if.end725
  br label %if.end778

if.end778:                                        ; preds = %if.end777, %if.end635
  %444 = load %struct.param*, %struct.param** %altpm.addr, align 4
  %tobool779 = icmp ne %struct.param* %444, null
  br i1 %tobool779, label %land.lhs.true780, label %if.end795

land.lhs.true780:                                 ; preds = %if.end778
  %445 = load %struct.param*, %struct.param** %pm.addr, align 4
  %node781 = getelementptr inbounds %struct.param, %struct.param* %445, i32 0, i32 0
  %flags782 = getelementptr inbounds %struct.hashnode, %struct.hashnode* %node781, i32 0, i32 2
  %446 = load i32, i32* %flags782, align 8
  %and783 = and i32 %446, 31
  %cmp784 = icmp eq i32 %and783, 0
  br i1 %cmp784, label %if.then786, label %if.end795

if.then786:                                       ; preds = %land.lhs.true780
  %call787 = call i8* @zalloc(i32 8)
  %447 = bitcast i8* %call787 to %struct.tieddata*
  store %struct.tieddata* %447, %struct.tieddata** %tdp, align 4
  %448 = load %struct.tieddata*, %struct.tieddata** %tdp, align 4
  %tobool788 = icmp ne %struct.tieddata* %448, null
  br i1 %tobool788, label %if.end790, label %if.then789

if.then789:                                       ; preds = %if.then786
  store %struct.param* null, %struct.param** %retval, align 4
  br label %return

if.end790:                                        ; preds = %if.then786
  %449 = load i32, i32* %joinchar.addr, align 4
  %450 = load %struct.tieddata*, %struct.tieddata** %tdp, align 4
  %joinchar791 = getelementptr inbounds %struct.tieddata, %struct.tieddata* %450, i32 0, i32 1
  store i32 %449, i32* %joinchar791, align 4
  %451 = load %struct.param*, %struct.param** %altpm.addr, align 4
  %u792 = getelementptr inbounds %struct.param, %struct.param* %451, i32 0, i32 1
  %arr = bitcast %union.anon.0* %u792 to i8***
  %452 = load %struct.tieddata*, %struct.tieddata** %tdp, align 4
  %arrptr = getelementptr inbounds %struct.tieddata, %struct.tieddata* %452, i32 0, i32 0
  store i8*** %arr, i8**** %arrptr, align 4
  %453 = load %struct.param*, %struct.param** %pm.addr, align 4
  %gsu793 = getelementptr inbounds %struct.param, %struct.param* %453, i32 0, i32 2
  %s = bitcast %union.anon.1* %gsu793 to %struct.gsu_scalar**
  store %struct.gsu_scalar* @tiedarr_gsu, %struct.gsu_scalar** %s, align 8
  %454 = load %struct.tieddata*, %struct.tieddata** %tdp, align 4
  %455 = bitcast %struct.tieddata* %454 to i8*
  %456 = load %struct.param*, %struct.param** %pm.addr, align 4
  %u794 = getelementptr inbounds %struct.param, %struct.param* %456, i32 0, i32 1
  %data = bitcast %union.anon.0* %u794 to i8**
  store i8* %455, i8** %data, align 8
  br label %if.end795

if.end795:                                        ; preds = %if.end790, %land.lhs.true780, %if.end778
  %457 = load i32, i32* %keeplocal, align 4
  %tobool796 = icmp ne i32 %457, 0
  br i1 %tobool796, label %if.then797, label %if.else799

if.then797:                                       ; preds = %if.end795
  %458 = load i32, i32* %keeplocal, align 4
  %459 = load %struct.param*, %struct.param** %pm.addr, align 4
  %level798 = getelementptr inbounds %struct.param, %struct.param* %459, i32 0, i32 8
  store i32 %458, i32* %level798, align 8
  br label %if.end805

if.else799:                                       ; preds = %if.end795
  %460 = load i32, i32* %on.addr, align 4
  %and800 = and i32 %460, 2097152
  %tobool801 = icmp ne i32 %and800, 0
  br i1 %tobool801, label %if.then802, label %if.end804

if.then802:                                       ; preds = %if.else799
  %461 = load i32, i32* @locallevel, align 4
  %462 = load %struct.param*, %struct.param** %pm.addr, align 4
  %level803 = getelementptr inbounds %struct.param, %struct.param* %462, i32 0, i32 8
  store i32 %461, i32* %level803, align 8
  br label %if.end804

if.end804:                                        ; preds = %if.then802, %if.else799
  br label %if.end805

if.end805:                                        ; preds = %if.end804, %if.then797
  %463 = load %struct.asgment*, %struct.asgment** %asg.addr, align 4
  %flags806 = getelementptr inbounds %struct.asgment, %struct.asgment* %463, i32 0, i32 2
  %464 = load i32, i32* %flags806, align 4
  %and807 = and i32 %464, 1
  %tobool808 = icmp ne i32 %and807, 0
  br i1 %tobool808, label %land.lhs.true814, label %lor.lhs.false809

lor.lhs.false809:                                 ; preds = %if.end805
  %465 = load %struct.asgment*, %struct.asgment** %asg.addr, align 4
  %value810 = getelementptr inbounds %struct.asgment, %struct.asgment* %465, i32 0, i32 3
  %scalar811 = bitcast %union.anon* %value810 to i8**
  %466 = load i8*, i8** %scalar811, align 4
  %cmp812 = icmp ne i8* %466, null
  br i1 %cmp812, label %land.lhs.true814, label %if.else872

land.lhs.true814:                                 ; preds = %lor.lhs.false809, %if.end805
  %467 = load i32, i32* %dont_set, align 4
  %tobool815 = icmp ne i32 %467, 0
  br i1 %tobool815, label %if.else872, label %if.then816

if.then816:                                       ; preds = %land.lhs.true814
  %468 = load %struct.param*, %struct.param** %pm.addr, align 4
  store %struct.param* %468, %struct.param** %ipm, align 4
  %469 = load %struct.param*, %struct.param** %pm.addr, align 4
  %node817 = getelementptr inbounds %struct.param, %struct.param* %469, i32 0, i32 0
  %flags818 = getelementptr inbounds %struct.hashnode, %struct.hashnode* %node817, i32 0, i32 2
  %470 = load i32, i32* %flags818, align 8
  %and819 = and i32 %470, 17
  %tobool820 = icmp ne i32 %and819, 0
  br i1 %tobool820, label %if.then821, label %if.else858

if.then821:                                       ; preds = %if.then816
  %471 = load %struct.asgment*, %struct.asgment** %asg.addr, align 4
  %flags823 = getelementptr inbounds %struct.asgment, %struct.asgment* %471, i32 0, i32 2
  %472 = load i32, i32* %flags823, align 4
  %and824 = and i32 %472, 2
  %tobool825 = icmp ne i32 %and824, 0
  %cond826 = select i1 %tobool825, i32 16, i32 0
  store i32 %cond826, i32* %flags822, align 4
  %473 = load %struct.asgment*, %struct.asgment** %asg.addr, align 4
  %flags827 = getelementptr inbounds %struct.asgment, %struct.asgment* %473, i32 0, i32 2
  %474 = load i32, i32* %flags827, align 4
  %and828 = and i32 %474, 1
  %tobool829 = icmp ne i32 %and828, 0
  br i1 %tobool829, label %if.else842, label %if.then830

if.then830:                                       ; preds = %if.then821
  %475 = load %struct.asgment*, %struct.asgment** %asg.addr, align 4
  %value831 = getelementptr inbounds %struct.asgment, %struct.asgment* %475, i32 0, i32 3
  %scalar832 = bitcast %union.anon* %value831 to i8**
  %476 = load i8*, i8** %scalar832, align 4
  %477 = load i8, i8* %476, align 1
  %tobool833 = icmp ne i8 %477, 0
  br i1 %tobool833, label %if.then834, label %if.else839

if.then834:                                       ; preds = %if.then830
  %478 = load %struct.asgment*, %struct.asgment** %asg.addr, align 4
  %value835 = getelementptr inbounds %struct.asgment, %struct.asgment* %478, i32 0, i32 3
  %scalar836 = bitcast %union.anon* %value835 to i8**
  %479 = load i8*, i8** %scalar836, align 4
  %call837 = call i8* @ztrdup(i8* %479)
  %call838 = call i8** @mkarray(i8* %call837)
  store i8** %call838, i8*** %arrayval, align 4
  br label %if.end841

if.else839:                                       ; preds = %if.then830
  %call840 = call i8** @mkarray(i8* null)
  store i8** %call840, i8*** %arrayval, align 4
  br label %if.end841

if.end841:                                        ; preds = %if.else839, %if.then834
  br label %if.end853

if.else842:                                       ; preds = %if.then821
  %480 = load %struct.asgment*, %struct.asgment** %asg.addr, align 4
  %value843 = getelementptr inbounds %struct.asgment, %struct.asgment* %480, i32 0, i32 3
  %array844 = bitcast %union.anon* %value843 to %union.linkroot**
  %481 = load %union.linkroot*, %union.linkroot** %array844, align 4
  %tobool845 = icmp ne %union.linkroot* %481, null
  br i1 %tobool845, label %if.then846, label %if.else850

if.then846:                                       ; preds = %if.else842
  %482 = load %struct.asgment*, %struct.asgment** %asg.addr, align 4
  %value847 = getelementptr inbounds %struct.asgment, %struct.asgment* %482, i32 0, i32 3
  %array848 = bitcast %union.anon* %value847 to %union.linkroot**
  %483 = load %union.linkroot*, %union.linkroot** %array848, align 4
  %call849 = call i8** @zlinklist2array(%union.linkroot* %483)
  store i8** %call849, i8*** %arrayval, align 4
  br label %if.end852

if.else850:                                       ; preds = %if.else842
  %call851 = call i8** @mkarray(i8* null)
  store i8** %call851, i8*** %arrayval, align 4
  br label %if.end852

if.end852:                                        ; preds = %if.else850, %if.then846
  br label %if.end853

if.end853:                                        ; preds = %if.end852, %if.end841
  %484 = load i8*, i8** %pname.addr, align 4
  %485 = load i8**, i8*** %arrayval, align 4
  %486 = load i32, i32* %flags822, align 4
  %call854 = call %struct.param* @assignaparam(i8* %484, i8** %485, i32 %486)
  store %struct.param* %call854, %struct.param** %pm.addr, align 4
  %tobool855 = icmp ne %struct.param* %call854, null
  br i1 %tobool855, label %if.end857, label %if.then856

if.then856:                                       ; preds = %if.end853
  store %struct.param* null, %struct.param** %retval, align 4
  br label %return

if.end857:                                        ; preds = %if.end853
  br label %if.end866

if.else858:                                       ; preds = %if.then816
  %487 = load i8*, i8** %pname.addr, align 4
  %488 = load %struct.asgment*, %struct.asgment** %asg.addr, align 4
  %value859 = getelementptr inbounds %struct.asgment, %struct.asgment* %488, i32 0, i32 3
  %scalar860 = bitcast %union.anon* %value859 to i8**
  %489 = load i8*, i8** %scalar860, align 4
  %call861 = call i8* @ztrdup(i8* %489)
  %call862 = call %struct.param* @assignsparam(i8* %487, i8* %call861, i32 0)
  store %struct.param* %call862, %struct.param** %pm.addr, align 4
  %tobool863 = icmp ne %struct.param* %call862, null
  br i1 %tobool863, label %if.end865, label %if.then864

if.then864:                                       ; preds = %if.else858
  store %struct.param* null, %struct.param** %retval, align 4
  br label %return

if.end865:                                        ; preds = %if.else858
  br label %if.end866

if.end866:                                        ; preds = %if.end865, %if.end857
  %490 = load %struct.param*, %struct.param** %pm.addr, align 4
  %491 = load %struct.param*, %struct.param** %ipm, align 4
  %cmp867 = icmp ne %struct.param* %490, %491
  br i1 %cmp867, label %if.then869, label %if.end871

if.then869:                                       ; preds = %if.end866
  %492 = load %struct.param*, %struct.param** %ipm, align 4
  %call870 = call i32 @unsetparam_pm(%struct.param* %492, i32 0, i32 1)
  br label %if.end871

if.end871:                                        ; preds = %if.then869, %if.end866
  br label %if.end914

if.else872:                                       ; preds = %land.lhs.true814, %lor.lhs.false809
  %493 = load i32, i32* %newspecial, align 4
  %cmp873 = icmp ne i32 %493, 0
  br i1 %cmp873, label %land.lhs.true875, label %if.end913

land.lhs.true875:                                 ; preds = %if.else872
  %494 = load %struct.param*, %struct.param** %pm.addr, align 4
  %old876 = getelementptr inbounds %struct.param, %struct.param* %494, i32 0, i32 7
  %495 = load %struct.param*, %struct.param** %old876, align 4
  %node877 = getelementptr inbounds %struct.param, %struct.param* %495, i32 0, i32 0
  %flags878 = getelementptr inbounds %struct.hashnode, %struct.hashnode* %node877, i32 0, i32 2
  %496 = load i32, i32* %flags878, align 8
  %and879 = and i32 %496, 268436480
  %tobool880 = icmp ne i32 %and879, 0
  br i1 %tobool880, label %if.end913, label %if.then881

if.then881:                                       ; preds = %land.lhs.true875
  %497 = load %struct.param*, %struct.param** %pm.addr, align 4
  %node882 = getelementptr inbounds %struct.param, %struct.param* %497, i32 0, i32 0
  %flags883 = getelementptr inbounds %struct.hashnode, %struct.hashnode* %node882, i32 0, i32 2
  %498 = load i32, i32* %flags883, align 8
  %and884 = and i32 %498, 31
  switch i32 %and884, label %sw.epilog [
    i32 0, label %sw.bb
    i32 2, label %sw.bb889
    i32 4, label %sw.bb899
    i32 8, label %sw.bb899
    i32 1, label %sw.bb902
    i32 16, label %sw.bb907
  ]

sw.bb:                                            ; preds = %if.then881
  %499 = load %struct.param*, %struct.param** %pm.addr, align 4
  %gsu885 = getelementptr inbounds %struct.param, %struct.param* %499, i32 0, i32 2
  %s886 = bitcast %union.anon.1* %gsu885 to %struct.gsu_scalar**
  %500 = load %struct.gsu_scalar*, %struct.gsu_scalar** %s886, align 8
  %setfn887 = getelementptr inbounds %struct.gsu_scalar, %struct.gsu_scalar* %500, i32 0, i32 1
  %501 = load void (%struct.param*, i8*)*, void (%struct.param*, i8*)** %setfn887, align 4
  %502 = load %struct.param*, %struct.param** %pm.addr, align 4
  %call888 = call i8* @ztrdup(i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.34, i32 0, i32 0))
  call void %501(%struct.param* %502, i8* %call888)
  br label %sw.epilog

sw.bb889:                                         ; preds = %if.then881
  %503 = load %struct.param*, %struct.param** %pm.addr, align 4
  %old890 = getelementptr inbounds %struct.param, %struct.param* %503, i32 0, i32 7
  %504 = load %struct.param*, %struct.param** %old890, align 4
  %node891 = getelementptr inbounds %struct.param, %struct.param* %504, i32 0, i32 0
  %flags892 = getelementptr inbounds %struct.hashnode, %struct.hashnode* %node891, i32 0, i32 2
  %505 = load i32, i32* %flags892, align 8
  %and893 = and i32 %505, 16777216
  %tobool894 = icmp ne i32 %and893, 0
  br i1 %tobool894, label %if.end898, label %if.then895

if.then895:                                       ; preds = %sw.bb889
  %506 = load %struct.param*, %struct.param** %pm.addr, align 4
  %gsu896 = getelementptr inbounds %struct.param, %struct.param* %506, i32 0, i32 2
  %i = bitcast %union.anon.1* %gsu896 to %struct.gsu_integer**
  %507 = load %struct.gsu_integer*, %struct.gsu_integer** %i, align 8
  %setfn897 = getelementptr inbounds %struct.gsu_integer, %struct.gsu_integer* %507, i32 0, i32 1
  %508 = load void (%struct.param*, i32)*, void (%struct.param*, i32)** %setfn897, align 4
  %509 = load %struct.param*, %struct.param** %pm.addr, align 4
  call void %508(%struct.param* %509, i32 0)
  br label %if.end898

if.end898:                                        ; preds = %if.then895, %sw.bb889
  br label %sw.epilog

sw.bb899:                                         ; preds = %if.then881, %if.then881
  %510 = load %struct.param*, %struct.param** %pm.addr, align 4
  %gsu900 = getelementptr inbounds %struct.param, %struct.param* %510, i32 0, i32 2
  %f = bitcast %union.anon.1* %gsu900 to %struct.gsu_float**
  %511 = load %struct.gsu_float*, %struct.gsu_float** %f, align 8
  %setfn901 = getelementptr inbounds %struct.gsu_float, %struct.gsu_float* %511, i32 0, i32 1
  %512 = load void (%struct.param*, double)*, void (%struct.param*, double)** %setfn901, align 4
  %513 = load %struct.param*, %struct.param** %pm.addr, align 4
  call void %512(%struct.param* %513, double 0.000000e+00)
  br label %sw.epilog

sw.bb902:                                         ; preds = %if.then881
  %514 = load %struct.param*, %struct.param** %pm.addr, align 4
  %gsu903 = getelementptr inbounds %struct.param, %struct.param* %514, i32 0, i32 2
  %a904 = bitcast %union.anon.1* %gsu903 to %struct.gsu_array**
  %515 = load %struct.gsu_array*, %struct.gsu_array** %a904, align 8
  %setfn905 = getelementptr inbounds %struct.gsu_array, %struct.gsu_array* %515, i32 0, i32 1
  %516 = load void (%struct.param*, i8**)*, void (%struct.param*, i8**)** %setfn905, align 4
  %517 = load %struct.param*, %struct.param** %pm.addr, align 4
  %call906 = call i8** @mkarray(i8* null)
  call void %516(%struct.param* %517, i8** %call906)
  br label %sw.epilog

sw.bb907:                                         ; preds = %if.then881
  %518 = load %struct.param*, %struct.param** %pm.addr, align 4
  %gsu908 = getelementptr inbounds %struct.param, %struct.param* %518, i32 0, i32 2
  %h = bitcast %union.anon.1* %gsu908 to %struct.gsu_hash**
  %519 = load %struct.gsu_hash*, %struct.gsu_hash** %h, align 8
  %setfn909 = getelementptr inbounds %struct.gsu_hash, %struct.gsu_hash* %519, i32 0, i32 1
  %520 = load void (%struct.param*, %struct.hashtable*)*, void (%struct.param*, %struct.hashtable*)** %setfn909, align 4
  %521 = load %struct.param*, %struct.param** %pm.addr, align 4
  %522 = load %struct.param*, %struct.param** %pm.addr, align 4
  %node910 = getelementptr inbounds %struct.param, %struct.param* %522, i32 0, i32 0
  %nam911 = getelementptr inbounds %struct.hashnode, %struct.hashnode* %node910, i32 0, i32 1
  %523 = load i8*, i8** %nam911, align 4
  %call912 = call %struct.hashtable* @newparamtable(i32 17, i8* %523)
  call void %520(%struct.param* %521, %struct.hashtable* %call912)
  br label %sw.epilog

sw.epilog:                                        ; preds = %if.then881, %sw.bb907, %sw.bb902, %sw.bb899, %if.end898, %sw.bb
  br label %if.end913

if.end913:                                        ; preds = %sw.epilog, %land.lhs.true875, %if.else872
  br label %if.end914

if.end914:                                        ; preds = %if.end913, %if.end871
  %524 = load i32, i32* %on.addr, align 4
  %and915 = and i32 %524, 1024
  %525 = load %struct.param*, %struct.param** %pm.addr, align 4
  %node916 = getelementptr inbounds %struct.param, %struct.param* %525, i32 0, i32 0
  %flags917 = getelementptr inbounds %struct.hashnode, %struct.hashnode* %node916, i32 0, i32 2
  %526 = load i32, i32* %flags917, align 8
  %or918 = or i32 %526, %and915
  store i32 %or918, i32* %flags917, align 8
  %527 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind919 = getelementptr inbounds %struct.options, %struct.options* %527, i32 0, i32 0
  %arrayidx920 = getelementptr inbounds [128 x i8], [128 x i8]* %ind919, i32 0, i32 112
  %528 = load i8, i8* %arrayidx920, align 4
  %conv921 = zext i8 %528 to i32
  %cmp922 = icmp ne i32 %conv921, 0
  br i1 %cmp922, label %if.then924, label %if.end927

if.then924:                                       ; preds = %if.end914
  %529 = load %struct.hashtable*, %struct.hashtable** @paramtab, align 4
  %printnode925 = getelementptr inbounds %struct.hashtable, %struct.hashtable* %529, i32 0, i32 15
  %530 = load void (%struct.hashnode*, i32)*, void (%struct.hashnode*, i32)** %printnode925, align 4
  %531 = load %struct.param*, %struct.param** %pm.addr, align 4
  %node926 = getelementptr inbounds %struct.param, %struct.param* %531, i32 0, i32 0
  call void %530(%struct.hashnode* %node926, i32 32)
  br label %if.end927

if.end927:                                        ; preds = %if.then924, %if.end914
  %532 = load %struct.param*, %struct.param** %pm.addr, align 4
  store %struct.param* %532, %struct.param** %retval, align 4
  br label %return

return:                                           ; preds = %if.end927, %if.then864, %if.then856, %if.then789, %if.end775, %if.then764, %if.then756, %if.end749, %if.else723, %if.then719, %if.then687, %if.then663, %if.then642, %if.then633, %if.then625, %if.then562, %if.then556, %if.then508, %if.end493, %if.then479, %if.then474, %if.then452, %if.then401, %if.then393, %if.then295, %if.end286, %if.then247, %if.then223, %if.then178, %if.then171, %if.then165, %if.then85, %if.then79
  %533 = load %struct.param*, %struct.param** %retval, align 4
  ret %struct.param* %533
}

declare %union.linkroot* @newlinklist() #1

declare i32 @pattry(%struct.patprog*, i8*) #1

declare %struct.linknode* @insertlinknode(%union.linkroot*, %struct.linknode*, i8*) #1

; Function Attrs: noinline nounwind
define i32 @eval_autoload(%struct.shfunc* %shf, i8* %name, %struct.options* %ops, i32 %func) #0 {
entry:
  %retval = alloca i32, align 4
  %shf.addr = alloca %struct.shfunc*, align 4
  %name.addr = alloca i8*, align 4
  %ops.addr = alloca %struct.options*, align 4
  %func.addr = alloca i32, align 4
  %fargv = alloca [3 x i8*], align 4
  store %struct.shfunc* %shf, %struct.shfunc** %shf.addr, align 4
  store i8* %name, i8** %name.addr, align 4
  store %struct.options* %ops, %struct.options** %ops.addr, align 4
  store i32 %func, i32* %func.addr, align 4
  %0 = load %struct.shfunc*, %struct.shfunc** %shf.addr, align 4
  %node = getelementptr inbounds %struct.shfunc, %struct.shfunc* %0, i32 0, i32 0
  %flags = getelementptr inbounds %struct.hashnode, %struct.hashnode* %node, i32 0, i32 2
  %1 = load i32, i32* %flags, align 4
  %and = and i32 %1, 512
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i32 1, i32* %retval, align 4
  br label %return

if.end:                                           ; preds = %entry
  %2 = load %struct.shfunc*, %struct.shfunc** %shf.addr, align 4
  %funcdef = getelementptr inbounds %struct.shfunc, %struct.shfunc* %2, i32 0, i32 3
  %3 = load %struct.eprog*, %struct.eprog** %funcdef, align 4
  %tobool1 = icmp ne %struct.eprog* %3, null
  br i1 %tobool1, label %if.then2, label %if.end5

if.then2:                                         ; preds = %if.end
  %4 = load %struct.shfunc*, %struct.shfunc** %shf.addr, align 4
  %funcdef3 = getelementptr inbounds %struct.shfunc, %struct.shfunc* %4, i32 0, i32 3
  %5 = load %struct.eprog*, %struct.eprog** %funcdef3, align 4
  call void @freeeprog(%struct.eprog* %5)
  %6 = load %struct.shfunc*, %struct.shfunc** %shf.addr, align 4
  %funcdef4 = getelementptr inbounds %struct.shfunc, %struct.shfunc* %6, i32 0, i32 3
  store %struct.eprog* @dummy_eprog, %struct.eprog** %funcdef4, align 4
  br label %if.end5

if.end5:                                          ; preds = %if.then2, %if.end
  %7 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind = getelementptr inbounds %struct.options, %struct.options* %7, i32 0, i32 0
  %arrayidx = getelementptr inbounds [128 x i8], [128 x i8]* %ind, i32 0, i32 88
  %8 = load i8, i8* %arrayidx, align 4
  %conv = zext i8 %8 to i32
  %and6 = and i32 %conv, 1
  %tobool7 = icmp ne i32 %and6, 0
  br i1 %tobool7, label %if.then8, label %if.end14

if.then8:                                         ; preds = %if.end5
  %9 = load i8*, i8** %name.addr, align 4
  %arrayidx9 = getelementptr inbounds [3 x i8*], [3 x i8*]* %fargv, i32 0, i32 0
  store i8* %9, i8** %arrayidx9, align 4
  %arrayidx10 = getelementptr inbounds [3 x i8*], [3 x i8*]* %fargv, i32 0, i32 1
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.64, i32 0, i32 0), i8** %arrayidx10, align 4
  %arrayidx11 = getelementptr inbounds [3 x i8*], [3 x i8*]* %fargv, i32 0, i32 2
  store i8* null, i8** %arrayidx11, align 4
  %10 = load %struct.shfunc*, %struct.shfunc** %shf.addr, align 4
  %call = call %struct.eprog* @mkautofn(%struct.shfunc* %10)
  %11 = load %struct.shfunc*, %struct.shfunc** %shf.addr, align 4
  %funcdef12 = getelementptr inbounds %struct.shfunc, %struct.shfunc* %11, i32 0, i32 3
  store %struct.eprog* %call, %struct.eprog** %funcdef12, align 4
  %12 = load i8*, i8** %name.addr, align 4
  %arraydecay = getelementptr inbounds [3 x i8*], [3 x i8*]* %fargv, i32 0, i32 0
  %13 = load %struct.options*, %struct.options** %ops.addr, align 4
  %14 = load i32, i32* %func.addr, align 4
  %call13 = call i32 @bin_eval(i8* %12, i8** %arraydecay, %struct.options* %13, i32 %14)
  store i32 %call13, i32* %retval, align 4
  br label %return

if.end14:                                         ; preds = %if.end5
  %15 = load %struct.shfunc*, %struct.shfunc** %shf.addr, align 4
  %16 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind15 = getelementptr inbounds %struct.options, %struct.options* %16, i32 0, i32 0
  %arrayidx16 = getelementptr inbounds [128 x i8], [128 x i8]* %ind15, i32 0, i32 107
  %17 = load i8, i8* %arrayidx16, align 1
  %conv17 = zext i8 %17 to i32
  %cmp = icmp ne i32 %conv17, 0
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end14
  br label %cond.end

cond.false:                                       ; preds = %if.end14
  %18 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind19 = getelementptr inbounds %struct.options, %struct.options* %18, i32 0, i32 0
  %arrayidx20 = getelementptr inbounds [128 x i8], [128 x i8]* %ind19, i32 0, i32 122
  %19 = load i8, i8* %arrayidx20, align 2
  %conv21 = zext i8 %19 to i32
  %cmp22 = icmp ne i32 %conv21, 0
  %cond = select i1 %cmp22, i32 0, i32 1
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond24 = phi i32 [ 2, %cond.true ], [ %cond, %cond.false ]
  %20 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind25 = getelementptr inbounds %struct.options, %struct.options* %20, i32 0, i32 0
  %arrayidx26 = getelementptr inbounds [128 x i8], [128 x i8]* %ind25, i32 0, i32 100
  %21 = load i8, i8* %arrayidx26, align 4
  %conv27 = zext i8 %21 to i32
  %cmp28 = icmp ne i32 %conv27, 0
  %conv29 = zext i1 %cmp28 to i32
  %call30 = call %struct.shfunc* @loadautofn(%struct.shfunc* %15, i32 %cond24, i32 1, i32 %conv29)
  %tobool31 = icmp ne %struct.shfunc* %call30, null
  %lnot = xor i1 %tobool31, true
  %lnot.ext = zext i1 %lnot to i32
  store i32 %lnot.ext, i32* %retval, align 4
  br label %return

return:                                           ; preds = %cond.end, %if.then8, %if.then
  %22 = load i32, i32* %retval, align 4
  ret i32 %22
}

declare void @freeeprog(%struct.eprog*) #1

; Function Attrs: noinline nounwind
define %struct.eprog* @mkautofn(%struct.shfunc* %shf) #0 {
entry:
  %shf.addr = alloca %struct.shfunc*, align 4
  %p = alloca %struct.eprog*, align 4
  store %struct.shfunc* %shf, %struct.shfunc** %shf.addr, align 4
  %call = call i8* @zalloc(i32 36)
  %0 = bitcast i8* %call to %struct.eprog*
  store %struct.eprog* %0, %struct.eprog** %p, align 4
  %1 = load %struct.eprog*, %struct.eprog** %p, align 4
  %len = getelementptr inbounds %struct.eprog, %struct.eprog* %1, i32 0, i32 1
  store i32 20, i32* %len, align 4
  %2 = load %struct.eprog*, %struct.eprog** %p, align 4
  %len1 = getelementptr inbounds %struct.eprog, %struct.eprog* %2, i32 0, i32 1
  %3 = load i32, i32* %len1, align 4
  %call2 = call i8* @zalloc(i32 %3)
  %4 = bitcast i8* %call2 to i32*
  %5 = load %struct.eprog*, %struct.eprog** %p, align 4
  %prog = getelementptr inbounds %struct.eprog, %struct.eprog* %5, i32 0, i32 5
  store i32* %4, i32** %prog, align 4
  %6 = load %struct.eprog*, %struct.eprog** %p, align 4
  %strs = getelementptr inbounds %struct.eprog, %struct.eprog* %6, i32 0, i32 6
  store i8* null, i8** %strs, align 4
  %7 = load %struct.shfunc*, %struct.shfunc** %shf.addr, align 4
  %8 = load %struct.eprog*, %struct.eprog** %p, align 4
  %shf3 = getelementptr inbounds %struct.eprog, %struct.eprog* %8, i32 0, i32 7
  store %struct.shfunc* %7, %struct.shfunc** %shf3, align 4
  %9 = load %struct.eprog*, %struct.eprog** %p, align 4
  %npats = getelementptr inbounds %struct.eprog, %struct.eprog* %9, i32 0, i32 2
  store i32 0, i32* %npats, align 4
  %10 = load %struct.eprog*, %struct.eprog** %p, align 4
  %nref = getelementptr inbounds %struct.eprog, %struct.eprog* %10, i32 0, i32 3
  store i32 1, i32* %nref, align 4
  %11 = load %struct.eprog*, %struct.eprog** %p, align 4
  %prog4 = getelementptr inbounds %struct.eprog, %struct.eprog* %11, i32 0, i32 5
  %12 = load i32*, i32** %prog4, align 4
  %13 = bitcast i32* %12 to %struct.patprog**
  %14 = load %struct.eprog*, %struct.eprog** %p, align 4
  %pats = getelementptr inbounds %struct.eprog, %struct.eprog* %14, i32 0, i32 4
  store %struct.patprog** %13, %struct.patprog*** %pats, align 4
  %15 = load %struct.eprog*, %struct.eprog** %p, align 4
  %flags = getelementptr inbounds %struct.eprog, %struct.eprog* %15, i32 0, i32 0
  store i32 1, i32* %flags, align 4
  %16 = load %struct.eprog*, %struct.eprog** %p, align 4
  %dump = getelementptr inbounds %struct.eprog, %struct.eprog* %16, i32 0, i32 8
  store %struct.funcdump* null, %struct.funcdump** %dump, align 4
  %17 = load %struct.eprog*, %struct.eprog** %p, align 4
  %prog5 = getelementptr inbounds %struct.eprog, %struct.eprog* %17, i32 0, i32 5
  %18 = load i32*, i32** %prog5, align 4
  %arrayidx = getelementptr inbounds i32, i32* %18, i32 0
  store i32 577, i32* %arrayidx, align 4
  %19 = load %struct.eprog*, %struct.eprog** %p, align 4
  %prog6 = getelementptr inbounds %struct.eprog, %struct.eprog* %19, i32 0, i32 5
  %20 = load i32*, i32** %prog6, align 4
  %arrayidx7 = getelementptr inbounds i32, i32* %20, i32 1
  store i32 3074, i32* %arrayidx7, align 4
  %21 = load %struct.eprog*, %struct.eprog** %p, align 4
  %prog8 = getelementptr inbounds %struct.eprog, %struct.eprog* %21, i32 0, i32 5
  %22 = load i32*, i32** %prog8, align 4
  %arrayidx9 = getelementptr inbounds i32, i32* %22, i32 2
  store i32 3, i32* %arrayidx9, align 4
  %23 = load %struct.eprog*, %struct.eprog** %p, align 4
  %prog10 = getelementptr inbounds %struct.eprog, %struct.eprog* %23, i32 0, i32 5
  %24 = load i32*, i32** %prog10, align 4
  %arrayidx11 = getelementptr inbounds i32, i32* %24, i32 3
  store i32 20, i32* %arrayidx11, align 4
  %25 = load %struct.eprog*, %struct.eprog** %p, align 4
  %prog12 = getelementptr inbounds %struct.eprog, %struct.eprog* %25, i32 0, i32 5
  %26 = load i32*, i32** %prog12, align 4
  %arrayidx13 = getelementptr inbounds i32, i32* %26, i32 4
  store i32 0, i32* %arrayidx13, align 4
  %27 = load %struct.eprog*, %struct.eprog** %p, align 4
  ret %struct.eprog* %27
}

; Function Attrs: noinline nounwind
define i32 @bin_eval(i8* %nam, i8** %argv, %struct.options* %ops, i32 %func) #0 {
entry:
  %nam.addr = alloca i8*, align 4
  %argv.addr = alloca i8**, align 4
  %ops.addr = alloca %struct.options*, align 4
  %func.addr = alloca i32, align 4
  store i8* %nam, i8** %nam.addr, align 4
  store i8** %argv, i8*** %argv.addr, align 4
  store %struct.options* %ops, %struct.options** %ops.addr, align 4
  store i32 %func, i32* %func.addr, align 4
  %0 = load i8**, i8*** %argv.addr, align 4
  %call = call i32 @eval(i8** %0)
  ret i32 %call
}

declare %struct.shfunc* @loadautofn(%struct.shfunc*, i32, i32, i32) #1

; Function Attrs: noinline nounwind
define internal void @listusermathfunc(%struct.mathfunc* %p) #0 {
entry:
  %p.addr = alloca %struct.mathfunc*, align 4
  %showargs = alloca i32, align 4
  store %struct.mathfunc* %p, %struct.mathfunc** %p.addr, align 4
  %0 = load %struct.mathfunc*, %struct.mathfunc** %p.addr, align 4
  %module = getelementptr inbounds %struct.mathfunc, %struct.mathfunc* %0, i32 0, i32 5
  %1 = load i8*, i8** %module, align 4
  %tobool = icmp ne i8* %1, null
  br i1 %tobool, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  store i32 3, i32* %showargs, align 4
  br label %if.end10

if.else:                                          ; preds = %entry
  %2 = load %struct.mathfunc*, %struct.mathfunc** %p.addr, align 4
  %maxargs = getelementptr inbounds %struct.mathfunc, %struct.mathfunc* %2, i32 0, i32 7
  %3 = load i32, i32* %maxargs, align 4
  %4 = load %struct.mathfunc*, %struct.mathfunc** %p.addr, align 4
  %minargs = getelementptr inbounds %struct.mathfunc, %struct.mathfunc* %4, i32 0, i32 6
  %5 = load i32, i32* %minargs, align 4
  %tobool1 = icmp ne i32 %5, 0
  br i1 %tobool1, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.else
  %6 = load %struct.mathfunc*, %struct.mathfunc** %p.addr, align 4
  %minargs2 = getelementptr inbounds %struct.mathfunc, %struct.mathfunc* %6, i32 0, i32 6
  %7 = load i32, i32* %minargs2, align 4
  br label %cond.end

cond.false:                                       ; preds = %if.else
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %7, %cond.true ], [ -1, %cond.false ]
  %cmp = icmp ne i32 %3, %cond
  br i1 %cmp, label %if.then3, label %if.else4

if.then3:                                         ; preds = %cond.end
  store i32 2, i32* %showargs, align 4
  br label %if.end9

if.else4:                                         ; preds = %cond.end
  %8 = load %struct.mathfunc*, %struct.mathfunc** %p.addr, align 4
  %minargs5 = getelementptr inbounds %struct.mathfunc, %struct.mathfunc* %8, i32 0, i32 6
  %9 = load i32, i32* %minargs5, align 4
  %tobool6 = icmp ne i32 %9, 0
  br i1 %tobool6, label %if.then7, label %if.else8

if.then7:                                         ; preds = %if.else4
  store i32 1, i32* %showargs, align 4
  br label %if.end

if.else8:                                         ; preds = %if.else4
  store i32 0, i32* %showargs, align 4
  br label %if.end

if.end:                                           ; preds = %if.else8, %if.then7
  br label %if.end9

if.end9:                                          ; preds = %if.end, %if.then3
  br label %if.end10

if.end10:                                         ; preds = %if.end9, %if.then
  %10 = load %struct.mathfunc*, %struct.mathfunc** %p.addr, align 4
  %flags = getelementptr inbounds %struct.mathfunc, %struct.mathfunc* %10, i32 0, i32 2
  %11 = load i32, i32* %flags, align 4
  %and = and i32 %11, 1
  %tobool11 = icmp ne i32 %and, 0
  %cond12 = select i1 %tobool11, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.333, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.34, i32 0, i32 0)
  %12 = load %struct.mathfunc*, %struct.mathfunc** %p.addr, align 4
  %name = getelementptr inbounds %struct.mathfunc, %struct.mathfunc* %12, i32 0, i32 1
  %13 = load i8*, i8** %name, align 4
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.332, i32 0, i32 0), i8* %cond12, i8* %13)
  %14 = load i32, i32* %showargs, align 4
  %tobool13 = icmp ne i32 %14, 0
  br i1 %tobool13, label %if.then14, label %if.end17

if.then14:                                        ; preds = %if.end10
  %15 = load %struct.mathfunc*, %struct.mathfunc** %p.addr, align 4
  %minargs15 = getelementptr inbounds %struct.mathfunc, %struct.mathfunc* %15, i32 0, i32 6
  %16 = load i32, i32* %minargs15, align 4
  %call16 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.334, i32 0, i32 0), i32 %16)
  %17 = load i32, i32* %showargs, align 4
  %dec = add nsw i32 %17, -1
  store i32 %dec, i32* %showargs, align 4
  br label %if.end17

if.end17:                                         ; preds = %if.then14, %if.end10
  %18 = load i32, i32* %showargs, align 4
  %tobool18 = icmp ne i32 %18, 0
  br i1 %tobool18, label %if.then19, label %if.end23

if.then19:                                        ; preds = %if.end17
  %19 = load %struct.mathfunc*, %struct.mathfunc** %p.addr, align 4
  %maxargs20 = getelementptr inbounds %struct.mathfunc, %struct.mathfunc* %19, i32 0, i32 7
  %20 = load i32, i32* %maxargs20, align 4
  %call21 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.334, i32 0, i32 0), i32 %20)
  %21 = load i32, i32* %showargs, align 4
  %dec22 = add nsw i32 %21, -1
  store i32 %dec22, i32* %showargs, align 4
  br label %if.end23

if.end23:                                         ; preds = %if.then19, %if.end17
  %22 = load i32, i32* %showargs, align 4
  %tobool24 = icmp ne i32 %22, 0
  br i1 %tobool24, label %if.then25, label %if.end30

if.then25:                                        ; preds = %if.end23
  %call26 = call i32 @putchar(i32 32)
  %23 = load %struct.mathfunc*, %struct.mathfunc** %p.addr, align 4
  %module27 = getelementptr inbounds %struct.mathfunc, %struct.mathfunc* %23, i32 0, i32 5
  %24 = load i8*, i8** %module27, align 4
  %25 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 4
  %call28 = call i8* @quotedzputs(i8* %24, %struct._IO_FILE* %25)
  %26 = load i32, i32* %showargs, align 4
  %dec29 = add nsw i32 %26, -1
  store i32 %dec29, i32* %showargs, align 4
  br label %if.end30

if.end30:                                         ; preds = %if.then25, %if.end23
  %call31 = call i32 @putchar(i32 10)
  ret void
}

declare void @removemathfunc(%struct.mathfunc*, %struct.mathfunc*) #1

declare i8* @itype_end(i8*, i32, i32) #1

declare i8* @zshcalloc(i32) #1

declare i8* @dupstring(i8*) #1

declare void @dircache_set(i8**, i8*) #1

declare i32 @scanshfunc(i32, i32, i32, void (%struct.hashnode*, i32)*, i32, i32) #1

declare i32 @scanmatchshfunc(%struct.patprog*, i32, i32, i32, void (%struct.hashnode*, i32)*, i32, i32) #1

; Function Attrs: noinline nounwind
define internal i32 @check_autoload(%struct.shfunc* %shf, i8* %name, %struct.options* %ops, i32 %func) #0 {
entry:
  %retval = alloca i32, align 4
  %shf.addr = alloca %struct.shfunc*, align 4
  %name.addr = alloca i8*, align 4
  %ops.addr = alloca %struct.options*, align 4
  %func.addr = alloca i32, align 4
  %dir_path = alloca i8*, align 4
  %spec_path = alloca [2 x i8*], align 4
  store %struct.shfunc* %shf, %struct.shfunc** %shf.addr, align 4
  store i8* %name, i8** %name.addr, align 4
  store %struct.options* %ops, %struct.options** %ops.addr, align 4
  store i32 %func, i32* %func.addr, align 4
  %0 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind = getelementptr inbounds %struct.options, %struct.options* %0, i32 0, i32 0
  %arrayidx = getelementptr inbounds [128 x i8], [128 x i8]* %ind, i32 0, i32 88
  %1 = load i8, i8* %arrayidx, align 4
  %conv = zext i8 %1 to i32
  %cmp = icmp ne i32 %conv, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %2 = load %struct.shfunc*, %struct.shfunc** %shf.addr, align 4
  %3 = load i8*, i8** %name.addr, align 4
  %4 = load %struct.options*, %struct.options** %ops.addr, align 4
  %5 = load i32, i32* %func.addr, align 4
  %call = call i32 @eval_autoload(%struct.shfunc* %2, i8* %3, %struct.options* %4, i32 %5)
  store i32 %call, i32* %retval, align 4
  br label %return

if.end:                                           ; preds = %entry
  %6 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind2 = getelementptr inbounds %struct.options, %struct.options* %6, i32 0, i32 0
  %arrayidx3 = getelementptr inbounds [128 x i8], [128 x i8]* %ind2, i32 0, i32 114
  %7 = load i8, i8* %arrayidx3, align 2
  %conv4 = zext i8 %7 to i32
  %cmp5 = icmp ne i32 %conv4, 0
  br i1 %cmp5, label %land.lhs.true, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end
  %8 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind7 = getelementptr inbounds %struct.options, %struct.options* %8, i32 0, i32 0
  %arrayidx8 = getelementptr inbounds [128 x i8], [128 x i8]* %ind7, i32 0, i32 82
  %9 = load i8, i8* %arrayidx8, align 2
  %conv9 = zext i8 %9 to i32
  %cmp10 = icmp ne i32 %conv9, 0
  br i1 %cmp10, label %land.lhs.true, label %if.end73

land.lhs.true:                                    ; preds = %lor.lhs.false, %if.end
  %10 = load %struct.shfunc*, %struct.shfunc** %shf.addr, align 4
  %node = getelementptr inbounds %struct.shfunc, %struct.shfunc* %10, i32 0, i32 0
  %flags = getelementptr inbounds %struct.hashnode, %struct.hashnode* %node, i32 0, i32 2
  %11 = load i32, i32* %flags, align 4
  %and = and i32 %11, 512
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.then12, label %if.end73

if.then12:                                        ; preds = %land.lhs.true
  %12 = load %struct.shfunc*, %struct.shfunc** %shf.addr, align 4
  %filename = getelementptr inbounds %struct.shfunc, %struct.shfunc* %12, i32 0, i32 1
  %13 = load i8*, i8** %filename, align 4
  %tobool13 = icmp ne i8* %13, null
  br i1 %tobool13, label %land.lhs.true14, label %if.end44

land.lhs.true14:                                  ; preds = %if.then12
  %14 = load %struct.shfunc*, %struct.shfunc** %shf.addr, align 4
  %node15 = getelementptr inbounds %struct.shfunc, %struct.shfunc* %14, i32 0, i32 0
  %flags16 = getelementptr inbounds %struct.hashnode, %struct.hashnode* %node15, i32 0, i32 2
  %15 = load i32, i32* %flags16, align 4
  %and17 = and i32 %15, 524288
  %tobool18 = icmp ne i32 %and17, 0
  br i1 %tobool18, label %if.then19, label %if.end44

if.then19:                                        ; preds = %land.lhs.true14
  %16 = load %struct.shfunc*, %struct.shfunc** %shf.addr, align 4
  %filename20 = getelementptr inbounds %struct.shfunc, %struct.shfunc* %16, i32 0, i32 1
  %17 = load i8*, i8** %filename20, align 4
  %arrayidx21 = getelementptr inbounds [2 x i8*], [2 x i8*]* %spec_path, i32 0, i32 0
  store i8* %17, i8** %arrayidx21, align 4
  %arrayidx22 = getelementptr inbounds [2 x i8*], [2 x i8*]* %spec_path, i32 0, i32 1
  store i8* null, i8** %arrayidx22, align 4
  %18 = load %struct.shfunc*, %struct.shfunc** %shf.addr, align 4
  %node23 = getelementptr inbounds %struct.shfunc, %struct.shfunc* %18, i32 0, i32 0
  %nam = getelementptr inbounds %struct.hashnode, %struct.hashnode* %node23, i32 0, i32 1
  %19 = load i8*, i8** %nam, align 4
  %arraydecay = getelementptr inbounds [2 x i8*], [2 x i8*]* %spec_path, i32 0, i32 0
  %call24 = call %struct.eprog* @getfpfunc(i8* %19, i32* null, i8** %dir_path, i8** %arraydecay, i32 1)
  %tobool25 = icmp ne %struct.eprog* %call24, null
  br i1 %tobool25, label %if.then26, label %if.end27

if.then26:                                        ; preds = %if.then19
  store i32 0, i32* %retval, align 4
  br label %return

if.end27:                                         ; preds = %if.then19
  %20 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind28 = getelementptr inbounds %struct.options, %struct.options* %20, i32 0, i32 0
  %arrayidx29 = getelementptr inbounds [128 x i8], [128 x i8]* %ind28, i32 0, i32 100
  %21 = load i8, i8* %arrayidx29, align 4
  %conv30 = zext i8 %21 to i32
  %cmp31 = icmp ne i32 %conv30, 0
  br i1 %cmp31, label %if.end43, label %if.then33

if.then33:                                        ; preds = %if.end27
  %22 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind34 = getelementptr inbounds %struct.options, %struct.options* %22, i32 0, i32 0
  %arrayidx35 = getelementptr inbounds [128 x i8], [128 x i8]* %ind34, i32 0, i32 82
  %23 = load i8, i8* %arrayidx35, align 2
  %conv36 = zext i8 %23 to i32
  %cmp37 = icmp ne i32 %conv36, 0
  br i1 %cmp37, label %if.then39, label %if.end42

if.then39:                                        ; preds = %if.then33
  %24 = load %struct.shfunc*, %struct.shfunc** %shf.addr, align 4
  %node40 = getelementptr inbounds %struct.shfunc, %struct.shfunc* %24, i32 0, i32 0
  %nam41 = getelementptr inbounds %struct.hashnode, %struct.hashnode* %node40, i32 0, i32 1
  %25 = load i8*, i8** %nam41, align 4
  call void (i8*, ...) @zerr(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.335, i32 0, i32 0), i8* %25)
  store i32 1, i32* %retval, align 4
  br label %return

if.end42:                                         ; preds = %if.then33
  store i32 0, i32* %retval, align 4
  br label %return

if.end43:                                         ; preds = %if.end27
  br label %if.end44

if.end44:                                         ; preds = %if.end43, %land.lhs.true14, %if.then12
  %26 = load %struct.shfunc*, %struct.shfunc** %shf.addr, align 4
  %node45 = getelementptr inbounds %struct.shfunc, %struct.shfunc* %26, i32 0, i32 0
  %nam46 = getelementptr inbounds %struct.hashnode, %struct.hashnode* %node45, i32 0, i32 1
  %27 = load i8*, i8** %nam46, align 4
  %call47 = call %struct.eprog* @getfpfunc(i8* %27, i32* null, i8** %dir_path, i8** null, i32 1)
  %tobool48 = icmp ne %struct.eprog* %call47, null
  br i1 %tobool48, label %if.then49, label %if.end63

if.then49:                                        ; preds = %if.end44
  %28 = load %struct.shfunc*, %struct.shfunc** %shf.addr, align 4
  %filename50 = getelementptr inbounds %struct.shfunc, %struct.shfunc* %28, i32 0, i32 1
  call void @dircache_set(i8** %filename50, i8* null)
  %29 = load i8*, i8** %dir_path, align 4
  %30 = load i8, i8* %29, align 1
  %conv51 = sext i8 %30 to i32
  %cmp52 = icmp ne i32 %conv51, 47
  br i1 %cmp52, label %if.then54, label %if.end59

if.then54:                                        ; preds = %if.then49
  %call55 = call i8* @zgetcwd()
  %call56 = call i8* @metafy(i8* %call55, i32 -1, i32 6)
  %31 = load i8*, i8** %dir_path, align 4
  %call57 = call i8* @zhtricat(i8* %call56, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.76, i32 0, i32 0), i8* %31)
  store i8* %call57, i8** %dir_path, align 4
  %32 = load i8*, i8** %dir_path, align 4
  %call58 = call i8* @xsymlink(i8* %32, i32 1)
  store i8* %call58, i8** %dir_path, align 4
  br label %if.end59

if.end59:                                         ; preds = %if.then54, %if.then49
  %33 = load %struct.shfunc*, %struct.shfunc** %shf.addr, align 4
  %filename60 = getelementptr inbounds %struct.shfunc, %struct.shfunc* %33, i32 0, i32 1
  %34 = load i8*, i8** %dir_path, align 4
  call void @dircache_set(i8** %filename60, i8* %34)
  %35 = load %struct.shfunc*, %struct.shfunc** %shf.addr, align 4
  %node61 = getelementptr inbounds %struct.shfunc, %struct.shfunc* %35, i32 0, i32 0
  %flags62 = getelementptr inbounds %struct.hashnode, %struct.hashnode* %node61, i32 0, i32 2
  %36 = load i32, i32* %flags62, align 4
  %or = or i32 %36, 524288
  store i32 %or, i32* %flags62, align 4
  store i32 0, i32* %retval, align 4
  br label %return

if.end63:                                         ; preds = %if.end44
  %37 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind64 = getelementptr inbounds %struct.options, %struct.options* %37, i32 0, i32 0
  %arrayidx65 = getelementptr inbounds [128 x i8], [128 x i8]* %ind64, i32 0, i32 82
  %38 = load i8, i8* %arrayidx65, align 2
  %conv66 = zext i8 %38 to i32
  %cmp67 = icmp ne i32 %conv66, 0
  br i1 %cmp67, label %if.then69, label %if.end72

if.then69:                                        ; preds = %if.end63
  %39 = load %struct.shfunc*, %struct.shfunc** %shf.addr, align 4
  %node70 = getelementptr inbounds %struct.shfunc, %struct.shfunc* %39, i32 0, i32 0
  %nam71 = getelementptr inbounds %struct.hashnode, %struct.hashnode* %node70, i32 0, i32 1
  %40 = load i8*, i8** %nam71, align 4
  call void (i8*, ...) @zerr(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.335, i32 0, i32 0), i8* %40)
  store i32 1, i32* %retval, align 4
  br label %return

if.end72:                                         ; preds = %if.end63
  br label %if.end73

if.end73:                                         ; preds = %if.end72, %land.lhs.true, %lor.lhs.false
  store i32 0, i32* %retval, align 4
  br label %return

return:                                           ; preds = %if.end73, %if.then69, %if.end59, %if.end42, %if.then39, %if.then26, %if.then
  %41 = load i32, i32* %retval, align 4
  ret i32 %41
}

declare i32 @dump_autoload(i8*, i8*, i32, %struct.options*, i32) #1

declare void @printshfuncexpand(%struct.hashnode*, i32, i32) #1

declare i32 @strncmp(i8*, i8*, i32) #1

declare i32 @getsignum(i8*) #1

declare void @removetrapnode(i32) #1

declare i8* @strrchr(i8*, i32) #1

declare void @shfunc_set_sticky(%struct.shfunc*) #1

; Function Attrs: noinline nounwind
define internal void @add_autoload_function(%struct.shfunc* %shf, i8* %funcname) #0 {
entry:
  %shf.addr = alloca %struct.shfunc*, align 4
  %funcname.addr = alloca i8*, align 4
  %nam = alloca i8*, align 4
  %dir = alloca i8*, align 4
  %shf2 = alloca %struct.shfunc*, align 4
  %fs = alloca %struct.funcstack*, align 4
  %calling_f = alloca i8*, align 4
  %buf = alloca [4097 x i8], align 1
  store %struct.shfunc* %shf, %struct.shfunc** %shf.addr, align 4
  store i8* %funcname, i8** %funcname.addr, align 4
  %0 = load i8*, i8** %funcname.addr, align 4
  %1 = load i8, i8* %0, align 1
  %conv = sext i8 %1 to i32
  %cmp = icmp eq i32 %conv, 47
  br i1 %cmp, label %land.lhs.true, label %if.else22

land.lhs.true:                                    ; preds = %entry
  %2 = load i8*, i8** %funcname.addr, align 4
  %arrayidx = getelementptr inbounds i8, i8* %2, i32 1
  %3 = load i8, i8* %arrayidx, align 1
  %conv2 = sext i8 %3 to i32
  %tobool = icmp ne i32 %conv2, 0
  br i1 %tobool, label %land.lhs.true3, label %if.else22

land.lhs.true3:                                   ; preds = %land.lhs.true
  %4 = load i8*, i8** %funcname.addr, align 4
  %call = call i8* @strrchr(i8* %4, i32 47)
  store i8* %call, i8** %nam, align 4
  %tobool4 = icmp ne i8* %call, null
  br i1 %tobool4, label %land.lhs.true5, label %if.else22

land.lhs.true5:                                   ; preds = %land.lhs.true3
  %5 = load i8*, i8** %nam, align 4
  %arrayidx6 = getelementptr inbounds i8, i8* %5, i32 1
  %6 = load i8, i8* %arrayidx6, align 1
  %conv7 = sext i8 %6 to i32
  %tobool8 = icmp ne i32 %conv7, 0
  br i1 %tobool8, label %land.lhs.true9, label %if.else22

land.lhs.true9:                                   ; preds = %land.lhs.true5
  %7 = load %struct.shfunc*, %struct.shfunc** %shf.addr, align 4
  %node = getelementptr inbounds %struct.shfunc, %struct.shfunc* %7, i32 0, i32 0
  %flags = getelementptr inbounds %struct.hashnode, %struct.hashnode* %node, i32 0, i32 2
  %8 = load i32, i32* %flags, align 4
  %and = and i32 %8, 512
  %tobool10 = icmp ne i32 %and, 0
  br i1 %tobool10, label %if.then, label %if.else22

if.then:                                          ; preds = %land.lhs.true9
  %9 = load i8*, i8** %funcname.addr, align 4
  %call11 = call i8* @strrchr(i8* %9, i32 47)
  store i8* %call11, i8** %nam, align 4
  %10 = load i8*, i8** %nam, align 4
  %11 = load i8*, i8** %funcname.addr, align 4
  %cmp12 = icmp eq i8* %10, %11
  br i1 %cmp12, label %if.then14, label %if.else

if.then14:                                        ; preds = %if.then
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.76, i32 0, i32 0), i8** %dir, align 4
  br label %if.end

if.else:                                          ; preds = %if.then
  %12 = load i8*, i8** %nam, align 4
  %incdec.ptr = getelementptr inbounds i8, i8* %12, i32 1
  store i8* %incdec.ptr, i8** %nam, align 4
  store i8 0, i8* %12, align 1
  %13 = load i8*, i8** %funcname.addr, align 4
  store i8* %13, i8** %dir, align 4
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then14
  %14 = load %struct.shfunc*, %struct.shfunc** %shf.addr, align 4
  %filename = getelementptr inbounds %struct.shfunc, %struct.shfunc* %14, i32 0, i32 1
  call void @dircache_set(i8** %filename, i8* null)
  %15 = load %struct.shfunc*, %struct.shfunc** %shf.addr, align 4
  %filename15 = getelementptr inbounds %struct.shfunc, %struct.shfunc* %15, i32 0, i32 1
  %16 = load i8*, i8** %dir, align 4
  call void @dircache_set(i8** %filename15, i8* %16)
  %17 = load %struct.shfunc*, %struct.shfunc** %shf.addr, align 4
  %node16 = getelementptr inbounds %struct.shfunc, %struct.shfunc* %17, i32 0, i32 0
  %flags17 = getelementptr inbounds %struct.hashnode, %struct.hashnode* %node16, i32 0, i32 2
  %18 = load i32, i32* %flags17, align 4
  %or = or i32 %18, 524288
  store i32 %or, i32* %flags17, align 4
  %19 = load %struct.shfunc*, %struct.shfunc** %shf.addr, align 4
  %node18 = getelementptr inbounds %struct.shfunc, %struct.shfunc* %19, i32 0, i32 0
  %flags19 = getelementptr inbounds %struct.hashnode, %struct.hashnode* %node18, i32 0, i32 2
  %20 = load i32, i32* %flags19, align 4
  %or20 = or i32 %20, 4096
  store i32 %or20, i32* %flags19, align 4
  %21 = load %struct.hashtable*, %struct.hashtable** @shfunctab, align 4
  %addnode = getelementptr inbounds %struct.hashtable, %struct.hashtable* %21, i32 0, i32 8
  %22 = load void (%struct.hashtable*, i8*, i8*)*, void (%struct.hashtable*, i8*, i8*)** %addnode, align 4
  %23 = load %struct.hashtable*, %struct.hashtable** @shfunctab, align 4
  %24 = load i8*, i8** %nam, align 4
  %call21 = call i8* @ztrdup(i8* %24)
  %25 = load %struct.shfunc*, %struct.shfunc** %shf.addr, align 4
  %26 = bitcast %struct.shfunc* %25 to i8*
  call void %22(%struct.hashtable* %23, i8* %call21, i8* %26)
  br label %if.end87

if.else22:                                        ; preds = %land.lhs.true9, %land.lhs.true5, %land.lhs.true3, %land.lhs.true, %entry
  store i8* null, i8** %calling_f, align 4
  %27 = load %struct.funcstack*, %struct.funcstack** @funcstack, align 4
  store %struct.funcstack* %27, %struct.funcstack** %fs, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.else22
  %28 = load %struct.funcstack*, %struct.funcstack** %fs, align 4
  %tobool23 = icmp ne %struct.funcstack* %28, null
  br i1 %tobool23, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %29 = load %struct.funcstack*, %struct.funcstack** %fs, align 4
  %tp = getelementptr inbounds %struct.funcstack, %struct.funcstack* %29, i32 0, i32 6
  %30 = load i32, i32* %tp, align 4
  %cmp24 = icmp eq i32 %30, 1
  br i1 %cmp24, label %land.lhs.true26, label %if.end40

land.lhs.true26:                                  ; preds = %for.body
  %31 = load %struct.funcstack*, %struct.funcstack** %fs, align 4
  %name = getelementptr inbounds %struct.funcstack, %struct.funcstack* %31, i32 0, i32 1
  %32 = load i8*, i8** %name, align 4
  %tobool27 = icmp ne i8* %32, null
  br i1 %tobool27, label %land.lhs.true28, label %if.end40

land.lhs.true28:                                  ; preds = %land.lhs.true26
  %33 = load %struct.shfunc*, %struct.shfunc** %shf.addr, align 4
  %node29 = getelementptr inbounds %struct.shfunc, %struct.shfunc* %33, i32 0, i32 0
  %nam30 = getelementptr inbounds %struct.hashnode, %struct.hashnode* %node29, i32 0, i32 1
  %34 = load i8*, i8** %nam30, align 4
  %tobool31 = icmp ne i8* %34, null
  br i1 %tobool31, label %lor.lhs.false, label %if.then38

lor.lhs.false:                                    ; preds = %land.lhs.true28
  %35 = load %struct.funcstack*, %struct.funcstack** %fs, align 4
  %name32 = getelementptr inbounds %struct.funcstack, %struct.funcstack* %35, i32 0, i32 1
  %36 = load i8*, i8** %name32, align 4
  %37 = load %struct.shfunc*, %struct.shfunc** %shf.addr, align 4
  %node33 = getelementptr inbounds %struct.shfunc, %struct.shfunc* %37, i32 0, i32 0
  %nam34 = getelementptr inbounds %struct.hashnode, %struct.hashnode* %node33, i32 0, i32 1
  %38 = load i8*, i8** %nam34, align 4
  %call35 = call i32 @strcmp(i8* %36, i8* %38)
  %cmp36 = icmp ne i32 0, %call35
  br i1 %cmp36, label %if.then38, label %if.end40

if.then38:                                        ; preds = %lor.lhs.false, %land.lhs.true28
  %39 = load %struct.funcstack*, %struct.funcstack** %fs, align 4
  %name39 = getelementptr inbounds %struct.funcstack, %struct.funcstack* %39, i32 0, i32 1
  %40 = load i8*, i8** %name39, align 4
  store i8* %40, i8** %calling_f, align 4
  br label %for.end

if.end40:                                         ; preds = %lor.lhs.false, %land.lhs.true26, %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end40
  %41 = load %struct.funcstack*, %struct.funcstack** %fs, align 4
  %prev = getelementptr inbounds %struct.funcstack, %struct.funcstack* %41, i32 0, i32 0
  %42 = load %struct.funcstack*, %struct.funcstack** %prev, align 4
  store %struct.funcstack* %42, %struct.funcstack** %fs, align 4
  br label %for.cond

for.end:                                          ; preds = %if.then38, %for.cond
  %43 = load i8*, i8** %calling_f, align 4
  %tobool41 = icmp ne i8* %43, null
  br i1 %tobool41, label %if.then42, label %if.end84

if.then42:                                        ; preds = %for.end
  %44 = load %struct.hashtable*, %struct.hashtable** @shfunctab, align 4
  %getnode2 = getelementptr inbounds %struct.hashtable, %struct.hashtable* %44, i32 0, i32 10
  %45 = load %struct.hashnode* (%struct.hashtable*, i8*)*, %struct.hashnode* (%struct.hashtable*, i8*)** %getnode2, align 4
  %46 = load %struct.hashtable*, %struct.hashtable** @shfunctab, align 4
  %47 = load i8*, i8** %calling_f, align 4
  %call43 = call %struct.hashnode* %45(%struct.hashtable* %46, i8* %47)
  %48 = bitcast %struct.hashnode* %call43 to %struct.shfunc*
  store %struct.shfunc* %48, %struct.shfunc** %shf2, align 4
  %tobool44 = icmp ne %struct.shfunc* %48, null
  br i1 %tobool44, label %land.lhs.true45, label %if.end83

land.lhs.true45:                                  ; preds = %if.then42
  %49 = load %struct.shfunc*, %struct.shfunc** %shf2, align 4
  %node46 = getelementptr inbounds %struct.shfunc, %struct.shfunc* %49, i32 0, i32 0
  %flags47 = getelementptr inbounds %struct.hashnode, %struct.hashnode* %node46, i32 0, i32 2
  %50 = load i32, i32* %flags47, align 4
  %and48 = and i32 %50, 524288
  %tobool49 = icmp ne i32 %and48, 0
  br i1 %tobool49, label %land.lhs.true50, label %if.end83

land.lhs.true50:                                  ; preds = %land.lhs.true45
  %51 = load %struct.shfunc*, %struct.shfunc** %shf2, align 4
  %node51 = getelementptr inbounds %struct.shfunc, %struct.shfunc* %51, i32 0, i32 0
  %flags52 = getelementptr inbounds %struct.hashnode, %struct.hashnode* %node51, i32 0, i32 2
  %52 = load i32, i32* %flags52, align 4
  %and53 = and i32 %52, 4096
  %tobool54 = icmp ne i32 %and53, 0
  br i1 %tobool54, label %land.lhs.true55, label %if.end83

land.lhs.true55:                                  ; preds = %land.lhs.true50
  %53 = load %struct.shfunc*, %struct.shfunc** %shf2, align 4
  %filename56 = getelementptr inbounds %struct.shfunc, %struct.shfunc* %53, i32 0, i32 1
  %54 = load i8*, i8** %filename56, align 4
  %tobool57 = icmp ne i8* %54, null
  br i1 %tobool57, label %if.then58, label %if.end83

if.then58:                                        ; preds = %land.lhs.true55
  %55 = load %struct.shfunc*, %struct.shfunc** %shf2, align 4
  %filename59 = getelementptr inbounds %struct.shfunc, %struct.shfunc* %55, i32 0, i32 1
  %56 = load i8*, i8** %filename59, align 4
  %call60 = call i32 @strlen(i8* %56)
  %57 = load i8*, i8** %funcname.addr, align 4
  %call61 = call i32 @strlen(i8* %57)
  %add = add i32 %call60, %call61
  %add62 = add i32 %add, 1
  %cmp63 = icmp ult i32 %add62, 4096
  br i1 %cmp63, label %if.then65, label %if.end82

if.then65:                                        ; preds = %if.then58
  %arraydecay = getelementptr inbounds [4097 x i8], [4097 x i8]* %buf, i32 0, i32 0
  %58 = load %struct.shfunc*, %struct.shfunc** %shf2, align 4
  %filename66 = getelementptr inbounds %struct.shfunc, %struct.shfunc* %58, i32 0, i32 1
  %59 = load i8*, i8** %filename66, align 4
  %60 = load i8*, i8** %funcname.addr, align 4
  %call67 = call i32 (i8*, i8*, ...) @sprintf(i8* %arraydecay, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.336, i32 0, i32 0), i8* %59, i8* %60)
  %arraydecay68 = getelementptr inbounds [4097 x i8], [4097 x i8]* %buf, i32 0, i32 0
  %call69 = call i32 @access(i8* %arraydecay68, i32 4)
  %tobool70 = icmp ne i32 %call69, 0
  br i1 %tobool70, label %if.end81, label %if.then71

if.then71:                                        ; preds = %if.then65
  %61 = load %struct.shfunc*, %struct.shfunc** %shf.addr, align 4
  %filename72 = getelementptr inbounds %struct.shfunc, %struct.shfunc* %61, i32 0, i32 1
  call void @dircache_set(i8** %filename72, i8* null)
  %62 = load %struct.shfunc*, %struct.shfunc** %shf.addr, align 4
  %filename73 = getelementptr inbounds %struct.shfunc, %struct.shfunc* %62, i32 0, i32 1
  %63 = load %struct.shfunc*, %struct.shfunc** %shf2, align 4
  %filename74 = getelementptr inbounds %struct.shfunc, %struct.shfunc* %63, i32 0, i32 1
  %64 = load i8*, i8** %filename74, align 4
  call void @dircache_set(i8** %filename73, i8* %64)
  %65 = load %struct.shfunc*, %struct.shfunc** %shf.addr, align 4
  %node75 = getelementptr inbounds %struct.shfunc, %struct.shfunc* %65, i32 0, i32 0
  %flags76 = getelementptr inbounds %struct.hashnode, %struct.hashnode* %node75, i32 0, i32 2
  %66 = load i32, i32* %flags76, align 4
  %or77 = or i32 %66, 524288
  store i32 %or77, i32* %flags76, align 4
  %67 = load %struct.shfunc*, %struct.shfunc** %shf.addr, align 4
  %node78 = getelementptr inbounds %struct.shfunc, %struct.shfunc* %67, i32 0, i32 0
  %flags79 = getelementptr inbounds %struct.hashnode, %struct.hashnode* %node78, i32 0, i32 2
  %68 = load i32, i32* %flags79, align 4
  %or80 = or i32 %68, 4096
  store i32 %or80, i32* %flags79, align 4
  br label %if.end81

if.end81:                                         ; preds = %if.then71, %if.then65
  br label %if.end82

if.end82:                                         ; preds = %if.end81, %if.then58
  br label %if.end83

if.end83:                                         ; preds = %if.end82, %land.lhs.true55, %land.lhs.true50, %land.lhs.true45, %if.then42
  br label %if.end84

if.end84:                                         ; preds = %if.end83, %for.end
  %69 = load %struct.hashtable*, %struct.hashtable** @shfunctab, align 4
  %addnode85 = getelementptr inbounds %struct.hashtable, %struct.hashtable* %69, i32 0, i32 8
  %70 = load void (%struct.hashtable*, i8*, i8*)*, void (%struct.hashtable*, i8*, i8*)** %addnode85, align 4
  %71 = load %struct.hashtable*, %struct.hashtable** @shfunctab, align 4
  %72 = load i8*, i8** %funcname.addr, align 4
  %call86 = call i8* @ztrdup(i8* %72)
  %73 = load %struct.shfunc*, %struct.shfunc** %shf.addr, align 4
  %74 = bitcast %struct.shfunc* %73 to i8*
  call void %70(%struct.hashtable* %71, i8* %call86, i8* %74)
  br label %if.end87

if.end87:                                         ; preds = %if.end84, %if.end
  ret void
}

declare i32 @settrap(i32, %struct.eprog*, i32) #1

; Function Attrs: noinline nounwind
define i32 @bin_unset(i8* %name, i8** %argv, %struct.options* %ops, i32 %func) #0 {
entry:
  %retval = alloca i32, align 4
  %name.addr = alloca i8*, align 4
  %argv.addr = alloca i8**, align 4
  %ops.addr = alloca %struct.options*, align 4
  %func.addr = alloca i32, align 4
  %pm = alloca %struct.param*, align 4
  %next = alloca %struct.param*, align 4
  %pprog = alloca %struct.patprog*, align 4
  %s = alloca i8*, align 4
  %match = alloca i32, align 4
  %returnval = alloca i32, align 4
  %i = alloca i32, align 4
  %oset = alloca %struct.__sigset_t, align 4
  %tmp = alloca %struct.__sigset_t, align 4
  %tmp41 = alloca %struct.__sigset_t, align 4
  %ss = alloca i8*, align 4
  %subscript = alloca i8*, align 4
  %sse = alloca i8*, align 4
  %tht = alloca %struct.hashtable*, align 4
  %vbuf = alloca %struct.value, align 4
  %start153 = alloca i32, align 4
  %arr165 = alloca [2 x i8*], align 4
  %oset198 = alloca %struct.__sigset_t, align 4
  %tmp202 = alloca %struct.__sigset_t, align 4
  %tmp204 = alloca %struct.__sigset_t, align 4
  store i8* %name, i8** %name.addr, align 4
  store i8** %argv, i8*** %argv.addr, align 4
  store %struct.options* %ops, %struct.options** %ops.addr, align 4
  store i32 %func, i32* %func.addr, align 4
  store i32 0, i32* %match, align 4
  store i32 0, i32* %returnval, align 4
  %0 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind = getelementptr inbounds %struct.options, %struct.options* %0, i32 0, i32 0
  %arrayidx = getelementptr inbounds [128 x i8], [128 x i8]* %ind, i32 0, i32 102
  %1 = load i8, i8* %arrayidx, align 2
  %conv = zext i8 %1 to i32
  %cmp = icmp ne i32 %conv, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %2 = load i8*, i8** %name.addr, align 4
  %3 = load i8**, i8*** %argv.addr, align 4
  %4 = load %struct.options*, %struct.options** %ops.addr, align 4
  %5 = load i32, i32* %func.addr, align 4
  %call = call i32 @bin_unhash(i8* %2, i8** %3, %struct.options* %4, i32 %5)
  store i32 %call, i32* %retval, align 4
  br label %return

if.end:                                           ; preds = %entry
  %6 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind2 = getelementptr inbounds %struct.options, %struct.options* %6, i32 0, i32 0
  %arrayidx3 = getelementptr inbounds [128 x i8], [128 x i8]* %ind2, i32 0, i32 109
  %7 = load i8, i8* %arrayidx3, align 1
  %conv4 = zext i8 %7 to i32
  %cmp5 = icmp ne i32 %conv4, 0
  br i1 %cmp5, label %if.then7, label %if.end48

if.then7:                                         ; preds = %if.end
  br label %while.cond

while.cond:                                       ; preds = %do.end43, %if.then7
  %8 = load i8**, i8*** %argv.addr, align 4
  %incdec.ptr = getelementptr inbounds i8*, i8** %8, i32 1
  store i8** %incdec.ptr, i8*** %argv.addr, align 4
  %9 = load i8*, i8** %8, align 4
  store i8* %9, i8** %s, align 4
  %tobool = icmp ne i8* %9, null
  br i1 %tobool, label %while.body, label %while.end44

while.body:                                       ; preds = %while.cond
  %10 = load i32, i32* @queueing_enabled, align 4
  %inc = add nsw i32 %10, 1
  store i32 %inc, i32* @queueing_enabled, align 4
  %11 = load i8*, i8** %s, align 4
  call void @tokenize(i8* %11)
  %12 = load i8*, i8** %s, align 4
  %call8 = call %struct.patprog* @patcompile(i8* %12, i32 64, i8** null)
  store %struct.patprog* %call8, %struct.patprog** %pprog, align 4
  %tobool9 = icmp ne %struct.patprog* %call8, null
  br i1 %tobool9, label %if.then10, label %if.else

if.then10:                                        ; preds = %while.body
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc28, %if.then10
  %13 = load i32, i32* %i, align 4
  %14 = load %struct.hashtable*, %struct.hashtable** @paramtab, align 4
  %hsize = getelementptr inbounds %struct.hashtable, %struct.hashtable* %14, i32 0, i32 0
  %15 = load i32, i32* %hsize, align 4
  %cmp11 = icmp slt i32 %13, %15
  br i1 %cmp11, label %for.body, label %for.end30

for.body:                                         ; preds = %for.cond
  %16 = load %struct.hashtable*, %struct.hashtable** @paramtab, align 4
  %nodes = getelementptr inbounds %struct.hashtable, %struct.hashtable* %16, i32 0, i32 2
  %17 = load %struct.hashnode**, %struct.hashnode*** %nodes, align 4
  %18 = load i32, i32* %i, align 4
  %arrayidx13 = getelementptr inbounds %struct.hashnode*, %struct.hashnode** %17, i32 %18
  %19 = load %struct.hashnode*, %struct.hashnode** %arrayidx13, align 4
  %20 = bitcast %struct.hashnode* %19 to %struct.param*
  store %struct.param* %20, %struct.param** %pm, align 4
  br label %for.cond14

for.cond14:                                       ; preds = %for.inc, %for.body
  %21 = load %struct.param*, %struct.param** %pm, align 4
  %tobool15 = icmp ne %struct.param* %21, null
  br i1 %tobool15, label %for.body16, label %for.end

for.body16:                                       ; preds = %for.cond14
  %22 = load %struct.param*, %struct.param** %pm, align 4
  %node = getelementptr inbounds %struct.param, %struct.param* %22, i32 0, i32 0
  %next17 = getelementptr inbounds %struct.hashnode, %struct.hashnode* %node, i32 0, i32 0
  %23 = load %struct.hashnode*, %struct.hashnode** %next17, align 8
  %24 = bitcast %struct.hashnode* %23 to %struct.param*
  store %struct.param* %24, %struct.param** %next, align 4
  %25 = load %struct.param*, %struct.param** %pm, align 4
  %node18 = getelementptr inbounds %struct.param, %struct.param* %25, i32 0, i32 0
  %flags = getelementptr inbounds %struct.hashnode, %struct.hashnode* %node18, i32 0, i32 2
  %26 = load i32, i32* %flags, align 8
  %and = and i32 %26, 16777216
  %tobool19 = icmp ne i32 %and, 0
  br i1 %tobool19, label %lor.lhs.false, label %land.lhs.true

lor.lhs.false:                                    ; preds = %for.body16
  %27 = load i8, i8* getelementptr inbounds ([181 x i8], [181 x i8]* @opts, i32 0, i32 155), align 1
  %tobool20 = icmp ne i8 %27, 0
  br i1 %tobool20, label %if.end27, label %land.lhs.true

land.lhs.true:                                    ; preds = %lor.lhs.false, %for.body16
  %28 = load %struct.patprog*, %struct.patprog** %pprog, align 4
  %29 = load %struct.param*, %struct.param** %pm, align 4
  %node21 = getelementptr inbounds %struct.param, %struct.param* %29, i32 0, i32 0
  %nam = getelementptr inbounds %struct.hashnode, %struct.hashnode* %node21, i32 0, i32 1
  %30 = load i8*, i8** %nam, align 4
  %call22 = call i32 @pattry(%struct.patprog* %28, i8* %30)
  %tobool23 = icmp ne i32 %call22, 0
  br i1 %tobool23, label %if.then24, label %if.end27

if.then24:                                        ; preds = %land.lhs.true
  %31 = load %struct.param*, %struct.param** %pm, align 4
  %call25 = call i32 @unsetparam_pm(%struct.param* %31, i32 0, i32 1)
  %32 = load i32, i32* %match, align 4
  %inc26 = add nsw i32 %32, 1
  store i32 %inc26, i32* %match, align 4
  br label %if.end27

if.end27:                                         ; preds = %if.then24, %land.lhs.true, %lor.lhs.false
  br label %for.inc

for.inc:                                          ; preds = %if.end27
  %33 = load %struct.param*, %struct.param** %next, align 4
  store %struct.param* %33, %struct.param** %pm, align 4
  br label %for.cond14

for.end:                                          ; preds = %for.cond14
  br label %for.inc28

for.inc28:                                        ; preds = %for.end
  %34 = load i32, i32* %i, align 4
  %inc29 = add nsw i32 %34, 1
  store i32 %inc29, i32* %i, align 4
  br label %for.cond

for.end30:                                        ; preds = %for.cond
  br label %if.end31

if.else:                                          ; preds = %while.body
  %35 = load i8*, i8** %s, align 4
  call void @untokenize(i8* %35)
  %36 = load i8*, i8** %name.addr, align 4
  %37 = load i8*, i8** %s, align 4
  call void (i8*, i8*, ...) @zwarnnam(i8* %36, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.15, i32 0, i32 0), i8* %37)
  store i32 1, i32* %returnval, align 4
  br label %if.end31

if.end31:                                         ; preds = %if.else, %for.end30
  br label %do.body

do.body:                                          ; preds = %if.end31
  %38 = load i32, i32* @queueing_enabled, align 4
  %dec = add nsw i32 %38, -1
  store i32 %dec, i32* @queueing_enabled, align 4
  %tobool32 = icmp ne i32 %dec, 0
  br i1 %tobool32, label %if.end42, label %if.then33

if.then33:                                        ; preds = %do.body
  br label %do.body34

do.body34:                                        ; preds = %if.then33
  br label %while.cond35

while.cond35:                                     ; preds = %while.body38, %do.body34
  %39 = load i32, i32* @queue_front, align 4
  %40 = load i32, i32* @queue_rear, align 4
  %cmp36 = icmp ne i32 %39, %40
  br i1 %cmp36, label %while.body38, label %while.end

while.body38:                                     ; preds = %while.cond35
  %41 = load i32, i32* @queue_front, align 4
  %add = add nsw i32 %41, 1
  %rem = srem i32 %add, 128
  store i32 %rem, i32* @queue_front, align 4
  %42 = load i32, i32* @queue_front, align 4
  %arrayidx39 = getelementptr inbounds [128 x %struct.__sigset_t], [128 x %struct.__sigset_t]* @signal_mask_queue, i32 0, i32 %42
  call void @signal_setmask(%struct.__sigset_t* sret %tmp, %struct.__sigset_t* byval align 4 %arrayidx39)
  %43 = bitcast %struct.__sigset_t* %oset to i8*
  %44 = bitcast %struct.__sigset_t* %tmp to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %43, i8* %44, i32 128, i32 4, i1 false)
  %45 = load i32, i32* @queue_front, align 4
  %arrayidx40 = getelementptr inbounds [128 x i32], [128 x i32]* @signal_queue, i32 0, i32 %45
  %46 = load i32, i32* %arrayidx40, align 4
  call void @zhandler(i32 %46)
  call void @signal_setmask(%struct.__sigset_t* sret %tmp41, %struct.__sigset_t* byval align 4 %oset)
  br label %while.cond35

while.end:                                        ; preds = %while.cond35
  br label %do.end

do.end:                                           ; preds = %while.end
  br label %if.end42

if.end42:                                         ; preds = %do.end, %do.body
  br label %do.end43

do.end43:                                         ; preds = %if.end42
  br label %while.cond

while.end44:                                      ; preds = %while.cond
  %47 = load i32, i32* %match, align 4
  %tobool45 = icmp ne i32 %47, 0
  br i1 %tobool45, label %if.end47, label %if.then46

if.then46:                                        ; preds = %while.end44
  store i32 1, i32* %returnval, align 4
  br label %if.end47

if.end47:                                         ; preds = %if.then46, %while.end44
  %48 = load i32, i32* %returnval, align 4
  store i32 %48, i32* %retval, align 4
  br label %return

if.end48:                                         ; preds = %if.end
  %49 = load i32, i32* @queueing_enabled, align 4
  %inc49 = add nsw i32 %49, 1
  store i32 %inc49, i32* @queueing_enabled, align 4
  br label %while.cond50

while.cond50:                                     ; preds = %if.end186, %if.then83, %if.end76, %if.end48
  %50 = load i8**, i8*** %argv.addr, align 4
  %incdec.ptr51 = getelementptr inbounds i8*, i8** %50, i32 1
  store i8** %incdec.ptr51, i8*** %argv.addr, align 4
  %51 = load i8*, i8** %50, align 4
  store i8* %51, i8** %s, align 4
  %tobool52 = icmp ne i8* %51, null
  br i1 %tobool52, label %while.body53, label %while.end187

while.body53:                                     ; preds = %while.cond50
  %52 = load i8*, i8** %s, align 4
  %call55 = call i8* @strchr(i8* %52, i32 91)
  store i8* %call55, i8** %ss, align 4
  store i8* null, i8** %subscript, align 4
  %53 = load i8*, i8** %ss, align 4
  %tobool57 = icmp ne i8* %53, null
  br i1 %tobool57, label %if.then58, label %if.end66

if.then58:                                        ; preds = %while.body53
  %54 = load i8*, i8** %ss, align 4
  store i8 0, i8* %54, align 1
  %55 = load i8*, i8** %ss, align 4
  %add.ptr = getelementptr inbounds i8, i8* %55, i32 1
  %call60 = call i8* @parse_subscript(i8* %add.ptr, i32 1, i32 93)
  store i8* %call60, i8** %sse, align 4
  %tobool61 = icmp ne i8* %call60, null
  br i1 %tobool61, label %if.then62, label %if.end65

if.then62:                                        ; preds = %if.then58
  %56 = load i8*, i8** %sse, align 4
  store i8 0, i8* %56, align 1
  %57 = load i8*, i8** %ss, align 4
  %add.ptr63 = getelementptr inbounds i8, i8* %57, i32 1
  %call64 = call i8* @dupstring(i8* %add.ptr63)
  store i8* %call64, i8** %subscript, align 4
  %58 = load i8*, i8** %sse, align 4
  store i8 93, i8* %58, align 1
  %59 = load i8*, i8** %subscript, align 4
  call void @remnulargs(i8* %59)
  %60 = load i8*, i8** %subscript, align 4
  call void @untokenize(i8* %60)
  br label %if.end65

if.end65:                                         ; preds = %if.then62, %if.then58
  br label %if.end66

if.end66:                                         ; preds = %if.end65, %while.body53
  %61 = load i8*, i8** %ss, align 4
  %tobool67 = icmp ne i8* %61, null
  br i1 %tobool67, label %land.lhs.true68, label %lor.lhs.false70

land.lhs.true68:                                  ; preds = %if.end66
  %62 = load i8*, i8** %subscript, align 4
  %tobool69 = icmp ne i8* %62, null
  br i1 %tobool69, label %lor.lhs.false70, label %if.then73

lor.lhs.false70:                                  ; preds = %land.lhs.true68, %if.end66
  %63 = load i8*, i8** %s, align 4
  %call71 = call i32 @isident(i8* %63)
  %tobool72 = icmp ne i32 %call71, 0
  br i1 %tobool72, label %if.end77, label %if.then73

if.then73:                                        ; preds = %lor.lhs.false70, %land.lhs.true68
  %64 = load i8*, i8** %ss, align 4
  %tobool74 = icmp ne i8* %64, null
  br i1 %tobool74, label %if.then75, label %if.end76

if.then75:                                        ; preds = %if.then73
  %65 = load i8*, i8** %ss, align 4
  store i8 91, i8* %65, align 1
  br label %if.end76

if.end76:                                         ; preds = %if.then75, %if.then73
  %66 = load i8*, i8** %name.addr, align 4
  %67 = load i8*, i8** %s, align 4
  call void (i8*, i8*, ...) @zerrnam(i8* %66, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.77, i32 0, i32 0), i8* %67)
  store i32 1, i32* %returnval, align 4
  br label %while.cond50

if.end77:                                         ; preds = %lor.lhs.false70
  %68 = load %struct.hashtable*, %struct.hashtable** @paramtab, align 4
  %69 = load %struct.hashtable*, %struct.hashtable** @realparamtab, align 4
  %cmp78 = icmp eq %struct.hashtable* %68, %69
  br i1 %cmp78, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end77
  %70 = load %struct.hashtable*, %struct.hashtable** @paramtab, align 4
  %getnode2 = getelementptr inbounds %struct.hashtable, %struct.hashtable* %70, i32 0, i32 10
  %71 = load %struct.hashnode* (%struct.hashtable*, i8*)*, %struct.hashnode* (%struct.hashtable*, i8*)** %getnode2, align 4
  %72 = load %struct.hashtable*, %struct.hashtable** @paramtab, align 4
  %73 = load i8*, i8** %s, align 4
  %call80 = call %struct.hashnode* %71(%struct.hashtable* %72, i8* %73)
  br label %cond.end

cond.false:                                       ; preds = %if.end77
  %74 = load %struct.hashtable*, %struct.hashtable** @paramtab, align 4
  %getnode = getelementptr inbounds %struct.hashtable, %struct.hashtable* %74, i32 0, i32 9
  %75 = load %struct.hashnode* (%struct.hashtable*, i8*)*, %struct.hashnode* (%struct.hashtable*, i8*)** %getnode, align 4
  %76 = load %struct.hashtable*, %struct.hashtable** @paramtab, align 4
  %77 = load i8*, i8** %s, align 4
  %call81 = call %struct.hashnode* %75(%struct.hashtable* %76, i8* %77)
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.hashnode* [ %call80, %cond.true ], [ %call81, %cond.false ]
  %78 = bitcast %struct.hashnode* %cond to %struct.param*
  store %struct.param* %78, %struct.param** %pm, align 4
  %79 = load %struct.param*, %struct.param** %pm, align 4
  %tobool82 = icmp ne %struct.param* %79, null
  br i1 %tobool82, label %if.else84, label %if.then83

if.then83:                                        ; preds = %cond.end
  br label %while.cond50

if.else84:                                        ; preds = %cond.end
  %80 = load %struct.param*, %struct.param** %pm, align 4
  %node85 = getelementptr inbounds %struct.param, %struct.param* %80, i32 0, i32 0
  %flags86 = getelementptr inbounds %struct.hashnode, %struct.hashnode* %node85, i32 0, i32 2
  %81 = load i32, i32* %flags86, align 8
  %and87 = and i32 %81, 16777216
  %tobool88 = icmp ne i32 %and87, 0
  br i1 %tobool88, label %land.lhs.true89, label %if.else95

land.lhs.true89:                                  ; preds = %if.else84
  %82 = load i8, i8* getelementptr inbounds ([181 x i8], [181 x i8]* @opts, i32 0, i32 155), align 1
  %conv90 = sext i8 %82 to i32
  %tobool91 = icmp ne i32 %conv90, 0
  br i1 %tobool91, label %if.then92, label %if.else95

if.then92:                                        ; preds = %land.lhs.true89
  %83 = load i8*, i8** %name.addr, align 4
  %84 = load %struct.param*, %struct.param** %pm, align 4
  %node93 = getelementptr inbounds %struct.param, %struct.param* %84, i32 0, i32 0
  %nam94 = getelementptr inbounds %struct.hashnode, %struct.hashnode* %node93, i32 0, i32 1
  %85 = load i8*, i8** %nam94, align 4
  call void (i8*, i8*, ...) @zerrnam(i8* %83, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.78, i32 0, i32 0), i8* %85)
  store i32 1, i32* %returnval, align 4
  br label %if.end182

if.else95:                                        ; preds = %land.lhs.true89, %if.else84
  %86 = load i8*, i8** %ss, align 4
  %tobool96 = icmp ne i8* %86, null
  br i1 %tobool96, label %if.then97, label %if.else176

if.then97:                                        ; preds = %if.else95
  %87 = load %struct.param*, %struct.param** %pm, align 4
  %node98 = getelementptr inbounds %struct.param, %struct.param* %87, i32 0, i32 0
  %flags99 = getelementptr inbounds %struct.hashnode, %struct.hashnode* %node98, i32 0, i32 2
  %88 = load i32, i32* %flags99, align 8
  %and100 = and i32 %88, 31
  %cmp101 = icmp eq i32 %and100, 16
  br i1 %cmp101, label %if.then103, label %if.else109

if.then103:                                       ; preds = %if.then97
  %89 = load %struct.hashtable*, %struct.hashtable** @paramtab, align 4
  store %struct.hashtable* %89, %struct.hashtable** %tht, align 4
  %90 = load %struct.param*, %struct.param** %pm, align 4
  %gsu = getelementptr inbounds %struct.param, %struct.param* %90, i32 0, i32 2
  %h = bitcast %union.anon.1* %gsu to %struct.gsu_hash**
  %91 = load %struct.gsu_hash*, %struct.gsu_hash** %h, align 8
  %getfn = getelementptr inbounds %struct.gsu_hash, %struct.gsu_hash* %91, i32 0, i32 0
  %92 = load %struct.hashtable* (%struct.param*)*, %struct.hashtable* (%struct.param*)** %getfn, align 4
  %93 = load %struct.param*, %struct.param** %pm, align 4
  %call105 = call %struct.hashtable* %92(%struct.param* %93)
  store %struct.hashtable* %call105, %struct.hashtable** @paramtab, align 4
  %tobool106 = icmp ne %struct.hashtable* %call105, null
  br i1 %tobool106, label %if.then107, label %if.end108

if.then107:                                       ; preds = %if.then103
  %94 = load i8*, i8** %subscript, align 4
  call void @unsetparam(i8* %94)
  br label %if.end108

if.end108:                                        ; preds = %if.then107, %if.then103
  %95 = load %struct.hashtable*, %struct.hashtable** %tht, align 4
  store %struct.hashtable* %95, %struct.hashtable** @paramtab, align 4
  br label %if.end175

if.else109:                                       ; preds = %if.then97
  %96 = load %struct.param*, %struct.param** %pm, align 4
  %node110 = getelementptr inbounds %struct.param, %struct.param* %96, i32 0, i32 0
  %flags111 = getelementptr inbounds %struct.hashnode, %struct.hashnode* %node110, i32 0, i32 2
  %97 = load i32, i32* %flags111, align 8
  %and112 = and i32 %97, 31
  %cmp113 = icmp eq i32 %and112, 0
  br i1 %cmp113, label %if.then121, label %lor.lhs.false115

lor.lhs.false115:                                 ; preds = %if.else109
  %98 = load %struct.param*, %struct.param** %pm, align 4
  %node116 = getelementptr inbounds %struct.param, %struct.param* %98, i32 0, i32 0
  %flags117 = getelementptr inbounds %struct.hashnode, %struct.hashnode* %node116, i32 0, i32 2
  %99 = load i32, i32* %flags117, align 8
  %and118 = and i32 %99, 31
  %cmp119 = icmp eq i32 %and118, 1
  br i1 %cmp119, label %if.then121, label %if.else173

if.then121:                                       ; preds = %lor.lhs.false115, %if.else109
  %100 = load %struct.param*, %struct.param** %pm, align 4
  %node123 = getelementptr inbounds %struct.param, %struct.param* %100, i32 0, i32 0
  %flags124 = getelementptr inbounds %struct.hashnode, %struct.hashnode* %node123, i32 0, i32 2
  %101 = load i32, i32* %flags124, align 8
  %and125 = and i32 %101, 31
  %cmp126 = icmp eq i32 %and125, 1
  %cond128 = select i1 %cmp126, i32 512, i32 0
  %isarr = getelementptr inbounds %struct.value, %struct.value* %vbuf, i32 0, i32 0
  store i32 %cond128, i32* %isarr, align 4
  %102 = load %struct.param*, %struct.param** %pm, align 4
  %pm129 = getelementptr inbounds %struct.value, %struct.value* %vbuf, i32 0, i32 1
  store %struct.param* %102, %struct.param** %pm129, align 4
  %flags130 = getelementptr inbounds %struct.value, %struct.value* %vbuf, i32 0, i32 2
  store i32 0, i32* %flags130, align 4
  %start = getelementptr inbounds %struct.value, %struct.value* %vbuf, i32 0, i32 3
  store i32 0, i32* %start, align 4
  %end = getelementptr inbounds %struct.value, %struct.value* %vbuf, i32 0, i32 4
  store i32 -1, i32* %end, align 4
  %arr = getelementptr inbounds %struct.value, %struct.value* %vbuf, i32 0, i32 5
  store i8** null, i8*** %arr, align 4
  %103 = load i8*, i8** %ss, align 4
  store i8 91, i8* %103, align 1
  %call131 = call i32 @getindex(i8** %ss, %struct.value* %vbuf, i32 64)
  %cmp132 = icmp eq i32 %call131, 0
  br i1 %cmp132, label %land.lhs.true134, label %if.end171

land.lhs.true134:                                 ; preds = %if.then121
  %pm135 = getelementptr inbounds %struct.value, %struct.value* %vbuf, i32 0, i32 1
  %104 = load %struct.param*, %struct.param** %pm135, align 4
  %tobool136 = icmp ne %struct.param* %104, null
  br i1 %tobool136, label %land.lhs.true137, label %if.end171

land.lhs.true137:                                 ; preds = %land.lhs.true134
  %pm138 = getelementptr inbounds %struct.value, %struct.value* %vbuf, i32 0, i32 1
  %105 = load %struct.param*, %struct.param** %pm138, align 4
  %node139 = getelementptr inbounds %struct.param, %struct.param* %105, i32 0, i32 0
  %flags140 = getelementptr inbounds %struct.hashnode, %struct.hashnode* %node139, i32 0, i32 2
  %106 = load i32, i32* %flags140, align 8
  %and141 = and i32 %106, 33554432
  %tobool142 = icmp ne i32 %and141, 0
  br i1 %tobool142, label %if.end171, label %if.then143

if.then143:                                       ; preds = %land.lhs.true137
  %107 = load %struct.param*, %struct.param** %pm, align 4
  %node144 = getelementptr inbounds %struct.param, %struct.param* %107, i32 0, i32 0
  %flags145 = getelementptr inbounds %struct.hashnode, %struct.hashnode* %node144, i32 0, i32 2
  %108 = load i32, i32* %flags145, align 8
  %and146 = and i32 %108, 31
  %cmp147 = icmp eq i32 %and146, 0
  br i1 %cmp147, label %if.then149, label %if.else151

if.then149:                                       ; preds = %if.then143
  %call150 = call i8* @ztrdup(i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.34, i32 0, i32 0))
  call void @setstrvalue(%struct.value* %vbuf, i8* %call150)
  br label %if.end170

if.else151:                                       ; preds = %if.then143
  %start154 = getelementptr inbounds %struct.value, %struct.value* %vbuf, i32 0, i32 3
  %109 = load i32, i32* %start154, align 4
  %flags155 = getelementptr inbounds %struct.value, %struct.value* %vbuf, i32 0, i32 2
  %110 = load i32, i32* %flags155, align 4
  %and156 = and i32 %110, 1
  %tobool157 = icmp ne i32 %and156, 0
  %lnot = xor i1 %tobool157, true
  %lnot158 = xor i1 %lnot, true
  %lnot.ext = zext i1 %lnot158 to i32
  %sub = sub nsw i32 %109, %lnot.ext
  store i32 %sub, i32* %start153, align 4
  %pm159 = getelementptr inbounds %struct.value, %struct.value* %vbuf, i32 0, i32 1
  %111 = load %struct.param*, %struct.param** %pm159, align 4
  %u = getelementptr inbounds %struct.param, %struct.param* %111, i32 0, i32 1
  %arr160 = bitcast %union.anon.0* %u to i8***
  %112 = load i8**, i8*** %arr160, align 8
  %113 = load i32, i32* %start153, align 4
  %call161 = call signext i8 @arrlen_gt(i8** %112, i32 %113)
  %tobool162 = icmp ne i8 %call161, 0
  br i1 %tobool162, label %if.then163, label %if.end169

if.then163:                                       ; preds = %if.else151
  %arrayidx166 = getelementptr inbounds [2 x i8*], [2 x i8*]* %arr165, i32 0, i32 0
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.34, i32 0, i32 0), i8** %arrayidx166, align 4
  %arrayidx167 = getelementptr inbounds [2 x i8*], [2 x i8*]* %arr165, i32 0, i32 1
  store i8* null, i8** %arrayidx167, align 4
  %arraydecay = getelementptr inbounds [2 x i8*], [2 x i8*]* %arr165, i32 0, i32 0
  %call168 = call i8** @zarrdup(i8** %arraydecay)
  call void @setarrvalue(%struct.value* %vbuf, i8** %call168)
  br label %if.end169

if.end169:                                        ; preds = %if.then163, %if.else151
  br label %if.end170

if.end170:                                        ; preds = %if.end169, %if.then149
  br label %if.end171

if.end171:                                        ; preds = %if.end170, %land.lhs.true137, %land.lhs.true134, %if.then121
  %114 = load i32, i32* @errflag, align 4
  store i32 %114, i32* %returnval, align 4
  %115 = load i32, i32* @errflag, align 4
  %and172 = and i32 %115, -2
  store i32 %and172, i32* @errflag, align 4
  br label %if.end174

if.else173:                                       ; preds = %lor.lhs.false115
  %116 = load i8*, i8** %name.addr, align 4
  %117 = load i8*, i8** %s, align 4
  call void (i8*, i8*, ...) @zerrnam(i8* %116, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.79, i32 0, i32 0), i8* %117)
  store i32 1, i32* %returnval, align 4
  br label %if.end174

if.end174:                                        ; preds = %if.else173, %if.end171
  br label %if.end175

if.end175:                                        ; preds = %if.end174, %if.end108
  br label %if.end181

if.else176:                                       ; preds = %if.else95
  %118 = load %struct.param*, %struct.param** %pm, align 4
  %call177 = call i32 @unsetparam_pm(%struct.param* %118, i32 0, i32 1)
  %tobool178 = icmp ne i32 %call177, 0
  br i1 %tobool178, label %if.then179, label %if.end180

if.then179:                                       ; preds = %if.else176
  store i32 1, i32* %returnval, align 4
  br label %if.end180

if.end180:                                        ; preds = %if.then179, %if.else176
  br label %if.end181

if.end181:                                        ; preds = %if.end180, %if.end175
  br label %if.end182

if.end182:                                        ; preds = %if.end181, %if.then92
  br label %if.end183

if.end183:                                        ; preds = %if.end182
  %119 = load i8*, i8** %ss, align 4
  %tobool184 = icmp ne i8* %119, null
  br i1 %tobool184, label %if.then185, label %if.end186

if.then185:                                       ; preds = %if.end183
  %120 = load i8*, i8** %ss, align 4
  store i8 91, i8* %120, align 1
  br label %if.end186

if.end186:                                        ; preds = %if.then185, %if.end183
  br label %while.cond50

while.end187:                                     ; preds = %while.cond50
  br label %do.body188

do.body188:                                       ; preds = %while.end187
  %121 = load i32, i32* @queueing_enabled, align 4
  %dec189 = add nsw i32 %121, -1
  store i32 %dec189, i32* @queueing_enabled, align 4
  %tobool190 = icmp ne i32 %dec189, 0
  br i1 %tobool190, label %if.end207, label %if.then191

if.then191:                                       ; preds = %do.body188
  br label %do.body192

do.body192:                                       ; preds = %if.then191
  br label %while.cond193

while.cond193:                                    ; preds = %while.body196, %do.body192
  %122 = load i32, i32* @queue_front, align 4
  %123 = load i32, i32* @queue_rear, align 4
  %cmp194 = icmp ne i32 %122, %123
  br i1 %cmp194, label %while.body196, label %while.end205

while.body196:                                    ; preds = %while.cond193
  %124 = load i32, i32* @queue_front, align 4
  %add199 = add nsw i32 %124, 1
  %rem200 = srem i32 %add199, 128
  store i32 %rem200, i32* @queue_front, align 4
  %125 = load i32, i32* @queue_front, align 4
  %arrayidx201 = getelementptr inbounds [128 x %struct.__sigset_t], [128 x %struct.__sigset_t]* @signal_mask_queue, i32 0, i32 %125
  call void @signal_setmask(%struct.__sigset_t* sret %tmp202, %struct.__sigset_t* byval align 4 %arrayidx201)
  %126 = bitcast %struct.__sigset_t* %oset198 to i8*
  %127 = bitcast %struct.__sigset_t* %tmp202 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %126, i8* %127, i32 128, i32 4, i1 false)
  %128 = load i32, i32* @queue_front, align 4
  %arrayidx203 = getelementptr inbounds [128 x i32], [128 x i32]* @signal_queue, i32 0, i32 %128
  %129 = load i32, i32* %arrayidx203, align 4
  call void @zhandler(i32 %129)
  call void @signal_setmask(%struct.__sigset_t* sret %tmp204, %struct.__sigset_t* byval align 4 %oset198)
  br label %while.cond193

while.end205:                                     ; preds = %while.cond193
  br label %do.end206

do.end206:                                        ; preds = %while.end205
  br label %if.end207

if.end207:                                        ; preds = %do.end206, %do.body188
  br label %do.end208

do.end208:                                        ; preds = %if.end207
  %130 = load i32, i32* %returnval, align 4
  store i32 %130, i32* %retval, align 4
  br label %return

return:                                           ; preds = %do.end208, %if.end47, %if.then
  %131 = load i32, i32* %retval, align 4
  ret i32 %131
}

; Function Attrs: noinline nounwind
define i32 @bin_unhash(i8* %name, i8** %argv, %struct.options* %ops, i32 %func) #0 {
entry:
  %retval = alloca i32, align 4
  %name.addr = alloca i8*, align 4
  %argv.addr = alloca i8**, align 4
  %ops.addr = alloca %struct.options*, align 4
  %func.addr = alloca i32, align 4
  %ht = alloca %struct.hashtable*, align 4
  %hn = alloca %struct.hashnode*, align 4
  %nhn = alloca %struct.hashnode*, align 4
  %pprog = alloca %struct.patprog*, align 4
  %match = alloca i32, align 4
  %returnval = alloca i32, align 4
  %all = alloca i32, align 4
  %i = alloca i32, align 4
  %oset = alloca %struct.__sigset_t, align 4
  %tmp = alloca %struct.__sigset_t, align 4
  %tmp71 = alloca %struct.__sigset_t, align 4
  %oset126 = alloca %struct.__sigset_t, align 4
  %tmp130 = alloca %struct.__sigset_t, align 4
  %tmp132 = alloca %struct.__sigset_t, align 4
  %oset175 = alloca %struct.__sigset_t, align 4
  %tmp179 = alloca %struct.__sigset_t, align 4
  %tmp181 = alloca %struct.__sigset_t, align 4
  store i8* %name, i8** %name.addr, align 4
  store i8** %argv, i8*** %argv.addr, align 4
  store %struct.options* %ops, %struct.options** %ops.addr, align 4
  store i32 %func, i32* %func.addr, align 4
  store i32 0, i32* %match, align 4
  store i32 0, i32* %returnval, align 4
  store i32 0, i32* %all, align 4
  %0 = load i32, i32* %func.addr, align 4
  %cmp = icmp eq i32 %0, 29
  br i1 %cmp, label %if.then, label %if.else17

if.then:                                          ; preds = %entry
  %1 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind = getelementptr inbounds %struct.options, %struct.options* %1, i32 0, i32 0
  %arrayidx = getelementptr inbounds [128 x i8], [128 x i8]* %ind, i32 0, i32 115
  %2 = load i8, i8* %arrayidx, align 1
  %conv = zext i8 %2 to i32
  %cmp1 = icmp ne i32 %conv, 0
  br i1 %cmp1, label %if.then3, label %if.else

if.then3:                                         ; preds = %if.then
  %3 = load %struct.hashtable*, %struct.hashtable** @sufaliastab, align 4
  store %struct.hashtable* %3, %struct.hashtable** %ht, align 4
  br label %if.end

if.else:                                          ; preds = %if.then
  %4 = load %struct.hashtable*, %struct.hashtable** @aliastab, align 4
  store %struct.hashtable* %4, %struct.hashtable** %ht, align 4
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then3
  %5 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind4 = getelementptr inbounds %struct.options, %struct.options* %5, i32 0, i32 0
  %arrayidx5 = getelementptr inbounds [128 x i8], [128 x i8]* %ind4, i32 0, i32 97
  %6 = load i8, i8* %arrayidx5, align 1
  %conv6 = zext i8 %6 to i32
  %cmp7 = icmp ne i32 %conv6, 0
  br i1 %cmp7, label %if.then9, label %if.else12

if.then9:                                         ; preds = %if.end
  %7 = load i8**, i8*** %argv.addr, align 4
  %8 = load i8*, i8** %7, align 4
  %tobool = icmp ne i8* %8, null
  br i1 %tobool, label %if.then10, label %if.end11

if.then10:                                        ; preds = %if.then9
  %9 = load i8*, i8** %name.addr, align 4
  call void (i8*, i8*, ...) @zwarnnam(i8* %9, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.90, i32 0, i32 0))
  store i32 1, i32* %retval, align 4
  br label %return

if.end11:                                         ; preds = %if.then9
  store i32 1, i32* %all, align 4
  br label %if.end16

if.else12:                                        ; preds = %if.end
  %10 = load i8**, i8*** %argv.addr, align 4
  %11 = load i8*, i8** %10, align 4
  %tobool13 = icmp ne i8* %11, null
  br i1 %tobool13, label %if.end15, label %if.then14

if.then14:                                        ; preds = %if.else12
  %12 = load i8*, i8** %name.addr, align 4
  call void (i8*, i8*, ...) @zwarnnam(i8* %12, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.9, i32 0, i32 0))
  store i32 1, i32* %retval, align 4
  br label %return

if.end15:                                         ; preds = %if.else12
  br label %if.end16

if.end16:                                         ; preds = %if.end15, %if.end11
  br label %if.end52

if.else17:                                        ; preds = %entry
  %13 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind18 = getelementptr inbounds %struct.options, %struct.options* %13, i32 0, i32 0
  %arrayidx19 = getelementptr inbounds [128 x i8], [128 x i8]* %ind18, i32 0, i32 100
  %14 = load i8, i8* %arrayidx19, align 4
  %conv20 = zext i8 %14 to i32
  %cmp21 = icmp ne i32 %conv20, 0
  br i1 %cmp21, label %if.then23, label %if.else24

if.then23:                                        ; preds = %if.else17
  %15 = load %struct.hashtable*, %struct.hashtable** @nameddirtab, align 4
  store %struct.hashtable* %15, %struct.hashtable** %ht, align 4
  br label %if.end51

if.else24:                                        ; preds = %if.else17
  %16 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind25 = getelementptr inbounds %struct.options, %struct.options* %16, i32 0, i32 0
  %arrayidx26 = getelementptr inbounds [128 x i8], [128 x i8]* %ind25, i32 0, i32 102
  %17 = load i8, i8* %arrayidx26, align 2
  %conv27 = zext i8 %17 to i32
  %cmp28 = icmp ne i32 %conv27, 0
  br i1 %cmp28, label %if.then30, label %if.else31

if.then30:                                        ; preds = %if.else24
  %18 = load %struct.hashtable*, %struct.hashtable** @shfunctab, align 4
  store %struct.hashtable* %18, %struct.hashtable** %ht, align 4
  br label %if.end50

if.else31:                                        ; preds = %if.else24
  %19 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind32 = getelementptr inbounds %struct.options, %struct.options* %19, i32 0, i32 0
  %arrayidx33 = getelementptr inbounds [128 x i8], [128 x i8]* %ind32, i32 0, i32 115
  %20 = load i8, i8* %arrayidx33, align 1
  %conv34 = zext i8 %20 to i32
  %cmp35 = icmp ne i32 %conv34, 0
  br i1 %cmp35, label %if.then37, label %if.else38

if.then37:                                        ; preds = %if.else31
  %21 = load %struct.hashtable*, %struct.hashtable** @sufaliastab, align 4
  store %struct.hashtable* %21, %struct.hashtable** %ht, align 4
  br label %if.end49

if.else38:                                        ; preds = %if.else31
  %22 = load i32, i32* %func.addr, align 4
  %cmp39 = icmp eq i32 %22, 28
  br i1 %cmp39, label %land.lhs.true, label %if.else47

land.lhs.true:                                    ; preds = %if.else38
  %23 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind41 = getelementptr inbounds %struct.options, %struct.options* %23, i32 0, i32 0
  %arrayidx42 = getelementptr inbounds [128 x i8], [128 x i8]* %ind41, i32 0, i32 97
  %24 = load i8, i8* %arrayidx42, align 1
  %conv43 = zext i8 %24 to i32
  %cmp44 = icmp ne i32 %conv43, 0
  br i1 %cmp44, label %if.then46, label %if.else47

if.then46:                                        ; preds = %land.lhs.true
  %25 = load %struct.hashtable*, %struct.hashtable** @aliastab, align 4
  store %struct.hashtable* %25, %struct.hashtable** %ht, align 4
  br label %if.end48

if.else47:                                        ; preds = %land.lhs.true, %if.else38
  %26 = load %struct.hashtable*, %struct.hashtable** @cmdnamtab, align 4
  store %struct.hashtable* %26, %struct.hashtable** %ht, align 4
  br label %if.end48

if.end48:                                         ; preds = %if.else47, %if.then46
  br label %if.end49

if.end49:                                         ; preds = %if.end48, %if.then37
  br label %if.end50

if.end50:                                         ; preds = %if.end49, %if.then30
  br label %if.end51

if.end51:                                         ; preds = %if.end50, %if.then23
  br label %if.end52

if.end52:                                         ; preds = %if.end51, %if.end16
  %27 = load i32, i32* %all, align 4
  %tobool53 = icmp ne i32 %27, 0
  br i1 %tobool53, label %if.then54, label %if.end74

if.then54:                                        ; preds = %if.end52
  %28 = load i32, i32* @queueing_enabled, align 4
  %inc = add nsw i32 %28, 1
  store i32 %inc, i32* @queueing_enabled, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc61, %if.then54
  %29 = load i32, i32* %i, align 4
  %30 = load %struct.hashtable*, %struct.hashtable** %ht, align 4
  %hsize = getelementptr inbounds %struct.hashtable, %struct.hashtable* %30, i32 0, i32 0
  %31 = load i32, i32* %hsize, align 4
  %cmp55 = icmp slt i32 %29, %31
  br i1 %cmp55, label %for.body, label %for.end63

for.body:                                         ; preds = %for.cond
  %32 = load %struct.hashtable*, %struct.hashtable** %ht, align 4
  %nodes = getelementptr inbounds %struct.hashtable, %struct.hashtable* %32, i32 0, i32 2
  %33 = load %struct.hashnode**, %struct.hashnode*** %nodes, align 4
  %34 = load i32, i32* %i, align 4
  %arrayidx57 = getelementptr inbounds %struct.hashnode*, %struct.hashnode** %33, i32 %34
  %35 = load %struct.hashnode*, %struct.hashnode** %arrayidx57, align 4
  store %struct.hashnode* %35, %struct.hashnode** %hn, align 4
  br label %for.cond58

for.cond58:                                       ; preds = %for.inc, %for.body
  %36 = load %struct.hashnode*, %struct.hashnode** %hn, align 4
  %tobool59 = icmp ne %struct.hashnode* %36, null
  br i1 %tobool59, label %for.body60, label %for.end

for.body60:                                       ; preds = %for.cond58
  %37 = load %struct.hashnode*, %struct.hashnode** %hn, align 4
  %next = getelementptr inbounds %struct.hashnode, %struct.hashnode* %37, i32 0, i32 0
  %38 = load %struct.hashnode*, %struct.hashnode** %next, align 4
  store %struct.hashnode* %38, %struct.hashnode** %nhn, align 4
  %39 = load %struct.hashtable*, %struct.hashtable** %ht, align 4
  %freenode = getelementptr inbounds %struct.hashtable, %struct.hashtable* %39, i32 0, i32 14
  %40 = load void (%struct.hashnode*)*, void (%struct.hashnode*)** %freenode, align 4
  %41 = load %struct.hashtable*, %struct.hashtable** %ht, align 4
  %removenode = getelementptr inbounds %struct.hashtable, %struct.hashtable* %41, i32 0, i32 11
  %42 = load %struct.hashnode* (%struct.hashtable*, i8*)*, %struct.hashnode* (%struct.hashtable*, i8*)** %removenode, align 4
  %43 = load %struct.hashtable*, %struct.hashtable** %ht, align 4
  %44 = load %struct.hashnode*, %struct.hashnode** %hn, align 4
  %nam = getelementptr inbounds %struct.hashnode, %struct.hashnode* %44, i32 0, i32 1
  %45 = load i8*, i8** %nam, align 4
  %call = call %struct.hashnode* %42(%struct.hashtable* %43, i8* %45)
  call void %40(%struct.hashnode* %call)
  br label %for.inc

for.inc:                                          ; preds = %for.body60
  %46 = load %struct.hashnode*, %struct.hashnode** %nhn, align 4
  store %struct.hashnode* %46, %struct.hashnode** %hn, align 4
  br label %for.cond58

for.end:                                          ; preds = %for.cond58
  br label %for.inc61

for.inc61:                                        ; preds = %for.end
  %47 = load i32, i32* %i, align 4
  %inc62 = add nsw i32 %47, 1
  store i32 %inc62, i32* %i, align 4
  br label %for.cond

for.end63:                                        ; preds = %for.cond
  br label %do.body

do.body:                                          ; preds = %for.end63
  %48 = load i32, i32* @queueing_enabled, align 4
  %dec = add nsw i32 %48, -1
  store i32 %dec, i32* @queueing_enabled, align 4
  %tobool64 = icmp ne i32 %dec, 0
  br i1 %tobool64, label %if.end72, label %if.then65

if.then65:                                        ; preds = %do.body
  br label %do.body66

do.body66:                                        ; preds = %if.then65
  br label %while.cond

while.cond:                                       ; preds = %while.body, %do.body66
  %49 = load i32, i32* @queue_front, align 4
  %50 = load i32, i32* @queue_rear, align 4
  %cmp67 = icmp ne i32 %49, %50
  br i1 %cmp67, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %51 = load i32, i32* @queue_front, align 4
  %add = add nsw i32 %51, 1
  %rem = srem i32 %add, 128
  store i32 %rem, i32* @queue_front, align 4
  %52 = load i32, i32* @queue_front, align 4
  %arrayidx69 = getelementptr inbounds [128 x %struct.__sigset_t], [128 x %struct.__sigset_t]* @signal_mask_queue, i32 0, i32 %52
  call void @signal_setmask(%struct.__sigset_t* sret %tmp, %struct.__sigset_t* byval align 4 %arrayidx69)
  %53 = bitcast %struct.__sigset_t* %oset to i8*
  %54 = bitcast %struct.__sigset_t* %tmp to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %53, i8* %54, i32 128, i32 4, i1 false)
  %55 = load i32, i32* @queue_front, align 4
  %arrayidx70 = getelementptr inbounds [128 x i32], [128 x i32]* @signal_queue, i32 0, i32 %55
  %56 = load i32, i32* %arrayidx70, align 4
  call void @zhandler(i32 %56)
  call void @signal_setmask(%struct.__sigset_t* sret %tmp71, %struct.__sigset_t* byval align 4 %oset)
  br label %while.cond

while.end:                                        ; preds = %while.cond
  br label %do.end

do.end:                                           ; preds = %while.end
  br label %if.end72

if.end72:                                         ; preds = %do.end, %do.body
  br label %do.end73

do.end73:                                         ; preds = %if.end72
  store i32 0, i32* %retval, align 4
  br label %return

if.end74:                                         ; preds = %if.end52
  %57 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind75 = getelementptr inbounds %struct.options, %struct.options* %57, i32 0, i32 0
  %arrayidx76 = getelementptr inbounds [128 x i8], [128 x i8]* %ind75, i32 0, i32 109
  %58 = load i8, i8* %arrayidx76, align 1
  %conv77 = zext i8 %58 to i32
  %cmp78 = icmp ne i32 %conv77, 0
  br i1 %cmp78, label %if.then80, label %if.end142

if.then80:                                        ; preds = %if.end74
  br label %for.cond81

for.cond81:                                       ; preds = %for.inc137, %if.then80
  %59 = load i8**, i8*** %argv.addr, align 4
  %60 = load i8*, i8** %59, align 4
  %tobool82 = icmp ne i8* %60, null
  br i1 %tobool82, label %for.body83, label %for.end138

for.body83:                                       ; preds = %for.cond81
  %61 = load i32, i32* @queueing_enabled, align 4
  %inc84 = add nsw i32 %61, 1
  store i32 %inc84, i32* @queueing_enabled, align 4
  %62 = load i8**, i8*** %argv.addr, align 4
  %63 = load i8*, i8** %62, align 4
  call void @tokenize(i8* %63)
  %64 = load i8**, i8*** %argv.addr, align 4
  %65 = load i8*, i8** %64, align 4
  %call85 = call %struct.patprog* @patcompile(i8* %65, i32 64, i8** null)
  store %struct.patprog* %call85, %struct.patprog** %pprog, align 4
  %tobool86 = icmp ne %struct.patprog* %call85, null
  br i1 %tobool86, label %if.then87, label %if.else114

if.then87:                                        ; preds = %for.body83
  store i32 0, i32* %i, align 4
  br label %for.cond88

for.cond88:                                       ; preds = %for.inc111, %if.then87
  %66 = load i32, i32* %i, align 4
  %67 = load %struct.hashtable*, %struct.hashtable** %ht, align 4
  %hsize89 = getelementptr inbounds %struct.hashtable, %struct.hashtable* %67, i32 0, i32 0
  %68 = load i32, i32* %hsize89, align 4
  %cmp90 = icmp slt i32 %66, %68
  br i1 %cmp90, label %for.body92, label %for.end113

for.body92:                                       ; preds = %for.cond88
  %69 = load %struct.hashtable*, %struct.hashtable** %ht, align 4
  %nodes93 = getelementptr inbounds %struct.hashtable, %struct.hashtable* %69, i32 0, i32 2
  %70 = load %struct.hashnode**, %struct.hashnode*** %nodes93, align 4
  %71 = load i32, i32* %i, align 4
  %arrayidx94 = getelementptr inbounds %struct.hashnode*, %struct.hashnode** %70, i32 %71
  %72 = load %struct.hashnode*, %struct.hashnode** %arrayidx94, align 4
  store %struct.hashnode* %72, %struct.hashnode** %hn, align 4
  br label %for.cond95

for.cond95:                                       ; preds = %for.inc109, %for.body92
  %73 = load %struct.hashnode*, %struct.hashnode** %hn, align 4
  %tobool96 = icmp ne %struct.hashnode* %73, null
  br i1 %tobool96, label %for.body97, label %for.end110

for.body97:                                       ; preds = %for.cond95
  %74 = load %struct.hashnode*, %struct.hashnode** %hn, align 4
  %next98 = getelementptr inbounds %struct.hashnode, %struct.hashnode* %74, i32 0, i32 0
  %75 = load %struct.hashnode*, %struct.hashnode** %next98, align 4
  store %struct.hashnode* %75, %struct.hashnode** %nhn, align 4
  %76 = load %struct.patprog*, %struct.patprog** %pprog, align 4
  %77 = load %struct.hashnode*, %struct.hashnode** %hn, align 4
  %nam99 = getelementptr inbounds %struct.hashnode, %struct.hashnode* %77, i32 0, i32 1
  %78 = load i8*, i8** %nam99, align 4
  %call100 = call i32 @pattry(%struct.patprog* %76, i8* %78)
  %tobool101 = icmp ne i32 %call100, 0
  br i1 %tobool101, label %if.then102, label %if.end108

if.then102:                                       ; preds = %for.body97
  %79 = load %struct.hashtable*, %struct.hashtable** %ht, align 4
  %freenode103 = getelementptr inbounds %struct.hashtable, %struct.hashtable* %79, i32 0, i32 14
  %80 = load void (%struct.hashnode*)*, void (%struct.hashnode*)** %freenode103, align 4
  %81 = load %struct.hashtable*, %struct.hashtable** %ht, align 4
  %removenode104 = getelementptr inbounds %struct.hashtable, %struct.hashtable* %81, i32 0, i32 11
  %82 = load %struct.hashnode* (%struct.hashtable*, i8*)*, %struct.hashnode* (%struct.hashtable*, i8*)** %removenode104, align 4
  %83 = load %struct.hashtable*, %struct.hashtable** %ht, align 4
  %84 = load %struct.hashnode*, %struct.hashnode** %hn, align 4
  %nam105 = getelementptr inbounds %struct.hashnode, %struct.hashnode* %84, i32 0, i32 1
  %85 = load i8*, i8** %nam105, align 4
  %call106 = call %struct.hashnode* %82(%struct.hashtable* %83, i8* %85)
  call void %80(%struct.hashnode* %call106)
  %86 = load i32, i32* %match, align 4
  %inc107 = add nsw i32 %86, 1
  store i32 %inc107, i32* %match, align 4
  br label %if.end108

if.end108:                                        ; preds = %if.then102, %for.body97
  br label %for.inc109

for.inc109:                                       ; preds = %if.end108
  %87 = load %struct.hashnode*, %struct.hashnode** %nhn, align 4
  store %struct.hashnode* %87, %struct.hashnode** %hn, align 4
  br label %for.cond95

for.end110:                                       ; preds = %for.cond95
  br label %for.inc111

for.inc111:                                       ; preds = %for.end110
  %88 = load i32, i32* %i, align 4
  %inc112 = add nsw i32 %88, 1
  store i32 %inc112, i32* %i, align 4
  br label %for.cond88

for.end113:                                       ; preds = %for.cond88
  br label %if.end115

if.else114:                                       ; preds = %for.body83
  %89 = load i8**, i8*** %argv.addr, align 4
  %90 = load i8*, i8** %89, align 4
  call void @untokenize(i8* %90)
  %91 = load i8*, i8** %name.addr, align 4
  %92 = load i8**, i8*** %argv.addr, align 4
  %93 = load i8*, i8** %92, align 4
  call void (i8*, i8*, ...) @zwarnnam(i8* %91, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.15, i32 0, i32 0), i8* %93)
  store i32 1, i32* %returnval, align 4
  br label %if.end115

if.end115:                                        ; preds = %if.else114, %for.end113
  br label %do.body116

do.body116:                                       ; preds = %if.end115
  %94 = load i32, i32* @queueing_enabled, align 4
  %dec117 = add nsw i32 %94, -1
  store i32 %dec117, i32* @queueing_enabled, align 4
  %tobool118 = icmp ne i32 %dec117, 0
  br i1 %tobool118, label %if.end135, label %if.then119

if.then119:                                       ; preds = %do.body116
  br label %do.body120

do.body120:                                       ; preds = %if.then119
  br label %while.cond121

while.cond121:                                    ; preds = %while.body124, %do.body120
  %95 = load i32, i32* @queue_front, align 4
  %96 = load i32, i32* @queue_rear, align 4
  %cmp122 = icmp ne i32 %95, %96
  br i1 %cmp122, label %while.body124, label %while.end133

while.body124:                                    ; preds = %while.cond121
  %97 = load i32, i32* @queue_front, align 4
  %add127 = add nsw i32 %97, 1
  %rem128 = srem i32 %add127, 128
  store i32 %rem128, i32* @queue_front, align 4
  %98 = load i32, i32* @queue_front, align 4
  %arrayidx129 = getelementptr inbounds [128 x %struct.__sigset_t], [128 x %struct.__sigset_t]* @signal_mask_queue, i32 0, i32 %98
  call void @signal_setmask(%struct.__sigset_t* sret %tmp130, %struct.__sigset_t* byval align 4 %arrayidx129)
  %99 = bitcast %struct.__sigset_t* %oset126 to i8*
  %100 = bitcast %struct.__sigset_t* %tmp130 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %99, i8* %100, i32 128, i32 4, i1 false)
  %101 = load i32, i32* @queue_front, align 4
  %arrayidx131 = getelementptr inbounds [128 x i32], [128 x i32]* @signal_queue, i32 0, i32 %101
  %102 = load i32, i32* %arrayidx131, align 4
  call void @zhandler(i32 %102)
  call void @signal_setmask(%struct.__sigset_t* sret %tmp132, %struct.__sigset_t* byval align 4 %oset126)
  br label %while.cond121

while.end133:                                     ; preds = %while.cond121
  br label %do.end134

do.end134:                                        ; preds = %while.end133
  br label %if.end135

if.end135:                                        ; preds = %do.end134, %do.body116
  br label %do.end136

do.end136:                                        ; preds = %if.end135
  br label %for.inc137

for.inc137:                                       ; preds = %do.end136
  %103 = load i8**, i8*** %argv.addr, align 4
  %incdec.ptr = getelementptr inbounds i8*, i8** %103, i32 1
  store i8** %incdec.ptr, i8*** %argv.addr, align 4
  br label %for.cond81

for.end138:                                       ; preds = %for.cond81
  %104 = load i32, i32* %match, align 4
  %tobool139 = icmp ne i32 %104, 0
  br i1 %tobool139, label %if.end141, label %if.then140

if.then140:                                       ; preds = %for.end138
  store i32 1, i32* %returnval, align 4
  br label %if.end141

if.end141:                                        ; preds = %if.then140, %for.end138
  %105 = load i32, i32* %returnval, align 4
  store i32 %105, i32* %retval, align 4
  br label %return

if.end142:                                        ; preds = %if.end74
  %106 = load i32, i32* @queueing_enabled, align 4
  %inc143 = add nsw i32 %106, 1
  store i32 %inc143, i32* @queueing_enabled, align 4
  br label %for.cond144

for.cond144:                                      ; preds = %for.inc162, %if.end142
  %107 = load i8**, i8*** %argv.addr, align 4
  %108 = load i8*, i8** %107, align 4
  %tobool145 = icmp ne i8* %108, null
  br i1 %tobool145, label %for.body146, label %for.end164

for.body146:                                      ; preds = %for.cond144
  %109 = load %struct.hashtable*, %struct.hashtable** %ht, align 4
  %removenode147 = getelementptr inbounds %struct.hashtable, %struct.hashtable* %109, i32 0, i32 11
  %110 = load %struct.hashnode* (%struct.hashtable*, i8*)*, %struct.hashnode* (%struct.hashtable*, i8*)** %removenode147, align 4
  %111 = load %struct.hashtable*, %struct.hashtable** %ht, align 4
  %112 = load i8**, i8*** %argv.addr, align 4
  %113 = load i8*, i8** %112, align 4
  %call148 = call %struct.hashnode* %110(%struct.hashtable* %111, i8* %113)
  store %struct.hashnode* %call148, %struct.hashnode** %hn, align 4
  %tobool149 = icmp ne %struct.hashnode* %call148, null
  br i1 %tobool149, label %if.then150, label %if.else152

if.then150:                                       ; preds = %for.body146
  %114 = load %struct.hashtable*, %struct.hashtable** %ht, align 4
  %freenode151 = getelementptr inbounds %struct.hashtable, %struct.hashtable* %114, i32 0, i32 14
  %115 = load void (%struct.hashnode*)*, void (%struct.hashnode*)** %freenode151, align 4
  %116 = load %struct.hashnode*, %struct.hashnode** %hn, align 4
  call void %115(%struct.hashnode* %116)
  br label %if.end161

if.else152:                                       ; preds = %for.body146
  %117 = load i32, i32* %func.addr, align 4
  %cmp153 = icmp eq i32 %117, 31
  br i1 %cmp153, label %land.lhs.true155, label %if.else159

land.lhs.true155:                                 ; preds = %if.else152
  %118 = load i8, i8* getelementptr inbounds ([181 x i8], [181 x i8]* @opts, i32 0, i32 132), align 1
  %conv156 = sext i8 %118 to i32
  %tobool157 = icmp ne i32 %conv156, 0
  br i1 %tobool157, label %if.then158, label %if.else159

if.then158:                                       ; preds = %land.lhs.true155
  store i32 0, i32* %returnval, align 4
  br label %if.end160

if.else159:                                       ; preds = %land.lhs.true155, %if.else152
  %119 = load i8*, i8** %name.addr, align 4
  %120 = load i8**, i8*** %argv.addr, align 4
  %121 = load i8*, i8** %120, align 4
  call void (i8*, i8*, ...) @zwarnnam(i8* %119, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.16, i32 0, i32 0), i8* %121)
  store i32 1, i32* %returnval, align 4
  br label %if.end160

if.end160:                                        ; preds = %if.else159, %if.then158
  br label %if.end161

if.end161:                                        ; preds = %if.end160, %if.then150
  br label %for.inc162

for.inc162:                                       ; preds = %if.end161
  %122 = load i8**, i8*** %argv.addr, align 4
  %incdec.ptr163 = getelementptr inbounds i8*, i8** %122, i32 1
  store i8** %incdec.ptr163, i8*** %argv.addr, align 4
  br label %for.cond144

for.end164:                                       ; preds = %for.cond144
  br label %do.body165

do.body165:                                       ; preds = %for.end164
  %123 = load i32, i32* @queueing_enabled, align 4
  %dec166 = add nsw i32 %123, -1
  store i32 %dec166, i32* @queueing_enabled, align 4
  %tobool167 = icmp ne i32 %dec166, 0
  br i1 %tobool167, label %if.end184, label %if.then168

if.then168:                                       ; preds = %do.body165
  br label %do.body169

do.body169:                                       ; preds = %if.then168
  br label %while.cond170

while.cond170:                                    ; preds = %while.body173, %do.body169
  %124 = load i32, i32* @queue_front, align 4
  %125 = load i32, i32* @queue_rear, align 4
  %cmp171 = icmp ne i32 %124, %125
  br i1 %cmp171, label %while.body173, label %while.end182

while.body173:                                    ; preds = %while.cond170
  %126 = load i32, i32* @queue_front, align 4
  %add176 = add nsw i32 %126, 1
  %rem177 = srem i32 %add176, 128
  store i32 %rem177, i32* @queue_front, align 4
  %127 = load i32, i32* @queue_front, align 4
  %arrayidx178 = getelementptr inbounds [128 x %struct.__sigset_t], [128 x %struct.__sigset_t]* @signal_mask_queue, i32 0, i32 %127
  call void @signal_setmask(%struct.__sigset_t* sret %tmp179, %struct.__sigset_t* byval align 4 %arrayidx178)
  %128 = bitcast %struct.__sigset_t* %oset175 to i8*
  %129 = bitcast %struct.__sigset_t* %tmp179 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %128, i8* %129, i32 128, i32 4, i1 false)
  %130 = load i32, i32* @queue_front, align 4
  %arrayidx180 = getelementptr inbounds [128 x i32], [128 x i32]* @signal_queue, i32 0, i32 %130
  %131 = load i32, i32* %arrayidx180, align 4
  call void @zhandler(i32 %131)
  call void @signal_setmask(%struct.__sigset_t* sret %tmp181, %struct.__sigset_t* byval align 4 %oset175)
  br label %while.cond170

while.end182:                                     ; preds = %while.cond170
  br label %do.end183

do.end183:                                        ; preds = %while.end182
  br label %if.end184

if.end184:                                        ; preds = %do.end183, %do.body165
  br label %do.end185

do.end185:                                        ; preds = %if.end184
  %132 = load i32, i32* %returnval, align 4
  store i32 %132, i32* %retval, align 4
  br label %return

return:                                           ; preds = %do.end185, %if.end141, %do.end73, %if.then14, %if.then10
  %133 = load i32, i32* %retval, align 4
  ret i32 %133
}

declare i8* @parse_subscript(i8*, i32, i32) #1

declare void @remnulargs(i8*) #1

declare i32 @isident(i8*) #1

declare void @unsetparam(i8*) #1

declare i32 @getindex(i8**, %struct.value*, i32) #1

declare void @setstrvalue(%struct.value*, i8*) #1

declare void @setarrvalue(%struct.value*, i8**) #1

; Function Attrs: noinline nounwind
define i32 @bin_whence(i8* %nam, i8** %argv, %struct.options* %ops, i32 %func) #0 {
entry:
  %retval = alloca i32, align 4
  %nam.addr = alloca i8*, align 4
  %argv.addr = alloca i8**, align 4
  %ops.addr = alloca %struct.options*, align 4
  %func.addr = alloca i32, align 4
  %hn = alloca %struct.hashnode*, align 4
  %pprog = alloca %struct.patprog*, align 4
  %returnval = alloca i32, align 4
  %printflags = alloca i32, align 4
  %aliasflags = alloca i32, align 4
  %csh = alloca i32, align 4
  %all = alloca i32, align 4
  %v = alloca i32, align 4
  %wd = alloca i32, align 4
  %informed = alloca i32, align 4
  %expand = alloca i32, align 4
  %cnam = alloca i8*, align 4
  %allmatched = alloca i8**, align 4
  %eptr = alloca i8*, align 4
  %oset = alloca %struct.__sigset_t, align 4
  %tmp = alloca %struct.__sigset_t, align 4
  %tmp120 = alloca %struct.__sigset_t, align 4
  %oset130 = alloca %struct.__sigset_t, align 4
  %tmp134 = alloca %struct.__sigset_t, align 4
  %tmp136 = alloca %struct.__sigset_t, align 4
  %suf = alloca i8*, align 4
  %pp = alloca i8**, align 4
  %buf = alloca i8*, align 4
  %oset392 = alloca %struct.__sigset_t, align 4
  %tmp396 = alloca %struct.__sigset_t, align 4
  %tmp398 = alloca %struct.__sigset_t, align 4
  store i8* %nam, i8** %nam.addr, align 4
  store i8** %argv, i8*** %argv.addr, align 4
  store %struct.options* %ops, %struct.options** %ops.addr, align 4
  store i32 %func, i32* %func.addr, align 4
  store i32 0, i32* %returnval, align 4
  store i32 0, i32* %printflags, align 4
  store i32 0, i32* %informed, align 4
  store i32 0, i32* %expand, align 4
  store i8** null, i8*** %allmatched, align 4
  %0 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind = getelementptr inbounds %struct.options, %struct.options* %0, i32 0, i32 0
  %arrayidx = getelementptr inbounds [128 x i8], [128 x i8]* %ind, i32 0, i32 99
  %1 = load i8, i8* %arrayidx, align 1
  %conv = zext i8 %1 to i32
  %cmp = icmp ne i32 %conv, 0
  %conv1 = zext i1 %cmp to i32
  store i32 %conv1, i32* %csh, align 4
  %2 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind2 = getelementptr inbounds %struct.options, %struct.options* %2, i32 0, i32 0
  %arrayidx3 = getelementptr inbounds [128 x i8], [128 x i8]* %ind2, i32 0, i32 118
  %3 = load i8, i8* %arrayidx3, align 2
  %conv4 = zext i8 %3 to i32
  %cmp5 = icmp ne i32 %conv4, 0
  %conv6 = zext i1 %cmp5 to i32
  store i32 %conv6, i32* %v, align 4
  %4 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind7 = getelementptr inbounds %struct.options, %struct.options* %4, i32 0, i32 0
  %arrayidx8 = getelementptr inbounds [128 x i8], [128 x i8]* %ind7, i32 0, i32 97
  %5 = load i8, i8* %arrayidx8, align 1
  %conv9 = zext i8 %5 to i32
  %cmp10 = icmp ne i32 %conv9, 0
  %conv11 = zext i1 %cmp10 to i32
  store i32 %conv11, i32* %all, align 4
  %6 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind12 = getelementptr inbounds %struct.options, %struct.options* %6, i32 0, i32 0
  %arrayidx13 = getelementptr inbounds [128 x i8], [128 x i8]* %ind12, i32 0, i32 119
  %7 = load i8, i8* %arrayidx13, align 1
  %conv14 = zext i8 %7 to i32
  %cmp15 = icmp ne i32 %conv14, 0
  %conv16 = zext i1 %cmp15 to i32
  store i32 %conv16, i32* %wd, align 4
  %8 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind17 = getelementptr inbounds %struct.options, %struct.options* %8, i32 0, i32 0
  %arrayidx18 = getelementptr inbounds [128 x i8], [128 x i8]* %ind17, i32 0, i32 120
  %9 = load i8, i8* %arrayidx18, align 4
  %conv19 = zext i8 %9 to i32
  %cmp20 = icmp ne i32 %conv19, 0
  br i1 %cmp20, label %if.then, label %if.end31

if.then:                                          ; preds = %entry
  %10 = load %struct.options*, %struct.options** %ops.addr, align 4
  %args = getelementptr inbounds %struct.options, %struct.options* %10, i32 0, i32 1
  %11 = load i8**, i8*** %args, align 4
  %12 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind22 = getelementptr inbounds %struct.options, %struct.options* %12, i32 0, i32 0
  %arrayidx23 = getelementptr inbounds [128 x i8], [128 x i8]* %ind22, i32 0, i32 120
  %13 = load i8, i8* %arrayidx23, align 4
  %conv24 = zext i8 %13 to i32
  %shr = ashr i32 %conv24, 2
  %sub = sub nsw i32 %shr, 1
  %arrayidx25 = getelementptr inbounds i8*, i8** %11, i32 %sub
  %14 = load i8*, i8** %arrayidx25, align 4
  %call = call i32 @zstrtol(i8* %14, i8** %eptr, i32 10)
  store i32 %call, i32* %expand, align 4
  %15 = load i8*, i8** %eptr, align 4
  %16 = load i8, i8* %15, align 1
  %tobool = icmp ne i8 %16, 0
  br i1 %tobool, label %if.then26, label %if.end

if.then26:                                        ; preds = %if.then
  %17 = load i8*, i8** %nam.addr, align 4
  call void (i8*, i8*, ...) @zwarnnam(i8* %17, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.66, i32 0, i32 0))
  store i32 1, i32* %retval, align 4
  br label %return

if.end:                                           ; preds = %if.then
  %18 = load i32, i32* %expand, align 4
  %cmp27 = icmp eq i32 %18, 0
  br i1 %cmp27, label %if.then29, label %if.end30

if.then29:                                        ; preds = %if.end
  store i32 -1, i32* %expand, align 4
  br label %if.end30

if.end30:                                         ; preds = %if.then29, %if.end
  br label %if.end31

if.end31:                                         ; preds = %if.end30, %entry
  %19 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind32 = getelementptr inbounds %struct.options, %struct.options* %19, i32 0, i32 0
  %arrayidx33 = getelementptr inbounds [128 x i8], [128 x i8]* %ind32, i32 0, i32 119
  %20 = load i8, i8* %arrayidx33, align 1
  %conv34 = zext i8 %20 to i32
  %cmp35 = icmp ne i32 %conv34, 0
  br i1 %cmp35, label %if.then37, label %if.else

if.then37:                                        ; preds = %if.end31
  %21 = load i32, i32* %printflags, align 4
  %or = or i32 %21, 2048
  store i32 %or, i32* %printflags, align 4
  br label %if.end57

if.else:                                          ; preds = %if.end31
  %22 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind38 = getelementptr inbounds %struct.options, %struct.options* %22, i32 0, i32 0
  %arrayidx39 = getelementptr inbounds [128 x i8], [128 x i8]* %ind38, i32 0, i32 99
  %23 = load i8, i8* %arrayidx39, align 1
  %conv40 = zext i8 %23 to i32
  %cmp41 = icmp ne i32 %conv40, 0
  br i1 %cmp41, label %if.then43, label %if.else45

if.then43:                                        ; preds = %if.else
  %24 = load i32, i32* %printflags, align 4
  %or44 = or i32 %24, 128
  store i32 %or44, i32* %printflags, align 4
  br label %if.end56

if.else45:                                        ; preds = %if.else
  %25 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind46 = getelementptr inbounds %struct.options, %struct.options* %25, i32 0, i32 0
  %arrayidx47 = getelementptr inbounds [128 x i8], [128 x i8]* %ind46, i32 0, i32 118
  %26 = load i8, i8* %arrayidx47, align 2
  %conv48 = zext i8 %26 to i32
  %cmp49 = icmp ne i32 %conv48, 0
  br i1 %cmp49, label %if.then51, label %if.else53

if.then51:                                        ; preds = %if.else45
  %27 = load i32, i32* %printflags, align 4
  %or52 = or i32 %27, 256
  store i32 %or52, i32* %printflags, align 4
  br label %if.end55

if.else53:                                        ; preds = %if.else45
  %28 = load i32, i32* %printflags, align 4
  %or54 = or i32 %28, 512
  store i32 %or54, i32* %printflags, align 4
  br label %if.end55

if.end55:                                         ; preds = %if.else53, %if.then51
  br label %if.end56

if.end56:                                         ; preds = %if.end55, %if.then43
  br label %if.end57

if.end57:                                         ; preds = %if.end56, %if.then37
  %29 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind58 = getelementptr inbounds %struct.options, %struct.options* %29, i32 0, i32 0
  %arrayidx59 = getelementptr inbounds [128 x i8], [128 x i8]* %ind58, i32 0, i32 102
  %30 = load i8, i8* %arrayidx59, align 2
  %conv60 = zext i8 %30 to i32
  %cmp61 = icmp ne i32 %conv60, 0
  br i1 %cmp61, label %if.then63, label %if.end65

if.then63:                                        ; preds = %if.end57
  %31 = load i32, i32* %printflags, align 4
  %or64 = or i32 %31, 1024
  store i32 %or64, i32* %printflags, align 4
  br label %if.end65

if.end65:                                         ; preds = %if.then63, %if.end57
  %32 = load i32, i32* %func.addr, align 4
  %cmp66 = icmp eq i32 %32, 27
  br i1 %cmp66, label %if.then68, label %if.else77

if.then68:                                        ; preds = %if.end65
  %33 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind69 = getelementptr inbounds %struct.options, %struct.options* %33, i32 0, i32 0
  %arrayidx70 = getelementptr inbounds [128 x i8], [128 x i8]* %ind69, i32 0, i32 86
  %34 = load i8, i8* %arrayidx70, align 2
  %conv71 = zext i8 %34 to i32
  %cmp72 = icmp ne i32 %conv71, 0
  br i1 %cmp72, label %if.then74, label %if.else75

if.then74:                                        ; preds = %if.then68
  store i32 256, i32* %aliasflags, align 4
  store i32 256, i32* %printflags, align 4
  store i32 1, i32* %v, align 4
  br label %if.end76

if.else75:                                        ; preds = %if.then68
  store i32 4, i32* %aliasflags, align 4
  store i32 512, i32* %printflags, align 4
  store i32 0, i32* %v, align 4
  br label %if.end76

if.end76:                                         ; preds = %if.else75, %if.then74
  br label %if.end78

if.else77:                                        ; preds = %if.end65
  %35 = load i32, i32* %printflags, align 4
  store i32 %35, i32* %aliasflags, align 4
  br label %if.end78

if.end78:                                         ; preds = %if.else77, %if.end76
  %36 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind79 = getelementptr inbounds %struct.options, %struct.options* %36, i32 0, i32 0
  %arrayidx80 = getelementptr inbounds [128 x i8], [128 x i8]* %ind79, i32 0, i32 109
  %37 = load i8, i8* %arrayidx80, align 1
  %conv81 = zext i8 %37 to i32
  %cmp82 = icmp ne i32 %conv81, 0
  br i1 %cmp82, label %if.then84, label %if.end148

if.then84:                                        ; preds = %if.end78
  %38 = load %struct.hashtable*, %struct.hashtable** @cmdnamtab, align 4
  %filltable = getelementptr inbounds %struct.hashtable, %struct.hashtable* %38, i32 0, i32 6
  %39 = load void (%struct.hashtable*)*, void (%struct.hashtable*)** %filltable, align 4
  %40 = load %struct.hashtable*, %struct.hashtable** @cmdnamtab, align 4
  call void %39(%struct.hashtable* %40)
  %41 = load i32, i32* %all, align 4
  %tobool85 = icmp ne i32 %41, 0
  br i1 %tobool85, label %if.then86, label %if.end88

if.then86:                                        ; preds = %if.then84
  call void @pushheap()
  %call87 = call %union.linkroot* @newlinklist()
  store %union.linkroot* %call87, %union.linkroot** @matchednodes, align 4
  br label %if.end88

if.end88:                                         ; preds = %if.then86, %if.then84
  %42 = load i32, i32* @queueing_enabled, align 4
  %inc = add nsw i32 %42, 1
  store i32 %inc, i32* @queueing_enabled, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end88
  %43 = load i8**, i8*** %argv.addr, align 4
  %44 = load i8*, i8** %43, align 4
  %tobool89 = icmp ne i8* %44, null
  br i1 %tobool89, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %45 = load i8**, i8*** %argv.addr, align 4
  %46 = load i8*, i8** %45, align 4
  call void @tokenize(i8* %46)
  %47 = load i8**, i8*** %argv.addr, align 4
  %48 = load i8*, i8** %47, align 4
  %call90 = call %struct.patprog* @patcompile(i8* %48, i32 64, i8** null)
  store %struct.patprog* %call90, %struct.patprog** %pprog, align 4
  %tobool91 = icmp ne %struct.patprog* %call90, null
  br i1 %tobool91, label %if.end93, label %if.then92

if.then92:                                        ; preds = %for.body
  %49 = load i8**, i8*** %argv.addr, align 4
  %50 = load i8*, i8** %49, align 4
  call void @untokenize(i8* %50)
  %51 = load i8*, i8** %nam.addr, align 4
  %52 = load i8**, i8*** %argv.addr, align 4
  %53 = load i8*, i8** %52, align 4
  call void (i8*, i8*, ...) @zwarnnam(i8* %51, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.15, i32 0, i32 0), i8* %53)
  store i32 1, i32* %returnval, align 4
  br label %for.inc

if.end93:                                         ; preds = %for.body
  %54 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind94 = getelementptr inbounds %struct.options, %struct.options* %54, i32 0, i32 0
  %arrayidx95 = getelementptr inbounds [128 x i8], [128 x i8]* %ind94, i32 0, i32 112
  %55 = load i8, i8* %arrayidx95, align 4
  %conv96 = zext i8 %55 to i32
  %cmp97 = icmp ne i32 %conv96, 0
  br i1 %cmp97, label %if.end110, label %if.then99

if.then99:                                        ; preds = %if.end93
  %56 = load %struct.hashtable*, %struct.hashtable** @aliastab, align 4
  %57 = load %struct.patprog*, %struct.patprog** %pprog, align 4
  %58 = load %struct.hashtable*, %struct.hashtable** @aliastab, align 4
  %printnode = getelementptr inbounds %struct.hashtable, %struct.hashtable* %58, i32 0, i32 15
  %59 = load void (%struct.hashnode*, i32)*, void (%struct.hashnode*, i32)** %printnode, align 4
  %60 = load i32, i32* %printflags, align 4
  %call100 = call i32 @scanmatchtable(%struct.hashtable* %56, %struct.patprog* %57, i32 1, i32 0, i32 1, void (%struct.hashnode*, i32)* %59, i32 %60)
  %61 = load i32, i32* %informed, align 4
  %add = add nsw i32 %61, %call100
  store i32 %add, i32* %informed, align 4
  %62 = load %struct.hashtable*, %struct.hashtable** @reswdtab, align 4
  %63 = load %struct.patprog*, %struct.patprog** %pprog, align 4
  %64 = load %struct.hashtable*, %struct.hashtable** @reswdtab, align 4
  %printnode101 = getelementptr inbounds %struct.hashtable, %struct.hashtable* %64, i32 0, i32 15
  %65 = load void (%struct.hashnode*, i32)*, void (%struct.hashnode*, i32)** %printnode101, align 4
  %66 = load i32, i32* %printflags, align 4
  %call102 = call i32 @scanmatchtable(%struct.hashtable* %62, %struct.patprog* %63, i32 1, i32 0, i32 1, void (%struct.hashnode*, i32)* %65, i32 %66)
  %67 = load i32, i32* %informed, align 4
  %add103 = add nsw i32 %67, %call102
  store i32 %add103, i32* %informed, align 4
  %68 = load %struct.patprog*, %struct.patprog** %pprog, align 4
  %69 = load %struct.hashtable*, %struct.hashtable** @shfunctab, align 4
  %printnode104 = getelementptr inbounds %struct.hashtable, %struct.hashtable* %69, i32 0, i32 15
  %70 = load void (%struct.hashnode*, i32)*, void (%struct.hashnode*, i32)** %printnode104, align 4
  %71 = load i32, i32* %printflags, align 4
  %72 = load i32, i32* %expand, align 4
  %call105 = call i32 @scanmatchshfunc(%struct.patprog* %68, i32 1, i32 0, i32 1, void (%struct.hashnode*, i32)* %70, i32 %71, i32 %72)
  %73 = load i32, i32* %informed, align 4
  %add106 = add nsw i32 %73, %call105
  store i32 %add106, i32* %informed, align 4
  %74 = load %struct.hashtable*, %struct.hashtable** @builtintab, align 4
  %75 = load %struct.patprog*, %struct.patprog** %pprog, align 4
  %76 = load %struct.hashtable*, %struct.hashtable** @builtintab, align 4
  %printnode107 = getelementptr inbounds %struct.hashtable, %struct.hashtable* %76, i32 0, i32 15
  %77 = load void (%struct.hashnode*, i32)*, void (%struct.hashnode*, i32)** %printnode107, align 4
  %78 = load i32, i32* %printflags, align 4
  %call108 = call i32 @scanmatchtable(%struct.hashtable* %74, %struct.patprog* %75, i32 1, i32 0, i32 1, void (%struct.hashnode*, i32)* %77, i32 %78)
  %79 = load i32, i32* %informed, align 4
  %add109 = add nsw i32 %79, %call108
  store i32 %add109, i32* %informed, align 4
  br label %if.end110

if.end110:                                        ; preds = %if.then99, %if.end93
  %80 = load %struct.hashtable*, %struct.hashtable** @cmdnamtab, align 4
  %81 = load %struct.patprog*, %struct.patprog** %pprog, align 4
  %82 = load i32, i32* %all, align 4
  %tobool111 = icmp ne i32 %82, 0
  br i1 %tobool111, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end110
  br label %cond.end

cond.false:                                       ; preds = %if.end110
  %83 = load %struct.hashtable*, %struct.hashtable** @cmdnamtab, align 4
  %printnode112 = getelementptr inbounds %struct.hashtable, %struct.hashtable* %83, i32 0, i32 15
  %84 = load void (%struct.hashnode*, i32)*, void (%struct.hashnode*, i32)** %printnode112, align 4
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi void (%struct.hashnode*, i32)* [ @fetchcmdnamnode, %cond.true ], [ %84, %cond.false ]
  %85 = load i32, i32* %printflags, align 4
  %call113 = call i32 @scanmatchtable(%struct.hashtable* %80, %struct.patprog* %81, i32 1, i32 0, i32 0, void (%struct.hashnode*, i32)* %cond, i32 %85)
  %86 = load i32, i32* %informed, align 4
  %add114 = add nsw i32 %86, %call113
  store i32 %add114, i32* %informed, align 4
  br label %do.body

do.body:                                          ; preds = %cond.end
  br label %while.cond

while.cond:                                       ; preds = %while.body, %do.body
  %87 = load i32, i32* @queue_front, align 4
  %88 = load i32, i32* @queue_rear, align 4
  %cmp115 = icmp ne i32 %87, %88
  br i1 %cmp115, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %89 = load i32, i32* @queue_front, align 4
  %add117 = add nsw i32 %89, 1
  %rem = srem i32 %add117, 128
  store i32 %rem, i32* @queue_front, align 4
  %90 = load i32, i32* @queue_front, align 4
  %arrayidx118 = getelementptr inbounds [128 x %struct.__sigset_t], [128 x %struct.__sigset_t]* @signal_mask_queue, i32 0, i32 %90
  call void @signal_setmask(%struct.__sigset_t* sret %tmp, %struct.__sigset_t* byval align 4 %arrayidx118)
  %91 = bitcast %struct.__sigset_t* %oset to i8*
  %92 = bitcast %struct.__sigset_t* %tmp to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %91, i8* %92, i32 128, i32 4, i1 false)
  %93 = load i32, i32* @queue_front, align 4
  %arrayidx119 = getelementptr inbounds [128 x i32], [128 x i32]* @signal_queue, i32 0, i32 %93
  %94 = load i32, i32* %arrayidx119, align 4
  call void @zhandler(i32 %94)
  call void @signal_setmask(%struct.__sigset_t* sret %tmp120, %struct.__sigset_t* byval align 4 %oset)
  br label %while.cond

while.end:                                        ; preds = %while.cond
  br label %do.end

do.end:                                           ; preds = %while.end
  br label %for.inc

for.inc:                                          ; preds = %do.end, %if.then92
  %95 = load i8**, i8*** %argv.addr, align 4
  %incdec.ptr = getelementptr inbounds i8*, i8** %95, i32 1
  store i8** %incdec.ptr, i8*** %argv.addr, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  br label %do.body121

do.body121:                                       ; preds = %for.end
  %96 = load i32, i32* @queueing_enabled, align 4
  %dec = add nsw i32 %96, -1
  store i32 %dec, i32* @queueing_enabled, align 4
  %tobool122 = icmp ne i32 %dec, 0
  br i1 %tobool122, label %if.end139, label %if.then123

if.then123:                                       ; preds = %do.body121
  br label %do.body124

do.body124:                                       ; preds = %if.then123
  br label %while.cond125

while.cond125:                                    ; preds = %while.body128, %do.body124
  %97 = load i32, i32* @queue_front, align 4
  %98 = load i32, i32* @queue_rear, align 4
  %cmp126 = icmp ne i32 %97, %98
  br i1 %cmp126, label %while.body128, label %while.end137

while.body128:                                    ; preds = %while.cond125
  %99 = load i32, i32* @queue_front, align 4
  %add131 = add nsw i32 %99, 1
  %rem132 = srem i32 %add131, 128
  store i32 %rem132, i32* @queue_front, align 4
  %100 = load i32, i32* @queue_front, align 4
  %arrayidx133 = getelementptr inbounds [128 x %struct.__sigset_t], [128 x %struct.__sigset_t]* @signal_mask_queue, i32 0, i32 %100
  call void @signal_setmask(%struct.__sigset_t* sret %tmp134, %struct.__sigset_t* byval align 4 %arrayidx133)
  %101 = bitcast %struct.__sigset_t* %oset130 to i8*
  %102 = bitcast %struct.__sigset_t* %tmp134 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %101, i8* %102, i32 128, i32 4, i1 false)
  %103 = load i32, i32* @queue_front, align 4
  %arrayidx135 = getelementptr inbounds [128 x i32], [128 x i32]* @signal_queue, i32 0, i32 %103
  %104 = load i32, i32* %arrayidx135, align 4
  call void @zhandler(i32 %104)
  call void @signal_setmask(%struct.__sigset_t* sret %tmp136, %struct.__sigset_t* byval align 4 %oset130)
  br label %while.cond125

while.end137:                                     ; preds = %while.cond125
  br label %do.end138

do.end138:                                        ; preds = %while.end137
  br label %if.end139

if.end139:                                        ; preds = %do.end138, %do.body121
  br label %do.end140

do.end140:                                        ; preds = %if.end139
  %105 = load i32, i32* %all, align 4
  %tobool141 = icmp ne i32 %105, 0
  br i1 %tobool141, label %if.then142, label %if.else144

if.then142:                                       ; preds = %do.end140
  %106 = load %union.linkroot*, %union.linkroot** @matchednodes, align 4
  %call143 = call i8** @zlinklist2array(%union.linkroot* %106)
  store i8** %call143, i8*** %argv.addr, align 4
  store i8** %call143, i8*** %allmatched, align 4
  store %union.linkroot* null, %union.linkroot** @matchednodes, align 4
  call void @popheap()
  br label %if.end147

if.else144:                                       ; preds = %do.end140
  %107 = load i32, i32* %returnval, align 4
  %tobool145 = icmp ne i32 %107, 0
  br i1 %tobool145, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %if.else144
  %108 = load i32, i32* %informed, align 4
  %tobool146 = icmp ne i32 %108, 0
  %lnot = xor i1 %tobool146, true
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %if.else144
  %109 = phi i1 [ true, %if.else144 ], [ %lnot, %lor.rhs ]
  %lor.ext = zext i1 %109 to i32
  store i32 %lor.ext, i32* %retval, align 4
  br label %return

if.end147:                                        ; preds = %if.then142
  br label %if.end148

if.end148:                                        ; preds = %if.end147, %if.end78
  %110 = load i32, i32* @queueing_enabled, align 4
  %inc149 = add nsw i32 %110, 1
  store i32 %inc149, i32* @queueing_enabled, align 4
  br label %for.cond150

for.cond150:                                      ; preds = %for.inc376, %if.end148
  %111 = load i8**, i8*** %argv.addr, align 4
  %112 = load i8*, i8** %111, align 4
  %tobool151 = icmp ne i8* %112, null
  br i1 %tobool151, label %for.body152, label %for.end378

for.body152:                                      ; preds = %for.cond150
  %113 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind153 = getelementptr inbounds %struct.options, %struct.options* %113, i32 0, i32 0
  %arrayidx154 = getelementptr inbounds [128 x i8], [128 x i8]* %ind153, i32 0, i32 112
  %114 = load i8, i8* %arrayidx154, align 4
  %conv155 = zext i8 %114 to i32
  %cmp156 = icmp ne i32 %conv155, 0
  br i1 %cmp156, label %if.end230, label %land.lhs.true

land.lhs.true:                                    ; preds = %for.body152
  %115 = load i8**, i8*** %allmatched, align 4
  %tobool158 = icmp ne i8** %115, null
  br i1 %tobool158, label %if.end230, label %if.then159

if.then159:                                       ; preds = %land.lhs.true
  %116 = load %struct.hashtable*, %struct.hashtable** @aliastab, align 4
  %getnode = getelementptr inbounds %struct.hashtable, %struct.hashtable* %116, i32 0, i32 9
  %117 = load %struct.hashnode* (%struct.hashtable*, i8*)*, %struct.hashnode* (%struct.hashtable*, i8*)** %getnode, align 4
  %118 = load %struct.hashtable*, %struct.hashtable** @aliastab, align 4
  %119 = load i8**, i8*** %argv.addr, align 4
  %120 = load i8*, i8** %119, align 4
  %call161 = call %struct.hashnode* %117(%struct.hashtable* %118, i8* %120)
  store %struct.hashnode* %call161, %struct.hashnode** %hn, align 4
  %tobool162 = icmp ne %struct.hashnode* %call161, null
  br i1 %tobool162, label %if.then163, label %if.end168

if.then163:                                       ; preds = %if.then159
  %121 = load %struct.hashtable*, %struct.hashtable** @aliastab, align 4
  %printnode164 = getelementptr inbounds %struct.hashtable, %struct.hashtable* %121, i32 0, i32 15
  %122 = load void (%struct.hashnode*, i32)*, void (%struct.hashnode*, i32)** %printnode164, align 4
  %123 = load %struct.hashnode*, %struct.hashnode** %hn, align 4
  %124 = load i32, i32* %aliasflags, align 4
  call void %122(%struct.hashnode* %123, i32 %124)
  store i32 1, i32* %informed, align 4
  %125 = load i32, i32* %all, align 4
  %tobool165 = icmp ne i32 %125, 0
  br i1 %tobool165, label %if.end167, label %if.then166

if.then166:                                       ; preds = %if.then163
  br label %for.inc376

if.end167:                                        ; preds = %if.then163
  br label %if.end168

if.end168:                                        ; preds = %if.end167, %if.then159
  %126 = load i8**, i8*** %argv.addr, align 4
  %127 = load i8*, i8** %126, align 4
  %call169 = call i8* @strrchr(i8* %127, i32 46)
  store i8* %call169, i8** %suf, align 4
  %tobool170 = icmp ne i8* %call169, null
  br i1 %tobool170, label %land.lhs.true171, label %if.end192

land.lhs.true171:                                 ; preds = %if.end168
  %128 = load i8*, i8** %suf, align 4
  %arrayidx172 = getelementptr inbounds i8, i8* %128, i32 1
  %129 = load i8, i8* %arrayidx172, align 1
  %conv173 = sext i8 %129 to i32
  %tobool174 = icmp ne i32 %conv173, 0
  br i1 %tobool174, label %land.lhs.true175, label %if.end192

land.lhs.true175:                                 ; preds = %land.lhs.true171
  %130 = load i8*, i8** %suf, align 4
  %131 = load i8**, i8*** %argv.addr, align 4
  %132 = load i8*, i8** %131, align 4
  %cmp176 = icmp ugt i8* %130, %132
  br i1 %cmp176, label %land.lhs.true178, label %if.end192

land.lhs.true178:                                 ; preds = %land.lhs.true175
  %133 = load i8*, i8** %suf, align 4
  %arrayidx179 = getelementptr inbounds i8, i8* %133, i32 -1
  %134 = load i8, i8* %arrayidx179, align 1
  %conv180 = sext i8 %134 to i32
  %cmp181 = icmp ne i32 %conv180, -125
  br i1 %cmp181, label %land.lhs.true183, label %if.end192

land.lhs.true183:                                 ; preds = %land.lhs.true178
  %135 = load %struct.hashtable*, %struct.hashtable** @sufaliastab, align 4
  %getnode184 = getelementptr inbounds %struct.hashtable, %struct.hashtable* %135, i32 0, i32 9
  %136 = load %struct.hashnode* (%struct.hashtable*, i8*)*, %struct.hashnode* (%struct.hashtable*, i8*)** %getnode184, align 4
  %137 = load %struct.hashtable*, %struct.hashtable** @sufaliastab, align 4
  %138 = load i8*, i8** %suf, align 4
  %add.ptr = getelementptr inbounds i8, i8* %138, i32 1
  %call185 = call %struct.hashnode* %136(%struct.hashtable* %137, i8* %add.ptr)
  store %struct.hashnode* %call185, %struct.hashnode** %hn, align 4
  %tobool186 = icmp ne %struct.hashnode* %call185, null
  br i1 %tobool186, label %if.then187, label %if.end192

if.then187:                                       ; preds = %land.lhs.true183
  %139 = load %struct.hashtable*, %struct.hashtable** @sufaliastab, align 4
  %printnode188 = getelementptr inbounds %struct.hashtable, %struct.hashtable* %139, i32 0, i32 15
  %140 = load void (%struct.hashnode*, i32)*, void (%struct.hashnode*, i32)** %printnode188, align 4
  %141 = load %struct.hashnode*, %struct.hashnode** %hn, align 4
  %142 = load i32, i32* %printflags, align 4
  call void %140(%struct.hashnode* %141, i32 %142)
  store i32 1, i32* %informed, align 4
  %143 = load i32, i32* %all, align 4
  %tobool189 = icmp ne i32 %143, 0
  br i1 %tobool189, label %if.end191, label %if.then190

if.then190:                                       ; preds = %if.then187
  br label %for.inc376

if.end191:                                        ; preds = %if.then187
  br label %if.end192

if.end192:                                        ; preds = %if.end191, %land.lhs.true183, %land.lhs.true178, %land.lhs.true175, %land.lhs.true171, %if.end168
  %144 = load %struct.hashtable*, %struct.hashtable** @reswdtab, align 4
  %getnode193 = getelementptr inbounds %struct.hashtable, %struct.hashtable* %144, i32 0, i32 9
  %145 = load %struct.hashnode* (%struct.hashtable*, i8*)*, %struct.hashnode* (%struct.hashtable*, i8*)** %getnode193, align 4
  %146 = load %struct.hashtable*, %struct.hashtable** @reswdtab, align 4
  %147 = load i8**, i8*** %argv.addr, align 4
  %148 = load i8*, i8** %147, align 4
  %call194 = call %struct.hashnode* %145(%struct.hashtable* %146, i8* %148)
  store %struct.hashnode* %call194, %struct.hashnode** %hn, align 4
  %tobool195 = icmp ne %struct.hashnode* %call194, null
  br i1 %tobool195, label %if.then196, label %if.end201

if.then196:                                       ; preds = %if.end192
  %149 = load %struct.hashtable*, %struct.hashtable** @reswdtab, align 4
  %printnode197 = getelementptr inbounds %struct.hashtable, %struct.hashtable* %149, i32 0, i32 15
  %150 = load void (%struct.hashnode*, i32)*, void (%struct.hashnode*, i32)** %printnode197, align 4
  %151 = load %struct.hashnode*, %struct.hashnode** %hn, align 4
  %152 = load i32, i32* %printflags, align 4
  call void %150(%struct.hashnode* %151, i32 %152)
  store i32 1, i32* %informed, align 4
  %153 = load i32, i32* %all, align 4
  %tobool198 = icmp ne i32 %153, 0
  br i1 %tobool198, label %if.end200, label %if.then199

if.then199:                                       ; preds = %if.then196
  br label %for.inc376

if.end200:                                        ; preds = %if.then196
  br label %if.end201

if.end201:                                        ; preds = %if.end200, %if.end192
  %154 = load %struct.hashtable*, %struct.hashtable** @shfunctab, align 4
  %getnode202 = getelementptr inbounds %struct.hashtable, %struct.hashtable* %154, i32 0, i32 9
  %155 = load %struct.hashnode* (%struct.hashtable*, i8*)*, %struct.hashnode* (%struct.hashtable*, i8*)** %getnode202, align 4
  %156 = load %struct.hashtable*, %struct.hashtable** @shfunctab, align 4
  %157 = load i8**, i8*** %argv.addr, align 4
  %158 = load i8*, i8** %157, align 4
  %call203 = call %struct.hashnode* %155(%struct.hashtable* %156, i8* %158)
  store %struct.hashnode* %call203, %struct.hashnode** %hn, align 4
  %tobool204 = icmp ne %struct.hashnode* %call203, null
  br i1 %tobool204, label %if.then205, label %if.end209

if.then205:                                       ; preds = %if.end201
  %159 = load %struct.hashnode*, %struct.hashnode** %hn, align 4
  %160 = load i32, i32* %printflags, align 4
  %161 = load i32, i32* %expand, align 4
  call void @printshfuncexpand(%struct.hashnode* %159, i32 %160, i32 %161)
  store i32 1, i32* %informed, align 4
  %162 = load i32, i32* %all, align 4
  %tobool206 = icmp ne i32 %162, 0
  br i1 %tobool206, label %if.end208, label %if.then207

if.then207:                                       ; preds = %if.then205
  br label %for.inc376

if.end208:                                        ; preds = %if.then205
  br label %if.end209

if.end209:                                        ; preds = %if.end208, %if.end201
  %163 = load %struct.hashtable*, %struct.hashtable** @builtintab, align 4
  %getnode210 = getelementptr inbounds %struct.hashtable, %struct.hashtable* %163, i32 0, i32 9
  %164 = load %struct.hashnode* (%struct.hashtable*, i8*)*, %struct.hashnode* (%struct.hashtable*, i8*)** %getnode210, align 4
  %165 = load %struct.hashtable*, %struct.hashtable** @builtintab, align 4
  %166 = load i8**, i8*** %argv.addr, align 4
  %167 = load i8*, i8** %166, align 4
  %call211 = call %struct.hashnode* %164(%struct.hashtable* %165, i8* %167)
  store %struct.hashnode* %call211, %struct.hashnode** %hn, align 4
  %tobool212 = icmp ne %struct.hashnode* %call211, null
  br i1 %tobool212, label %if.then213, label %if.end218

if.then213:                                       ; preds = %if.end209
  %168 = load %struct.hashtable*, %struct.hashtable** @builtintab, align 4
  %printnode214 = getelementptr inbounds %struct.hashtable, %struct.hashtable* %168, i32 0, i32 15
  %169 = load void (%struct.hashnode*, i32)*, void (%struct.hashnode*, i32)** %printnode214, align 4
  %170 = load %struct.hashnode*, %struct.hashnode** %hn, align 4
  %171 = load i32, i32* %printflags, align 4
  call void %169(%struct.hashnode* %170, i32 %171)
  store i32 1, i32* %informed, align 4
  %172 = load i32, i32* %all, align 4
  %tobool215 = icmp ne i32 %172, 0
  br i1 %tobool215, label %if.end217, label %if.then216

if.then216:                                       ; preds = %if.then213
  br label %for.inc376

if.end217:                                        ; preds = %if.then213
  br label %if.end218

if.end218:                                        ; preds = %if.end217, %if.end209
  %173 = load %struct.hashtable*, %struct.hashtable** @cmdnamtab, align 4
  %getnode219 = getelementptr inbounds %struct.hashtable, %struct.hashtable* %173, i32 0, i32 9
  %174 = load %struct.hashnode* (%struct.hashtable*, i8*)*, %struct.hashnode* (%struct.hashtable*, i8*)** %getnode219, align 4
  %175 = load %struct.hashtable*, %struct.hashtable** @cmdnamtab, align 4
  %176 = load i8**, i8*** %argv.addr, align 4
  %177 = load i8*, i8** %176, align 4
  %call220 = call %struct.hashnode* %174(%struct.hashtable* %175, i8* %177)
  store %struct.hashnode* %call220, %struct.hashnode** %hn, align 4
  %tobool221 = icmp ne %struct.hashnode* %call220, null
  br i1 %tobool221, label %land.lhs.true222, label %if.end229

land.lhs.true222:                                 ; preds = %if.end218
  %178 = load %struct.hashnode*, %struct.hashnode** %hn, align 4
  %flags = getelementptr inbounds %struct.hashnode, %struct.hashnode* %178, i32 0, i32 2
  %179 = load i32, i32* %flags, align 4
  %and = and i32 %179, 2
  %tobool223 = icmp ne i32 %and, 0
  br i1 %tobool223, label %if.then224, label %if.end229

if.then224:                                       ; preds = %land.lhs.true222
  %180 = load %struct.hashtable*, %struct.hashtable** @cmdnamtab, align 4
  %printnode225 = getelementptr inbounds %struct.hashtable, %struct.hashtable* %180, i32 0, i32 15
  %181 = load void (%struct.hashnode*, i32)*, void (%struct.hashnode*, i32)** %printnode225, align 4
  %182 = load %struct.hashnode*, %struct.hashnode** %hn, align 4
  %183 = load i32, i32* %printflags, align 4
  call void %181(%struct.hashnode* %182, i32 %183)
  store i32 1, i32* %informed, align 4
  %184 = load i32, i32* %all, align 4
  %tobool226 = icmp ne i32 %184, 0
  br i1 %tobool226, label %if.end228, label %if.then227

if.then227:                                       ; preds = %if.then224
  br label %for.inc376

if.end228:                                        ; preds = %if.then224
  br label %if.end229

if.end229:                                        ; preds = %if.end228, %land.lhs.true222, %if.end218
  br label %if.end230

if.end230:                                        ; preds = %if.end229, %land.lhs.true, %for.body152
  %185 = load i32, i32* %all, align 4
  %tobool231 = icmp ne i32 %185, 0
  br i1 %tobool231, label %land.lhs.true232, label %if.else301

land.lhs.true232:                                 ; preds = %if.end230
  %186 = load i8**, i8*** %argv.addr, align 4
  %187 = load i8*, i8** %186, align 4
  %188 = load i8, i8* %187, align 1
  %conv233 = sext i8 %188 to i32
  %cmp234 = icmp ne i32 %conv233, 47
  br i1 %cmp234, label %if.then236, label %if.else301

if.then236:                                       ; preds = %land.lhs.true232
  call void @pushheap()
  %189 = load i8**, i8*** @path, align 4
  store i8** %189, i8*** %pp, align 4
  br label %for.cond239

for.cond239:                                      ; preds = %for.inc285, %if.then236
  %190 = load i8**, i8*** %pp, align 4
  %191 = load i8*, i8** %190, align 4
  %tobool240 = icmp ne i8* %191, null
  br i1 %tobool240, label %for.body241, label %for.end287

for.body241:                                      ; preds = %for.cond239
  %192 = load i8**, i8*** %pp, align 4
  %193 = load i8*, i8** %192, align 4
  %194 = load i8, i8* %193, align 1
  %tobool242 = icmp ne i8 %194, 0
  br i1 %tobool242, label %if.then243, label %if.else245

if.then243:                                       ; preds = %for.body241
  %195 = load i8**, i8*** %pp, align 4
  %196 = load i8*, i8** %195, align 4
  %197 = load i8**, i8*** %argv.addr, align 4
  %198 = load i8*, i8** %197, align 4
  %call244 = call i8* @zhtricat(i8* %196, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.76, i32 0, i32 0), i8* %198)
  store i8* %call244, i8** %buf, align 4
  br label %if.end247

if.else245:                                       ; preds = %for.body241
  %199 = load i8**, i8*** %argv.addr, align 4
  %200 = load i8*, i8** %199, align 4
  %call246 = call i8* @dupstring(i8* %200)
  store i8* %call246, i8** %buf, align 4
  br label %if.end247

if.end247:                                        ; preds = %if.else245, %if.then243
  %201 = load i8*, i8** %buf, align 4
  %call248 = call i32 @iscom(i8* %201)
  %tobool249 = icmp ne i32 %call248, 0
  br i1 %tobool249, label %if.then250, label %if.end284

if.then250:                                       ; preds = %if.end247
  %202 = load i32, i32* %wd, align 4
  %tobool251 = icmp ne i32 %202, 0
  br i1 %tobool251, label %if.then252, label %if.else254

if.then252:                                       ; preds = %if.then250
  %203 = load i8**, i8*** %argv.addr, align 4
  %204 = load i8*, i8** %203, align 4
  %call253 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.80, i32 0, i32 0), i8* %204)
  br label %if.end283

if.else254:                                       ; preds = %if.then250
  %205 = load i32, i32* %v, align 4
  %tobool255 = icmp ne i32 %205, 0
  br i1 %tobool255, label %land.lhs.true256, label %if.else262

land.lhs.true256:                                 ; preds = %if.else254
  %206 = load i32, i32* %csh, align 4
  %tobool257 = icmp ne i32 %206, 0
  br i1 %tobool257, label %if.else262, label %if.then258

if.then258:                                       ; preds = %land.lhs.true256
  %207 = load i8**, i8*** %argv.addr, align 4
  %208 = load i8*, i8** %207, align 4
  %209 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 4
  %call259 = call i32 @zputs(i8* %208, %struct._IO_FILE* %209)
  %210 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 4
  %call260 = call i32 @fputs(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.81, i32 0, i32 0), %struct._IO_FILE* %210)
  %211 = load i8*, i8** %buf, align 4
  %212 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 4
  %call261 = call i8* @quotedzputs(i8* %211, %struct._IO_FILE* %212)
  br label %if.end264

if.else262:                                       ; preds = %land.lhs.true256, %if.else254
  %213 = load i8*, i8** %buf, align 4
  %214 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 4
  %call263 = call i32 @zputs(i8* %213, %struct._IO_FILE* %214)
  br label %if.end264

if.end264:                                        ; preds = %if.else262, %if.then258
  %215 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind265 = getelementptr inbounds %struct.options, %struct.options* %215, i32 0, i32 0
  %arrayidx266 = getelementptr inbounds [128 x i8], [128 x i8]* %ind265, i32 0, i32 115
  %216 = load i8, i8* %arrayidx266, align 1
  %conv267 = zext i8 %216 to i32
  %cmp268 = icmp ne i32 %conv267, 0
  br i1 %cmp268, label %if.then275, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end264
  %217 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind270 = getelementptr inbounds %struct.options, %struct.options* %217, i32 0, i32 0
  %arrayidx271 = getelementptr inbounds [128 x i8], [128 x i8]* %ind270, i32 0, i32 83
  %218 = load i8, i8* %arrayidx271, align 1
  %conv272 = zext i8 %218 to i32
  %cmp273 = icmp ne i32 %conv272, 0
  br i1 %cmp273, label %if.then275, label %if.end281

if.then275:                                       ; preds = %lor.lhs.false, %if.end264
  %219 = load i8*, i8** %buf, align 4
  %220 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind276 = getelementptr inbounds %struct.options, %struct.options* %220, i32 0, i32 0
  %arrayidx277 = getelementptr inbounds [128 x i8], [128 x i8]* %ind276, i32 0, i32 83
  %221 = load i8, i8* %arrayidx277, align 1
  %conv278 = zext i8 %221 to i32
  %cmp279 = icmp ne i32 %conv278, 0
  %conv280 = zext i1 %cmp279 to i32
  call void @print_if_link(i8* %219, i32 %conv280)
  br label %if.end281

if.end281:                                        ; preds = %if.then275, %lor.lhs.false
  %222 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 4
  %call282 = call i32 @fputc(i32 10, %struct._IO_FILE* %222)
  br label %if.end283

if.end283:                                        ; preds = %if.end281, %if.then252
  store i32 1, i32* %informed, align 4
  br label %if.end284

if.end284:                                        ; preds = %if.end283, %if.end247
  br label %for.inc285

for.inc285:                                       ; preds = %if.end284
  %223 = load i8**, i8*** %pp, align 4
  %incdec.ptr286 = getelementptr inbounds i8*, i8** %223, i32 1
  store i8** %incdec.ptr286, i8*** %pp, align 4
  br label %for.cond239

for.end287:                                       ; preds = %for.cond239
  %224 = load i32, i32* %informed, align 4
  %tobool288 = icmp ne i32 %224, 0
  br i1 %tobool288, label %if.end300, label %land.lhs.true289

land.lhs.true289:                                 ; preds = %for.end287
  %225 = load i32, i32* %wd, align 4
  %tobool290 = icmp ne i32 %225, 0
  br i1 %tobool290, label %if.then295, label %lor.lhs.false291

lor.lhs.false291:                                 ; preds = %land.lhs.true289
  %226 = load i32, i32* %v, align 4
  %tobool292 = icmp ne i32 %226, 0
  br i1 %tobool292, label %if.then295, label %lor.lhs.false293

lor.lhs.false293:                                 ; preds = %lor.lhs.false291
  %227 = load i32, i32* %csh, align 4
  %tobool294 = icmp ne i32 %227, 0
  br i1 %tobool294, label %if.then295, label %if.end300

if.then295:                                       ; preds = %lor.lhs.false293, %lor.lhs.false291, %land.lhs.true289
  %228 = load i8**, i8*** %argv.addr, align 4
  %229 = load i8*, i8** %228, align 4
  %230 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 4
  %call296 = call i32 @zputs(i8* %229, %struct._IO_FILE* %230)
  %231 = load i32, i32* %wd, align 4
  %tobool297 = icmp ne i32 %231, 0
  %cond298 = select i1 %tobool297, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.82, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.83, i32 0, i32 0)
  %call299 = call i32 @puts(i8* %cond298)
  store i32 1, i32* %returnval, align 4
  br label %if.end300

if.end300:                                        ; preds = %if.then295, %lor.lhs.false293, %for.end287
  call void @popheap()
  br label %if.end375

if.else301:                                       ; preds = %land.lhs.true232, %if.end230
  %232 = load i32, i32* %func.addr, align 4
  %cmp302 = icmp eq i32 %232, 27
  br i1 %cmp302, label %land.lhs.true304, label %if.else316

land.lhs.true304:                                 ; preds = %if.else301
  %233 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind305 = getelementptr inbounds %struct.options, %struct.options* %233, i32 0, i32 0
  %arrayidx306 = getelementptr inbounds [128 x i8], [128 x i8]* %ind305, i32 0, i32 112
  %234 = load i8, i8* %arrayidx306, align 4
  %conv307 = zext i8 %234 to i32
  %cmp308 = icmp ne i32 %conv307, 0
  br i1 %cmp308, label %land.lhs.true310, label %if.else316

land.lhs.true310:                                 ; preds = %land.lhs.true304
  %235 = load %struct.hashtable*, %struct.hashtable** @builtintab, align 4
  %getnode311 = getelementptr inbounds %struct.hashtable, %struct.hashtable* %235, i32 0, i32 9
  %236 = load %struct.hashnode* (%struct.hashtable*, i8*)*, %struct.hashnode* (%struct.hashtable*, i8*)** %getnode311, align 4
  %237 = load %struct.hashtable*, %struct.hashtable** @builtintab, align 4
  %238 = load i8**, i8*** %argv.addr, align 4
  %239 = load i8*, i8** %238, align 4
  %call312 = call %struct.hashnode* %236(%struct.hashtable* %237, i8* %239)
  store %struct.hashnode* %call312, %struct.hashnode** %hn, align 4
  %tobool313 = icmp ne %struct.hashnode* %call312, null
  br i1 %tobool313, label %if.then314, label %if.else316

if.then314:                                       ; preds = %land.lhs.true310
  %240 = load %struct.hashtable*, %struct.hashtable** @builtintab, align 4
  %printnode315 = getelementptr inbounds %struct.hashtable, %struct.hashtable* %240, i32 0, i32 15
  %241 = load void (%struct.hashnode*, i32)*, void (%struct.hashnode*, i32)** %printnode315, align 4
  %242 = load %struct.hashnode*, %struct.hashnode** %hn, align 4
  %243 = load i32, i32* %printflags, align 4
  call void %241(%struct.hashnode* %242, i32 %243)
  store i32 1, i32* %informed, align 4
  br label %if.end374

if.else316:                                       ; preds = %land.lhs.true310, %land.lhs.true304, %if.else301
  %244 = load i8**, i8*** %argv.addr, align 4
  %245 = load i8*, i8** %244, align 4
  %246 = load i32, i32* %func.addr, align 4
  %cmp317 = icmp eq i32 %246, 27
  br i1 %cmp317, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %if.else316
  %247 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind319 = getelementptr inbounds %struct.options, %struct.options* %247, i32 0, i32 0
  %arrayidx320 = getelementptr inbounds [128 x i8], [128 x i8]* %ind319, i32 0, i32 112
  %248 = load i8, i8* %arrayidx320, align 4
  %conv321 = zext i8 %248 to i32
  %cmp322 = icmp ne i32 %conv321, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.else316
  %249 = phi i1 [ false, %if.else316 ], [ %cmp322, %land.rhs ]
  %land.ext = zext i1 %249 to i32
  %call324 = call i8* @findcmd(i8* %245, i32 1, i32 %land.ext)
  store i8* %call324, i8** %cnam, align 4
  %tobool325 = icmp ne i8* %call324, null
  br i1 %tobool325, label %if.then326, label %if.else361

if.then326:                                       ; preds = %land.end
  %250 = load i32, i32* %wd, align 4
  %tobool327 = icmp ne i32 %250, 0
  br i1 %tobool327, label %if.then328, label %if.else330

if.then328:                                       ; preds = %if.then326
  %251 = load i8**, i8*** %argv.addr, align 4
  %252 = load i8*, i8** %251, align 4
  %call329 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.80, i32 0, i32 0), i8* %252)
  br label %if.end360

if.else330:                                       ; preds = %if.then326
  %253 = load i32, i32* %v, align 4
  %tobool331 = icmp ne i32 %253, 0
  br i1 %tobool331, label %land.lhs.true332, label %if.else338

land.lhs.true332:                                 ; preds = %if.else330
  %254 = load i32, i32* %csh, align 4
  %tobool333 = icmp ne i32 %254, 0
  br i1 %tobool333, label %if.else338, label %if.then334

if.then334:                                       ; preds = %land.lhs.true332
  %255 = load i8**, i8*** %argv.addr, align 4
  %256 = load i8*, i8** %255, align 4
  %257 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 4
  %call335 = call i32 @zputs(i8* %256, %struct._IO_FILE* %257)
  %258 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 4
  %call336 = call i32 @fputs(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.81, i32 0, i32 0), %struct._IO_FILE* %258)
  %259 = load i8*, i8** %cnam, align 4
  %260 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 4
  %call337 = call i8* @quotedzputs(i8* %259, %struct._IO_FILE* %260)
  br label %if.end340

if.else338:                                       ; preds = %land.lhs.true332, %if.else330
  %261 = load i8*, i8** %cnam, align 4
  %262 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 4
  %call339 = call i32 @zputs(i8* %261, %struct._IO_FILE* %262)
  br label %if.end340

if.end340:                                        ; preds = %if.else338, %if.then334
  %263 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind341 = getelementptr inbounds %struct.options, %struct.options* %263, i32 0, i32 0
  %arrayidx342 = getelementptr inbounds [128 x i8], [128 x i8]* %ind341, i32 0, i32 115
  %264 = load i8, i8* %arrayidx342, align 1
  %conv343 = zext i8 %264 to i32
  %cmp344 = icmp ne i32 %conv343, 0
  br i1 %cmp344, label %if.then352, label %lor.lhs.false346

lor.lhs.false346:                                 ; preds = %if.end340
  %265 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind347 = getelementptr inbounds %struct.options, %struct.options* %265, i32 0, i32 0
  %arrayidx348 = getelementptr inbounds [128 x i8], [128 x i8]* %ind347, i32 0, i32 83
  %266 = load i8, i8* %arrayidx348, align 1
  %conv349 = zext i8 %266 to i32
  %cmp350 = icmp ne i32 %conv349, 0
  br i1 %cmp350, label %if.then352, label %if.end358

if.then352:                                       ; preds = %lor.lhs.false346, %if.end340
  %267 = load i8*, i8** %cnam, align 4
  %268 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind353 = getelementptr inbounds %struct.options, %struct.options* %268, i32 0, i32 0
  %arrayidx354 = getelementptr inbounds [128 x i8], [128 x i8]* %ind353, i32 0, i32 83
  %269 = load i8, i8* %arrayidx354, align 1
  %conv355 = zext i8 %269 to i32
  %cmp356 = icmp ne i32 %conv355, 0
  %conv357 = zext i1 %cmp356 to i32
  call void @print_if_link(i8* %267, i32 %conv357)
  br label %if.end358

if.end358:                                        ; preds = %if.then352, %lor.lhs.false346
  %270 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 4
  %call359 = call i32 @fputc(i32 10, %struct._IO_FILE* %270)
  br label %if.end360

if.end360:                                        ; preds = %if.end358, %if.then328
  store i32 1, i32* %informed, align 4
  br label %if.end373

if.else361:                                       ; preds = %land.end
  %271 = load i32, i32* %v, align 4
  %tobool362 = icmp ne i32 %271, 0
  br i1 %tobool362, label %if.then367, label %lor.lhs.false363

lor.lhs.false363:                                 ; preds = %if.else361
  %272 = load i32, i32* %csh, align 4
  %tobool364 = icmp ne i32 %272, 0
  br i1 %tobool364, label %if.then367, label %lor.lhs.false365

lor.lhs.false365:                                 ; preds = %lor.lhs.false363
  %273 = load i32, i32* %wd, align 4
  %tobool366 = icmp ne i32 %273, 0
  br i1 %tobool366, label %if.then367, label %if.end372

if.then367:                                       ; preds = %lor.lhs.false365, %lor.lhs.false363, %if.else361
  %274 = load i8**, i8*** %argv.addr, align 4
  %275 = load i8*, i8** %274, align 4
  %276 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 4
  %call368 = call i32 @zputs(i8* %275, %struct._IO_FILE* %276)
  %277 = load i32, i32* %wd, align 4
  %tobool369 = icmp ne i32 %277, 0
  %cond370 = select i1 %tobool369, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.82, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.83, i32 0, i32 0)
  %call371 = call i32 @puts(i8* %cond370)
  br label %if.end372

if.end372:                                        ; preds = %if.then367, %lor.lhs.false365
  store i32 1, i32* %returnval, align 4
  br label %if.end373

if.end373:                                        ; preds = %if.end372, %if.end360
  br label %if.end374

if.end374:                                        ; preds = %if.end373, %if.then314
  br label %if.end375

if.end375:                                        ; preds = %if.end374, %if.end300
  br label %for.inc376

for.inc376:                                       ; preds = %if.end375, %if.then227, %if.then216, %if.then207, %if.then199, %if.then190, %if.then166
  %278 = load i8**, i8*** %argv.addr, align 4
  %incdec.ptr377 = getelementptr inbounds i8*, i8** %278, i32 1
  store i8** %incdec.ptr377, i8*** %argv.addr, align 4
  br label %for.cond150

for.end378:                                       ; preds = %for.cond150
  %279 = load i8**, i8*** %allmatched, align 4
  %tobool379 = icmp ne i8** %279, null
  br i1 %tobool379, label %if.then380, label %if.end381

if.then380:                                       ; preds = %for.end378
  %280 = load i8**, i8*** %allmatched, align 4
  call void @freearray(i8** %280)
  br label %if.end381

if.end381:                                        ; preds = %if.then380, %for.end378
  br label %do.body382

do.body382:                                       ; preds = %if.end381
  %281 = load i32, i32* @queueing_enabled, align 4
  %dec383 = add nsw i32 %281, -1
  store i32 %dec383, i32* @queueing_enabled, align 4
  %tobool384 = icmp ne i32 %dec383, 0
  br i1 %tobool384, label %if.end401, label %if.then385

if.then385:                                       ; preds = %do.body382
  br label %do.body386

do.body386:                                       ; preds = %if.then385
  br label %while.cond387

while.cond387:                                    ; preds = %while.body390, %do.body386
  %282 = load i32, i32* @queue_front, align 4
  %283 = load i32, i32* @queue_rear, align 4
  %cmp388 = icmp ne i32 %282, %283
  br i1 %cmp388, label %while.body390, label %while.end399

while.body390:                                    ; preds = %while.cond387
  %284 = load i32, i32* @queue_front, align 4
  %add393 = add nsw i32 %284, 1
  %rem394 = srem i32 %add393, 128
  store i32 %rem394, i32* @queue_front, align 4
  %285 = load i32, i32* @queue_front, align 4
  %arrayidx395 = getelementptr inbounds [128 x %struct.__sigset_t], [128 x %struct.__sigset_t]* @signal_mask_queue, i32 0, i32 %285
  call void @signal_setmask(%struct.__sigset_t* sret %tmp396, %struct.__sigset_t* byval align 4 %arrayidx395)
  %286 = bitcast %struct.__sigset_t* %oset392 to i8*
  %287 = bitcast %struct.__sigset_t* %tmp396 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %286, i8* %287, i32 128, i32 4, i1 false)
  %288 = load i32, i32* @queue_front, align 4
  %arrayidx397 = getelementptr inbounds [128 x i32], [128 x i32]* @signal_queue, i32 0, i32 %288
  %289 = load i32, i32* %arrayidx397, align 4
  call void @zhandler(i32 %289)
  call void @signal_setmask(%struct.__sigset_t* sret %tmp398, %struct.__sigset_t* byval align 4 %oset392)
  br label %while.cond387

while.end399:                                     ; preds = %while.cond387
  br label %do.end400

do.end400:                                        ; preds = %while.end399
  br label %if.end401

if.end401:                                        ; preds = %do.end400, %do.body382
  br label %do.end402

do.end402:                                        ; preds = %if.end401
  %290 = load i32, i32* %returnval, align 4
  %tobool403 = icmp ne i32 %290, 0
  br i1 %tobool403, label %lor.end407, label %lor.rhs404

lor.rhs404:                                       ; preds = %do.end402
  %291 = load i32, i32* %informed, align 4
  %tobool405 = icmp ne i32 %291, 0
  %lnot406 = xor i1 %tobool405, true
  br label %lor.end407

lor.end407:                                       ; preds = %lor.rhs404, %do.end402
  %292 = phi i1 [ true, %do.end402 ], [ %lnot406, %lor.rhs404 ]
  %lor.ext408 = zext i1 %292 to i32
  store i32 %lor.ext408, i32* %retval, align 4
  br label %return

return:                                           ; preds = %lor.end407, %lor.end, %if.then26
  %293 = load i32, i32* %retval, align 4
  ret i32 %293
}

declare void @pushheap() #1

; Function Attrs: noinline nounwind
define internal void @fetchcmdnamnode(%struct.hashnode* %hn, i32 %printflags) #0 {
entry:
  %hn.addr = alloca %struct.hashnode*, align 4
  %printflags.addr = alloca i32, align 4
  %cn = alloca %struct.cmdnam*, align 4
  store %struct.hashnode* %hn, %struct.hashnode** %hn.addr, align 4
  store i32 %printflags, i32* %printflags.addr, align 4
  %0 = load %struct.hashnode*, %struct.hashnode** %hn.addr, align 4
  %1 = bitcast %struct.hashnode* %0 to %struct.cmdnam*
  store %struct.cmdnam* %1, %struct.cmdnam** %cn, align 4
  %2 = load %union.linkroot*, %union.linkroot** @matchednodes, align 4
  %3 = load %union.linkroot*, %union.linkroot** @matchednodes, align 4
  %list = bitcast %union.linkroot* %3 to %struct.linklist*
  %last = getelementptr inbounds %struct.linklist, %struct.linklist* %list, i32 0, i32 1
  %4 = load %struct.linknode*, %struct.linknode** %last, align 4
  %5 = load %struct.cmdnam*, %struct.cmdnam** %cn, align 4
  %node = getelementptr inbounds %struct.cmdnam, %struct.cmdnam* %5, i32 0, i32 0
  %nam = getelementptr inbounds %struct.hashnode, %struct.hashnode* %node, i32 0, i32 1
  %6 = load i8*, i8** %nam, align 4
  %call = call %struct.linknode* @insertlinknode(%union.linkroot* %2, %struct.linknode* %4, i8* %6)
  ret void
}

declare void @popheap() #1

declare i8* @zhtricat(i8*, i8*, i8*) #1

declare i32 @iscom(i8*) #1

declare i32 @fputs(i8*, %struct._IO_FILE*) #1

declare void @print_if_link(i8*, i32) #1

declare i32 @puts(i8*) #1

declare i8* @findcmd(i8*, i32, i32) #1

; Function Attrs: noinline nounwind
define i32 @bin_hash(i8* %name, i8** %argv, %struct.options* %ops, i32 %func) #0 {
entry:
  %retval = alloca i32, align 4
  %name.addr = alloca i8*, align 4
  %argv.addr = alloca i8**, align 4
  %ops.addr = alloca %struct.options*, align 4
  %func.addr = alloca i32, align 4
  %ht = alloca %struct.hashtable*, align 4
  %pprog = alloca %struct.patprog*, align 4
  %asg = alloca %struct.asgment*, align 4
  %returnval = alloca i32, align 4
  %printflags = alloca i32, align 4
  %oset = alloca %struct.__sigset_t, align 4
  %tmp = alloca %struct.__sigset_t, align 4
  %tmp46 = alloca %struct.__sigset_t, align 4
  %hn = alloca i8*, align 4
  %nd = alloca %struct.nameddir*, align 4
  %cn = alloca %struct.cmdnam*, align 4
  %oset182 = alloca %struct.__sigset_t, align 4
  %tmp186 = alloca %struct.__sigset_t, align 4
  %tmp188 = alloca %struct.__sigset_t, align 4
  store i8* %name, i8** %name.addr, align 4
  store i8** %argv, i8*** %argv.addr, align 4
  store %struct.options* %ops, %struct.options** %ops.addr, align 4
  store i32 %func, i32* %func.addr, align 4
  store i32 0, i32* %returnval, align 4
  store i32 0, i32* %printflags, align 4
  %0 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind = getelementptr inbounds %struct.options, %struct.options* %0, i32 0, i32 0
  %arrayidx = getelementptr inbounds [128 x i8], [128 x i8]* %ind, i32 0, i32 100
  %1 = load i8, i8* %arrayidx, align 4
  %conv = zext i8 %1 to i32
  %cmp = icmp ne i32 %conv, 0
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %2 = load %struct.hashtable*, %struct.hashtable** @nameddirtab, align 4
  store %struct.hashtable* %2, %struct.hashtable** %ht, align 4
  br label %if.end

if.else:                                          ; preds = %entry
  %3 = load %struct.hashtable*, %struct.hashtable** @cmdnamtab, align 4
  store %struct.hashtable* %3, %struct.hashtable** %ht, align 4
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %4 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind2 = getelementptr inbounds %struct.options, %struct.options* %4, i32 0, i32 0
  %arrayidx3 = getelementptr inbounds [128 x i8], [128 x i8]* %ind2, i32 0, i32 114
  %5 = load i8, i8* %arrayidx3, align 2
  %conv4 = zext i8 %5 to i32
  %cmp5 = icmp ne i32 %conv4, 0
  br i1 %cmp5, label %if.then12, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end
  %6 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind7 = getelementptr inbounds %struct.options, %struct.options* %6, i32 0, i32 0
  %arrayidx8 = getelementptr inbounds [128 x i8], [128 x i8]* %ind7, i32 0, i32 102
  %7 = load i8, i8* %arrayidx8, align 2
  %conv9 = zext i8 %7 to i32
  %cmp10 = icmp ne i32 %conv9, 0
  br i1 %cmp10, label %if.then12, label %if.end29

if.then12:                                        ; preds = %lor.lhs.false, %if.end
  %8 = load i8**, i8*** %argv.addr, align 4
  %9 = load i8*, i8** %8, align 4
  %tobool = icmp ne i8* %9, null
  br i1 %tobool, label %if.then13, label %if.end14

if.then13:                                        ; preds = %if.then12
  call void (i8*, i8*, ...) @zwarnnam(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.84, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.10, i32 0, i32 0))
  store i32 1, i32* %retval, align 4
  br label %return

if.end14:                                         ; preds = %if.then12
  %10 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind15 = getelementptr inbounds %struct.options, %struct.options* %10, i32 0, i32 0
  %arrayidx16 = getelementptr inbounds [128 x i8], [128 x i8]* %ind15, i32 0, i32 114
  %11 = load i8, i8* %arrayidx16, align 2
  %conv17 = zext i8 %11 to i32
  %cmp18 = icmp ne i32 %conv17, 0
  br i1 %cmp18, label %if.then20, label %if.end21

if.then20:                                        ; preds = %if.end14
  %12 = load %struct.hashtable*, %struct.hashtable** %ht, align 4
  %emptytable = getelementptr inbounds %struct.hashtable, %struct.hashtable* %12, i32 0, i32 5
  %13 = load void (%struct.hashtable*)*, void (%struct.hashtable*)** %emptytable, align 4
  %14 = load %struct.hashtable*, %struct.hashtable** %ht, align 4
  call void %13(%struct.hashtable* %14)
  br label %if.end21

if.end21:                                         ; preds = %if.then20, %if.end14
  %15 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind22 = getelementptr inbounds %struct.options, %struct.options* %15, i32 0, i32 0
  %arrayidx23 = getelementptr inbounds [128 x i8], [128 x i8]* %ind22, i32 0, i32 102
  %16 = load i8, i8* %arrayidx23, align 2
  %conv24 = zext i8 %16 to i32
  %cmp25 = icmp ne i32 %conv24, 0
  br i1 %cmp25, label %if.then27, label %if.end28

if.then27:                                        ; preds = %if.end21
  %17 = load %struct.hashtable*, %struct.hashtable** %ht, align 4
  %filltable = getelementptr inbounds %struct.hashtable, %struct.hashtable* %17, i32 0, i32 6
  %18 = load void (%struct.hashtable*)*, void (%struct.hashtable*)** %filltable, align 4
  %19 = load %struct.hashtable*, %struct.hashtable** %ht, align 4
  call void %18(%struct.hashtable* %19)
  br label %if.end28

if.end28:                                         ; preds = %if.then27, %if.end21
  store i32 0, i32* %retval, align 4
  br label %return

if.end29:                                         ; preds = %lor.lhs.false
  %20 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind30 = getelementptr inbounds %struct.options, %struct.options* %20, i32 0, i32 0
  %arrayidx31 = getelementptr inbounds [128 x i8], [128 x i8]* %ind30, i32 0, i32 76
  %21 = load i8, i8* %arrayidx31, align 4
  %conv32 = zext i8 %21 to i32
  %cmp33 = icmp ne i32 %conv32, 0
  br i1 %cmp33, label %if.then35, label %if.end36

if.then35:                                        ; preds = %if.end29
  %22 = load i32, i32* %printflags, align 4
  %or = or i32 %22, 4
  store i32 %or, i32* %printflags, align 4
  br label %if.end36

if.end36:                                         ; preds = %if.then35, %if.end29
  %23 = load i8**, i8*** %argv.addr, align 4
  %24 = load i8*, i8** %23, align 4
  %tobool37 = icmp ne i8* %24, null
  br i1 %tobool37, label %if.end49, label %if.then38

if.then38:                                        ; preds = %if.end36
  %25 = load i32, i32* @queueing_enabled, align 4
  %inc = add nsw i32 %25, 1
  store i32 %inc, i32* @queueing_enabled, align 4
  %26 = load %struct.hashtable*, %struct.hashtable** %ht, align 4
  %27 = load %struct.hashtable*, %struct.hashtable** %ht, align 4
  %printnode = getelementptr inbounds %struct.hashtable, %struct.hashtable* %27, i32 0, i32 15
  %28 = load void (%struct.hashnode*, i32)*, void (%struct.hashnode*, i32)** %printnode, align 4
  %29 = load i32, i32* %printflags, align 4
  %call = call i32 @scanhashtable(%struct.hashtable* %26, i32 1, i32 0, i32 0, void (%struct.hashnode*, i32)* %28, i32 %29)
  br label %do.body

do.body:                                          ; preds = %if.then38
  %30 = load i32, i32* @queueing_enabled, align 4
  %dec = add nsw i32 %30, -1
  store i32 %dec, i32* @queueing_enabled, align 4
  %tobool39 = icmp ne i32 %dec, 0
  br i1 %tobool39, label %if.end47, label %if.then40

if.then40:                                        ; preds = %do.body
  br label %do.body41

do.body41:                                        ; preds = %if.then40
  br label %while.cond

while.cond:                                       ; preds = %while.body, %do.body41
  %31 = load i32, i32* @queue_front, align 4
  %32 = load i32, i32* @queue_rear, align 4
  %cmp42 = icmp ne i32 %31, %32
  br i1 %cmp42, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %33 = load i32, i32* @queue_front, align 4
  %add = add nsw i32 %33, 1
  %rem = srem i32 %add, 128
  store i32 %rem, i32* @queue_front, align 4
  %34 = load i32, i32* @queue_front, align 4
  %arrayidx44 = getelementptr inbounds [128 x %struct.__sigset_t], [128 x %struct.__sigset_t]* @signal_mask_queue, i32 0, i32 %34
  call void @signal_setmask(%struct.__sigset_t* sret %tmp, %struct.__sigset_t* byval align 4 %arrayidx44)
  %35 = bitcast %struct.__sigset_t* %oset to i8*
  %36 = bitcast %struct.__sigset_t* %tmp to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %35, i8* %36, i32 128, i32 4, i1 false)
  %37 = load i32, i32* @queue_front, align 4
  %arrayidx45 = getelementptr inbounds [128 x i32], [128 x i32]* @signal_queue, i32 0, i32 %37
  %38 = load i32, i32* %arrayidx45, align 4
  call void @zhandler(i32 %38)
  call void @signal_setmask(%struct.__sigset_t* sret %tmp46, %struct.__sigset_t* byval align 4 %oset)
  br label %while.cond

while.end:                                        ; preds = %while.cond
  br label %do.end

do.end:                                           ; preds = %while.end
  br label %if.end47

if.end47:                                         ; preds = %do.end, %do.body
  br label %do.end48

do.end48:                                         ; preds = %if.end47
  store i32 0, i32* %retval, align 4
  br label %return

if.end49:                                         ; preds = %if.end36
  %39 = load i32, i32* @queueing_enabled, align 4
  %inc50 = add nsw i32 %39, 1
  store i32 %inc50, i32* @queueing_enabled, align 4
  br label %while.cond51

while.cond51:                                     ; preds = %if.end170, %if.then92, %if.end67, %if.end49
  %40 = load i8**, i8*** %argv.addr, align 4
  %41 = load i8*, i8** %40, align 4
  %tobool52 = icmp ne i8* %41, null
  br i1 %tobool52, label %while.body53, label %while.end171

while.body53:                                     ; preds = %while.cond51
  %42 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind55 = getelementptr inbounds %struct.options, %struct.options* %42, i32 0, i32 0
  %arrayidx56 = getelementptr inbounds [128 x i8], [128 x i8]* %ind55, i32 0, i32 109
  %43 = load i8, i8* %arrayidx56, align 1
  %conv57 = zext i8 %43 to i32
  %cmp58 = icmp ne i32 %conv57, 0
  br i1 %cmp58, label %if.then60, label %if.end68

if.then60:                                        ; preds = %while.body53
  %44 = load i8**, i8*** %argv.addr, align 4
  %45 = load i8*, i8** %44, align 4
  call void @tokenize(i8* %45)
  %46 = load i8**, i8*** %argv.addr, align 4
  %47 = load i8*, i8** %46, align 4
  %call61 = call %struct.patprog* @patcompile(i8* %47, i32 64, i8** null)
  store %struct.patprog* %call61, %struct.patprog** %pprog, align 4
  %tobool62 = icmp ne %struct.patprog* %call61, null
  br i1 %tobool62, label %if.then63, label %if.else66

if.then63:                                        ; preds = %if.then60
  %48 = load %struct.hashtable*, %struct.hashtable** %ht, align 4
  %49 = load %struct.patprog*, %struct.patprog** %pprog, align 4
  %50 = load %struct.hashtable*, %struct.hashtable** %ht, align 4
  %printnode64 = getelementptr inbounds %struct.hashtable, %struct.hashtable* %50, i32 0, i32 15
  %51 = load void (%struct.hashnode*, i32)*, void (%struct.hashnode*, i32)** %printnode64, align 4
  %52 = load i32, i32* %printflags, align 4
  %call65 = call i32 @scanmatchtable(%struct.hashtable* %48, %struct.patprog* %49, i32 1, i32 0, i32 0, void (%struct.hashnode*, i32)* %51, i32 %52)
  br label %if.end67

if.else66:                                        ; preds = %if.then60
  %53 = load i8**, i8*** %argv.addr, align 4
  %54 = load i8*, i8** %53, align 4
  call void @untokenize(i8* %54)
  %55 = load i8*, i8** %name.addr, align 4
  %56 = load i8**, i8*** %argv.addr, align 4
  %57 = load i8*, i8** %56, align 4
  call void (i8*, i8*, ...) @zwarnnam(i8* %55, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.15, i32 0, i32 0), i8* %57)
  store i32 1, i32* %returnval, align 4
  br label %if.end67

if.end67:                                         ; preds = %if.else66, %if.then63
  %58 = load i8**, i8*** %argv.addr, align 4
  %incdec.ptr = getelementptr inbounds i8*, i8** %58, i32 1
  store i8** %incdec.ptr, i8*** %argv.addr, align 4
  br label %while.cond51

if.end68:                                         ; preds = %while.body53
  %call69 = call %struct.asgment* @getasg(i8*** %argv.addr, %union.linkroot* null)
  store %struct.asgment* %call69, %struct.asgment** %asg, align 4
  %tobool70 = icmp ne %struct.asgment* %call69, null
  br i1 %tobool70, label %if.else72, label %if.then71

if.then71:                                        ; preds = %if.end68
  %59 = load i8*, i8** %name.addr, align 4
  call void (i8*, i8*, ...) @zwarnnam(i8* %59, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.85, i32 0, i32 0))
  store i32 1, i32* %returnval, align 4
  br label %while.end171

if.else72:                                        ; preds = %if.end68
  %60 = load %struct.asgment*, %struct.asgment** %asg, align 4
  %flags = getelementptr inbounds %struct.asgment, %struct.asgment* %60, i32 0, i32 2
  %61 = load i32, i32* %flags, align 4
  %and = and i32 %61, 1
  %tobool73 = icmp ne i32 %and, 0
  br i1 %tobool73, label %if.then77, label %lor.lhs.false74

lor.lhs.false74:                                  ; preds = %if.else72
  %62 = load %struct.asgment*, %struct.asgment** %asg, align 4
  %value = getelementptr inbounds %struct.asgment, %struct.asgment* %62, i32 0, i32 3
  %scalar = bitcast %union.anon* %value to i8**
  %63 = load i8*, i8** %scalar, align 4
  %cmp75 = icmp ne i8* %63, null
  br i1 %cmp75, label %if.then77, label %if.else122

if.then77:                                        ; preds = %lor.lhs.false74, %if.else72
  %64 = load i8, i8* getelementptr inbounds ([181 x i8], [181 x i8]* @opts, i32 0, i32 155), align 1
  %tobool78 = icmp ne i8 %64, 0
  br i1 %tobool78, label %if.then79, label %if.else82

if.then79:                                        ; preds = %if.then77
  %65 = load i8*, i8** %name.addr, align 4
  %66 = load %struct.asgment*, %struct.asgment** %asg, align 4
  %value80 = getelementptr inbounds %struct.asgment, %struct.asgment* %66, i32 0, i32 3
  %scalar81 = bitcast %union.anon* %value80 to i8**
  %67 = load i8*, i8** %scalar81, align 4
  call void (i8*, i8*, ...) @zwarnnam(i8* %65, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.86, i32 0, i32 0), i8* %67)
  store i32 1, i32* %returnval, align 4
  br label %if.end121

if.else82:                                        ; preds = %if.then77
  %68 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind83 = getelementptr inbounds %struct.options, %struct.options* %68, i32 0, i32 0
  %arrayidx84 = getelementptr inbounds [128 x i8], [128 x i8]* %ind83, i32 0, i32 100
  %69 = load i8, i8* %arrayidx84, align 4
  %conv85 = zext i8 %69 to i32
  %cmp86 = icmp ne i32 %conv85, 0
  br i1 %cmp86, label %if.then88, label %if.else102

if.then88:                                        ; preds = %if.else82
  %70 = load %struct.asgment*, %struct.asgment** %asg, align 4
  %name89 = getelementptr inbounds %struct.asgment, %struct.asgment* %70, i32 0, i32 1
  %71 = load i8*, i8** %name89, align 4
  %call90 = call i8* @itype_end(i8* %71, i32 256, i32 0)
  %72 = load i8, i8* %call90, align 1
  %tobool91 = icmp ne i8 %72, 0
  br i1 %tobool91, label %if.then92, label %if.else94

if.then92:                                        ; preds = %if.then88
  %73 = load i8*, i8** %name.addr, align 4
  %74 = load %struct.asgment*, %struct.asgment** %asg, align 4
  %name93 = getelementptr inbounds %struct.asgment, %struct.asgment* %74, i32 0, i32 1
  %75 = load i8*, i8** %name93, align 4
  call void (i8*, i8*, ...) @zwarnnam(i8* %73, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.87, i32 0, i32 0), i8* %75)
  store i32 1, i32* %returnval, align 4
  br label %while.cond51

if.else94:                                        ; preds = %if.then88
  %call96 = call i8* @zshcalloc(i32 20)
  store i8* %call96, i8** %hn, align 4
  %76 = bitcast i8* %call96 to %struct.nameddir*
  store %struct.nameddir* %76, %struct.nameddir** %nd, align 4
  %77 = load %struct.nameddir*, %struct.nameddir** %nd, align 4
  %node = getelementptr inbounds %struct.nameddir, %struct.nameddir* %77, i32 0, i32 0
  %flags97 = getelementptr inbounds %struct.hashnode, %struct.hashnode* %node, i32 0, i32 2
  store i32 0, i32* %flags97, align 4
  %78 = load %struct.asgment*, %struct.asgment** %asg, align 4
  %value98 = getelementptr inbounds %struct.asgment, %struct.asgment* %78, i32 0, i32 3
  %scalar99 = bitcast %union.anon* %value98 to i8**
  %79 = load i8*, i8** %scalar99, align 4
  %call100 = call i8* @ztrdup(i8* %79)
  %80 = load %struct.nameddir*, %struct.nameddir** %nd, align 4
  %dir = getelementptr inbounds %struct.nameddir, %struct.nameddir* %80, i32 0, i32 1
  store i8* %call100, i8** %dir, align 4
  br label %if.end101

if.end101:                                        ; preds = %if.else94
  br label %if.end110

if.else102:                                       ; preds = %if.else82
  %call104 = call i8* @zshcalloc(i32 16)
  store i8* %call104, i8** %hn, align 4
  %81 = bitcast i8* %call104 to %struct.cmdnam*
  store %struct.cmdnam* %81, %struct.cmdnam** %cn, align 4
  %82 = load %struct.cmdnam*, %struct.cmdnam** %cn, align 4
  %node105 = getelementptr inbounds %struct.cmdnam, %struct.cmdnam* %82, i32 0, i32 0
  %flags106 = getelementptr inbounds %struct.hashnode, %struct.hashnode* %node105, i32 0, i32 2
  store i32 2, i32* %flags106, align 4
  %83 = load %struct.asgment*, %struct.asgment** %asg, align 4
  %value107 = getelementptr inbounds %struct.asgment, %struct.asgment* %83, i32 0, i32 3
  %scalar108 = bitcast %union.anon* %value107 to i8**
  %84 = load i8*, i8** %scalar108, align 4
  %call109 = call i8* @ztrdup(i8* %84)
  %85 = load %struct.cmdnam*, %struct.cmdnam** %cn, align 4
  %u = getelementptr inbounds %struct.cmdnam, %struct.cmdnam* %85, i32 0, i32 1
  %cmd = bitcast %union.anon.3* %u to i8**
  store i8* %call109, i8** %cmd, align 4
  br label %if.end110

if.end110:                                        ; preds = %if.else102, %if.end101
  %86 = load %struct.hashtable*, %struct.hashtable** %ht, align 4
  %addnode = getelementptr inbounds %struct.hashtable, %struct.hashtable* %86, i32 0, i32 8
  %87 = load void (%struct.hashtable*, i8*, i8*)*, void (%struct.hashtable*, i8*, i8*)** %addnode, align 4
  %88 = load %struct.hashtable*, %struct.hashtable** %ht, align 4
  %89 = load %struct.asgment*, %struct.asgment** %asg, align 4
  %name111 = getelementptr inbounds %struct.asgment, %struct.asgment* %89, i32 0, i32 1
  %90 = load i8*, i8** %name111, align 4
  %call112 = call i8* @ztrdup(i8* %90)
  %91 = load i8*, i8** %hn, align 4
  call void %87(%struct.hashtable* %88, i8* %call112, i8* %91)
  %92 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind113 = getelementptr inbounds %struct.options, %struct.options* %92, i32 0, i32 0
  %arrayidx114 = getelementptr inbounds [128 x i8], [128 x i8]* %ind113, i32 0, i32 118
  %93 = load i8, i8* %arrayidx114, align 2
  %conv115 = zext i8 %93 to i32
  %cmp116 = icmp ne i32 %conv115, 0
  br i1 %cmp116, label %if.then118, label %if.end120

if.then118:                                       ; preds = %if.end110
  %94 = load %struct.hashtable*, %struct.hashtable** %ht, align 4
  %printnode119 = getelementptr inbounds %struct.hashtable, %struct.hashtable* %94, i32 0, i32 15
  %95 = load void (%struct.hashnode*, i32)*, void (%struct.hashnode*, i32)** %printnode119, align 4
  %96 = load i8*, i8** %hn, align 4
  %97 = bitcast i8* %96 to %struct.hashnode*
  call void %95(%struct.hashnode* %97, i32 0)
  br label %if.end120

if.end120:                                        ; preds = %if.then118, %if.end110
  br label %if.end121

if.end121:                                        ; preds = %if.end120, %if.then79
  br label %if.end169

if.else122:                                       ; preds = %lor.lhs.false74
  %98 = load %struct.hashtable*, %struct.hashtable** %ht, align 4
  %getnode2 = getelementptr inbounds %struct.hashtable, %struct.hashtable* %98, i32 0, i32 10
  %99 = load %struct.hashnode* (%struct.hashtable*, i8*)*, %struct.hashnode* (%struct.hashtable*, i8*)** %getnode2, align 4
  %100 = load %struct.hashtable*, %struct.hashtable** %ht, align 4
  %101 = load %struct.asgment*, %struct.asgment** %asg, align 4
  %name123 = getelementptr inbounds %struct.asgment, %struct.asgment* %101, i32 0, i32 1
  %102 = load i8*, i8** %name123, align 4
  %call124 = call %struct.hashnode* %99(%struct.hashtable* %100, i8* %102)
  %103 = bitcast %struct.hashnode* %call124 to i8*
  store i8* %103, i8** %hn, align 4
  %tobool125 = icmp ne i8* %103, null
  br i1 %tobool125, label %if.else159, label %if.then126

if.then126:                                       ; preds = %if.else122
  %104 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind127 = getelementptr inbounds %struct.options, %struct.options* %104, i32 0, i32 0
  %arrayidx128 = getelementptr inbounds [128 x i8], [128 x i8]* %ind127, i32 0, i32 100
  %105 = load i8, i8* %arrayidx128, align 4
  %conv129 = zext i8 %105 to i32
  %cmp130 = icmp ne i32 %conv129, 0
  br i1 %cmp130, label %if.then132, label %if.else139

if.then132:                                       ; preds = %if.then126
  %106 = load %struct.asgment*, %struct.asgment** %asg, align 4
  %name133 = getelementptr inbounds %struct.asgment, %struct.asgment* %106, i32 0, i32 1
  %107 = load i8*, i8** %name133, align 4
  %call134 = call i8* @getnameddir(i8* %107)
  %tobool135 = icmp ne i8* %call134, null
  br i1 %tobool135, label %if.end138, label %if.then136

if.then136:                                       ; preds = %if.then132
  %108 = load i8*, i8** %name.addr, align 4
  %109 = load %struct.asgment*, %struct.asgment** %asg, align 4
  %name137 = getelementptr inbounds %struct.asgment, %struct.asgment* %109, i32 0, i32 1
  %110 = load i8*, i8** %name137, align 4
  call void (i8*, i8*, ...) @zwarnnam(i8* %108, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.88, i32 0, i32 0), i8* %110)
  store i32 1, i32* %returnval, align 4
  br label %if.end138

if.end138:                                        ; preds = %if.then136, %if.then132
  br label %if.end146

if.else139:                                       ; preds = %if.then126
  %111 = load %struct.asgment*, %struct.asgment** %asg, align 4
  %name140 = getelementptr inbounds %struct.asgment, %struct.asgment* %111, i32 0, i32 1
  %112 = load i8*, i8** %name140, align 4
  %113 = load i8**, i8*** @path, align 4
  %call141 = call %struct.cmdnam* @hashcmd(i8* %112, i8** %113)
  %tobool142 = icmp ne %struct.cmdnam* %call141, null
  br i1 %tobool142, label %if.end145, label %if.then143

if.then143:                                       ; preds = %if.else139
  %114 = load i8*, i8** %name.addr, align 4
  %115 = load %struct.asgment*, %struct.asgment** %asg, align 4
  %name144 = getelementptr inbounds %struct.asgment, %struct.asgment* %115, i32 0, i32 1
  %116 = load i8*, i8** %name144, align 4
  call void (i8*, i8*, ...) @zwarnnam(i8* %114, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.89, i32 0, i32 0), i8* %116)
  store i32 1, i32* %returnval, align 4
  br label %if.end145

if.end145:                                        ; preds = %if.then143, %if.else139
  br label %if.end146

if.end146:                                        ; preds = %if.end145, %if.end138
  %117 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind147 = getelementptr inbounds %struct.options, %struct.options* %117, i32 0, i32 0
  %arrayidx148 = getelementptr inbounds [128 x i8], [128 x i8]* %ind147, i32 0, i32 118
  %118 = load i8, i8* %arrayidx148, align 2
  %conv149 = zext i8 %118 to i32
  %cmp150 = icmp ne i32 %conv149, 0
  br i1 %cmp150, label %land.lhs.true, label %if.end158

land.lhs.true:                                    ; preds = %if.end146
  %119 = load %struct.hashtable*, %struct.hashtable** %ht, align 4
  %getnode2152 = getelementptr inbounds %struct.hashtable, %struct.hashtable* %119, i32 0, i32 10
  %120 = load %struct.hashnode* (%struct.hashtable*, i8*)*, %struct.hashnode* (%struct.hashtable*, i8*)** %getnode2152, align 4
  %121 = load %struct.hashtable*, %struct.hashtable** %ht, align 4
  %122 = load %struct.asgment*, %struct.asgment** %asg, align 4
  %name153 = getelementptr inbounds %struct.asgment, %struct.asgment* %122, i32 0, i32 1
  %123 = load i8*, i8** %name153, align 4
  %call154 = call %struct.hashnode* %120(%struct.hashtable* %121, i8* %123)
  %124 = bitcast %struct.hashnode* %call154 to i8*
  store i8* %124, i8** %hn, align 4
  %tobool155 = icmp ne i8* %124, null
  br i1 %tobool155, label %if.then156, label %if.end158

if.then156:                                       ; preds = %land.lhs.true
  %125 = load %struct.hashtable*, %struct.hashtable** %ht, align 4
  %printnode157 = getelementptr inbounds %struct.hashtable, %struct.hashtable* %125, i32 0, i32 15
  %126 = load void (%struct.hashnode*, i32)*, void (%struct.hashnode*, i32)** %printnode157, align 4
  %127 = load i8*, i8** %hn, align 4
  %128 = bitcast i8* %127 to %struct.hashnode*
  call void %126(%struct.hashnode* %128, i32 0)
  br label %if.end158

if.end158:                                        ; preds = %if.then156, %land.lhs.true, %if.end146
  br label %if.end168

if.else159:                                       ; preds = %if.else122
  %129 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind160 = getelementptr inbounds %struct.options, %struct.options* %129, i32 0, i32 0
  %arrayidx161 = getelementptr inbounds [128 x i8], [128 x i8]* %ind160, i32 0, i32 118
  %130 = load i8, i8* %arrayidx161, align 2
  %conv162 = zext i8 %130 to i32
  %cmp163 = icmp ne i32 %conv162, 0
  br i1 %cmp163, label %if.then165, label %if.end167

if.then165:                                       ; preds = %if.else159
  %131 = load %struct.hashtable*, %struct.hashtable** %ht, align 4
  %printnode166 = getelementptr inbounds %struct.hashtable, %struct.hashtable* %131, i32 0, i32 15
  %132 = load void (%struct.hashnode*, i32)*, void (%struct.hashnode*, i32)** %printnode166, align 4
  %133 = load i8*, i8** %hn, align 4
  %134 = bitcast i8* %133 to %struct.hashnode*
  call void %132(%struct.hashnode* %134, i32 0)
  br label %if.end167

if.end167:                                        ; preds = %if.then165, %if.else159
  br label %if.end168

if.end168:                                        ; preds = %if.end167, %if.end158
  br label %if.end169

if.end169:                                        ; preds = %if.end168, %if.end121
  br label %if.end170

if.end170:                                        ; preds = %if.end169
  br label %while.cond51

while.end171:                                     ; preds = %if.then71, %while.cond51
  br label %do.body172

do.body172:                                       ; preds = %while.end171
  %135 = load i32, i32* @queueing_enabled, align 4
  %dec173 = add nsw i32 %135, -1
  store i32 %dec173, i32* @queueing_enabled, align 4
  %tobool174 = icmp ne i32 %dec173, 0
  br i1 %tobool174, label %if.end191, label %if.then175

if.then175:                                       ; preds = %do.body172
  br label %do.body176

do.body176:                                       ; preds = %if.then175
  br label %while.cond177

while.cond177:                                    ; preds = %while.body180, %do.body176
  %136 = load i32, i32* @queue_front, align 4
  %137 = load i32, i32* @queue_rear, align 4
  %cmp178 = icmp ne i32 %136, %137
  br i1 %cmp178, label %while.body180, label %while.end189

while.body180:                                    ; preds = %while.cond177
  %138 = load i32, i32* @queue_front, align 4
  %add183 = add nsw i32 %138, 1
  %rem184 = srem i32 %add183, 128
  store i32 %rem184, i32* @queue_front, align 4
  %139 = load i32, i32* @queue_front, align 4
  %arrayidx185 = getelementptr inbounds [128 x %struct.__sigset_t], [128 x %struct.__sigset_t]* @signal_mask_queue, i32 0, i32 %139
  call void @signal_setmask(%struct.__sigset_t* sret %tmp186, %struct.__sigset_t* byval align 4 %arrayidx185)
  %140 = bitcast %struct.__sigset_t* %oset182 to i8*
  %141 = bitcast %struct.__sigset_t* %tmp186 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %140, i8* %141, i32 128, i32 4, i1 false)
  %142 = load i32, i32* @queue_front, align 4
  %arrayidx187 = getelementptr inbounds [128 x i32], [128 x i32]* @signal_queue, i32 0, i32 %142
  %143 = load i32, i32* %arrayidx187, align 4
  call void @zhandler(i32 %143)
  call void @signal_setmask(%struct.__sigset_t* sret %tmp188, %struct.__sigset_t* byval align 4 %oset182)
  br label %while.cond177

while.end189:                                     ; preds = %while.cond177
  br label %do.end190

do.end190:                                        ; preds = %while.end189
  br label %if.end191

if.end191:                                        ; preds = %do.end190, %do.body172
  br label %do.end192

do.end192:                                        ; preds = %if.end191
  %144 = load i32, i32* %returnval, align 4
  store i32 %144, i32* %retval, align 4
  br label %return

return:                                           ; preds = %do.end192, %do.end48, %if.end28, %if.then13
  %145 = load i32, i32* %retval, align 4
  ret i32 %145
}

declare %struct.cmdnam* @hashcmd(i8*, i8**) #1

; Function Attrs: noinline nounwind
define i32 @bin_alias(i8* %name, i8** %argv, %struct.options* %ops, i32 %func) #0 {
entry:
  %retval = alloca i32, align 4
  %name.addr = alloca i8*, align 4
  %argv.addr = alloca i8**, align 4
  %ops.addr = alloca %struct.options*, align 4
  %func.addr = alloca i32, align 4
  %a = alloca %struct.alias*, align 4
  %pprog = alloca %struct.patprog*, align 4
  %asg = alloca %struct.asgment*, align 4
  %returnval = alloca i32, align 4
  %flags1 = alloca i32, align 4
  %flags2 = alloca i32, align 4
  %printflags = alloca i32, align 4
  %type_opts = alloca i32, align 4
  %ht = alloca %struct.hashtable*, align 4
  %oset = alloca %struct.__sigset_t, align 4
  %tmp = alloca %struct.__sigset_t, align 4
  %tmp84 = alloca %struct.__sigset_t, align 4
  %oset113 = alloca %struct.__sigset_t, align 4
  %tmp117 = alloca %struct.__sigset_t, align 4
  %tmp119 = alloca %struct.__sigset_t, align 4
  %oset190 = alloca %struct.__sigset_t, align 4
  %tmp194 = alloca %struct.__sigset_t, align 4
  %tmp196 = alloca %struct.__sigset_t, align 4
  store i8* %name, i8** %name.addr, align 4
  store i8** %argv, i8*** %argv.addr, align 4
  store %struct.options* %ops, %struct.options** %ops.addr, align 4
  store i32 %func, i32* %func.addr, align 4
  store i32 0, i32* %returnval, align 4
  store i32 0, i32* %flags1, align 4
  store i32 1, i32* %flags2, align 4
  store i32 0, i32* %printflags, align 4
  %0 = load %struct.hashtable*, %struct.hashtable** @aliastab, align 4
  store %struct.hashtable* %0, %struct.hashtable** %ht, align 4
  %1 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind = getelementptr inbounds %struct.options, %struct.options* %1, i32 0, i32 0
  %arrayidx = getelementptr inbounds [128 x i8], [128 x i8]* %ind, i32 0, i32 114
  %2 = load i8, i8* %arrayidx, align 2
  %conv = zext i8 %2 to i32
  %cmp = icmp ne i32 %conv, 0
  %conv1 = zext i1 %cmp to i32
  %3 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind2 = getelementptr inbounds %struct.options, %struct.options* %3, i32 0, i32 0
  %arrayidx3 = getelementptr inbounds [128 x i8], [128 x i8]* %ind2, i32 0, i32 103
  %4 = load i8, i8* %arrayidx3, align 1
  %conv4 = zext i8 %4 to i32
  %cmp5 = icmp ne i32 %conv4, 0
  %conv6 = zext i1 %cmp5 to i32
  %add = add nsw i32 %conv1, %conv6
  %5 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind7 = getelementptr inbounds %struct.options, %struct.options* %5, i32 0, i32 0
  %arrayidx8 = getelementptr inbounds [128 x i8], [128 x i8]* %ind7, i32 0, i32 115
  %6 = load i8, i8* %arrayidx8, align 1
  %conv9 = zext i8 %6 to i32
  %cmp10 = icmp ne i32 %conv9, 0
  %conv11 = zext i1 %cmp10 to i32
  %add12 = add nsw i32 %add, %conv11
  store i32 %add12, i32* %type_opts, align 4
  %7 = load i32, i32* %type_opts, align 4
  %tobool = icmp ne i32 %7, 0
  br i1 %tobool, label %if.then, label %if.end34

if.then:                                          ; preds = %entry
  %8 = load i32, i32* %type_opts, align 4
  %cmp13 = icmp sgt i32 %8, 1
  br i1 %cmp13, label %if.then15, label %if.end

if.then15:                                        ; preds = %if.then
  %9 = load i8*, i8** %name.addr, align 4
  call void (i8*, i8*, ...) @zwarnnam(i8* %9, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.91, i32 0, i32 0))
  store i32 1, i32* %retval, align 4
  br label %return

if.end:                                           ; preds = %if.then
  %10 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind16 = getelementptr inbounds %struct.options, %struct.options* %10, i32 0, i32 0
  %arrayidx17 = getelementptr inbounds [128 x i8], [128 x i8]* %ind16, i32 0, i32 103
  %11 = load i8, i8* %arrayidx17, align 1
  %conv18 = zext i8 %11 to i32
  %cmp19 = icmp ne i32 %conv18, 0
  br i1 %cmp19, label %if.then21, label %if.else

if.then21:                                        ; preds = %if.end
  %12 = load i32, i32* %flags1, align 4
  %or = or i32 %12, 2
  store i32 %or, i32* %flags1, align 4
  br label %if.end23

if.else:                                          ; preds = %if.end
  %13 = load i32, i32* %flags2, align 4
  %or22 = or i32 %13, 2
  store i32 %or22, i32* %flags2, align 4
  br label %if.end23

if.end23:                                         ; preds = %if.else, %if.then21
  %14 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind24 = getelementptr inbounds %struct.options, %struct.options* %14, i32 0, i32 0
  %arrayidx25 = getelementptr inbounds [128 x i8], [128 x i8]* %ind24, i32 0, i32 115
  %15 = load i8, i8* %arrayidx25, align 1
  %conv26 = zext i8 %15 to i32
  %cmp27 = icmp ne i32 %conv26, 0
  br i1 %cmp27, label %if.then29, label %if.else31

if.then29:                                        ; preds = %if.end23
  %16 = load i32, i32* %flags1, align 4
  %or30 = or i32 %16, 4
  store i32 %or30, i32* %flags1, align 4
  %17 = load %struct.hashtable*, %struct.hashtable** @sufaliastab, align 4
  store %struct.hashtable* %17, %struct.hashtable** %ht, align 4
  br label %if.end33

if.else31:                                        ; preds = %if.end23
  %18 = load i32, i32* %flags2, align 4
  %or32 = or i32 %18, 4
  store i32 %or32, i32* %flags2, align 4
  br label %if.end33

if.end33:                                         ; preds = %if.else31, %if.then29
  br label %if.end34

if.end34:                                         ; preds = %if.end33, %entry
  %19 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind35 = getelementptr inbounds %struct.options, %struct.options* %19, i32 0, i32 0
  %arrayidx36 = getelementptr inbounds [128 x i8], [128 x i8]* %ind35, i32 0, i32 76
  %20 = load i8, i8* %arrayidx36, align 4
  %conv37 = zext i8 %20 to i32
  %cmp38 = icmp ne i32 %conv37, 0
  br i1 %cmp38, label %if.then40, label %if.else42

if.then40:                                        ; preds = %if.end34
  %21 = load i32, i32* %printflags, align 4
  %or41 = or i32 %21, 4
  store i32 %or41, i32* %printflags, align 4
  br label %if.end73

if.else42:                                        ; preds = %if.end34
  %22 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind43 = getelementptr inbounds %struct.options, %struct.options* %22, i32 0, i32 0
  %arrayidx44 = getelementptr inbounds [128 x i8], [128 x i8]* %ind43, i32 0, i32 103
  %23 = load i8, i8* %arrayidx44, align 1
  %conv45 = zext i8 %23 to i32
  %and = and i32 %conv45, 2
  %tobool46 = icmp ne i32 %and, 0
  br i1 %tobool46, label %if.then70, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.else42
  %24 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind47 = getelementptr inbounds %struct.options, %struct.options* %24, i32 0, i32 0
  %arrayidx48 = getelementptr inbounds [128 x i8], [128 x i8]* %ind47, i32 0, i32 114
  %25 = load i8, i8* %arrayidx48, align 2
  %conv49 = zext i8 %25 to i32
  %and50 = and i32 %conv49, 2
  %tobool51 = icmp ne i32 %and50, 0
  br i1 %tobool51, label %if.then70, label %lor.lhs.false52

lor.lhs.false52:                                  ; preds = %lor.lhs.false
  %26 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind53 = getelementptr inbounds %struct.options, %struct.options* %26, i32 0, i32 0
  %arrayidx54 = getelementptr inbounds [128 x i8], [128 x i8]* %ind53, i32 0, i32 115
  %27 = load i8, i8* %arrayidx54, align 1
  %conv55 = zext i8 %27 to i32
  %and56 = and i32 %conv55, 2
  %tobool57 = icmp ne i32 %and56, 0
  br i1 %tobool57, label %if.then70, label %lor.lhs.false58

lor.lhs.false58:                                  ; preds = %lor.lhs.false52
  %28 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind59 = getelementptr inbounds %struct.options, %struct.options* %28, i32 0, i32 0
  %arrayidx60 = getelementptr inbounds [128 x i8], [128 x i8]* %ind59, i32 0, i32 109
  %29 = load i8, i8* %arrayidx60, align 1
  %conv61 = zext i8 %29 to i32
  %and62 = and i32 %conv61, 2
  %tobool63 = icmp ne i32 %and62, 0
  br i1 %tobool63, label %if.then70, label %lor.lhs.false64

lor.lhs.false64:                                  ; preds = %lor.lhs.false58
  %30 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind65 = getelementptr inbounds %struct.options, %struct.options* %30, i32 0, i32 0
  %arrayidx66 = getelementptr inbounds [128 x i8], [128 x i8]* %ind65, i32 0, i32 43
  %31 = load i8, i8* %arrayidx66, align 1
  %conv67 = zext i8 %31 to i32
  %cmp68 = icmp ne i32 %conv67, 0
  br i1 %cmp68, label %if.then70, label %if.end72

if.then70:                                        ; preds = %lor.lhs.false64, %lor.lhs.false58, %lor.lhs.false52, %lor.lhs.false, %if.else42
  %32 = load i32, i32* %printflags, align 4
  %or71 = or i32 %32, 1
  store i32 %or71, i32* %printflags, align 4
  br label %if.end72

if.end72:                                         ; preds = %if.then70, %lor.lhs.false64
  br label %if.end73

if.end73:                                         ; preds = %if.end72, %if.then40
  %33 = load i8**, i8*** %argv.addr, align 4
  %34 = load i8*, i8** %33, align 4
  %tobool74 = icmp ne i8* %34, null
  br i1 %tobool74, label %if.end87, label %if.then75

if.then75:                                        ; preds = %if.end73
  %35 = load i32, i32* @queueing_enabled, align 4
  %inc = add nsw i32 %35, 1
  store i32 %inc, i32* @queueing_enabled, align 4
  %36 = load %struct.hashtable*, %struct.hashtable** %ht, align 4
  %37 = load i32, i32* %flags1, align 4
  %38 = load i32, i32* %flags2, align 4
  %39 = load %struct.hashtable*, %struct.hashtable** %ht, align 4
  %printnode = getelementptr inbounds %struct.hashtable, %struct.hashtable* %39, i32 0, i32 15
  %40 = load void (%struct.hashnode*, i32)*, void (%struct.hashnode*, i32)** %printnode, align 4
  %41 = load i32, i32* %printflags, align 4
  %call = call i32 @scanhashtable(%struct.hashtable* %36, i32 1, i32 %37, i32 %38, void (%struct.hashnode*, i32)* %40, i32 %41)
  br label %do.body

do.body:                                          ; preds = %if.then75
  %42 = load i32, i32* @queueing_enabled, align 4
  %dec = add nsw i32 %42, -1
  store i32 %dec, i32* @queueing_enabled, align 4
  %tobool76 = icmp ne i32 %dec, 0
  br i1 %tobool76, label %if.end85, label %if.then77

if.then77:                                        ; preds = %do.body
  br label %do.body78

do.body78:                                        ; preds = %if.then77
  br label %while.cond

while.cond:                                       ; preds = %while.body, %do.body78
  %43 = load i32, i32* @queue_front, align 4
  %44 = load i32, i32* @queue_rear, align 4
  %cmp79 = icmp ne i32 %43, %44
  br i1 %cmp79, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %45 = load i32, i32* @queue_front, align 4
  %add81 = add nsw i32 %45, 1
  %rem = srem i32 %add81, 128
  store i32 %rem, i32* @queue_front, align 4
  %46 = load i32, i32* @queue_front, align 4
  %arrayidx82 = getelementptr inbounds [128 x %struct.__sigset_t], [128 x %struct.__sigset_t]* @signal_mask_queue, i32 0, i32 %46
  call void @signal_setmask(%struct.__sigset_t* sret %tmp, %struct.__sigset_t* byval align 4 %arrayidx82)
  %47 = bitcast %struct.__sigset_t* %oset to i8*
  %48 = bitcast %struct.__sigset_t* %tmp to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %47, i8* %48, i32 128, i32 4, i1 false)
  %49 = load i32, i32* @queue_front, align 4
  %arrayidx83 = getelementptr inbounds [128 x i32], [128 x i32]* @signal_queue, i32 0, i32 %49
  %50 = load i32, i32* %arrayidx83, align 4
  call void @zhandler(i32 %50)
  call void @signal_setmask(%struct.__sigset_t* sret %tmp84, %struct.__sigset_t* byval align 4 %oset)
  br label %while.cond

while.end:                                        ; preds = %while.cond
  br label %do.end

do.end:                                           ; preds = %while.end
  br label %if.end85

if.end85:                                         ; preds = %do.end, %do.body
  br label %do.end86

do.end86:                                         ; preds = %if.end85
  store i32 0, i32* %retval, align 4
  br label %return

if.end87:                                         ; preds = %if.end73
  %51 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind88 = getelementptr inbounds %struct.options, %struct.options* %51, i32 0, i32 0
  %arrayidx89 = getelementptr inbounds [128 x i8], [128 x i8]* %ind88, i32 0, i32 109
  %52 = load i8, i8* %arrayidx89, align 1
  %conv90 = zext i8 %52 to i32
  %cmp91 = icmp ne i32 %conv90, 0
  br i1 %cmp91, label %if.then93, label %if.end124

if.then93:                                        ; preds = %if.end87
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then93
  %53 = load i8**, i8*** %argv.addr, align 4
  %54 = load i8*, i8** %53, align 4
  %tobool94 = icmp ne i8* %54, null
  br i1 %tobool94, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %55 = load i32, i32* @queueing_enabled, align 4
  %inc95 = add nsw i32 %55, 1
  store i32 %inc95, i32* @queueing_enabled, align 4
  %56 = load i8**, i8*** %argv.addr, align 4
  %57 = load i8*, i8** %56, align 4
  call void @tokenize(i8* %57)
  %58 = load i8**, i8*** %argv.addr, align 4
  %59 = load i8*, i8** %58, align 4
  %call96 = call %struct.patprog* @patcompile(i8* %59, i32 64, i8** null)
  store %struct.patprog* %call96, %struct.patprog** %pprog, align 4
  %tobool97 = icmp ne %struct.patprog* %call96, null
  br i1 %tobool97, label %if.then98, label %if.else101

if.then98:                                        ; preds = %for.body
  %60 = load %struct.hashtable*, %struct.hashtable** %ht, align 4
  %61 = load %struct.patprog*, %struct.patprog** %pprog, align 4
  %62 = load i32, i32* %flags1, align 4
  %63 = load i32, i32* %flags2, align 4
  %64 = load %struct.hashtable*, %struct.hashtable** %ht, align 4
  %printnode99 = getelementptr inbounds %struct.hashtable, %struct.hashtable* %64, i32 0, i32 15
  %65 = load void (%struct.hashnode*, i32)*, void (%struct.hashnode*, i32)** %printnode99, align 4
  %66 = load i32, i32* %printflags, align 4
  %call100 = call i32 @scanmatchtable(%struct.hashtable* %60, %struct.patprog* %61, i32 1, i32 %62, i32 %63, void (%struct.hashnode*, i32)* %65, i32 %66)
  br label %if.end102

if.else101:                                       ; preds = %for.body
  %67 = load i8**, i8*** %argv.addr, align 4
  %68 = load i8*, i8** %67, align 4
  call void @untokenize(i8* %68)
  %69 = load i8*, i8** %name.addr, align 4
  %70 = load i8**, i8*** %argv.addr, align 4
  %71 = load i8*, i8** %70, align 4
  call void (i8*, i8*, ...) @zwarnnam(i8* %69, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.15, i32 0, i32 0), i8* %71)
  store i32 1, i32* %returnval, align 4
  br label %if.end102

if.end102:                                        ; preds = %if.else101, %if.then98
  br label %do.body103

do.body103:                                       ; preds = %if.end102
  %72 = load i32, i32* @queueing_enabled, align 4
  %dec104 = add nsw i32 %72, -1
  store i32 %dec104, i32* @queueing_enabled, align 4
  %tobool105 = icmp ne i32 %dec104, 0
  br i1 %tobool105, label %if.end122, label %if.then106

if.then106:                                       ; preds = %do.body103
  br label %do.body107

do.body107:                                       ; preds = %if.then106
  br label %while.cond108

while.cond108:                                    ; preds = %while.body111, %do.body107
  %73 = load i32, i32* @queue_front, align 4
  %74 = load i32, i32* @queue_rear, align 4
  %cmp109 = icmp ne i32 %73, %74
  br i1 %cmp109, label %while.body111, label %while.end120

while.body111:                                    ; preds = %while.cond108
  %75 = load i32, i32* @queue_front, align 4
  %add114 = add nsw i32 %75, 1
  %rem115 = srem i32 %add114, 128
  store i32 %rem115, i32* @queue_front, align 4
  %76 = load i32, i32* @queue_front, align 4
  %arrayidx116 = getelementptr inbounds [128 x %struct.__sigset_t], [128 x %struct.__sigset_t]* @signal_mask_queue, i32 0, i32 %76
  call void @signal_setmask(%struct.__sigset_t* sret %tmp117, %struct.__sigset_t* byval align 4 %arrayidx116)
  %77 = bitcast %struct.__sigset_t* %oset113 to i8*
  %78 = bitcast %struct.__sigset_t* %tmp117 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %77, i8* %78, i32 128, i32 4, i1 false)
  %79 = load i32, i32* @queue_front, align 4
  %arrayidx118 = getelementptr inbounds [128 x i32], [128 x i32]* @signal_queue, i32 0, i32 %79
  %80 = load i32, i32* %arrayidx118, align 4
  call void @zhandler(i32 %80)
  call void @signal_setmask(%struct.__sigset_t* sret %tmp119, %struct.__sigset_t* byval align 4 %oset113)
  br label %while.cond108

while.end120:                                     ; preds = %while.cond108
  br label %do.end121

do.end121:                                        ; preds = %while.end120
  br label %if.end122

if.end122:                                        ; preds = %do.end121, %do.body103
  br label %do.end123

do.end123:                                        ; preds = %if.end122
  br label %for.inc

for.inc:                                          ; preds = %do.end123
  %81 = load i8**, i8*** %argv.addr, align 4
  %incdec.ptr = getelementptr inbounds i8*, i8** %81, i32 1
  store i8** %incdec.ptr, i8*** %argv.addr, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %82 = load i32, i32* %returnval, align 4
  store i32 %82, i32* %retval, align 4
  br label %return

if.end124:                                        ; preds = %if.end87
  %83 = load i32, i32* @queueing_enabled, align 4
  %inc125 = add nsw i32 %83, 1
  store i32 %inc125, i32* @queueing_enabled, align 4
  br label %while.cond126

while.cond126:                                    ; preds = %if.end178, %if.end124
  %call127 = call %struct.asgment* @getasg(i8*** %argv.addr, %union.linkroot* null)
  store %struct.asgment* %call127, %struct.asgment** %asg, align 4
  %tobool128 = icmp ne %struct.asgment* %call127, null
  br i1 %tobool128, label %while.body129, label %while.end179

while.body129:                                    ; preds = %while.cond126
  %84 = load %struct.asgment*, %struct.asgment** %asg, align 4
  %value = getelementptr inbounds %struct.asgment, %struct.asgment* %84, i32 0, i32 3
  %scalar = bitcast %union.anon* %value to i8**
  %85 = load i8*, i8** %scalar, align 4
  %tobool130 = icmp ne i8* %85, null
  br i1 %tobool130, label %land.lhs.true, label %if.else143

land.lhs.true:                                    ; preds = %while.body129
  %86 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind131 = getelementptr inbounds %struct.options, %struct.options* %86, i32 0, i32 0
  %arrayidx132 = getelementptr inbounds [128 x i8], [128 x i8]* %ind131, i32 0, i32 76
  %87 = load i8, i8* %arrayidx132, align 4
  %conv133 = zext i8 %87 to i32
  %cmp134 = icmp ne i32 %conv133, 0
  br i1 %cmp134, label %if.else143, label %if.then136

if.then136:                                       ; preds = %land.lhs.true
  %88 = load %struct.hashtable*, %struct.hashtable** %ht, align 4
  %addnode = getelementptr inbounds %struct.hashtable, %struct.hashtable* %88, i32 0, i32 8
  %89 = load void (%struct.hashtable*, i8*, i8*)*, void (%struct.hashtable*, i8*, i8*)** %addnode, align 4
  %90 = load %struct.hashtable*, %struct.hashtable** %ht, align 4
  %91 = load %struct.asgment*, %struct.asgment** %asg, align 4
  %name137 = getelementptr inbounds %struct.asgment, %struct.asgment* %91, i32 0, i32 1
  %92 = load i8*, i8** %name137, align 4
  %call138 = call i8* @ztrdup(i8* %92)
  %93 = load %struct.asgment*, %struct.asgment** %asg, align 4
  %value139 = getelementptr inbounds %struct.asgment, %struct.asgment* %93, i32 0, i32 3
  %scalar140 = bitcast %union.anon* %value139 to i8**
  %94 = load i8*, i8** %scalar140, align 4
  %call141 = call i8* @ztrdup(i8* %94)
  %95 = load i32, i32* %flags1, align 4
  %call142 = call %struct.alias* @createaliasnode(i8* %call141, i32 %95)
  %96 = bitcast %struct.alias* %call142 to i8*
  call void %89(%struct.hashtable* %90, i8* %call138, i8* %96)
  br label %if.end178

if.else143:                                       ; preds = %land.lhs.true, %while.body129
  %97 = load %struct.hashtable*, %struct.hashtable** %ht, align 4
  %getnode = getelementptr inbounds %struct.hashtable, %struct.hashtable* %97, i32 0, i32 9
  %98 = load %struct.hashnode* (%struct.hashtable*, i8*)*, %struct.hashnode* (%struct.hashtable*, i8*)** %getnode, align 4
  %99 = load %struct.hashtable*, %struct.hashtable** %ht, align 4
  %100 = load %struct.asgment*, %struct.asgment** %asg, align 4
  %name144 = getelementptr inbounds %struct.asgment, %struct.asgment* %100, i32 0, i32 1
  %101 = load i8*, i8** %name144, align 4
  %call145 = call %struct.hashnode* %98(%struct.hashtable* %99, i8* %101)
  %102 = bitcast %struct.hashnode* %call145 to %struct.alias*
  store %struct.alias* %102, %struct.alias** %a, align 4
  %tobool146 = icmp ne %struct.alias* %102, null
  br i1 %tobool146, label %if.then147, label %if.else176

if.then147:                                       ; preds = %if.else143
  %103 = load i32, i32* %type_opts, align 4
  %tobool148 = icmp ne i32 %103, 0
  br i1 %tobool148, label %lor.lhs.false149, label %if.then172

lor.lhs.false149:                                 ; preds = %if.then147
  %104 = load %struct.hashtable*, %struct.hashtable** %ht, align 4
  %105 = load %struct.hashtable*, %struct.hashtable** @sufaliastab, align 4
  %cmp150 = icmp eq %struct.hashtable* %104, %105
  br i1 %cmp150, label %if.then172, label %lor.lhs.false152

lor.lhs.false152:                                 ; preds = %lor.lhs.false149
  %106 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind153 = getelementptr inbounds %struct.options, %struct.options* %106, i32 0, i32 0
  %arrayidx154 = getelementptr inbounds [128 x i8], [128 x i8]* %ind153, i32 0, i32 114
  %107 = load i8, i8* %arrayidx154, align 2
  %conv155 = zext i8 %107 to i32
  %cmp156 = icmp ne i32 %conv155, 0
  br i1 %cmp156, label %land.lhs.true158, label %lor.lhs.false161

land.lhs.true158:                                 ; preds = %lor.lhs.false152
  %108 = load %struct.alias*, %struct.alias** %a, align 4
  %node = getelementptr inbounds %struct.alias, %struct.alias* %108, i32 0, i32 0
  %flags = getelementptr inbounds %struct.hashnode, %struct.hashnode* %node, i32 0, i32 2
  %109 = load i32, i32* %flags, align 4
  %and159 = and i32 %109, 6
  %tobool160 = icmp ne i32 %and159, 0
  br i1 %tobool160, label %lor.lhs.false161, label %if.then172

lor.lhs.false161:                                 ; preds = %land.lhs.true158, %lor.lhs.false152
  %110 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind162 = getelementptr inbounds %struct.options, %struct.options* %110, i32 0, i32 0
  %arrayidx163 = getelementptr inbounds [128 x i8], [128 x i8]* %ind162, i32 0, i32 103
  %111 = load i8, i8* %arrayidx163, align 1
  %conv164 = zext i8 %111 to i32
  %cmp165 = icmp ne i32 %conv164, 0
  br i1 %cmp165, label %land.lhs.true167, label %if.end175

land.lhs.true167:                                 ; preds = %lor.lhs.false161
  %112 = load %struct.alias*, %struct.alias** %a, align 4
  %node168 = getelementptr inbounds %struct.alias, %struct.alias* %112, i32 0, i32 0
  %flags169 = getelementptr inbounds %struct.hashnode, %struct.hashnode* %node168, i32 0, i32 2
  %113 = load i32, i32* %flags169, align 4
  %and170 = and i32 %113, 2
  %tobool171 = icmp ne i32 %and170, 0
  br i1 %tobool171, label %if.then172, label %if.end175

if.then172:                                       ; preds = %land.lhs.true167, %land.lhs.true158, %lor.lhs.false149, %if.then147
  %114 = load %struct.hashtable*, %struct.hashtable** %ht, align 4
  %printnode173 = getelementptr inbounds %struct.hashtable, %struct.hashtable* %114, i32 0, i32 15
  %115 = load void (%struct.hashnode*, i32)*, void (%struct.hashnode*, i32)** %printnode173, align 4
  %116 = load %struct.alias*, %struct.alias** %a, align 4
  %node174 = getelementptr inbounds %struct.alias, %struct.alias* %116, i32 0, i32 0
  %117 = load i32, i32* %printflags, align 4
  call void %115(%struct.hashnode* %node174, i32 %117)
  br label %if.end175

if.end175:                                        ; preds = %if.then172, %land.lhs.true167, %lor.lhs.false161
  br label %if.end177

if.else176:                                       ; preds = %if.else143
  store i32 1, i32* %returnval, align 4
  br label %if.end177

if.end177:                                        ; preds = %if.else176, %if.end175
  br label %if.end178

if.end178:                                        ; preds = %if.end177, %if.then136
  br label %while.cond126

while.end179:                                     ; preds = %while.cond126
  br label %do.body180

do.body180:                                       ; preds = %while.end179
  %118 = load i32, i32* @queueing_enabled, align 4
  %dec181 = add nsw i32 %118, -1
  store i32 %dec181, i32* @queueing_enabled, align 4
  %tobool182 = icmp ne i32 %dec181, 0
  br i1 %tobool182, label %if.end199, label %if.then183

if.then183:                                       ; preds = %do.body180
  br label %do.body184

do.body184:                                       ; preds = %if.then183
  br label %while.cond185

while.cond185:                                    ; preds = %while.body188, %do.body184
  %119 = load i32, i32* @queue_front, align 4
  %120 = load i32, i32* @queue_rear, align 4
  %cmp186 = icmp ne i32 %119, %120
  br i1 %cmp186, label %while.body188, label %while.end197

while.body188:                                    ; preds = %while.cond185
  %121 = load i32, i32* @queue_front, align 4
  %add191 = add nsw i32 %121, 1
  %rem192 = srem i32 %add191, 128
  store i32 %rem192, i32* @queue_front, align 4
  %122 = load i32, i32* @queue_front, align 4
  %arrayidx193 = getelementptr inbounds [128 x %struct.__sigset_t], [128 x %struct.__sigset_t]* @signal_mask_queue, i32 0, i32 %122
  call void @signal_setmask(%struct.__sigset_t* sret %tmp194, %struct.__sigset_t* byval align 4 %arrayidx193)
  %123 = bitcast %struct.__sigset_t* %oset190 to i8*
  %124 = bitcast %struct.__sigset_t* %tmp194 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %123, i8* %124, i32 128, i32 4, i1 false)
  %125 = load i32, i32* @queue_front, align 4
  %arrayidx195 = getelementptr inbounds [128 x i32], [128 x i32]* @signal_queue, i32 0, i32 %125
  %126 = load i32, i32* %arrayidx195, align 4
  call void @zhandler(i32 %126)
  call void @signal_setmask(%struct.__sigset_t* sret %tmp196, %struct.__sigset_t* byval align 4 %oset190)
  br label %while.cond185

while.end197:                                     ; preds = %while.cond185
  br label %do.end198

do.end198:                                        ; preds = %while.end197
  br label %if.end199

if.end199:                                        ; preds = %do.end198, %do.body180
  br label %do.end200

do.end200:                                        ; preds = %if.end199
  %127 = load i32, i32* %returnval, align 4
  store i32 %127, i32* %retval, align 4
  br label %return

return:                                           ; preds = %do.end200, %for.end, %do.end86, %if.then15
  %128 = load i32, i32* %retval, align 4
  ret i32 %128
}

declare %struct.alias* @createaliasnode(i8*, i32) #1

; Function Attrs: noinline nounwind
define i32 @bin_true(i8* %name, i8** %argv, %struct.options* %ops, i32 %func) #0 {
entry:
  %name.addr = alloca i8*, align 4
  %argv.addr = alloca i8**, align 4
  %ops.addr = alloca %struct.options*, align 4
  %func.addr = alloca i32, align 4
  store i8* %name, i8** %name.addr, align 4
  store i8** %argv, i8*** %argv.addr, align 4
  store %struct.options* %ops, %struct.options** %ops.addr, align 4
  store i32 %func, i32* %func.addr, align 4
  ret i32 0
}

; Function Attrs: noinline nounwind
define i32 @bin_false(i8* %name, i8** %argv, %struct.options* %ops, i32 %func) #0 {
entry:
  %name.addr = alloca i8*, align 4
  %argv.addr = alloca i8**, align 4
  %ops.addr = alloca %struct.options*, align 4
  %func.addr = alloca i32, align 4
  store i8* %name, i8** %name.addr, align 4
  store i8** %argv, i8*** %argv.addr, align 4
  store %struct.options* %ops, %struct.options** %ops.addr, align 4
  store i32 %func, i32* %func.addr, align 4
  ret i32 1
}

; Function Attrs: noinline nounwind
define i32 @bin_print(i8* %name, i8** %args, %struct.options* %ops, i32 %func) #0 {
entry:
  %retval = alloca i32, align 4
  %name.addr = alloca i8*, align 4
  %args.addr = alloca i8**, align 4
  %ops.addr = alloca %struct.options*, align 4
  %func.addr = alloca i32, align 4
  %flen = alloca i32, align 4
  %width = alloca i32, align 4
  %prec = alloca i32, align 4
  %type = alloca i32, align 4
  %argc = alloca i32, align 4
  %n = alloca i32, align 4
  %narg = alloca i32, align 4
  %curlen = alloca i32, align 4
  %nnl = alloca i32, align 4
  %fmttrunc = alloca i32, align 4
  %ret = alloca i32, align 4
  %maxarg = alloca i32, align 4
  %nc = alloca i32, align 4
  %flags = alloca [6 x i32], align 4
  %len = alloca i32*, align 4
  %visarr = alloca i32, align 4
  %start = alloca i8*, align 4
  %endptr = alloca i8*, align 4
  %c = alloca i8*, align 4
  %d = alloca i8*, align 4
  %flag = alloca i8*, align 4
  %buf = alloca i8*, align 4
  %spec = alloca [14 x i8], align 1
  %fmt = alloca i8*, align 4
  %first = alloca i8**, align 4
  %argp = alloca i8**, align 4
  %curarg = alloca i8*, align 4
  %flagch = alloca i8*, align 4
  %save = alloca i8, align 1
  %nullstr = alloca i8, align 1
  %rcount = alloca i32, align 4
  %count = alloca i32, align 4
  %cursplit = alloca i32*, align 4
  %splits = alloca i32*, align 4
  %fout = alloca %struct._IO_FILE*, align 4
  %mcount = alloca i32, align 4
  %ent = alloca %struct.histent*, align 4
  %mnumval = alloca %struct.mnumber, align 8
  %doubleval = alloca double, align 8
  %intval = alloca i32, align 4
  %zlongval = alloca i32, align 4
  %zulongval = alloca i32, align 4
  %stringval = alloca i8*, align 4
  %eptr = alloca i8*, align 4
  %argptr = alloca i8*, align 4
  %pprog = alloca %struct.patprog*, align 4
  %t = alloca i8**, align 4
  %p = alloca i8**, align 4
  %oset = alloca %struct.__sigset_t, align 4
  %tmp = alloca %struct.__sigset_t, align 4
  %tmp175 = alloca %struct.__sigset_t, align 4
  %oset197 = alloca %struct.__sigset_t, align 4
  %tmp201 = alloca %struct.__sigset_t, align 4
  %tmp203 = alloca %struct.__sigset_t, align 4
  %escape_how = alloca i32, align 4
  %str = alloca i8*, align 4
  %d303 = alloca %struct.nameddir*, align 4
  %dirlen = alloca i32, align 4
  %arg = alloca i8*, align 4
  %oset337 = alloca %struct.__sigset_t, align 4
  %tmp341 = alloca %struct.__sigset_t, align 4
  %tmp343 = alloca %struct.__sigset_t, align 4
  %flags365 = alloca i32, align 4
  %fdarg = alloca i32, align 4
  %fd = alloca i32, align 4
  %argptr450 = alloca i8*, align 4
  %eptr459 = alloca i8*, align 4
  %l = alloca i32, align 4
  %nr = alloca i32, align 4
  %sc = alloca i32, align 4
  %n532 = alloca i32, align 4
  %t534 = alloca i32, align 4
  %i = alloca i32, align 4
  %widths = alloca i32*, align 4
  %wptr = alloca i32*, align 4
  %l549 = alloca i32, align 4
  %width552 = alloca i32, align 4
  %aptr = alloca i8*, align 4
  %mbs = alloca %struct.__mbstate_t, align 4
  %wc = alloca i32, align 4
  %cnt = alloca i32, align 4
  %wcw = alloca i32, align 4
  %ic = alloca i32, align 4
  %oset869 = alloca %struct.__sigset_t, align 4
  %tmp873 = alloca %struct.__sigset_t, align 4
  %tmp875 = alloca %struct.__sigset_t, align 4
  %oset941 = alloca %struct.__sigset_t, align 4
  %tmp945 = alloca %struct.__sigset_t, align 4
  %tmp947 = alloca %struct.__sigset_t, align 4
  %nwords = alloca i32, align 4
  %nlen = alloca i32, align 4
  %iwords = alloca i32, align 4
  %pargs = alloca i8**, align 4
  %wordsize = alloca i32, align 4
  %words = alloca i16*, align 4
  %oset1001 = alloca %struct.__sigset_t, align 4
  %tmp1005 = alloca %struct.__sigset_t, align 4
  %tmp1007 = alloca %struct.__sigset_t, align 4
  %oset1070 = alloca %struct.__sigset_t, align 4
  %tmp1074 = alloca %struct.__sigset_t, align 4
  %tmp1076 = alloca %struct.__sigset_t, align 4
  %eptr1097 = alloca i8*, align 4
  %expand = alloca i32, align 4
  %startpos = alloca i32, align 4
  %all = alloca i32, align 4
  %xarg = alloca i8*, align 4
  %oset1323 = alloca %struct.__sigset_t, align 4
  %tmp1327 = alloca %struct.__sigset_t, align 4
  %tmp1329 = alloca %struct.__sigset_t, align 4
  %vbuf = alloca %struct.value, align 4
  %s = alloca i8*, align 4
  %v = alloca %struct.value*, align 4
  %b = alloca i8*, align 4
  %ptr = alloca i8*, align 4
  %lbytes = alloca i32, align 4
  %lchars = alloca i32, align 4
  %lleft = alloca i32, align 4
  %mbs1661 = alloca %struct.__mbstate_t, align 4
  %chars = alloca i32, align 4
  %cc = alloca i32, align 4
  %eptr1930 = alloca i8*, align 4
  %tmp1936 = alloca %struct.mnumber, align 8
  %arrayval = alloca i8**, align 4
  %start2105 = alloca i32, align 4
  %oset2183 = alloca %struct.__sigset_t, align 4
  %tmp2187 = alloca %struct.__sigset_t, align 4
  %tmp2189 = alloca %struct.__sigset_t, align 4
  store i8* %name, i8** %name.addr, align 4
  store i8** %args, i8*** %args.addr, align 4
  store %struct.options* %ops, %struct.options** %ops.addr, align 4
  store i32 %func, i32* %func.addr, align 4
  store i32 0, i32* %curlen, align 4
  store i32 0, i32* %nnl, align 4
  store i32 0, i32* %fmttrunc, align 4
  store i32 0, i32* %ret, align 4
  store i32 0, i32* %maxarg, align 4
  store i32 0, i32* %nc, align 4
  store i32 0, i32* %visarr, align 4
  store i8* null, i8** %buf, align 4
  store i8* null, i8** %fmt, align 4
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.92, i32 0, i32 0), i8** %flagch, align 4
  store i8 0, i8* %save, align 1
  store i8 0, i8* %nullstr, align 1
  store i32 0, i32* %rcount, align 4
  store i32 0, i32* %count, align 4
  store i32* null, i32** %cursplit, align 4
  store i32* null, i32** %splits, align 4
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 4
  store %struct._IO_FILE* %0, %struct._IO_FILE** %fout, align 4
  %1 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind = getelementptr inbounds %struct.options, %struct.options* %1, i32 0, i32 0
  %arrayidx = getelementptr inbounds [128 x i8], [128 x i8]* %ind, i32 0, i32 122
  %2 = load i8, i8* %arrayidx, align 2
  %conv = zext i8 %2 to i32
  %cmp = icmp ne i32 %conv, 0
  %conv1 = zext i1 %cmp to i32
  %3 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind2 = getelementptr inbounds %struct.options, %struct.options* %3, i32 0, i32 0
  %arrayidx3 = getelementptr inbounds [128 x i8], [128 x i8]* %ind2, i32 0, i32 115
  %4 = load i8, i8* %arrayidx3, align 1
  %conv4 = zext i8 %4 to i32
  %cmp5 = icmp ne i32 %conv4, 0
  %conv6 = zext i1 %cmp5 to i32
  %add = add nsw i32 %conv1, %conv6
  %5 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind7 = getelementptr inbounds %struct.options, %struct.options* %5, i32 0, i32 0
  %arrayidx8 = getelementptr inbounds [128 x i8], [128 x i8]* %ind7, i32 0, i32 83
  %6 = load i8, i8* %arrayidx8, align 1
  %conv9 = zext i8 %6 to i32
  %cmp10 = icmp ne i32 %conv9, 0
  %conv11 = zext i1 %cmp10 to i32
  %add12 = add nsw i32 %add, %conv11
  %7 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind13 = getelementptr inbounds %struct.options, %struct.options* %7, i32 0, i32 0
  %arrayidx14 = getelementptr inbounds [128 x i8], [128 x i8]* %ind13, i32 0, i32 118
  %8 = load i8, i8* %arrayidx14, align 2
  %conv15 = zext i8 %8 to i32
  %cmp16 = icmp ne i32 %conv15, 0
  %conv17 = zext i1 %cmp16 to i32
  %add18 = add nsw i32 %add12, %conv17
  %cmp19 = icmp sgt i32 %add18, 1
  br i1 %cmp19, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %9 = load i8*, i8** %name.addr, align 4
  call void (i8*, i8*, ...) @zwarnnam(i8* %9, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.93, i32 0, i32 0))
  store i32 1, i32* %retval, align 4
  br label %return

if.end:                                           ; preds = %entry
  %10 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind21 = getelementptr inbounds %struct.options, %struct.options* %10, i32 0, i32 0
  %arrayidx22 = getelementptr inbounds [128 x i8], [128 x i8]* %ind21, i32 0, i32 122
  %11 = load i8, i8* %arrayidx22, align 2
  %conv23 = zext i8 %11 to i32
  %cmp24 = icmp ne i32 %conv23, 0
  %conv25 = zext i1 %cmp24 to i32
  %12 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind26 = getelementptr inbounds %struct.options, %struct.options* %12, i32 0, i32 0
  %arrayidx27 = getelementptr inbounds [128 x i8], [128 x i8]* %ind26, i32 0, i32 115
  %13 = load i8, i8* %arrayidx27, align 1
  %conv28 = zext i8 %13 to i32
  %cmp29 = icmp ne i32 %conv28, 0
  %conv30 = zext i1 %cmp29 to i32
  %or = or i32 %conv25, %conv30
  %14 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind31 = getelementptr inbounds %struct.options, %struct.options* %14, i32 0, i32 0
  %arrayidx32 = getelementptr inbounds [128 x i8], [128 x i8]* %ind31, i32 0, i32 83
  %15 = load i8, i8* %arrayidx32, align 1
  %conv33 = zext i8 %15 to i32
  %cmp34 = icmp ne i32 %conv33, 0
  %conv35 = zext i1 %cmp34 to i32
  %or36 = or i32 %or, %conv35
  %16 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind37 = getelementptr inbounds %struct.options, %struct.options* %16, i32 0, i32 0
  %arrayidx38 = getelementptr inbounds [128 x i8], [128 x i8]* %ind37, i32 0, i32 99
  %17 = load i8, i8* %arrayidx38, align 1
  %conv39 = zext i8 %17 to i32
  %cmp40 = icmp ne i32 %conv39, 0
  %conv41 = zext i1 %cmp40 to i32
  %18 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind42 = getelementptr inbounds %struct.options, %struct.options* %18, i32 0, i32 0
  %arrayidx43 = getelementptr inbounds [128 x i8], [128 x i8]* %ind42, i32 0, i32 67
  %19 = load i8, i8* %arrayidx43, align 1
  %conv44 = zext i8 %19 to i32
  %cmp45 = icmp ne i32 %conv44, 0
  %conv46 = zext i1 %cmp45 to i32
  %or47 = or i32 %conv41, %conv46
  %add48 = add nsw i32 %or36, %or47
  %cmp49 = icmp sgt i32 %add48, 1
  br i1 %cmp49, label %if.then51, label %if.end52

if.then51:                                        ; preds = %if.end
  %20 = load i8*, i8** %name.addr, align 4
  call void (i8*, i8*, ...) @zwarnnam(i8* %20, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.94, i32 0, i32 0))
  store i32 1, i32* %retval, align 4
  br label %return

if.end52:                                         ; preds = %if.end
  %21 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind53 = getelementptr inbounds %struct.options, %struct.options* %21, i32 0, i32 0
  %arrayidx54 = getelementptr inbounds [128 x i8], [128 x i8]* %ind53, i32 0, i32 122
  %22 = load i8, i8* %arrayidx54, align 2
  %conv55 = zext i8 %22 to i32
  %cmp56 = icmp ne i32 %conv55, 0
  %conv57 = zext i1 %cmp56 to i32
  %23 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind58 = getelementptr inbounds %struct.options, %struct.options* %23, i32 0, i32 0
  %arrayidx59 = getelementptr inbounds [128 x i8], [128 x i8]* %ind58, i32 0, i32 118
  %24 = load i8, i8* %arrayidx59, align 2
  %conv60 = zext i8 %24 to i32
  %cmp61 = icmp ne i32 %conv60, 0
  %conv62 = zext i1 %cmp61 to i32
  %or63 = or i32 %conv57, %conv62
  %25 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind64 = getelementptr inbounds %struct.options, %struct.options* %25, i32 0, i32 0
  %arrayidx65 = getelementptr inbounds [128 x i8], [128 x i8]* %ind64, i32 0, i32 115
  %26 = load i8, i8* %arrayidx65, align 1
  %conv66 = zext i8 %26 to i32
  %cmp67 = icmp ne i32 %conv66, 0
  %conv68 = zext i1 %cmp67 to i32
  %or69 = or i32 %or63, %conv68
  %27 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind70 = getelementptr inbounds %struct.options, %struct.options* %27, i32 0, i32 0
  %arrayidx71 = getelementptr inbounds [128 x i8], [128 x i8]* %ind70, i32 0, i32 83
  %28 = load i8, i8* %arrayidx71, align 1
  %conv72 = zext i8 %28 to i32
  %cmp73 = icmp ne i32 %conv72, 0
  %conv74 = zext i1 %cmp73 to i32
  %or75 = or i32 %or69, %conv74
  %29 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind76 = getelementptr inbounds %struct.options, %struct.options* %29, i32 0, i32 0
  %arrayidx77 = getelementptr inbounds [128 x i8], [128 x i8]* %ind76, i32 0, i32 112
  %30 = load i8, i8* %arrayidx77, align 4
  %conv78 = zext i8 %30 to i32
  %cmp79 = icmp ne i32 %conv78, 0
  %conv80 = zext i1 %cmp79 to i32
  %31 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind81 = getelementptr inbounds %struct.options, %struct.options* %31, i32 0, i32 0
  %arrayidx82 = getelementptr inbounds [128 x i8], [128 x i8]* %ind81, i32 0, i32 117
  %32 = load i8, i8* %arrayidx82, align 1
  %conv83 = zext i8 %32 to i32
  %cmp84 = icmp ne i32 %conv83, 0
  %conv85 = zext i1 %cmp84 to i32
  %or86 = or i32 %conv80, %conv85
  %add87 = add nsw i32 %or75, %or86
  %cmp88 = icmp sgt i32 %add87, 1
  br i1 %cmp88, label %if.then90, label %if.end91

if.then90:                                        ; preds = %if.end52
  %33 = load i8*, i8** %name.addr, align 4
  call void (i8*, i8*, ...) @zwarnnam(i8* %33, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.95, i32 0, i32 0))
  store i32 1, i32* %retval, align 4
  br label %return

if.end91:                                         ; preds = %if.end52
  %34 = load i8*, i8** %fmt, align 4
  %tobool = icmp ne i8* %34, null
  br i1 %tobool, label %if.end110, label %land.lhs.true

land.lhs.true:                                    ; preds = %if.end91
  %35 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind92 = getelementptr inbounds %struct.options, %struct.options* %35, i32 0, i32 0
  %arrayidx93 = getelementptr inbounds [128 x i8], [128 x i8]* %ind92, i32 0, i32 67
  %36 = load i8, i8* %arrayidx93, align 1
  %conv94 = zext i8 %36 to i32
  %cmp95 = icmp ne i32 %conv94, 0
  br i1 %cmp95, label %if.then97, label %if.end110

if.then97:                                        ; preds = %land.lhs.true
  %37 = load %struct.options*, %struct.options** %ops.addr, align 4
  %args98 = getelementptr inbounds %struct.options, %struct.options* %37, i32 0, i32 1
  %38 = load i8**, i8*** %args98, align 4
  %39 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind99 = getelementptr inbounds %struct.options, %struct.options* %39, i32 0, i32 0
  %arrayidx100 = getelementptr inbounds [128 x i8], [128 x i8]* %ind99, i32 0, i32 67
  %40 = load i8, i8* %arrayidx100, align 1
  %conv101 = zext i8 %40 to i32
  %shr = ashr i32 %conv101, 2
  %sub = sub nsw i32 %shr, 1
  %arrayidx102 = getelementptr inbounds i8*, i8** %38, i32 %sub
  %41 = load i8*, i8** %arrayidx102, align 4
  store i8* %41, i8** %argptr, align 4
  %42 = load i8*, i8** %argptr, align 4
  %call = call i32 @zstrtol(i8* %42, i8** %eptr, i32 10)
  store i32 %call, i32* %nc, align 4
  %43 = load i8*, i8** %eptr, align 4
  %44 = load i8, i8* %43, align 1
  %tobool103 = icmp ne i8 %44, 0
  br i1 %tobool103, label %if.then104, label %if.end105

if.then104:                                       ; preds = %if.then97
  %45 = load i8*, i8** %name.addr, align 4
  %46 = load i8*, i8** %argptr, align 4
  call void (i8*, i8*, ...) @zwarnnam(i8* %45, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.96, i32 0, i32 0), i32 67, i8* %46)
  store i32 1, i32* %retval, align 4
  br label %return

if.end105:                                        ; preds = %if.then97
  %47 = load i32, i32* %nc, align 4
  %cmp106 = icmp sle i32 %47, 0
  br i1 %cmp106, label %if.then108, label %if.end109

if.then108:                                       ; preds = %if.end105
  %48 = load i8*, i8** %name.addr, align 4
  %49 = load i8*, i8** %argptr, align 4
  call void (i8*, i8*, ...) @zwarnnam(i8* %48, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.97, i32 0, i32 0), i8* %49)
  store i32 1, i32* %retval, align 4
  br label %return

if.end109:                                        ; preds = %if.end105
  br label %if.end110

if.end110:                                        ; preds = %if.end109, %land.lhs.true, %if.end91
  %50 = load i32, i32* %func.addr, align 4
  %cmp111 = icmp eq i32 %50, 26
  br i1 %cmp111, label %if.then113, label %if.else

if.then113:                                       ; preds = %if.end110
  %51 = load i8**, i8*** %args.addr, align 4
  %52 = load i8*, i8** %51, align 4
  %call114 = call i32 @strcmp(i8* %52, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i32 0, i32 0))
  %tobool115 = icmp ne i32 %call114, 0
  br i1 %tobool115, label %if.end119, label %land.lhs.true116

land.lhs.true116:                                 ; preds = %if.then113
  %53 = load i8**, i8*** %args.addr, align 4
  %incdec.ptr = getelementptr inbounds i8*, i8** %53, i32 1
  store i8** %incdec.ptr, i8*** %args.addr, align 4
  %54 = load i8*, i8** %incdec.ptr, align 4
  %tobool117 = icmp ne i8* %54, null
  br i1 %tobool117, label %if.end119, label %if.then118

if.then118:                                       ; preds = %land.lhs.true116
  %55 = load i8*, i8** %name.addr, align 4
  call void (i8*, i8*, ...) @zwarnnam(i8* %55, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.9, i32 0, i32 0))
  store i32 1, i32* %retval, align 4
  br label %return

if.end119:                                        ; preds = %land.lhs.true116, %if.then113
  %56 = load i8**, i8*** %args.addr, align 4
  %incdec.ptr120 = getelementptr inbounds i8*, i8** %56, i32 1
  store i8** %incdec.ptr120, i8*** %args.addr, align 4
  %57 = load i8*, i8** %56, align 4
  store i8* %57, i8** %fmt, align 4
  br label %if.end145

if.else:                                          ; preds = %if.end110
  %58 = load i32, i32* %func.addr, align 4
  %cmp121 = icmp eq i32 %58, 23
  br i1 %cmp121, label %land.lhs.true123, label %if.else129

land.lhs.true123:                                 ; preds = %if.else
  %59 = load i8, i8* getelementptr inbounds ([181 x i8], [181 x i8]* @opts, i32 0, i32 25), align 1
  %conv124 = sext i8 %59 to i32
  %tobool125 = icmp ne i32 %conv124, 0
  br i1 %tobool125, label %if.then126, label %if.else129

if.then126:                                       ; preds = %land.lhs.true123
  %60 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind127 = getelementptr inbounds %struct.options, %struct.options* %60, i32 0, i32 0
  %arrayidx128 = getelementptr inbounds [128 x i8], [128 x i8]* %ind127, i32 0, i32 69
  store i8 1, i8* %arrayidx128, align 1
  br label %if.end144

if.else129:                                       ; preds = %land.lhs.true123, %if.else
  %61 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind130 = getelementptr inbounds %struct.options, %struct.options* %61, i32 0, i32 0
  %arrayidx131 = getelementptr inbounds [128 x i8], [128 x i8]* %ind130, i32 0, i32 102
  %62 = load i8, i8* %arrayidx131, align 2
  %conv132 = zext i8 %62 to i32
  %cmp133 = icmp sgt i32 %conv132, 3
  br i1 %cmp133, label %if.then135, label %if.end143

if.then135:                                       ; preds = %if.else129
  %63 = load %struct.options*, %struct.options** %ops.addr, align 4
  %args136 = getelementptr inbounds %struct.options, %struct.options* %63, i32 0, i32 1
  %64 = load i8**, i8*** %args136, align 4
  %65 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind137 = getelementptr inbounds %struct.options, %struct.options* %65, i32 0, i32 0
  %arrayidx138 = getelementptr inbounds [128 x i8], [128 x i8]* %ind137, i32 0, i32 102
  %66 = load i8, i8* %arrayidx138, align 2
  %conv139 = zext i8 %66 to i32
  %shr140 = ashr i32 %conv139, 2
  %sub141 = sub nsw i32 %shr140, 1
  %arrayidx142 = getelementptr inbounds i8*, i8** %64, i32 %sub141
  %67 = load i8*, i8** %arrayidx142, align 4
  store i8* %67, i8** %fmt, align 4
  br label %if.end143

if.end143:                                        ; preds = %if.then135, %if.else129
  br label %if.end144

if.end144:                                        ; preds = %if.end143, %if.then126
  br label %if.end145

if.end145:                                        ; preds = %if.end144, %if.end119
  %68 = load i8*, i8** %fmt, align 4
  %tobool146 = icmp ne i8* %68, null
  br i1 %tobool146, label %if.then147, label %if.end154

if.then147:                                       ; preds = %if.end145
  %69 = load i8*, i8** %fmt, align 4
  %70 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind148 = getelementptr inbounds %struct.options, %struct.options* %70, i32 0, i32 0
  %arrayidx149 = getelementptr inbounds [128 x i8], [128 x i8]* %ind148, i32 0, i32 98
  %71 = load i8, i8* %arrayidx149, align 2
  %conv150 = zext i8 %71 to i32
  %cmp151 = icmp ne i32 %conv150, 0
  %cond = select i1 %cmp151, i32 7, i32 265
  %call153 = call i8* @getkeystring(i8* %69, i32* %flen, i32 %cond, i32* %fmttrunc)
  store i8* %call153, i8** %fmt, align 4
  br label %if.end154

if.end154:                                        ; preds = %if.then147, %if.end145
  %72 = load i8**, i8*** %args.addr, align 4
  store i8** %72, i8*** %first, align 4
  %73 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind155 = getelementptr inbounds %struct.options, %struct.options* %73, i32 0, i32 0
  %arrayidx156 = getelementptr inbounds [128 x i8], [128 x i8]* %ind155, i32 0, i32 109
  %74 = load i8, i8* %arrayidx156, align 1
  %conv157 = zext i8 %74 to i32
  %cmp158 = icmp ne i32 %conv157, 0
  br i1 %cmp158, label %if.then160, label %if.end213

if.then160:                                       ; preds = %if.end154
  %75 = load i8**, i8*** %args.addr, align 4
  %76 = load i8*, i8** %75, align 4
  %tobool161 = icmp ne i8* %76, null
  br i1 %tobool161, label %if.end163, label %if.then162

if.then162:                                       ; preds = %if.then160
  %77 = load i8*, i8** %name.addr, align 4
  call void (i8*, i8*, ...) @zwarnnam(i8* %77, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.98, i32 0, i32 0))
  store i32 1, i32* %retval, align 4
  br label %return

if.end163:                                        ; preds = %if.then160
  %78 = load i32, i32* @queueing_enabled, align 4
  %inc = add nsw i32 %78, 1
  store i32 %inc, i32* @queueing_enabled, align 4
  %79 = load i8**, i8*** %args.addr, align 4
  %80 = load i8*, i8** %79, align 4
  call void @tokenize(i8* %80)
  %81 = load i8**, i8*** %args.addr, align 4
  %82 = load i8*, i8** %81, align 4
  %call164 = call %struct.patprog* @patcompile(i8* %82, i32 64, i8** null)
  store %struct.patprog* %call164, %struct.patprog** %pprog, align 4
  %tobool165 = icmp ne %struct.patprog* %call164, null
  br i1 %tobool165, label %if.end178, label %if.then166

if.then166:                                       ; preds = %if.end163
  %83 = load i8**, i8*** %args.addr, align 4
  %84 = load i8*, i8** %83, align 4
  call void @untokenize(i8* %84)
  %85 = load i8*, i8** %name.addr, align 4
  %86 = load i8**, i8*** %args.addr, align 4
  %87 = load i8*, i8** %86, align 4
  call void (i8*, i8*, ...) @zwarnnam(i8* %85, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.99, i32 0, i32 0), i8* %87)
  br label %do.body

do.body:                                          ; preds = %if.then166
  %88 = load i32, i32* @queueing_enabled, align 4
  %dec = add nsw i32 %88, -1
  store i32 %dec, i32* @queueing_enabled, align 4
  %tobool167 = icmp ne i32 %dec, 0
  br i1 %tobool167, label %if.end176, label %if.then168

if.then168:                                       ; preds = %do.body
  br label %do.body169

do.body169:                                       ; preds = %if.then168
  br label %while.cond

while.cond:                                       ; preds = %while.body, %do.body169
  %89 = load i32, i32* @queue_front, align 4
  %90 = load i32, i32* @queue_rear, align 4
  %cmp170 = icmp ne i32 %89, %90
  br i1 %cmp170, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %91 = load i32, i32* @queue_front, align 4
  %add172 = add nsw i32 %91, 1
  %rem = srem i32 %add172, 128
  store i32 %rem, i32* @queue_front, align 4
  %92 = load i32, i32* @queue_front, align 4
  %arrayidx173 = getelementptr inbounds [128 x %struct.__sigset_t], [128 x %struct.__sigset_t]* @signal_mask_queue, i32 0, i32 %92
  call void @signal_setmask(%struct.__sigset_t* sret %tmp, %struct.__sigset_t* byval align 4 %arrayidx173)
  %93 = bitcast %struct.__sigset_t* %oset to i8*
  %94 = bitcast %struct.__sigset_t* %tmp to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %93, i8* %94, i32 128, i32 4, i1 false)
  %95 = load i32, i32* @queue_front, align 4
  %arrayidx174 = getelementptr inbounds [128 x i32], [128 x i32]* @signal_queue, i32 0, i32 %95
  %96 = load i32, i32* %arrayidx174, align 4
  call void @zhandler(i32 %96)
  call void @signal_setmask(%struct.__sigset_t* sret %tmp175, %struct.__sigset_t* byval align 4 %oset)
  br label %while.cond

while.end:                                        ; preds = %while.cond
  br label %do.end

do.end:                                           ; preds = %while.end
  br label %if.end176

if.end176:                                        ; preds = %do.end, %do.body
  br label %do.end177

do.end177:                                        ; preds = %if.end176
  store i32 1, i32* %retval, align 4
  br label %return

if.end178:                                        ; preds = %if.end163
  %97 = load i8**, i8*** %args.addr, align 4
  %incdec.ptr179 = getelementptr inbounds i8*, i8** %97, i32 1
  store i8** %incdec.ptr179, i8*** %args.addr, align 4
  store i8** %incdec.ptr179, i8*** %p, align 4
  store i8** %incdec.ptr179, i8*** %t, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end178
  %98 = load i8**, i8*** %p, align 4
  %99 = load i8*, i8** %98, align 4
  %tobool180 = icmp ne i8* %99, null
  br i1 %tobool180, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %100 = load %struct.patprog*, %struct.patprog** %pprog, align 4
  %101 = load i8**, i8*** %p, align 4
  %102 = load i8*, i8** %101, align 4
  %call181 = call i32 @pattry(%struct.patprog* %100, i8* %102)
  %tobool182 = icmp ne i32 %call181, 0
  br i1 %tobool182, label %if.then183, label %if.end185

if.then183:                                       ; preds = %for.body
  %103 = load i8**, i8*** %p, align 4
  %104 = load i8*, i8** %103, align 4
  %105 = load i8**, i8*** %t, align 4
  %incdec.ptr184 = getelementptr inbounds i8*, i8** %105, i32 1
  store i8** %incdec.ptr184, i8*** %t, align 4
  store i8* %104, i8** %105, align 4
  br label %if.end185

if.end185:                                        ; preds = %if.then183, %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end185
  %106 = load i8**, i8*** %p, align 4
  %incdec.ptr186 = getelementptr inbounds i8*, i8** %106, i32 1
  store i8** %incdec.ptr186, i8*** %p, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %107 = load i8**, i8*** %t, align 4
  store i8* null, i8** %107, align 4
  %108 = load i8**, i8*** %args.addr, align 4
  store i8** %108, i8*** %first, align 4
  br label %do.body187

do.body187:                                       ; preds = %for.end
  %109 = load i32, i32* @queueing_enabled, align 4
  %dec188 = add nsw i32 %109, -1
  store i32 %dec188, i32* @queueing_enabled, align 4
  %tobool189 = icmp ne i32 %dec188, 0
  br i1 %tobool189, label %if.end206, label %if.then190

if.then190:                                       ; preds = %do.body187
  br label %do.body191

do.body191:                                       ; preds = %if.then190
  br label %while.cond192

while.cond192:                                    ; preds = %while.body195, %do.body191
  %110 = load i32, i32* @queue_front, align 4
  %111 = load i32, i32* @queue_rear, align 4
  %cmp193 = icmp ne i32 %110, %111
  br i1 %cmp193, label %while.body195, label %while.end204

while.body195:                                    ; preds = %while.cond192
  %112 = load i32, i32* @queue_front, align 4
  %add198 = add nsw i32 %112, 1
  %rem199 = srem i32 %add198, 128
  store i32 %rem199, i32* @queue_front, align 4
  %113 = load i32, i32* @queue_front, align 4
  %arrayidx200 = getelementptr inbounds [128 x %struct.__sigset_t], [128 x %struct.__sigset_t]* @signal_mask_queue, i32 0, i32 %113
  call void @signal_setmask(%struct.__sigset_t* sret %tmp201, %struct.__sigset_t* byval align 4 %arrayidx200)
  %114 = bitcast %struct.__sigset_t* %oset197 to i8*
  %115 = bitcast %struct.__sigset_t* %tmp201 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %114, i8* %115, i32 128, i32 4, i1 false)
  %116 = load i32, i32* @queue_front, align 4
  %arrayidx202 = getelementptr inbounds [128 x i32], [128 x i32]* @signal_queue, i32 0, i32 %116
  %117 = load i32, i32* %arrayidx202, align 4
  call void @zhandler(i32 %117)
  call void @signal_setmask(%struct.__sigset_t* sret %tmp203, %struct.__sigset_t* byval align 4 %oset197)
  br label %while.cond192

while.end204:                                     ; preds = %while.cond192
  br label %do.end205

do.end205:                                        ; preds = %while.end204
  br label %if.end206

if.end206:                                        ; preds = %do.end205, %do.body187
  br label %do.end207

do.end207:                                        ; preds = %if.end206
  %118 = load i8*, i8** %fmt, align 4
  %tobool208 = icmp ne i8* %118, null
  br i1 %tobool208, label %land.lhs.true209, label %if.end212

land.lhs.true209:                                 ; preds = %do.end207
  %119 = load i8**, i8*** %args.addr, align 4
  %120 = load i8*, i8** %119, align 4
  %tobool210 = icmp ne i8* %120, null
  br i1 %tobool210, label %if.end212, label %if.then211

if.then211:                                       ; preds = %land.lhs.true209
  store i32 0, i32* %retval, align 4
  br label %return

if.end212:                                        ; preds = %land.lhs.true209, %do.end207
  br label %if.end213

if.end213:                                        ; preds = %if.end212, %if.end154
  %121 = load i8**, i8*** %args.addr, align 4
  %call214 = call i32 @arrlen(i8** %121)
  store i32 %call214, i32* %argc, align 4
  %122 = load i32, i32* %argc, align 4
  %mul = mul i32 %122, 4
  %call215 = call i8* @hcalloc(i32 %mul)
  %123 = bitcast i8* %call215 to i32*
  store i32* %123, i32** %len, align 4
  store i32 0, i32* %n, align 4
  br label %for.cond216

for.cond216:                                      ; preds = %for.inc349, %if.end213
  %124 = load i32, i32* %n, align 4
  %125 = load i32, i32* %argc, align 4
  %cmp217 = icmp slt i32 %124, %125
  br i1 %cmp217, label %for.body219, label %for.end351

for.body219:                                      ; preds = %for.cond216
  %126 = load i8*, i8** %fmt, align 4
  %tobool220 = icmp ne i8* %126, null
  br i1 %tobool220, label %if.then244, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %for.body219
  %127 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind221 = getelementptr inbounds %struct.options, %struct.options* %127, i32 0, i32 0
  %arrayidx222 = getelementptr inbounds [128 x i8], [128 x i8]* %ind221, i32 0, i32 101
  %128 = load i8, i8* %arrayidx222, align 1
  %conv223 = zext i8 %128 to i32
  %cmp224 = icmp ne i32 %conv223, 0
  br i1 %cmp224, label %if.else248, label %land.lhs.true226

land.lhs.true226:                                 ; preds = %lor.lhs.false
  %129 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind227 = getelementptr inbounds %struct.options, %struct.options* %129, i32 0, i32 0
  %arrayidx228 = getelementptr inbounds [128 x i8], [128 x i8]* %ind227, i32 0, i32 82
  %130 = load i8, i8* %arrayidx228, align 2
  %conv229 = zext i8 %130 to i32
  %cmp230 = icmp ne i32 %conv229, 0
  br i1 %cmp230, label %if.then244, label %lor.lhs.false232

lor.lhs.false232:                                 ; preds = %land.lhs.true226
  %131 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind233 = getelementptr inbounds %struct.options, %struct.options* %131, i32 0, i32 0
  %arrayidx234 = getelementptr inbounds [128 x i8], [128 x i8]* %ind233, i32 0, i32 114
  %132 = load i8, i8* %arrayidx234, align 2
  %conv235 = zext i8 %132 to i32
  %cmp236 = icmp ne i32 %conv235, 0
  br i1 %cmp236, label %if.then244, label %lor.lhs.false238

lor.lhs.false238:                                 ; preds = %lor.lhs.false232
  %133 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind239 = getelementptr inbounds %struct.options, %struct.options* %133, i32 0, i32 0
  %arrayidx240 = getelementptr inbounds [128 x i8], [128 x i8]* %ind239, i32 0, i32 69
  %134 = load i8, i8* %arrayidx240, align 1
  %conv241 = zext i8 %134 to i32
  %cmp242 = icmp ne i32 %conv241, 0
  br i1 %cmp242, label %if.then244, label %if.else248

if.then244:                                       ; preds = %lor.lhs.false238, %lor.lhs.false232, %land.lhs.true226, %for.body219
  %135 = load i8**, i8*** %args.addr, align 4
  %136 = load i32, i32* %n, align 4
  %arrayidx245 = getelementptr inbounds i8*, i8** %135, i32 %136
  %137 = load i8*, i8** %arrayidx245, align 4
  %138 = load i32*, i32** %len, align 4
  %139 = load i32, i32* %n, align 4
  %arrayidx246 = getelementptr inbounds i32, i32* %138, i32 %139
  %call247 = call i8* @unmetafy(i8* %137, i32* %arrayidx246)
  br label %if.end278

if.else248:                                       ; preds = %lor.lhs.false238, %lor.lhs.false
  %140 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind250 = getelementptr inbounds %struct.options, %struct.options* %140, i32 0, i32 0
  %arrayidx251 = getelementptr inbounds [128 x i8], [128 x i8]* %ind250, i32 0, i32 98
  %141 = load i8, i8* %arrayidx251, align 2
  %conv252 = zext i8 %141 to i32
  %cmp253 = icmp ne i32 %conv252, 0
  br i1 %cmp253, label %if.then255, label %if.else256

if.then255:                                       ; preds = %if.else248
  store i32 7, i32* %escape_how, align 4
  br label %if.end268

if.else256:                                       ; preds = %if.else248
  %142 = load i32, i32* %func.addr, align 4
  %cmp257 = icmp ne i32 %142, 23
  br i1 %cmp257, label %land.lhs.true259, label %if.else266

land.lhs.true259:                                 ; preds = %if.else256
  %143 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind260 = getelementptr inbounds %struct.options, %struct.options* %143, i32 0, i32 0
  %arrayidx261 = getelementptr inbounds [128 x i8], [128 x i8]* %ind260, i32 0, i32 101
  %144 = load i8, i8* %arrayidx261, align 1
  %conv262 = zext i8 %144 to i32
  %cmp263 = icmp ne i32 %conv262, 0
  br i1 %cmp263, label %if.else266, label %if.then265

if.then265:                                       ; preds = %land.lhs.true259
  store i32 11, i32* %escape_how, align 4
  br label %if.end267

if.else266:                                       ; preds = %land.lhs.true259, %if.else256
  store i32 8, i32* %escape_how, align 4
  br label %if.end267

if.end267:                                        ; preds = %if.else266, %if.then265
  br label %if.end268

if.end268:                                        ; preds = %if.end267, %if.then255
  %145 = load i8**, i8*** %args.addr, align 4
  %146 = load i32, i32* %n, align 4
  %arrayidx269 = getelementptr inbounds i8*, i8** %145, i32 %146
  %147 = load i8*, i8** %arrayidx269, align 4
  %148 = load i32*, i32** %len, align 4
  %149 = load i32, i32* %n, align 4
  %arrayidx270 = getelementptr inbounds i32, i32* %148, i32 %149
  %150 = load i32, i32* %escape_how, align 4
  %call271 = call i8* @getkeystring(i8* %147, i32* %arrayidx270, i32 %150, i32* %nnl)
  %151 = load i8**, i8*** %args.addr, align 4
  %152 = load i32, i32* %n, align 4
  %arrayidx272 = getelementptr inbounds i8*, i8** %151, i32 %152
  store i8* %call271, i8** %arrayidx272, align 4
  %153 = load i32, i32* %nnl, align 4
  %tobool273 = icmp ne i32 %153, 0
  br i1 %tobool273, label %if.then274, label %if.end277

if.then274:                                       ; preds = %if.end268
  %154 = load i32, i32* %n, align 4
  %add275 = add nsw i32 %154, 1
  store i32 %add275, i32* %argc, align 4
  %155 = load i8**, i8*** %args.addr, align 4
  %156 = load i32, i32* %argc, align 4
  %arrayidx276 = getelementptr inbounds i8*, i8** %155, i32 %156
  store i8* null, i8** %arrayidx276, align 4
  br label %if.end277

if.end277:                                        ; preds = %if.then274, %if.end268
  br label %if.end278

if.end278:                                        ; preds = %if.end277, %if.then244
  %157 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind279 = getelementptr inbounds %struct.options, %struct.options* %157, i32 0, i32 0
  %arrayidx280 = getelementptr inbounds [128 x i8], [128 x i8]* %ind279, i32 0, i32 80
  %158 = load i8, i8* %arrayidx280, align 4
  %conv281 = zext i8 %158 to i32
  %cmp282 = icmp ne i32 %conv281, 0
  br i1 %cmp282, label %if.then284, label %if.end295

if.then284:                                       ; preds = %if.end278
  %159 = load i8**, i8*** %args.addr, align 4
  %160 = load i32, i32* %n, align 4
  %arrayidx286 = getelementptr inbounds i8*, i8** %159, i32 %160
  %161 = load i8*, i8** %arrayidx286, align 4
  %162 = load i32*, i32** %len, align 4
  %163 = load i32, i32* %n, align 4
  %arrayidx287 = getelementptr inbounds i32, i32* %162, i32 %163
  %164 = load i32, i32* %arrayidx287, align 4
  %call288 = call i8* @metafy(i8* %161, i32 %164, i32 5)
  %call289 = call i8* @promptexpand(i8* %call288, i32 0, i8* null, i8* null, i32* null)
  %165 = load i32*, i32** %len, align 4
  %166 = load i32, i32* %n, align 4
  %arrayidx290 = getelementptr inbounds i32, i32* %165, i32 %166
  %call291 = call i8* @unmetafy(i8* %call289, i32* %arrayidx290)
  store i8* %call291, i8** %str, align 4
  %167 = load i8*, i8** %str, align 4
  %168 = load i32*, i32** %len, align 4
  %169 = load i32, i32* %n, align 4
  %arrayidx292 = getelementptr inbounds i32, i32* %168, i32 %169
  %170 = load i32, i32* %arrayidx292, align 4
  %call293 = call i8* @dupstrpfx(i8* %167, i32 %170)
  %171 = load i8**, i8*** %args.addr, align 4
  %172 = load i32, i32* %n, align 4
  %arrayidx294 = getelementptr inbounds i8*, i8** %171, i32 %172
  store i8* %call293, i8** %arrayidx294, align 4
  %173 = load i8*, i8** %str, align 4
  call void @free(i8* %173)
  br label %if.end295

if.end295:                                        ; preds = %if.then284, %if.end278
  %174 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind296 = getelementptr inbounds %struct.options, %struct.options* %174, i32 0, i32 0
  %arrayidx297 = getelementptr inbounds [128 x i8], [128 x i8]* %ind296, i32 0, i32 68
  %175 = load i8, i8* %arrayidx297, align 4
  %conv298 = zext i8 %175 to i32
  %cmp299 = icmp ne i32 %conv298, 0
  br i1 %cmp299, label %if.then301, label %if.end348

if.then301:                                       ; preds = %if.end295
  %176 = load i32, i32* @queueing_enabled, align 4
  %inc304 = add nsw i32 %176, 1
  store i32 %inc304, i32* @queueing_enabled, align 4
  %177 = load i8**, i8*** %args.addr, align 4
  %178 = load i32, i32* %n, align 4
  %arrayidx305 = getelementptr inbounds i8*, i8** %177, i32 %178
  %179 = load i8*, i8** %arrayidx305, align 4
  %call306 = call %struct.nameddir* @finddir(i8* %179)
  store %struct.nameddir* %call306, %struct.nameddir** %d303, align 4
  %180 = load %struct.nameddir*, %struct.nameddir** %d303, align 4
  %tobool307 = icmp ne %struct.nameddir* %180, null
  br i1 %tobool307, label %if.then308, label %if.end326

if.then308:                                       ; preds = %if.then301
  %181 = load %struct.nameddir*, %struct.nameddir** %d303, align 4
  %dir = getelementptr inbounds %struct.nameddir, %struct.nameddir* %181, i32 0, i32 1
  %182 = load i8*, i8** %dir, align 4
  %call310 = call i32 @strlen(i8* %182)
  store i32 %call310, i32* %dirlen, align 4
  %183 = load i32*, i32** %len, align 4
  %184 = load i32, i32* %n, align 4
  %arrayidx312 = getelementptr inbounds i32, i32* %183, i32 %184
  %185 = load i32, i32* %arrayidx312, align 4
  %186 = load i32, i32* %dirlen, align 4
  %sub313 = sub nsw i32 %185, %186
  %187 = load %struct.nameddir*, %struct.nameddir** %d303, align 4
  %node = getelementptr inbounds %struct.nameddir, %struct.nameddir* %187, i32 0, i32 0
  %nam = getelementptr inbounds %struct.hashnode, %struct.hashnode* %node, i32 0, i32 1
  %188 = load i8*, i8** %nam, align 4
  %call314 = call i32 @strlen(i8* %188)
  %add315 = add i32 %sub313, %call314
  %add316 = add i32 %add315, 2
  %call317 = call i8* @zhalloc(i32 %add316)
  store i8* %call317, i8** %arg, align 4
  %189 = load i8*, i8** %arg, align 4
  %190 = load %struct.nameddir*, %struct.nameddir** %d303, align 4
  %node318 = getelementptr inbounds %struct.nameddir, %struct.nameddir* %190, i32 0, i32 0
  %nam319 = getelementptr inbounds %struct.hashnode, %struct.hashnode* %node318, i32 0, i32 1
  %191 = load i8*, i8** %nam319, align 4
  %192 = load i8**, i8*** %args.addr, align 4
  %193 = load i32, i32* %n, align 4
  %arrayidx320 = getelementptr inbounds i8*, i8** %192, i32 %193
  %194 = load i8*, i8** %arrayidx320, align 4
  %195 = load i32, i32* %dirlen, align 4
  %add.ptr = getelementptr inbounds i8, i8* %194, i32 %195
  %call321 = call i32 (i8*, i8*, ...) @sprintf(i8* %189, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.100, i32 0, i32 0), i8* %191, i8* %add.ptr)
  %196 = load i8*, i8** %arg, align 4
  %197 = load i8**, i8*** %args.addr, align 4
  %198 = load i32, i32* %n, align 4
  %arrayidx322 = getelementptr inbounds i8*, i8** %197, i32 %198
  store i8* %196, i8** %arrayidx322, align 4
  %199 = load i8**, i8*** %args.addr, align 4
  %200 = load i32, i32* %n, align 4
  %arrayidx323 = getelementptr inbounds i8*, i8** %199, i32 %200
  %201 = load i8*, i8** %arrayidx323, align 4
  %call324 = call i32 @strlen(i8* %201)
  %202 = load i32*, i32** %len, align 4
  %203 = load i32, i32* %n, align 4
  %arrayidx325 = getelementptr inbounds i32, i32* %202, i32 %203
  store i32 %call324, i32* %arrayidx325, align 4
  br label %if.end326

if.end326:                                        ; preds = %if.then308, %if.then301
  br label %do.body327

do.body327:                                       ; preds = %if.end326
  %204 = load i32, i32* @queueing_enabled, align 4
  %dec328 = add nsw i32 %204, -1
  store i32 %dec328, i32* @queueing_enabled, align 4
  %tobool329 = icmp ne i32 %dec328, 0
  br i1 %tobool329, label %if.end346, label %if.then330

if.then330:                                       ; preds = %do.body327
  br label %do.body331

do.body331:                                       ; preds = %if.then330
  br label %while.cond332

while.cond332:                                    ; preds = %while.body335, %do.body331
  %205 = load i32, i32* @queue_front, align 4
  %206 = load i32, i32* @queue_rear, align 4
  %cmp333 = icmp ne i32 %205, %206
  br i1 %cmp333, label %while.body335, label %while.end344

while.body335:                                    ; preds = %while.cond332
  %207 = load i32, i32* @queue_front, align 4
  %add338 = add nsw i32 %207, 1
  %rem339 = srem i32 %add338, 128
  store i32 %rem339, i32* @queue_front, align 4
  %208 = load i32, i32* @queue_front, align 4
  %arrayidx340 = getelementptr inbounds [128 x %struct.__sigset_t], [128 x %struct.__sigset_t]* @signal_mask_queue, i32 0, i32 %208
  call void @signal_setmask(%struct.__sigset_t* sret %tmp341, %struct.__sigset_t* byval align 4 %arrayidx340)
  %209 = bitcast %struct.__sigset_t* %oset337 to i8*
  %210 = bitcast %struct.__sigset_t* %tmp341 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %209, i8* %210, i32 128, i32 4, i1 false)
  %211 = load i32, i32* @queue_front, align 4
  %arrayidx342 = getelementptr inbounds [128 x i32], [128 x i32]* @signal_queue, i32 0, i32 %211
  %212 = load i32, i32* %arrayidx342, align 4
  call void @zhandler(i32 %212)
  call void @signal_setmask(%struct.__sigset_t* sret %tmp343, %struct.__sigset_t* byval align 4 %oset337)
  br label %while.cond332

while.end344:                                     ; preds = %while.cond332
  br label %do.end345

do.end345:                                        ; preds = %while.end344
  br label %if.end346

if.end346:                                        ; preds = %do.end345, %do.body327
  br label %do.end347

do.end347:                                        ; preds = %if.end346
  br label %if.end348

if.end348:                                        ; preds = %do.end347, %if.end295
  br label %for.inc349

for.inc349:                                       ; preds = %if.end348
  %213 = load i32, i32* %n, align 4
  %inc350 = add nsw i32 %213, 1
  store i32 %inc350, i32* %n, align 4
  br label %for.cond216

for.end351:                                       ; preds = %for.cond216
  %214 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind352 = getelementptr inbounds %struct.options, %struct.options* %214, i32 0, i32 0
  %arrayidx353 = getelementptr inbounds [128 x i8], [128 x i8]* %ind352, i32 0, i32 111
  %215 = load i8, i8* %arrayidx353, align 1
  %conv354 = zext i8 %215 to i32
  %cmp355 = icmp ne i32 %conv354, 0
  br i1 %cmp355, label %if.then363, label %lor.lhs.false357

lor.lhs.false357:                                 ; preds = %for.end351
  %216 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind358 = getelementptr inbounds %struct.options, %struct.options* %216, i32 0, i32 0
  %arrayidx359 = getelementptr inbounds [128 x i8], [128 x i8]* %ind358, i32 0, i32 79
  %217 = load i8, i8* %arrayidx359, align 1
  %conv360 = zext i8 %217 to i32
  %cmp361 = icmp ne i32 %conv360, 0
  br i1 %cmp361, label %if.then363, label %if.end385

if.then363:                                       ; preds = %lor.lhs.false357, %for.end351
  %218 = load i8*, i8** %fmt, align 4
  %tobool366 = icmp ne i8* %218, null
  br i1 %tobool366, label %land.lhs.true367, label %if.end370

land.lhs.true367:                                 ; preds = %if.then363
  %219 = load i8**, i8*** %args.addr, align 4
  %220 = load i8*, i8** %219, align 4
  %tobool368 = icmp ne i8* %220, null
  br i1 %tobool368, label %if.end370, label %if.then369

if.then369:                                       ; preds = %land.lhs.true367
  store i32 0, i32* %retval, align 4
  br label %return

if.end370:                                        ; preds = %land.lhs.true367, %if.then363
  %221 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind371 = getelementptr inbounds %struct.options, %struct.options* %221, i32 0, i32 0
  %arrayidx372 = getelementptr inbounds [128 x i8], [128 x i8]* %ind371, i32 0, i32 105
  %222 = load i8, i8* %arrayidx372, align 1
  %conv373 = zext i8 %222 to i32
  %cmp374 = icmp ne i32 %conv373, 0
  %cond376 = select i1 %cmp374, i32 1, i32 0
  store i32 %cond376, i32* %flags365, align 4
  %223 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind377 = getelementptr inbounds %struct.options, %struct.options* %223, i32 0, i32 0
  %arrayidx378 = getelementptr inbounds [128 x i8], [128 x i8]* %ind377, i32 0, i32 79
  %224 = load i8, i8* %arrayidx378, align 1
  %conv379 = zext i8 %224 to i32
  %cmp380 = icmp ne i32 %conv379, 0
  br i1 %cmp380, label %if.then382, label %if.end384

if.then382:                                       ; preds = %if.end370
  %225 = load i32, i32* %flags365, align 4
  %or383 = or i32 %225, 4
  store i32 %or383, i32* %flags365, align 4
  br label %if.end384

if.end384:                                        ; preds = %if.then382, %if.end370
  %226 = load i8**, i8*** %args.addr, align 4
  %227 = load i32, i32* %flags365, align 4
  %228 = load i32*, i32** %len, align 4
  call void @strmetasort(i8** %226, i32 %227, i32* %228)
  br label %if.end385

if.end385:                                        ; preds = %if.end384, %lor.lhs.false357
  %229 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind386 = getelementptr inbounds %struct.options, %struct.options* %229, i32 0, i32 0
  %arrayidx387 = getelementptr inbounds [128 x i8], [128 x i8]* %ind386, i32 0, i32 117
  %230 = load i8, i8* %arrayidx387, align 1
  %conv388 = zext i8 %230 to i32
  %cmp389 = icmp sgt i32 %conv388, 3
  br i1 %cmp389, label %land.lhs.true397, label %lor.lhs.false391

lor.lhs.false391:                                 ; preds = %if.end385
  %231 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind392 = getelementptr inbounds %struct.options, %struct.options* %231, i32 0, i32 0
  %arrayidx393 = getelementptr inbounds [128 x i8], [128 x i8]* %ind392, i32 0, i32 112
  %232 = load i8, i8* %arrayidx393, align 4
  %conv394 = zext i8 %232 to i32
  %cmp395 = icmp ne i32 %conv394, 0
  br i1 %cmp395, label %land.lhs.true397, label %if.end485

land.lhs.true397:                                 ; preds = %lor.lhs.false391, %if.end385
  %233 = load i8*, i8** %fmt, align 4
  %tobool398 = icmp ne i8* %233, null
  br i1 %tobool398, label %lor.lhs.false411, label %land.lhs.true399

land.lhs.true399:                                 ; preds = %land.lhs.true397
  %234 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind400 = getelementptr inbounds %struct.options, %struct.options* %234, i32 0, i32 0
  %arrayidx401 = getelementptr inbounds [128 x i8], [128 x i8]* %ind400, i32 0, i32 99
  %235 = load i8, i8* %arrayidx401, align 1
  %conv402 = zext i8 %235 to i32
  %cmp403 = icmp ne i32 %conv402, 0
  br i1 %cmp403, label %if.then435, label %lor.lhs.false405

lor.lhs.false405:                                 ; preds = %land.lhs.true399
  %236 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind406 = getelementptr inbounds %struct.options, %struct.options* %236, i32 0, i32 0
  %arrayidx407 = getelementptr inbounds [128 x i8], [128 x i8]* %ind406, i32 0, i32 67
  %237 = load i8, i8* %arrayidx407, align 1
  %conv408 = zext i8 %237 to i32
  %cmp409 = icmp ne i32 %conv408, 0
  br i1 %cmp409, label %if.then435, label %lor.lhs.false411

lor.lhs.false411:                                 ; preds = %lor.lhs.false405, %land.lhs.true397
  %238 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind412 = getelementptr inbounds %struct.options, %struct.options* %238, i32 0, i32 0
  %arrayidx413 = getelementptr inbounds [128 x i8], [128 x i8]* %ind412, i32 0, i32 122
  %239 = load i8, i8* %arrayidx413, align 2
  %conv414 = zext i8 %239 to i32
  %cmp415 = icmp ne i32 %conv414, 0
  br i1 %cmp415, label %if.end485, label %lor.lhs.false417

lor.lhs.false417:                                 ; preds = %lor.lhs.false411
  %240 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind418 = getelementptr inbounds %struct.options, %struct.options* %240, i32 0, i32 0
  %arrayidx419 = getelementptr inbounds [128 x i8], [128 x i8]* %ind418, i32 0, i32 118
  %241 = load i8, i8* %arrayidx419, align 2
  %conv420 = zext i8 %241 to i32
  %cmp421 = icmp ne i32 %conv420, 0
  br i1 %cmp421, label %if.end485, label %lor.lhs.false423

lor.lhs.false423:                                 ; preds = %lor.lhs.false417
  %242 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind424 = getelementptr inbounds %struct.options, %struct.options* %242, i32 0, i32 0
  %arrayidx425 = getelementptr inbounds [128 x i8], [128 x i8]* %ind424, i32 0, i32 115
  %243 = load i8, i8* %arrayidx425, align 1
  %conv426 = zext i8 %243 to i32
  %cmp427 = icmp ne i32 %conv426, 0
  br i1 %cmp427, label %if.end485, label %lor.lhs.false429

lor.lhs.false429:                                 ; preds = %lor.lhs.false423
  %244 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind430 = getelementptr inbounds %struct.options, %struct.options* %244, i32 0, i32 0
  %arrayidx431 = getelementptr inbounds [128 x i8], [128 x i8]* %ind430, i32 0, i32 83
  %245 = load i8, i8* %arrayidx431, align 1
  %conv432 = zext i8 %245 to i32
  %cmp433 = icmp ne i32 %conv432, 0
  br i1 %cmp433, label %if.end485, label %if.then435

if.then435:                                       ; preds = %lor.lhs.false429, %lor.lhs.false405, %land.lhs.true399
  %246 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind438 = getelementptr inbounds %struct.options, %struct.options* %246, i32 0, i32 0
  %arrayidx439 = getelementptr inbounds [128 x i8], [128 x i8]* %ind438, i32 0, i32 112
  %247 = load i8, i8* %arrayidx439, align 4
  %conv440 = zext i8 %247 to i32
  %cmp441 = icmp ne i32 %conv440, 0
  br i1 %cmp441, label %if.then443, label %if.else448

if.then443:                                       ; preds = %if.then435
  %248 = load i32, i32* @coprocout, align 4
  store i32 %248, i32* %fdarg, align 4
  %249 = load i32, i32* %fdarg, align 4
  %cmp444 = icmp slt i32 %249, 0
  br i1 %cmp444, label %if.then446, label %if.end447

if.then446:                                       ; preds = %if.then443
  %250 = load i8*, i8** %name.addr, align 4
  call void (i8*, i8*, ...) @zwarnnam(i8* %250, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.101, i32 0, i32 0))
  store i32 1, i32* %retval, align 4
  br label %return

if.end447:                                        ; preds = %if.then443
  br label %if.end473

if.else448:                                       ; preds = %if.then435
  %251 = load %struct.options*, %struct.options** %ops.addr, align 4
  %args451 = getelementptr inbounds %struct.options, %struct.options* %251, i32 0, i32 1
  %252 = load i8**, i8*** %args451, align 4
  %253 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind452 = getelementptr inbounds %struct.options, %struct.options* %253, i32 0, i32 0
  %arrayidx453 = getelementptr inbounds [128 x i8], [128 x i8]* %ind452, i32 0, i32 117
  %254 = load i8, i8* %arrayidx453, align 1
  %conv454 = zext i8 %254 to i32
  %shr455 = ashr i32 %conv454, 2
  %sub456 = sub nsw i32 %shr455, 1
  %arrayidx457 = getelementptr inbounds i8*, i8** %252, i32 %sub456
  %255 = load i8*, i8** %arrayidx457, align 4
  store i8* %255, i8** %argptr450, align 4
  %256 = load i8*, i8** %argptr450, align 4
  %call460 = call i32 @strcmp(i8* %256, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.102, i32 0, i32 0))
  %tobool461 = icmp ne i32 %call460, 0
  br i1 %tobool461, label %if.else467, label %if.then462

if.then462:                                       ; preds = %if.else448
  %257 = load i32, i32* @coprocout, align 4
  store i32 %257, i32* %fdarg, align 4
  %258 = load i32, i32* %fdarg, align 4
  %cmp463 = icmp slt i32 %258, 0
  br i1 %cmp463, label %if.then465, label %if.end466

if.then465:                                       ; preds = %if.then462
  %259 = load i8*, i8** %name.addr, align 4
  call void (i8*, i8*, ...) @zwarnnam(i8* %259, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.101, i32 0, i32 0))
  store i32 1, i32* %retval, align 4
  br label %return

if.end466:                                        ; preds = %if.then462
  br label %if.end472

if.else467:                                       ; preds = %if.else448
  %260 = load i8*, i8** %argptr450, align 4
  %call468 = call i32 @zstrtol(i8* %260, i8** %eptr459, i32 10)
  store i32 %call468, i32* %fdarg, align 4
  %261 = load i8*, i8** %eptr459, align 4
  %262 = load i8, i8* %261, align 1
  %tobool469 = icmp ne i8 %262, 0
  br i1 %tobool469, label %if.then470, label %if.end471

if.then470:                                       ; preds = %if.else467
  %263 = load i8*, i8** %name.addr, align 4
  %264 = load i8*, i8** %argptr450, align 4
  call void (i8*, i8*, ...) @zwarnnam(i8* %263, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.103, i32 0, i32 0), i8* %264)
  store i32 1, i32* %retval, align 4
  br label %return

if.end471:                                        ; preds = %if.else467
  br label %if.end472

if.end472:                                        ; preds = %if.end471, %if.end466
  br label %if.end473

if.end473:                                        ; preds = %if.end472, %if.end447
  %265 = load i32, i32* %fdarg, align 4
  %call474 = call i32 @dup(i32 %265)
  store i32 %call474, i32* %fd, align 4
  %cmp475 = icmp slt i32 %call474, 0
  br i1 %cmp475, label %if.then477, label %if.end478

if.then477:                                       ; preds = %if.end473
  %266 = load i8*, i8** %name.addr, align 4
  %267 = load i32, i32* %fdarg, align 4
  call void (i8*, i8*, ...) @zwarnnam(i8* %266, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.104, i32 0, i32 0), i32 %267)
  store i32 1, i32* %retval, align 4
  br label %return

if.end478:                                        ; preds = %if.end473
  %268 = load i32, i32* %fd, align 4
  %call479 = call %struct._IO_FILE* @fdopen(i32 %268, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.41, i32 0, i32 0))
  store %struct._IO_FILE* %call479, %struct._IO_FILE** %fout, align 4
  %cmp480 = icmp eq %struct._IO_FILE* %call479, null
  br i1 %cmp480, label %if.then482, label %if.end484

if.then482:                                       ; preds = %if.end478
  %269 = load i32, i32* %fd, align 4
  %call483 = call i32 @close(i32 %269)
  %270 = load i8*, i8** %name.addr, align 4
  %271 = load i32, i32* %fd, align 4
  call void (i8*, i8*, ...) @zwarnnam(i8* %270, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.105, i32 0, i32 0), i32 %271)
  store i32 1, i32* %retval, align 4
  br label %return

if.end484:                                        ; preds = %if.end478
  br label %if.end485

if.end485:                                        ; preds = %if.end484, %lor.lhs.false429, %lor.lhs.false423, %lor.lhs.false417, %lor.lhs.false411, %lor.lhs.false391
  %272 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind486 = getelementptr inbounds %struct.options, %struct.options* %272, i32 0, i32 0
  %arrayidx487 = getelementptr inbounds [128 x i8], [128 x i8]* %ind486, i32 0, i32 118
  %273 = load i8, i8* %arrayidx487, align 2
  %conv488 = zext i8 %273 to i32
  %cmp489 = icmp ne i32 %conv488, 0
  br i1 %cmp489, label %if.then505, label %lor.lhs.false491

lor.lhs.false491:                                 ; preds = %if.end485
  %274 = load i8*, i8** %fmt, align 4
  %tobool492 = icmp ne i8* %274, null
  br i1 %tobool492, label %land.lhs.true493, label %if.end513

land.lhs.true493:                                 ; preds = %lor.lhs.false491
  %275 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind494 = getelementptr inbounds %struct.options, %struct.options* %275, i32 0, i32 0
  %arrayidx495 = getelementptr inbounds [128 x i8], [128 x i8]* %ind494, i32 0, i32 122
  %276 = load i8, i8* %arrayidx495, align 2
  %conv496 = zext i8 %276 to i32
  %cmp497 = icmp ne i32 %conv496, 0
  br i1 %cmp497, label %if.then505, label %lor.lhs.false499

lor.lhs.false499:                                 ; preds = %land.lhs.true493
  %277 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind500 = getelementptr inbounds %struct.options, %struct.options* %277, i32 0, i32 0
  %arrayidx501 = getelementptr inbounds [128 x i8], [128 x i8]* %ind500, i32 0, i32 115
  %278 = load i8, i8* %arrayidx501, align 1
  %conv502 = zext i8 %278 to i32
  %cmp503 = icmp ne i32 %conv502, 0
  br i1 %cmp503, label %if.then505, label %if.end513

if.then505:                                       ; preds = %lor.lhs.false499, %land.lhs.true493, %if.end485
  br label %do.body506

do.body506:                                       ; preds = %if.then505
  %call507 = call %struct._IO_FILE* @open_memstream(i8** %buf, i32* %mcount)
  store %struct._IO_FILE* %call507, %struct._IO_FILE** %fout, align 4
  %cmp508 = icmp eq %struct._IO_FILE* %call507, null
  br i1 %cmp508, label %if.then510, label %if.end511

if.then510:                                       ; preds = %do.body506
  %279 = load i8*, i8** %name.addr, align 4
  call void (i8*, i8*, ...) @zwarnnam(i8* %279, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.106, i32 0, i32 0))
  store i32 1, i32* %retval, align 4
  br label %return

if.end511:                                        ; preds = %do.body506
  br label %do.end512

do.end512:                                        ; preds = %if.end511
  br label %if.end513

if.end513:                                        ; preds = %do.end512, %lor.lhs.false499, %lor.lhs.false491
  %280 = load i8*, i8** %fmt, align 4
  %tobool514 = icmp ne i8* %280, null
  br i1 %tobool514, label %if.end883, label %land.lhs.true515

land.lhs.true515:                                 ; preds = %if.end513
  %281 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind516 = getelementptr inbounds %struct.options, %struct.options* %281, i32 0, i32 0
  %arrayidx517 = getelementptr inbounds [128 x i8], [128 x i8]* %ind516, i32 0, i32 99
  %282 = load i8, i8* %arrayidx517, align 1
  %conv518 = zext i8 %282 to i32
  %cmp519 = icmp ne i32 %conv518, 0
  br i1 %cmp519, label %if.then527, label %lor.lhs.false521

lor.lhs.false521:                                 ; preds = %land.lhs.true515
  %283 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind522 = getelementptr inbounds %struct.options, %struct.options* %283, i32 0, i32 0
  %arrayidx523 = getelementptr inbounds [128 x i8], [128 x i8]* %ind522, i32 0, i32 67
  %284 = load i8, i8* %arrayidx523, align 1
  %conv524 = zext i8 %284 to i32
  %cmp525 = icmp ne i32 %conv524, 0
  br i1 %cmp525, label %if.then527, label %if.end883

if.then527:                                       ; preds = %lor.lhs.false521, %land.lhs.true515
  %285 = load i8, i8* getelementptr inbounds ([181 x i8], [181 x i8]* @opts, i32 0, i32 118), align 1
  %tobool537 = icmp ne i8 %285, 0
  br i1 %tobool537, label %if.then538, label %if.else615

if.then538:                                       ; preds = %if.then527
  %286 = load i32, i32* %argc, align 4
  %mul540 = mul i32 %286, 4
  %call541 = call i8* @zhalloc(i32 %mul540)
  %287 = bitcast i8* %call541 to i32*
  store i32* %287, i32** %widths, align 4
  store i32* %287, i32** %wptr, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond542

for.cond542:                                      ; preds = %for.inc611, %if.then538
  %288 = load i32, i32* %i, align 4
  %289 = load i32, i32* %argc, align 4
  %cmp543 = icmp slt i32 %288, %289
  br i1 %cmp543, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %for.cond542
  %290 = load i8**, i8*** %args.addr, align 4
  %291 = load i32, i32* %i, align 4
  %arrayidx545 = getelementptr inbounds i8*, i8** %290, i32 %291
  %292 = load i8*, i8** %arrayidx545, align 4
  %tobool546 = icmp ne i8* %292, null
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond542
  %293 = phi i1 [ false, %for.cond542 ], [ %tobool546, %land.rhs ]
  br i1 %293, label %for.body547, label %for.end614

for.body547:                                      ; preds = %land.end
  %294 = load i32*, i32** %len, align 4
  %295 = load i32, i32* %i, align 4
  %arrayidx550 = getelementptr inbounds i32, i32* %294, i32 %295
  %296 = load i32, i32* %arrayidx550, align 4
  store i32 %296, i32* %l549, align 4
  store i32 0, i32* %width552, align 4
  %297 = load i8**, i8*** %args.addr, align 4
  %298 = load i32, i32* %i, align 4
  %arrayidx554 = getelementptr inbounds i8*, i8** %297, i32 %298
  %299 = load i8*, i8** %arrayidx554, align 4
  store i8* %299, i8** %aptr, align 4
  %300 = bitcast %struct.__mbstate_t* %mbs to i8*
  call void @llvm.memset.p0i8.i32(i8* %300, i8 0, i32 8, i32 4, i1 false)
  br label %while.cond556

while.cond556:                                    ; preds = %if.end606, %for.end584, %for.body547
  %301 = load i32, i32* %l549, align 4
  %cmp557 = icmp sgt i32 %301, 0
  br i1 %cmp557, label %while.body559, label %while.end609

while.body559:                                    ; preds = %while.cond556
  %302 = load i8*, i8** %aptr, align 4
  %303 = load i8, i8* %302, align 1
  %conv563 = sext i8 %303 to i32
  %cmp564 = icmp eq i32 %conv563, 27
  br i1 %cmp564, label %if.then570, label %lor.lhs.false566

lor.lhs.false566:                                 ; preds = %while.body559
  %304 = load i8*, i8** %aptr, align 4
  %305 = load i8, i8* %304, align 1
  %conv567 = sext i8 %305 to i32
  %cmp568 = icmp eq i32 %conv567, -101
  br i1 %cmp568, label %if.then570, label %if.end587

if.then570:                                       ; preds = %lor.lhs.false566, %while.body559
  %306 = load i8*, i8** %aptr, align 4
  %incdec.ptr571 = getelementptr inbounds i8, i8* %306, i32 1
  store i8* %incdec.ptr571, i8** %aptr, align 4
  %307 = load i32, i32* %l549, align 4
  %dec572 = add nsw i32 %307, -1
  store i32 %dec572, i32* %l549, align 4
  br label %for.cond573

for.cond573:                                      ; preds = %for.inc581, %if.then570
  %308 = load i32, i32* %l549, align 4
  %tobool574 = icmp ne i32 %308, 0
  br i1 %tobool574, label %land.rhs575, label %land.end579

land.rhs575:                                      ; preds = %for.cond573
  %309 = load i8*, i8** %aptr, align 4
  %310 = load i8, i8* %309, align 1
  %conv576 = zext i8 %310 to i32
  %call577 = call i32 @isalpha(i32 %conv576) #5
  %tobool578 = icmp ne i32 %call577, 0
  %lnot = xor i1 %tobool578, true
  br label %land.end579

land.end579:                                      ; preds = %land.rhs575, %for.cond573
  %311 = phi i1 [ false, %for.cond573 ], [ %lnot, %land.rhs575 ]
  br i1 %311, label %for.body580, label %for.end584

for.body580:                                      ; preds = %land.end579
  br label %for.inc581

for.inc581:                                       ; preds = %for.body580
  %312 = load i8*, i8** %aptr, align 4
  %incdec.ptr582 = getelementptr inbounds i8, i8* %312, i32 1
  store i8* %incdec.ptr582, i8** %aptr, align 4
  %313 = load i32, i32* %l549, align 4
  %dec583 = add nsw i32 %313, -1
  store i32 %dec583, i32* %l549, align 4
  br label %for.cond573

for.end584:                                       ; preds = %land.end579
  %314 = load i8*, i8** %aptr, align 4
  %incdec.ptr585 = getelementptr inbounds i8, i8* %314, i32 1
  store i8* %incdec.ptr585, i8** %aptr, align 4
  %315 = load i32, i32* %l549, align 4
  %dec586 = add nsw i32 %315, -1
  store i32 %dec586, i32* %l549, align 4
  br label %while.cond556

if.end587:                                        ; preds = %lor.lhs.false566
  %316 = load i8*, i8** %aptr, align 4
  %317 = load i32, i32* %l549, align 4
  %call588 = call i32 @mbrtowc(i32* %wc, i8* %316, i32 %317, %struct.__mbstate_t* %mbs)
  store i32 %call588, i32* %cnt, align 4
  %318 = load i32, i32* %cnt, align 4
  %cmp589 = icmp eq i32 %318, -2
  br i1 %cmp589, label %if.then594, label %lor.lhs.false591

lor.lhs.false591:                                 ; preds = %if.end587
  %319 = load i32, i32* %cnt, align 4
  %cmp592 = icmp eq i32 %319, -1
  br i1 %cmp592, label %if.then594, label %if.end596

if.then594:                                       ; preds = %lor.lhs.false591, %if.end587
  %320 = load i32, i32* %l549, align 4
  %321 = load i32, i32* %width552, align 4
  %add595 = add nsw i32 %321, %320
  store i32 %add595, i32* %width552, align 4
  br label %while.end609

if.end596:                                        ; preds = %lor.lhs.false591
  %322 = load i32, i32* %wc, align 4
  %call597 = call i32 @wcwidth(i32 %322)
  store i32 %call597, i32* %wcw, align 4
  %323 = load i32, i32* %wcw, align 4
  %cmp598 = icmp sgt i32 %323, 0
  br i1 %cmp598, label %if.then600, label %if.end602

if.then600:                                       ; preds = %if.end596
  %324 = load i32, i32* %wcw, align 4
  %325 = load i32, i32* %width552, align 4
  %add601 = add nsw i32 %325, %324
  store i32 %add601, i32* %width552, align 4
  br label %if.end602

if.end602:                                        ; preds = %if.then600, %if.end596
  %326 = load i32, i32* %cnt, align 4
  %cmp603 = icmp eq i32 %326, 0
  br i1 %cmp603, label %if.then605, label %if.end606

if.then605:                                       ; preds = %if.end602
  store i32 1, i32* %cnt, align 4
  br label %if.end606

if.end606:                                        ; preds = %if.then605, %if.end602
  %327 = load i32, i32* %cnt, align 4
  %328 = load i8*, i8** %aptr, align 4
  %add.ptr607 = getelementptr inbounds i8, i8* %328, i32 %327
  store i8* %add.ptr607, i8** %aptr, align 4
  %329 = load i32, i32* %cnt, align 4
  %330 = load i32, i32* %l549, align 4
  %sub608 = sub i32 %330, %329
  store i32 %sub608, i32* %l549, align 4
  br label %while.cond556

while.end609:                                     ; preds = %if.then594, %while.cond556
  %331 = load i32, i32* %width552, align 4
  %332 = load i32*, i32** %widths, align 4
  %333 = load i32, i32* %i, align 4
  %arrayidx610 = getelementptr inbounds i32, i32* %332, i32 %333
  store i32 %331, i32* %arrayidx610, align 4
  br label %for.inc611

for.inc611:                                       ; preds = %while.end609
  %334 = load i32, i32* %i, align 4
  %inc612 = add nsw i32 %334, 1
  store i32 %inc612, i32* %i, align 4
  %335 = load i32*, i32** %wptr, align 4
  %incdec.ptr613 = getelementptr inbounds i32, i32* %335, i32 1
  store i32* %incdec.ptr613, i32** %wptr, align 4
  br label %for.cond542

for.end614:                                       ; preds = %land.end
  br label %if.end616

if.else615:                                       ; preds = %if.then527
  %336 = load i32*, i32** %len, align 4
  store i32* %336, i32** %widths, align 4
  br label %if.end616

if.end616:                                        ; preds = %if.else615, %for.end614
  %337 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind617 = getelementptr inbounds %struct.options, %struct.options* %337, i32 0, i32 0
  %arrayidx618 = getelementptr inbounds [128 x i8], [128 x i8]* %ind617, i32 0, i32 67
  %338 = load i8, i8* %arrayidx618, align 1
  %conv619 = zext i8 %338 to i32
  %cmp620 = icmp ne i32 %conv619, 0
  br i1 %cmp620, label %if.then622, label %if.else660

if.then622:                                       ; preds = %if.end616
  %339 = load i8**, i8*** %args.addr, align 4
  %call623 = call i32 @arrlen(i8** %339)
  store i32 %call623, i32* %n532, align 4
  %340 = load i32, i32* %n532, align 4
  %341 = load i32, i32* %nc, align 4
  %add624 = add nsw i32 %340, %341
  %sub625 = sub nsw i32 %add624, 1
  %342 = load i32, i32* %nc, align 4
  %div = sdiv i32 %sub625, %342
  store i32 %div, i32* %nr, align 4
  store i32 0, i32* %l, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond626

for.cond626:                                      ; preds = %for.inc656, %if.then622
  %343 = load i32, i32* %i, align 4
  %344 = load i32, i32* %argc, align 4
  %cmp627 = icmp slt i32 %343, %344
  br i1 %cmp627, label %for.body629, label %for.end658

for.body629:                                      ; preds = %for.cond626
  %345 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind630 = getelementptr inbounds %struct.options, %struct.options* %345, i32 0, i32 0
  %arrayidx631 = getelementptr inbounds [128 x i8], [128 x i8]* %ind630, i32 0, i32 97
  %346 = load i8, i8* %arrayidx631, align 1
  %conv632 = zext i8 %346 to i32
  %cmp633 = icmp ne i32 %conv632, 0
  br i1 %cmp633, label %if.then635, label %if.else642

if.then635:                                       ; preds = %for.body629
  %347 = load i32, i32* %i, align 4
  %348 = load i32, i32* %nc, align 4
  %rem636 = srem i32 %347, %348
  %349 = load i32, i32* %nc, align 4
  %sub637 = sub nsw i32 %349, 1
  %cmp638 = icmp eq i32 %rem636, %sub637
  br i1 %cmp638, label %if.then640, label %if.end641

if.then640:                                       ; preds = %if.then635
  br label %for.inc656

if.end641:                                        ; preds = %if.then635
  br label %if.end649

if.else642:                                       ; preds = %for.body629
  %350 = load i32, i32* %i, align 4
  %351 = load i32, i32* %nr, align 4
  %352 = load i32, i32* %nc, align 4
  %sub643 = sub nsw i32 %352, 1
  %mul644 = mul nsw i32 %351, %sub643
  %cmp645 = icmp sge i32 %350, %mul644
  br i1 %cmp645, label %if.then647, label %if.end648

if.then647:                                       ; preds = %if.else642
  br label %for.end658

if.end648:                                        ; preds = %if.else642
  br label %if.end649

if.end649:                                        ; preds = %if.end648, %if.end641
  %353 = load i32, i32* %l, align 4
  %354 = load i32*, i32** %widths, align 4
  %355 = load i32, i32* %i, align 4
  %arrayidx650 = getelementptr inbounds i32, i32* %354, i32 %355
  %356 = load i32, i32* %arrayidx650, align 4
  %cmp651 = icmp slt i32 %353, %356
  br i1 %cmp651, label %if.then653, label %if.end655

if.then653:                                       ; preds = %if.end649
  %357 = load i32*, i32** %widths, align 4
  %358 = load i32, i32* %i, align 4
  %arrayidx654 = getelementptr inbounds i32, i32* %357, i32 %358
  %359 = load i32, i32* %arrayidx654, align 4
  store i32 %359, i32* %l, align 4
  br label %if.end655

if.end655:                                        ; preds = %if.then653, %if.end649
  br label %for.inc656

for.inc656:                                       ; preds = %if.end655, %if.then640
  %360 = load i32, i32* %i, align 4
  %inc657 = add nsw i32 %360, 1
  store i32 %inc657, i32* %i, align 4
  br label %for.cond626

for.end658:                                       ; preds = %if.then647, %for.cond626
  %361 = load i32, i32* %l, align 4
  %add659 = add nsw i32 %361, 2
  store i32 %add659, i32* %sc, align 4
  br label %if.end683

if.else660:                                       ; preds = %if.end616
  store i32 0, i32* %l, align 4
  store i32 0, i32* %n532, align 4
  br label %for.cond661

for.cond661:                                      ; preds = %for.inc671, %if.else660
  %362 = load i32, i32* %n532, align 4
  %363 = load i32, i32* %argc, align 4
  %cmp662 = icmp slt i32 %362, %363
  br i1 %cmp662, label %for.body664, label %for.end673

for.body664:                                      ; preds = %for.cond661
  %364 = load i32, i32* %l, align 4
  %365 = load i32*, i32** %widths, align 4
  %366 = load i32, i32* %n532, align 4
  %arrayidx665 = getelementptr inbounds i32, i32* %365, i32 %366
  %367 = load i32, i32* %arrayidx665, align 4
  %cmp666 = icmp slt i32 %364, %367
  br i1 %cmp666, label %if.then668, label %if.end670

if.then668:                                       ; preds = %for.body664
  %368 = load i32*, i32** %widths, align 4
  %369 = load i32, i32* %n532, align 4
  %arrayidx669 = getelementptr inbounds i32, i32* %368, i32 %369
  %370 = load i32, i32* %arrayidx669, align 4
  store i32 %370, i32* %l, align 4
  br label %if.end670

if.end670:                                        ; preds = %if.then668, %for.body664
  br label %for.inc671

for.inc671:                                       ; preds = %if.end670
  %371 = load i32, i32* %n532, align 4
  %inc672 = add nsw i32 %371, 1
  store i32 %inc672, i32* %n532, align 4
  br label %for.cond661

for.end673:                                       ; preds = %for.cond661
  %372 = load i32, i32* %l, align 4
  %add674 = add nsw i32 %372, 2
  store i32 %add674, i32* %sc, align 4
  %373 = load i32, i32* @zterm_columns, align 4
  %add675 = add nsw i32 %373, 1
  %374 = load i32, i32* %sc, align 4
  %div676 = sdiv i32 %add675, %374
  store i32 %div676, i32* %nc, align 4
  %375 = load i32, i32* %nc, align 4
  %tobool677 = icmp ne i32 %375, 0
  br i1 %tobool677, label %if.end679, label %if.then678

if.then678:                                       ; preds = %for.end673
  store i32 1, i32* %nc, align 4
  br label %if.end679

if.end679:                                        ; preds = %if.then678, %for.end673
  %376 = load i32, i32* %n532, align 4
  %377 = load i32, i32* %nc, align 4
  %add680 = add nsw i32 %376, %377
  %sub681 = sub nsw i32 %add680, 1
  %378 = load i32, i32* %nc, align 4
  %div682 = sdiv i32 %sub681, %378
  store i32 %div682, i32* %nr, align 4
  br label %if.end683

if.end683:                                        ; preds = %if.end679, %for.end658
  %379 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind684 = getelementptr inbounds %struct.options, %struct.options* %379, i32 0, i32 0
  %arrayidx685 = getelementptr inbounds [128 x i8], [128 x i8]* %ind684, i32 0, i32 97
  %380 = load i8, i8* %arrayidx685, align 1
  %conv686 = zext i8 %380 to i32
  %cmp687 = icmp ne i32 %conv686, 0
  br i1 %cmp687, label %if.then689, label %if.end690

if.then689:                                       ; preds = %if.end683
  store i32 0, i32* %n532, align 4
  br label %if.end690

if.end690:                                        ; preds = %if.then689, %if.end683
  store i32 0, i32* %i, align 4
  br label %for.cond691

for.cond691:                                      ; preds = %for.inc770, %if.end690
  %381 = load i32, i32* %i, align 4
  %382 = load i32, i32* %nr, align 4
  %cmp692 = icmp slt i32 %381, %382
  br i1 %cmp692, label %for.body694, label %for.end772

for.body694:                                      ; preds = %for.cond691
  %383 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind695 = getelementptr inbounds %struct.options, %struct.options* %383, i32 0, i32 0
  %arrayidx696 = getelementptr inbounds [128 x i8], [128 x i8]* %ind695, i32 0, i32 97
  %384 = load i8, i8* %arrayidx696, align 1
  %conv697 = zext i8 %384 to i32
  %cmp698 = icmp ne i32 %conv697, 0
  br i1 %cmp698, label %if.then700, label %if.else730

if.then700:                                       ; preds = %for.body694
  store i32 0, i32* %ic, align 4
  br label %for.cond702

for.cond702:                                      ; preds = %for.inc726, %if.then700
  %385 = load i32, i32* %ic, align 4
  %386 = load i32, i32* %nc, align 4
  %cmp703 = icmp slt i32 %385, %386
  br i1 %cmp703, label %land.rhs705, label %land.end708

land.rhs705:                                      ; preds = %for.cond702
  %387 = load i32, i32* %n532, align 4
  %388 = load i32, i32* %argc, align 4
  %cmp706 = icmp slt i32 %387, %388
  br label %land.end708

land.end708:                                      ; preds = %land.rhs705, %for.cond702
  %389 = phi i1 [ false, %for.cond702 ], [ %cmp706, %land.rhs705 ]
  br i1 %389, label %for.body709, label %for.end729

for.body709:                                      ; preds = %land.end708
  %390 = load i8**, i8*** %args.addr, align 4
  %391 = load i32, i32* %n532, align 4
  %arrayidx710 = getelementptr inbounds i8*, i8** %390, i32 %391
  %392 = load i8*, i8** %arrayidx710, align 4
  %393 = load i32*, i32** %len, align 4
  %394 = load i32, i32* %n532, align 4
  %arrayidx711 = getelementptr inbounds i32, i32* %393, i32 %394
  %395 = load i32, i32* %arrayidx711, align 4
  %396 = load %struct._IO_FILE*, %struct._IO_FILE** %fout, align 4
  %call712 = call i32 @fwrite(i8* %392, i32 %395, i32 1, %struct._IO_FILE* %396)
  %397 = load i32*, i32** %widths, align 4
  %398 = load i32, i32* %n532, align 4
  %arrayidx713 = getelementptr inbounds i32, i32* %397, i32 %398
  %399 = load i32, i32* %arrayidx713, align 4
  store i32 %399, i32* %l, align 4
  %400 = load i32, i32* %n532, align 4
  %401 = load i32, i32* %argc, align 4
  %cmp714 = icmp slt i32 %400, %401
  br i1 %cmp714, label %if.then716, label %if.end725

if.then716:                                       ; preds = %for.body709
  br label %for.cond717

for.cond717:                                      ; preds = %for.inc722, %if.then716
  %402 = load i32, i32* %l, align 4
  %403 = load i32, i32* %sc, align 4
  %cmp718 = icmp slt i32 %402, %403
  br i1 %cmp718, label %for.body720, label %for.end724

for.body720:                                      ; preds = %for.cond717
  %404 = load %struct._IO_FILE*, %struct._IO_FILE** %fout, align 4
  %call721 = call i32 @fputc(i32 32, %struct._IO_FILE* %404)
  br label %for.inc722

for.inc722:                                       ; preds = %for.body720
  %405 = load i32, i32* %l, align 4
  %inc723 = add nsw i32 %405, 1
  store i32 %inc723, i32* %l, align 4
  br label %for.cond717

for.end724:                                       ; preds = %for.cond717
  br label %if.end725

if.end725:                                        ; preds = %for.end724, %for.body709
  br label %for.inc726

for.inc726:                                       ; preds = %if.end725
  %406 = load i32, i32* %ic, align 4
  %inc727 = add nsw i32 %406, 1
  store i32 %inc727, i32* %ic, align 4
  %407 = load i32, i32* %n532, align 4
  %inc728 = add nsw i32 %407, 1
  store i32 %inc728, i32* %n532, align 4
  br label %for.cond702

for.end729:                                       ; preds = %land.end708
  br label %if.end762

if.else730:                                       ; preds = %for.body694
  %408 = load i32, i32* %i, align 4
  store i32 %408, i32* %n532, align 4
  br label %do.body731

do.body731:                                       ; preds = %do.cond, %if.else730
  %409 = load i8**, i8*** %args.addr, align 4
  %410 = load i32, i32* %n532, align 4
  %arrayidx732 = getelementptr inbounds i8*, i8** %409, i32 %410
  %411 = load i8*, i8** %arrayidx732, align 4
  %412 = load i32*, i32** %len, align 4
  %413 = load i32, i32* %n532, align 4
  %arrayidx733 = getelementptr inbounds i32, i32* %412, i32 %413
  %414 = load i32, i32* %arrayidx733, align 4
  %415 = load %struct._IO_FILE*, %struct._IO_FILE** %fout, align 4
  %call734 = call i32 @fwrite(i8* %411, i32 %414, i32 1, %struct._IO_FILE* %415)
  %416 = load i32*, i32** %widths, align 4
  %417 = load i32, i32* %n532, align 4
  %arrayidx735 = getelementptr inbounds i32, i32* %416, i32 %417
  %418 = load i32, i32* %arrayidx735, align 4
  store i32 %418, i32* %l, align 4
  %419 = load i32, i32* %nr, align 4
  store i32 %419, i32* %t534, align 4
  br label %for.cond736

for.cond736:                                      ; preds = %for.inc743, %do.body731
  %420 = load i32, i32* %t534, align 4
  %tobool737 = icmp ne i32 %420, 0
  br i1 %tobool737, label %land.rhs738, label %land.end741

land.rhs738:                                      ; preds = %for.cond736
  %421 = load i32, i32* %n532, align 4
  %422 = load i32, i32* %argc, align 4
  %cmp739 = icmp slt i32 %421, %422
  br label %land.end741

land.end741:                                      ; preds = %land.rhs738, %for.cond736
  %423 = phi i1 [ false, %for.cond736 ], [ %cmp739, %land.rhs738 ]
  br i1 %423, label %for.body742, label %for.end746

for.body742:                                      ; preds = %land.end741
  br label %for.inc743

for.inc743:                                       ; preds = %for.body742
  %424 = load i32, i32* %t534, align 4
  %dec744 = add nsw i32 %424, -1
  store i32 %dec744, i32* %t534, align 4
  %425 = load i32, i32* %n532, align 4
  %inc745 = add nsw i32 %425, 1
  store i32 %inc745, i32* %n532, align 4
  br label %for.cond736

for.end746:                                       ; preds = %land.end741
  %426 = load i32, i32* %n532, align 4
  %427 = load i32, i32* %argc, align 4
  %cmp747 = icmp slt i32 %426, %427
  br i1 %cmp747, label %if.then749, label %if.end758

if.then749:                                       ; preds = %for.end746
  br label %for.cond750

for.cond750:                                      ; preds = %for.inc755, %if.then749
  %428 = load i32, i32* %l, align 4
  %429 = load i32, i32* %sc, align 4
  %cmp751 = icmp slt i32 %428, %429
  br i1 %cmp751, label %for.body753, label %for.end757

for.body753:                                      ; preds = %for.cond750
  %430 = load %struct._IO_FILE*, %struct._IO_FILE** %fout, align 4
  %call754 = call i32 @fputc(i32 32, %struct._IO_FILE* %430)
  br label %for.inc755

for.inc755:                                       ; preds = %for.body753
  %431 = load i32, i32* %l, align 4
  %inc756 = add nsw i32 %431, 1
  store i32 %inc756, i32* %l, align 4
  br label %for.cond750

for.end757:                                       ; preds = %for.cond750
  br label %if.end758

if.end758:                                        ; preds = %for.end757, %for.end746
  br label %do.cond

do.cond:                                          ; preds = %if.end758
  %432 = load i32, i32* %n532, align 4
  %433 = load i32, i32* %argc, align 4
  %cmp759 = icmp slt i32 %432, %433
  br i1 %cmp759, label %do.body731, label %do.end761

do.end761:                                        ; preds = %do.cond
  br label %if.end762

if.end762:                                        ; preds = %do.end761, %for.end729
  %434 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind763 = getelementptr inbounds %struct.options, %struct.options* %434, i32 0, i32 0
  %arrayidx764 = getelementptr inbounds [128 x i8], [128 x i8]* %ind763, i32 0, i32 78
  %435 = load i8, i8* %arrayidx764, align 2
  %conv765 = zext i8 %435 to i32
  %cmp766 = icmp ne i32 %conv765, 0
  %cond768 = select i1 %cmp766, i32 0, i32 10
  %436 = load %struct._IO_FILE*, %struct._IO_FILE** %fout, align 4
  %call769 = call i32 @fputc(i32 %cond768, %struct._IO_FILE* %436)
  br label %for.inc770

for.inc770:                                       ; preds = %if.end762
  %437 = load i32, i32* %i, align 4
  %inc771 = add nsw i32 %437, 1
  store i32 %inc771, i32* %i, align 4
  br label %for.cond691

for.end772:                                       ; preds = %for.cond691
  %438 = load %struct._IO_FILE*, %struct._IO_FILE** %fout, align 4
  %439 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 4
  %cmp773 = icmp ne %struct._IO_FILE* %438, %439
  br i1 %cmp773, label %land.lhs.true775, label %if.end801

land.lhs.true775:                                 ; preds = %for.end772
  %440 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind776 = getelementptr inbounds %struct.options, %struct.options* %440, i32 0, i32 0
  %arrayidx777 = getelementptr inbounds [128 x i8], [128 x i8]* %ind776, i32 0, i32 122
  %441 = load i8, i8* %arrayidx777, align 2
  %conv778 = zext i8 %441 to i32
  %cmp779 = icmp ne i32 %conv778, 0
  br i1 %cmp779, label %land.lhs.true793, label %lor.lhs.false781

lor.lhs.false781:                                 ; preds = %land.lhs.true775
  %442 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind782 = getelementptr inbounds %struct.options, %struct.options* %442, i32 0, i32 0
  %arrayidx783 = getelementptr inbounds [128 x i8], [128 x i8]* %ind782, i32 0, i32 115
  %443 = load i8, i8* %arrayidx783, align 1
  %conv784 = zext i8 %443 to i32
  %cmp785 = icmp ne i32 %conv784, 0
  br i1 %cmp785, label %land.lhs.true793, label %lor.lhs.false787

lor.lhs.false787:                                 ; preds = %lor.lhs.false781
  %444 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind788 = getelementptr inbounds %struct.options, %struct.options* %444, i32 0, i32 0
  %arrayidx789 = getelementptr inbounds [128 x i8], [128 x i8]* %ind788, i32 0, i32 118
  %445 = load i8, i8* %arrayidx789, align 2
  %conv790 = zext i8 %445 to i32
  %cmp791 = icmp ne i32 %conv790, 0
  br i1 %cmp791, label %land.lhs.true793, label %if.end801

land.lhs.true793:                                 ; preds = %lor.lhs.false787, %lor.lhs.false781, %land.lhs.true775
  %446 = load %struct._IO_FILE*, %struct._IO_FILE** %fout, align 4
  %call794 = call i32 @fclose(%struct._IO_FILE* %446)
  %cmp795 = icmp eq i32 %call794, 0
  br i1 %cmp795, label %cond.true, label %cond.false

cond.true:                                        ; preds = %land.lhs.true793
  %447 = load i32, i32* %mcount, align 4
  br label %cond.end

cond.false:                                       ; preds = %land.lhs.true793
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond797 = phi i32 [ %447, %cond.true ], [ -1, %cond.false ]
  store i32 %cond797, i32* %rcount, align 4
  %cmp798 = icmp eq i32 %cond797, -1
  br i1 %cmp798, label %if.then800, label %if.end801

if.then800:                                       ; preds = %cond.end
  store i32 1, i32* %ret, align 4
  br label %if.end801

if.end801:                                        ; preds = %if.then800, %cond.end, %lor.lhs.false787, %for.end772
  %448 = load %struct._IO_FILE*, %struct._IO_FILE** %fout, align 4
  %449 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 4
  %cmp802 = icmp ne %struct._IO_FILE* %448, %449
  br i1 %cmp802, label %land.lhs.true804, label %cond.false823

land.lhs.true804:                                 ; preds = %if.end801
  %450 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind805 = getelementptr inbounds %struct.options, %struct.options* %450, i32 0, i32 0
  %arrayidx806 = getelementptr inbounds [128 x i8], [128 x i8]* %ind805, i32 0, i32 122
  %451 = load i8, i8* %arrayidx806, align 2
  %conv807 = zext i8 %451 to i32
  %cmp808 = icmp ne i32 %conv807, 0
  br i1 %cmp808, label %cond.true822, label %lor.lhs.false810

lor.lhs.false810:                                 ; preds = %land.lhs.true804
  %452 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind811 = getelementptr inbounds %struct.options, %struct.options* %452, i32 0, i32 0
  %arrayidx812 = getelementptr inbounds [128 x i8], [128 x i8]* %ind811, i32 0, i32 115
  %453 = load i8, i8* %arrayidx812, align 1
  %conv813 = zext i8 %453 to i32
  %cmp814 = icmp ne i32 %conv813, 0
  br i1 %cmp814, label %cond.true822, label %lor.lhs.false816

lor.lhs.false816:                                 ; preds = %lor.lhs.false810
  %454 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind817 = getelementptr inbounds %struct.options, %struct.options* %454, i32 0, i32 0
  %arrayidx818 = getelementptr inbounds [128 x i8], [128 x i8]* %ind817, i32 0, i32 118
  %455 = load i8, i8* %arrayidx818, align 2
  %conv819 = zext i8 %455 to i32
  %cmp820 = icmp ne i32 %conv819, 0
  br i1 %cmp820, label %cond.true822, label %cond.false823

cond.true822:                                     ; preds = %lor.lhs.false816, %lor.lhs.false810, %land.lhs.true804
  br i1 true, label %lor.lhs.false838, label %if.then840

cond.false823:                                    ; preds = %lor.lhs.false816, %if.end801
  %456 = load %struct._IO_FILE*, %struct._IO_FILE** %fout, align 4
  %457 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 4
  %cmp824 = icmp eq %struct._IO_FILE* %456, %457
  br i1 %cmp824, label %cond.true826, label %cond.false834

cond.true826:                                     ; preds = %cond.false823
  %458 = load %struct._IO_FILE*, %struct._IO_FILE** %fout, align 4
  %call827 = call i32 @fflush(%struct._IO_FILE* %458)
  %cmp828 = icmp eq i32 %call827, 0
  br i1 %cmp828, label %lor.lhs.false838, label %lor.lhs.false830

lor.lhs.false830:                                 ; preds = %cond.true826
  %call831 = call i32* @__errno_location()
  %459 = load i32, i32* %call831, align 4
  %cmp832 = icmp eq i32 %459, 9
  br i1 %cmp832, label %lor.lhs.false838, label %if.then840

cond.false834:                                    ; preds = %cond.false823
  %460 = load %struct._IO_FILE*, %struct._IO_FILE** %fout, align 4
  %call835 = call i32 @fclose(%struct._IO_FILE* %460)
  %cmp836 = icmp eq i32 %call835, 0
  br i1 %cmp836, label %lor.lhs.false838, label %if.then840

lor.lhs.false838:                                 ; preds = %cond.false834, %lor.lhs.false830, %cond.true826, %cond.true822
  %461 = load i32, i32* %ret, align 4
  %tobool839 = icmp ne i32 %461, 0
  br i1 %tobool839, label %if.then840, label %if.end842

if.then840:                                       ; preds = %lor.lhs.false838, %cond.false834, %lor.lhs.false830, %cond.true822
  %462 = load i8*, i8** %name.addr, align 4
  %call841 = call i32* @__errno_location()
  %463 = load i32, i32* %call841, align 4
  call void (i8*, i8*, ...) @zwarnnam(i8* %462, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.107, i32 0, i32 0), i32 %463)
  store i32 1, i32* %ret, align 4
  br label %if.end842

if.end842:                                        ; preds = %if.then840, %lor.lhs.false838
  %464 = load i8*, i8** %buf, align 4
  %tobool843 = icmp ne i8* %464, null
  br i1 %tobool843, label %if.then844, label %if.end882

if.then844:                                       ; preds = %if.end842
  %465 = load i32, i32* @queueing_enabled, align 4
  %inc845 = add nsw i32 %465, 1
  store i32 %inc845, i32* @queueing_enabled, align 4
  %466 = load i32, i32* %ret, align 4
  %tobool846 = icmp ne i32 %466, 0
  br i1 %tobool846, label %if.then847, label %if.else848

if.then847:                                       ; preds = %if.then844
  %467 = load i8*, i8** %buf, align 4
  call void @free(i8* %467)
  br label %if.end858

if.else848:                                       ; preds = %if.then844
  %468 = load %struct.options*, %struct.options** %ops.addr, align 4
  %args849 = getelementptr inbounds %struct.options, %struct.options* %468, i32 0, i32 1
  %469 = load i8**, i8*** %args849, align 4
  %470 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind850 = getelementptr inbounds %struct.options, %struct.options* %470, i32 0, i32 0
  %arrayidx851 = getelementptr inbounds [128 x i8], [128 x i8]* %ind850, i32 0, i32 118
  %471 = load i8, i8* %arrayidx851, align 2
  %conv852 = zext i8 %471 to i32
  %shr853 = ashr i32 %conv852, 2
  %sub854 = sub nsw i32 %shr853, 1
  %arrayidx855 = getelementptr inbounds i8*, i8** %469, i32 %sub854
  %472 = load i8*, i8** %arrayidx855, align 4
  %473 = load i8*, i8** %buf, align 4
  %474 = load i32, i32* %rcount, align 4
  %call856 = call i8* @metafy(i8* %473, i32 %474, i32 0)
  %call857 = call %struct.param* @setsparam(i8* %472, i8* %call856)
  br label %if.end858

if.end858:                                        ; preds = %if.else848, %if.then847
  br label %do.body859

do.body859:                                       ; preds = %if.end858
  %475 = load i32, i32* @queueing_enabled, align 4
  %dec860 = add nsw i32 %475, -1
  store i32 %dec860, i32* @queueing_enabled, align 4
  %tobool861 = icmp ne i32 %dec860, 0
  br i1 %tobool861, label %if.end879, label %if.then862

if.then862:                                       ; preds = %do.body859
  br label %do.body863

do.body863:                                       ; preds = %if.then862
  br label %while.cond864

while.cond864:                                    ; preds = %while.body867, %do.body863
  %476 = load i32, i32* @queue_front, align 4
  %477 = load i32, i32* @queue_rear, align 4
  %cmp865 = icmp ne i32 %476, %477
  br i1 %cmp865, label %while.body867, label %while.end876

while.body867:                                    ; preds = %while.cond864
  %478 = load i32, i32* @queue_front, align 4
  %add870 = add nsw i32 %478, 1
  %rem871 = srem i32 %add870, 128
  store i32 %rem871, i32* @queue_front, align 4
  %479 = load i32, i32* @queue_front, align 4
  %arrayidx872 = getelementptr inbounds [128 x %struct.__sigset_t], [128 x %struct.__sigset_t]* @signal_mask_queue, i32 0, i32 %479
  call void @signal_setmask(%struct.__sigset_t* sret %tmp873, %struct.__sigset_t* byval align 4 %arrayidx872)
  %480 = bitcast %struct.__sigset_t* %oset869 to i8*
  %481 = bitcast %struct.__sigset_t* %tmp873 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %480, i8* %481, i32 128, i32 4, i1 false)
  %482 = load i32, i32* @queue_front, align 4
  %arrayidx874 = getelementptr inbounds [128 x i32], [128 x i32]* @signal_queue, i32 0, i32 %482
  %483 = load i32, i32* %arrayidx874, align 4
  call void @zhandler(i32 %483)
  call void @signal_setmask(%struct.__sigset_t* sret %tmp875, %struct.__sigset_t* byval align 4 %oset869)
  br label %while.cond864

while.end876:                                     ; preds = %while.cond864
  br label %do.end878

do.end878:                                        ; preds = %while.end876
  br label %if.end879

if.end879:                                        ; preds = %do.end878, %do.body859
  br label %do.end881

do.end881:                                        ; preds = %if.end879
  br label %if.end882

if.end882:                                        ; preds = %do.end881, %if.end842
  %484 = load i32, i32* %ret, align 4
  store i32 %484, i32* %retval, align 4
  br label %return

if.end883:                                        ; preds = %lor.lhs.false521, %if.end513
  %485 = load i8*, i8** %fmt, align 4
  %tobool884 = icmp ne i8* %485, null
  br i1 %tobool884, label %if.end1337, label %if.then885

if.then885:                                       ; preds = %if.end883
  %486 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind886 = getelementptr inbounds %struct.options, %struct.options* %486, i32 0, i32 0
  %arrayidx887 = getelementptr inbounds [128 x i8], [128 x i8]* %ind886, i32 0, i32 122
  %487 = load i8, i8* %arrayidx887, align 2
  %conv888 = zext i8 %487 to i32
  %cmp889 = icmp ne i32 %conv888, 0
  br i1 %cmp889, label %if.then909, label %lor.lhs.false891

lor.lhs.false891:                                 ; preds = %if.then885
  %488 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind892 = getelementptr inbounds %struct.options, %struct.options* %488, i32 0, i32 0
  %arrayidx893 = getelementptr inbounds [128 x i8], [128 x i8]* %ind892, i32 0, i32 118
  %489 = load i8, i8* %arrayidx893, align 2
  %conv894 = zext i8 %489 to i32
  %cmp895 = icmp ne i32 %conv894, 0
  br i1 %cmp895, label %if.then909, label %lor.lhs.false897

lor.lhs.false897:                                 ; preds = %lor.lhs.false891
  %490 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind898 = getelementptr inbounds %struct.options, %struct.options* %490, i32 0, i32 0
  %arrayidx899 = getelementptr inbounds [128 x i8], [128 x i8]* %ind898, i32 0, i32 115
  %491 = load i8, i8* %arrayidx899, align 1
  %conv900 = zext i8 %491 to i32
  %cmp901 = icmp ne i32 %conv900, 0
  br i1 %cmp901, label %if.then909, label %lor.lhs.false903

lor.lhs.false903:                                 ; preds = %lor.lhs.false897
  %492 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind904 = getelementptr inbounds %struct.options, %struct.options* %492, i32 0, i32 0
  %arrayidx905 = getelementptr inbounds [128 x i8], [128 x i8]* %ind904, i32 0, i32 83
  %493 = load i8, i8* %arrayidx905, align 1
  %conv906 = zext i8 %493 to i32
  %cmp907 = icmp ne i32 %conv906, 0
  br i1 %cmp907, label %if.then909, label %if.end920

if.then909:                                       ; preds = %lor.lhs.false903, %lor.lhs.false897, %lor.lhs.false891, %if.then885
  store i32 0, i32* %n, align 4
  br label %for.cond910

for.cond910:                                      ; preds = %for.inc917, %if.then909
  %494 = load i32, i32* %n, align 4
  %495 = load i32, i32* %argc, align 4
  %cmp911 = icmp slt i32 %494, %495
  br i1 %cmp911, label %for.body913, label %for.end919

for.body913:                                      ; preds = %for.cond910
  %496 = load i8**, i8*** %args.addr, align 4
  %497 = load i32, i32* %n, align 4
  %arrayidx914 = getelementptr inbounds i8*, i8** %496, i32 %497
  %498 = load i8*, i8** %arrayidx914, align 4
  %499 = load i32*, i32** %len, align 4
  %500 = load i32, i32* %n, align 4
  %arrayidx915 = getelementptr inbounds i32, i32* %499, i32 %500
  %501 = load i32, i32* %arrayidx915, align 4
  %call916 = call i8* @metafy(i8* %498, i32 %501, i32 5)
  br label %for.inc917

for.inc917:                                       ; preds = %for.body913
  %502 = load i32, i32* %n, align 4
  %inc918 = add nsw i32 %502, 1
  store i32 %inc918, i32* %n, align 4
  br label %for.cond910

for.end919:                                       ; preds = %for.cond910
  br label %if.end920

if.end920:                                        ; preds = %for.end919, %lor.lhs.false903
  %503 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind921 = getelementptr inbounds %struct.options, %struct.options* %503, i32 0, i32 0
  %arrayidx922 = getelementptr inbounds [128 x i8], [128 x i8]* %ind921, i32 0, i32 122
  %504 = load i8, i8* %arrayidx922, align 2
  %conv923 = zext i8 %504 to i32
  %cmp924 = icmp ne i32 %conv923, 0
  br i1 %cmp924, label %if.then926, label %if.end954

if.then926:                                       ; preds = %if.end920
  %505 = load i32, i32* @queueing_enabled, align 4
  %inc927 = add nsw i32 %505, 1
  store i32 %inc927, i32* @queueing_enabled, align 4
  %506 = load %union.linkroot*, %union.linkroot** @bufstack, align 4
  %507 = load %union.linkroot*, %union.linkroot** @bufstack, align 4
  %node928 = bitcast %union.linkroot* %507 to %struct.linknode*
  %508 = load i8**, i8*** %args.addr, align 4
  %call929 = call i8* @sepjoin(i8** %508, i8* null, i32 0)
  %call930 = call %struct.linknode* @zinsertlinknode(%union.linkroot* %506, %struct.linknode* %node928, i8* %call929)
  br label %do.body931

do.body931:                                       ; preds = %if.then926
  %509 = load i32, i32* @queueing_enabled, align 4
  %dec932 = add nsw i32 %509, -1
  store i32 %dec932, i32* @queueing_enabled, align 4
  %tobool933 = icmp ne i32 %dec932, 0
  br i1 %tobool933, label %if.end951, label %if.then934

if.then934:                                       ; preds = %do.body931
  br label %do.body935

do.body935:                                       ; preds = %if.then934
  br label %while.cond936

while.cond936:                                    ; preds = %while.body939, %do.body935
  %510 = load i32, i32* @queue_front, align 4
  %511 = load i32, i32* @queue_rear, align 4
  %cmp937 = icmp ne i32 %510, %511
  br i1 %cmp937, label %while.body939, label %while.end948

while.body939:                                    ; preds = %while.cond936
  %512 = load i32, i32* @queue_front, align 4
  %add942 = add nsw i32 %512, 1
  %rem943 = srem i32 %add942, 128
  store i32 %rem943, i32* @queue_front, align 4
  %513 = load i32, i32* @queue_front, align 4
  %arrayidx944 = getelementptr inbounds [128 x %struct.__sigset_t], [128 x %struct.__sigset_t]* @signal_mask_queue, i32 0, i32 %513
  call void @signal_setmask(%struct.__sigset_t* sret %tmp945, %struct.__sigset_t* byval align 4 %arrayidx944)
  %514 = bitcast %struct.__sigset_t* %oset941 to i8*
  %515 = bitcast %struct.__sigset_t* %tmp945 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %514, i8* %515, i32 128, i32 4, i1 false)
  %516 = load i32, i32* @queue_front, align 4
  %arrayidx946 = getelementptr inbounds [128 x i32], [128 x i32]* @signal_queue, i32 0, i32 %516
  %517 = load i32, i32* %arrayidx946, align 4
  call void @zhandler(i32 %517)
  call void @signal_setmask(%struct.__sigset_t* sret %tmp947, %struct.__sigset_t* byval align 4 %oset941)
  br label %while.cond936

while.end948:                                     ; preds = %while.cond936
  br label %do.end950

do.end950:                                        ; preds = %while.end948
  br label %if.end951

if.end951:                                        ; preds = %do.end950, %do.body931
  br label %do.end953

do.end953:                                        ; preds = %if.end951
  store i32 0, i32* %retval, align 4
  br label %return

if.end954:                                        ; preds = %if.end920
  %518 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind955 = getelementptr inbounds %struct.options, %struct.options* %518, i32 0, i32 0
  %arrayidx956 = getelementptr inbounds [128 x i8], [128 x i8]* %ind955, i32 0, i32 115
  %519 = load i8, i8* %arrayidx956, align 1
  %conv957 = zext i8 %519 to i32
  %cmp958 = icmp ne i32 %conv957, 0
  br i1 %cmp958, label %if.then966, label %lor.lhs.false960

lor.lhs.false960:                                 ; preds = %if.end954
  %520 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind961 = getelementptr inbounds %struct.options, %struct.options* %520, i32 0, i32 0
  %arrayidx962 = getelementptr inbounds [128 x i8], [128 x i8]* %ind961, i32 0, i32 83
  %521 = load i8, i8* %arrayidx962, align 1
  %conv963 = zext i8 %521 to i32
  %cmp964 = icmp ne i32 %conv963, 0
  br i1 %cmp964, label %if.then966, label %if.end1083

if.then966:                                       ; preds = %lor.lhs.false960, %if.end954
  store i32 0, i32* %nwords, align 4
  %522 = load i8**, i8*** %args.addr, align 4
  store i8** %522, i8*** %pargs, align 4
  %523 = load i32, i32* @queueing_enabled, align 4
  %inc971 = add nsw i32 %523, 1
  store i32 %inc971, i32* @queueing_enabled, align 4
  br label %while.cond972

while.cond972:                                    ; preds = %while.body975, %if.then966
  %524 = load i8**, i8*** %pargs, align 4
  %incdec.ptr973 = getelementptr inbounds i8*, i8** %524, i32 1
  store i8** %incdec.ptr973, i8*** %pargs, align 4
  %525 = load i8*, i8** %524, align 4
  %tobool974 = icmp ne i8* %525, null
  br i1 %tobool974, label %while.body975, label %while.end977

while.body975:                                    ; preds = %while.cond972
  %526 = load i32, i32* %nwords, align 4
  %inc976 = add nsw i32 %526, 1
  store i32 %inc976, i32* %nwords, align 4
  br label %while.cond972

while.end977:                                     ; preds = %while.cond972
  %527 = load i32, i32* %nwords, align 4
  %tobool978 = icmp ne i32 %527, 0
  br i1 %tobool978, label %if.then979, label %if.else1048

if.then979:                                       ; preds = %while.end977
  %528 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind980 = getelementptr inbounds %struct.options, %struct.options* %528, i32 0, i32 0
  %arrayidx981 = getelementptr inbounds [128 x i8], [128 x i8]* %ind980, i32 0, i32 83
  %529 = load i8, i8* %arrayidx981, align 1
  %conv982 = zext i8 %529 to i32
  %cmp983 = icmp ne i32 %conv982, 0
  br i1 %cmp983, label %if.then985, label %if.else1023

if.then985:                                       ; preds = %if.then979
  %530 = load i32, i32* %nwords, align 4
  %cmp988 = icmp sgt i32 %530, 1
  br i1 %cmp988, label %if.then990, label %if.end1014

if.then990:                                       ; preds = %if.then985
  %531 = load i8*, i8** %name.addr, align 4
  call void (i8*, i8*, ...) @zwarnnam(i8* %531, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.108, i32 0, i32 0))
  br label %do.body991

do.body991:                                       ; preds = %if.then990
  %532 = load i32, i32* @queueing_enabled, align 4
  %dec992 = add nsw i32 %532, -1
  store i32 %dec992, i32* @queueing_enabled, align 4
  %tobool993 = icmp ne i32 %dec992, 0
  br i1 %tobool993, label %if.end1011, label %if.then994

if.then994:                                       ; preds = %do.body991
  br label %do.body995

do.body995:                                       ; preds = %if.then994
  br label %while.cond996

while.cond996:                                    ; preds = %while.body999, %do.body995
  %533 = load i32, i32* @queue_front, align 4
  %534 = load i32, i32* @queue_rear, align 4
  %cmp997 = icmp ne i32 %533, %534
  br i1 %cmp997, label %while.body999, label %while.end1008

while.body999:                                    ; preds = %while.cond996
  %535 = load i32, i32* @queue_front, align 4
  %add1002 = add nsw i32 %535, 1
  %rem1003 = srem i32 %add1002, 128
  store i32 %rem1003, i32* @queue_front, align 4
  %536 = load i32, i32* @queue_front, align 4
  %arrayidx1004 = getelementptr inbounds [128 x %struct.__sigset_t], [128 x %struct.__sigset_t]* @signal_mask_queue, i32 0, i32 %536
  call void @signal_setmask(%struct.__sigset_t* sret %tmp1005, %struct.__sigset_t* byval align 4 %arrayidx1004)
  %537 = bitcast %struct.__sigset_t* %oset1001 to i8*
  %538 = bitcast %struct.__sigset_t* %tmp1005 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %537, i8* %538, i32 128, i32 4, i1 false)
  %539 = load i32, i32* @queue_front, align 4
  %arrayidx1006 = getelementptr inbounds [128 x i32], [128 x i32]* @signal_queue, i32 0, i32 %539
  %540 = load i32, i32* %arrayidx1006, align 4
  call void @zhandler(i32 %540)
  call void @signal_setmask(%struct.__sigset_t* sret %tmp1007, %struct.__sigset_t* byval align 4 %oset1001)
  br label %while.cond996

while.end1008:                                    ; preds = %while.cond996
  br label %do.end1010

do.end1010:                                       ; preds = %while.end1008
  br label %if.end1011

if.end1011:                                       ; preds = %do.end1010, %do.body991
  br label %do.end1013

do.end1013:                                       ; preds = %if.end1011
  store i32 1, i32* %retval, align 4
  br label %return

if.end1014:                                       ; preds = %if.then985
  store i16* null, i16** %words, align 4
  store i32 0, i32* %wordsize, align 4
  %541 = load i8**, i8*** %args.addr, align 4
  %542 = load i8*, i8** %541, align 4
  call void @histsplitwords(i8* %542, i16** %words, i32* %wordsize, i32* %nwords, i32 1)
  %call1015 = call %struct.histent* @prepnexthistent()
  store %struct.histent* %call1015, %struct.histent** %ent, align 4
  %543 = load i32, i32* %nwords, align 4
  %mul1016 = mul i32 %543, 2
  %call1017 = call i8* @zalloc(i32 %mul1016)
  %544 = bitcast i8* %call1017 to i16*
  %545 = load %struct.histent*, %struct.histent** %ent, align 4
  %words1018 = getelementptr inbounds %struct.histent, %struct.histent* %545, i32 0, i32 6
  store i16* %544, i16** %words1018, align 4
  %546 = load %struct.histent*, %struct.histent** %ent, align 4
  %words1019 = getelementptr inbounds %struct.histent, %struct.histent* %546, i32 0, i32 6
  %547 = load i16*, i16** %words1019, align 4
  %548 = bitcast i16* %547 to i8*
  %549 = load i16*, i16** %words, align 4
  %550 = bitcast i16* %549 to i8*
  %551 = load i32, i32* %nwords, align 4
  %mul1020 = mul i32 %551, 2
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %548, i8* %550, i32 %mul1020, i32 2, i1 false)
  %552 = load i16*, i16** %words, align 4
  %553 = bitcast i16* %552 to i8*
  call void @free(i8* %553)
  %554 = load i32, i32* %nwords, align 4
  %div1021 = sdiv i32 %554, 2
  %555 = load %struct.histent*, %struct.histent** %ent, align 4
  %nwords1022 = getelementptr inbounds %struct.histent, %struct.histent* %555, i32 0, i32 7
  store i32 %div1021, i32* %nwords1022, align 4
  br label %if.end1047

if.else1023:                                      ; preds = %if.then979
  %call1024 = call %struct.histent* @prepnexthistent()
  store %struct.histent* %call1024, %struct.histent** %ent, align 4
  %556 = load i32, i32* %nwords, align 4
  %mul1025 = mul nsw i32 %556, 2
  %mul1026 = mul i32 %mul1025, 2
  %call1027 = call i8* @zalloc(i32 %mul1026)
  %557 = bitcast i8* %call1027 to i16*
  %558 = load %struct.histent*, %struct.histent** %ent, align 4
  %words1028 = getelementptr inbounds %struct.histent, %struct.histent* %558, i32 0, i32 6
  store i16* %557, i16** %words1028, align 4
  %559 = load i32, i32* %nwords, align 4
  %560 = load %struct.histent*, %struct.histent** %ent, align 4
  %nwords1029 = getelementptr inbounds %struct.histent, %struct.histent* %560, i32 0, i32 7
  store i32 %559, i32* %nwords1029, align 4
  store i32 0, i32* %iwords, align 4
  store i32 0, i32* %nlen, align 4
  %561 = load i8**, i8*** %args.addr, align 4
  store i8** %561, i8*** %pargs, align 4
  br label %for.cond1030

for.cond1030:                                     ; preds = %for.inc1044, %if.else1023
  %562 = load i8**, i8*** %pargs, align 4
  %563 = load i8*, i8** %562, align 4
  %tobool1031 = icmp ne i8* %563, null
  br i1 %tobool1031, label %for.body1032, label %for.end1046

for.body1032:                                     ; preds = %for.cond1030
  %564 = load i32, i32* %nlen, align 4
  %conv1033 = trunc i32 %564 to i16
  %565 = load %struct.histent*, %struct.histent** %ent, align 4
  %words1034 = getelementptr inbounds %struct.histent, %struct.histent* %565, i32 0, i32 6
  %566 = load i16*, i16** %words1034, align 4
  %567 = load i32, i32* %iwords, align 4
  %inc1035 = add nsw i32 %567, 1
  store i32 %inc1035, i32* %iwords, align 4
  %arrayidx1036 = getelementptr inbounds i16, i16* %566, i32 %567
  store i16 %conv1033, i16* %arrayidx1036, align 2
  %568 = load i8**, i8*** %pargs, align 4
  %569 = load i8*, i8** %568, align 4
  %call1037 = call i32 @strlen(i8* %569)
  %570 = load i32, i32* %nlen, align 4
  %add1038 = add i32 %570, %call1037
  store i32 %add1038, i32* %nlen, align 4
  %571 = load i32, i32* %nlen, align 4
  %conv1039 = trunc i32 %571 to i16
  %572 = load %struct.histent*, %struct.histent** %ent, align 4
  %words1040 = getelementptr inbounds %struct.histent, %struct.histent* %572, i32 0, i32 6
  %573 = load i16*, i16** %words1040, align 4
  %574 = load i32, i32* %iwords, align 4
  %inc1041 = add nsw i32 %574, 1
  store i32 %inc1041, i32* %iwords, align 4
  %arrayidx1042 = getelementptr inbounds i16, i16* %573, i32 %574
  store i16 %conv1039, i16* %arrayidx1042, align 2
  %575 = load i32, i32* %nlen, align 4
  %inc1043 = add nsw i32 %575, 1
  store i32 %inc1043, i32* %nlen, align 4
  br label %for.inc1044

for.inc1044:                                      ; preds = %for.body1032
  %576 = load i8**, i8*** %pargs, align 4
  %incdec.ptr1045 = getelementptr inbounds i8*, i8** %576, i32 1
  store i8** %incdec.ptr1045, i8*** %pargs, align 4
  br label %for.cond1030

for.end1046:                                      ; preds = %for.cond1030
  br label %if.end1047

if.end1047:                                       ; preds = %for.end1046, %if.end1014
  br label %if.end1051

if.else1048:                                      ; preds = %while.end977
  %call1049 = call %struct.histent* @prepnexthistent()
  store %struct.histent* %call1049, %struct.histent** %ent, align 4
  %577 = load %struct.histent*, %struct.histent** %ent, align 4
  %words1050 = getelementptr inbounds %struct.histent, %struct.histent* %577, i32 0, i32 6
  store i16* null, i16** %words1050, align 4
  br label %if.end1051

if.end1051:                                       ; preds = %if.else1048, %if.end1047
  %578 = load i8**, i8*** %args.addr, align 4
  %call1052 = call i8* @zjoin(i8** %578, i32 32, i32 0)
  %579 = load %struct.histent*, %struct.histent** %ent, align 4
  %node1053 = getelementptr inbounds %struct.histent, %struct.histent* %579, i32 0, i32 0
  %nam1054 = getelementptr inbounds %struct.hashnode, %struct.hashnode* %node1053, i32 0, i32 1
  store i8* %call1052, i8** %nam1054, align 4
  %call1055 = call i32 @time(i32* null)
  %580 = load %struct.histent*, %struct.histent** %ent, align 4
  %ftim = getelementptr inbounds %struct.histent, %struct.histent* %580, i32 0, i32 5
  store i32 %call1055, i32* %ftim, align 4
  %581 = load %struct.histent*, %struct.histent** %ent, align 4
  %stim = getelementptr inbounds %struct.histent, %struct.histent* %581, i32 0, i32 4
  store i32 %call1055, i32* %stim, align 4
  %582 = load %struct.histent*, %struct.histent** %ent, align 4
  %node1056 = getelementptr inbounds %struct.histent, %struct.histent* %582, i32 0, i32 0
  %flags1057 = getelementptr inbounds %struct.hashnode, %struct.hashnode* %node1056, i32 0, i32 2
  store i32 0, i32* %flags1057, align 4
  %583 = load %struct.hashtable*, %struct.hashtable** @histtab, align 4
  %584 = load %struct.histent*, %struct.histent** %ent, align 4
  %node1058 = getelementptr inbounds %struct.histent, %struct.histent* %584, i32 0, i32 0
  %nam1059 = getelementptr inbounds %struct.hashnode, %struct.hashnode* %node1058, i32 0, i32 1
  %585 = load i8*, i8** %nam1059, align 4
  %586 = load %struct.histent*, %struct.histent** %ent, align 4
  %587 = bitcast %struct.histent* %586 to i8*
  call void @addhistnode(%struct.hashtable* %583, i8* %585, i8* %587)
  br label %do.body1060

do.body1060:                                      ; preds = %if.end1051
  %588 = load i32, i32* @queueing_enabled, align 4
  %dec1061 = add nsw i32 %588, -1
  store i32 %dec1061, i32* @queueing_enabled, align 4
  %tobool1062 = icmp ne i32 %dec1061, 0
  br i1 %tobool1062, label %if.end1080, label %if.then1063

if.then1063:                                      ; preds = %do.body1060
  br label %do.body1064

do.body1064:                                      ; preds = %if.then1063
  br label %while.cond1065

while.cond1065:                                   ; preds = %while.body1068, %do.body1064
  %589 = load i32, i32* @queue_front, align 4
  %590 = load i32, i32* @queue_rear, align 4
  %cmp1066 = icmp ne i32 %589, %590
  br i1 %cmp1066, label %while.body1068, label %while.end1077

while.body1068:                                   ; preds = %while.cond1065
  %591 = load i32, i32* @queue_front, align 4
  %add1071 = add nsw i32 %591, 1
  %rem1072 = srem i32 %add1071, 128
  store i32 %rem1072, i32* @queue_front, align 4
  %592 = load i32, i32* @queue_front, align 4
  %arrayidx1073 = getelementptr inbounds [128 x %struct.__sigset_t], [128 x %struct.__sigset_t]* @signal_mask_queue, i32 0, i32 %592
  call void @signal_setmask(%struct.__sigset_t* sret %tmp1074, %struct.__sigset_t* byval align 4 %arrayidx1073)
  %593 = bitcast %struct.__sigset_t* %oset1070 to i8*
  %594 = bitcast %struct.__sigset_t* %tmp1074 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %593, i8* %594, i32 128, i32 4, i1 false)
  %595 = load i32, i32* @queue_front, align 4
  %arrayidx1075 = getelementptr inbounds [128 x i32], [128 x i32]* @signal_queue, i32 0, i32 %595
  %596 = load i32, i32* %arrayidx1075, align 4
  call void @zhandler(i32 %596)
  call void @signal_setmask(%struct.__sigset_t* sret %tmp1076, %struct.__sigset_t* byval align 4 %oset1070)
  br label %while.cond1065

while.end1077:                                    ; preds = %while.cond1065
  br label %do.end1079

do.end1079:                                       ; preds = %while.end1077
  br label %if.end1080

if.end1080:                                       ; preds = %do.end1079, %do.body1060
  br label %do.end1082

do.end1082:                                       ; preds = %if.end1080
  store i32 0, i32* %retval, align 4
  br label %return

if.end1083:                                       ; preds = %lor.lhs.false960
  %597 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind1084 = getelementptr inbounds %struct.options, %struct.options* %597, i32 0, i32 0
  %arrayidx1085 = getelementptr inbounds [128 x i8], [128 x i8]* %ind1084, i32 0, i32 120
  %598 = load i8, i8* %arrayidx1085, align 4
  %conv1086 = zext i8 %598 to i32
  %cmp1087 = icmp sgt i32 %conv1086, 3
  br i1 %cmp1087, label %if.then1095, label %lor.lhs.false1089

lor.lhs.false1089:                                ; preds = %if.end1083
  %599 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind1090 = getelementptr inbounds %struct.options, %struct.options* %599, i32 0, i32 0
  %arrayidx1091 = getelementptr inbounds [128 x i8], [128 x i8]* %ind1090, i32 0, i32 88
  %600 = load i8, i8* %arrayidx1091, align 4
  %conv1092 = zext i8 %600 to i32
  %cmp1093 = icmp sgt i32 %conv1092, 3
  br i1 %cmp1093, label %if.then1095, label %if.else1166

if.then1095:                                      ; preds = %lor.lhs.false1089, %if.end1083
  store i32 0, i32* %startpos, align 4
  %601 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind1101 = getelementptr inbounds %struct.options, %struct.options* %601, i32 0, i32 0
  %arrayidx1102 = getelementptr inbounds [128 x i8], [128 x i8]* %ind1101, i32 0, i32 88
  %602 = load i8, i8* %arrayidx1102, align 4
  %conv1103 = zext i8 %602 to i32
  %cmp1104 = icmp sgt i32 %conv1103, 3
  %conv1105 = zext i1 %cmp1104 to i32
  store i32 %conv1105, i32* %all, align 4
  %603 = load i32, i32* %all, align 4
  %tobool1107 = icmp ne i32 %603, 0
  br i1 %tobool1107, label %cond.true1108, label %cond.false1116

cond.true1108:                                    ; preds = %if.then1095
  %604 = load %struct.options*, %struct.options** %ops.addr, align 4
  %args1109 = getelementptr inbounds %struct.options, %struct.options* %604, i32 0, i32 1
  %605 = load i8**, i8*** %args1109, align 4
  %606 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind1110 = getelementptr inbounds %struct.options, %struct.options* %606, i32 0, i32 0
  %arrayidx1111 = getelementptr inbounds [128 x i8], [128 x i8]* %ind1110, i32 0, i32 88
  %607 = load i8, i8* %arrayidx1111, align 4
  %conv1112 = zext i8 %607 to i32
  %shr1113 = ashr i32 %conv1112, 2
  %sub1114 = sub nsw i32 %shr1113, 1
  %arrayidx1115 = getelementptr inbounds i8*, i8** %605, i32 %sub1114
  %608 = load i8*, i8** %arrayidx1115, align 4
  br label %cond.end1124

cond.false1116:                                   ; preds = %if.then1095
  %609 = load %struct.options*, %struct.options** %ops.addr, align 4
  %args1117 = getelementptr inbounds %struct.options, %struct.options* %609, i32 0, i32 1
  %610 = load i8**, i8*** %args1117, align 4
  %611 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind1118 = getelementptr inbounds %struct.options, %struct.options* %611, i32 0, i32 0
  %arrayidx1119 = getelementptr inbounds [128 x i8], [128 x i8]* %ind1118, i32 0, i32 120
  %612 = load i8, i8* %arrayidx1119, align 4
  %conv1120 = zext i8 %612 to i32
  %shr1121 = ashr i32 %conv1120, 2
  %sub1122 = sub nsw i32 %shr1121, 1
  %arrayidx1123 = getelementptr inbounds i8*, i8** %610, i32 %sub1122
  %613 = load i8*, i8** %arrayidx1123, align 4
  br label %cond.end1124

cond.end1124:                                     ; preds = %cond.false1116, %cond.true1108
  %cond1125 = phi i8* [ %608, %cond.true1108 ], [ %613, %cond.false1116 ]
  store i8* %cond1125, i8** %xarg, align 4
  %614 = load i8*, i8** %xarg, align 4
  %call1126 = call i32 @zstrtol(i8* %614, i8** %eptr1097, i32 10)
  store i32 %call1126, i32* %expand, align 4
  %615 = load i8*, i8** %eptr1097, align 4
  %616 = load i8, i8* %615, align 1
  %conv1127 = sext i8 %616 to i32
  %tobool1128 = icmp ne i32 %conv1127, 0
  br i1 %tobool1128, label %if.then1132, label %lor.lhs.false1129

lor.lhs.false1129:                                ; preds = %cond.end1124
  %617 = load i32, i32* %expand, align 4
  %cmp1130 = icmp sle i32 %617, 0
  br i1 %cmp1130, label %if.then1132, label %if.end1133

if.then1132:                                      ; preds = %lor.lhs.false1129, %cond.end1124
  %618 = load i8*, i8** %name.addr, align 4
  %619 = load i8*, i8** %xarg, align 4
  call void (i8*, i8*, ...) @zwarnnam(i8* %618, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.109, i32 0, i32 0), i32 120, i8* %619)
  store i32 1, i32* %retval, align 4
  br label %return

if.end1133:                                       ; preds = %lor.lhs.false1129
  br label %for.cond1134

for.cond1134:                                     ; preds = %for.inc1162, %if.end1133
  %620 = load i8**, i8*** %args.addr, align 4
  %621 = load i8*, i8** %620, align 4
  %tobool1135 = icmp ne i8* %621, null
  br i1 %tobool1135, label %for.body1136, label %for.end1165

for.body1136:                                     ; preds = %for.cond1134
  %622 = load i8**, i8*** %args.addr, align 4
  %623 = load i8*, i8** %622, align 4
  %624 = load i32*, i32** %len, align 4
  %625 = load i32, i32* %624, align 4
  %626 = load i32, i32* %expand, align 4
  %627 = load i32, i32* %startpos, align 4
  %628 = load %struct._IO_FILE*, %struct._IO_FILE** %fout, align 4
  %629 = load i32, i32* %all, align 4
  %call1137 = call i32 @zexpandtabs(i8* %623, i32 %625, i32 %626, i32 %627, %struct._IO_FILE* %628, i32 %629)
  store i32 %call1137, i32* %startpos, align 4
  %630 = load i8**, i8*** %args.addr, align 4
  %arrayidx1138 = getelementptr inbounds i8*, i8** %630, i32 1
  %631 = load i8*, i8** %arrayidx1138, align 4
  %tobool1139 = icmp ne i8* %631, null
  br i1 %tobool1139, label %if.then1140, label %if.end1161

if.then1140:                                      ; preds = %for.body1136
  %632 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind1141 = getelementptr inbounds %struct.options, %struct.options* %632, i32 0, i32 0
  %arrayidx1142 = getelementptr inbounds [128 x i8], [128 x i8]* %ind1141, i32 0, i32 108
  %633 = load i8, i8* %arrayidx1142, align 4
  %conv1143 = zext i8 %633 to i32
  %cmp1144 = icmp ne i32 %conv1143, 0
  br i1 %cmp1144, label %if.then1146, label %if.else1148

if.then1146:                                      ; preds = %if.then1140
  %634 = load %struct._IO_FILE*, %struct._IO_FILE** %fout, align 4
  %call1147 = call i32 @fputc(i32 10, %struct._IO_FILE* %634)
  store i32 0, i32* %startpos, align 4
  br label %if.end1160

if.else1148:                                      ; preds = %if.then1140
  %635 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind1149 = getelementptr inbounds %struct.options, %struct.options* %635, i32 0, i32 0
  %arrayidx1150 = getelementptr inbounds [128 x i8], [128 x i8]* %ind1149, i32 0, i32 78
  %636 = load i8, i8* %arrayidx1150, align 2
  %conv1151 = zext i8 %636 to i32
  %cmp1152 = icmp ne i32 %conv1151, 0
  br i1 %cmp1152, label %if.then1154, label %if.else1156

if.then1154:                                      ; preds = %if.else1148
  %637 = load %struct._IO_FILE*, %struct._IO_FILE** %fout, align 4
  %call1155 = call i32 @fputc(i32 0, %struct._IO_FILE* %637)
  br label %if.end1159

if.else1156:                                      ; preds = %if.else1148
  %638 = load %struct._IO_FILE*, %struct._IO_FILE** %fout, align 4
  %call1157 = call i32 @fputc(i32 32, %struct._IO_FILE* %638)
  %639 = load i32, i32* %startpos, align 4
  %inc1158 = add nsw i32 %639, 1
  store i32 %inc1158, i32* %startpos, align 4
  br label %if.end1159

if.end1159:                                       ; preds = %if.else1156, %if.then1154
  br label %if.end1160

if.end1160:                                       ; preds = %if.end1159, %if.then1146
  br label %if.end1161

if.end1161:                                       ; preds = %if.end1160, %for.body1136
  br label %for.inc1162

for.inc1162:                                      ; preds = %if.end1161
  %640 = load i8**, i8*** %args.addr, align 4
  %incdec.ptr1163 = getelementptr inbounds i8*, i8** %640, i32 1
  store i8** %incdec.ptr1163, i8*** %args.addr, align 4
  %641 = load i32*, i32** %len, align 4
  %incdec.ptr1164 = getelementptr inbounds i32, i32* %641, i32 1
  store i32* %incdec.ptr1164, i32** %len, align 4
  br label %for.cond1134

for.end1165:                                      ; preds = %for.cond1134
  br label %if.end1195

if.else1166:                                      ; preds = %lor.lhs.false1089
  br label %for.cond1167

for.cond1167:                                     ; preds = %for.inc1191, %if.else1166
  %642 = load i8**, i8*** %args.addr, align 4
  %643 = load i8*, i8** %642, align 4
  %tobool1168 = icmp ne i8* %643, null
  br i1 %tobool1168, label %for.body1169, label %for.end1194

for.body1169:                                     ; preds = %for.cond1167
  %644 = load i8**, i8*** %args.addr, align 4
  %645 = load i8*, i8** %644, align 4
  %646 = load i32*, i32** %len, align 4
  %647 = load i32, i32* %646, align 4
  %648 = load %struct._IO_FILE*, %struct._IO_FILE** %fout, align 4
  %call1170 = call i32 @fwrite(i8* %645, i32 %647, i32 1, %struct._IO_FILE* %648)
  %649 = load i8**, i8*** %args.addr, align 4
  %arrayidx1171 = getelementptr inbounds i8*, i8** %649, i32 1
  %650 = load i8*, i8** %arrayidx1171, align 4
  %tobool1172 = icmp ne i8* %650, null
  br i1 %tobool1172, label %if.then1173, label %if.end1190

if.then1173:                                      ; preds = %for.body1169
  %651 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind1174 = getelementptr inbounds %struct.options, %struct.options* %651, i32 0, i32 0
  %arrayidx1175 = getelementptr inbounds [128 x i8], [128 x i8]* %ind1174, i32 0, i32 108
  %652 = load i8, i8* %arrayidx1175, align 4
  %conv1176 = zext i8 %652 to i32
  %cmp1177 = icmp ne i32 %conv1176, 0
  br i1 %cmp1177, label %cond.true1179, label %cond.false1180

cond.true1179:                                    ; preds = %if.then1173
  br label %cond.end1187

cond.false1180:                                   ; preds = %if.then1173
  %653 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind1181 = getelementptr inbounds %struct.options, %struct.options* %653, i32 0, i32 0
  %arrayidx1182 = getelementptr inbounds [128 x i8], [128 x i8]* %ind1181, i32 0, i32 78
  %654 = load i8, i8* %arrayidx1182, align 2
  %conv1183 = zext i8 %654 to i32
  %cmp1184 = icmp ne i32 %conv1183, 0
  %cond1186 = select i1 %cmp1184, i32 0, i32 32
  br label %cond.end1187

cond.end1187:                                     ; preds = %cond.false1180, %cond.true1179
  %cond1188 = phi i32 [ 10, %cond.true1179 ], [ %cond1186, %cond.false1180 ]
  %655 = load %struct._IO_FILE*, %struct._IO_FILE** %fout, align 4
  %call1189 = call i32 @fputc(i32 %cond1188, %struct._IO_FILE* %655)
  br label %if.end1190

if.end1190:                                       ; preds = %cond.end1187, %for.body1169
  br label %for.inc1191

for.inc1191:                                      ; preds = %if.end1190
  %656 = load i8**, i8*** %args.addr, align 4
  %incdec.ptr1192 = getelementptr inbounds i8*, i8** %656, i32 1
  store i8** %incdec.ptr1192, i8*** %args.addr, align 4
  %657 = load i32*, i32** %len, align 4
  %incdec.ptr1193 = getelementptr inbounds i32, i32* %657, i32 1
  store i32* %incdec.ptr1193, i32** %len, align 4
  br label %for.cond1167

for.end1194:                                      ; preds = %for.cond1167
  br label %if.end1195

if.end1195:                                       ; preds = %for.end1194, %for.end1165
  %658 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind1196 = getelementptr inbounds %struct.options, %struct.options* %658, i32 0, i32 0
  %arrayidx1197 = getelementptr inbounds [128 x i8], [128 x i8]* %ind1196, i32 0, i32 110
  %659 = load i8, i8* %arrayidx1197, align 2
  %conv1198 = zext i8 %659 to i32
  %cmp1199 = icmp ne i32 %conv1198, 0
  br i1 %cmp1199, label %if.end1223, label %lor.lhs.false1201

lor.lhs.false1201:                                ; preds = %if.end1195
  %660 = load i32, i32* %nnl, align 4
  %tobool1202 = icmp ne i32 %660, 0
  br i1 %tobool1202, label %if.end1223, label %lor.lhs.false1203

lor.lhs.false1203:                                ; preds = %lor.lhs.false1201
  %661 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind1204 = getelementptr inbounds %struct.options, %struct.options* %661, i32 0, i32 0
  %arrayidx1205 = getelementptr inbounds [128 x i8], [128 x i8]* %ind1204, i32 0, i32 118
  %662 = load i8, i8* %arrayidx1205, align 2
  %conv1206 = zext i8 %662 to i32
  %cmp1207 = icmp ne i32 %conv1206, 0
  br i1 %cmp1207, label %land.lhs.true1209, label %if.then1215

land.lhs.true1209:                                ; preds = %lor.lhs.false1203
  %663 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind1210 = getelementptr inbounds %struct.options, %struct.options* %663, i32 0, i32 0
  %arrayidx1211 = getelementptr inbounds [128 x i8], [128 x i8]* %ind1210, i32 0, i32 108
  %664 = load i8, i8* %arrayidx1211, align 4
  %conv1212 = zext i8 %664 to i32
  %cmp1213 = icmp ne i32 %conv1212, 0
  br i1 %cmp1213, label %if.then1215, label %if.end1223

if.then1215:                                      ; preds = %land.lhs.true1209, %lor.lhs.false1203
  %665 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind1216 = getelementptr inbounds %struct.options, %struct.options* %665, i32 0, i32 0
  %arrayidx1217 = getelementptr inbounds [128 x i8], [128 x i8]* %ind1216, i32 0, i32 78
  %666 = load i8, i8* %arrayidx1217, align 2
  %conv1218 = zext i8 %666 to i32
  %cmp1219 = icmp ne i32 %conv1218, 0
  %cond1221 = select i1 %cmp1219, i32 0, i32 10
  %667 = load %struct._IO_FILE*, %struct._IO_FILE** %fout, align 4
  %call1222 = call i32 @fputc(i32 %cond1221, %struct._IO_FILE* %667)
  br label %if.end1223

if.end1223:                                       ; preds = %if.then1215, %land.lhs.true1209, %lor.lhs.false1201, %if.end1195
  %668 = load %struct._IO_FILE*, %struct._IO_FILE** %fout, align 4
  %669 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 4
  %cmp1224 = icmp ne %struct._IO_FILE* %668, %669
  br i1 %cmp1224, label %land.lhs.true1226, label %if.end1255

land.lhs.true1226:                                ; preds = %if.end1223
  %670 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind1227 = getelementptr inbounds %struct.options, %struct.options* %670, i32 0, i32 0
  %arrayidx1228 = getelementptr inbounds [128 x i8], [128 x i8]* %ind1227, i32 0, i32 122
  %671 = load i8, i8* %arrayidx1228, align 2
  %conv1229 = zext i8 %671 to i32
  %cmp1230 = icmp ne i32 %conv1229, 0
  br i1 %cmp1230, label %land.lhs.true1244, label %lor.lhs.false1232

lor.lhs.false1232:                                ; preds = %land.lhs.true1226
  %672 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind1233 = getelementptr inbounds %struct.options, %struct.options* %672, i32 0, i32 0
  %arrayidx1234 = getelementptr inbounds [128 x i8], [128 x i8]* %ind1233, i32 0, i32 115
  %673 = load i8, i8* %arrayidx1234, align 1
  %conv1235 = zext i8 %673 to i32
  %cmp1236 = icmp ne i32 %conv1235, 0
  br i1 %cmp1236, label %land.lhs.true1244, label %lor.lhs.false1238

lor.lhs.false1238:                                ; preds = %lor.lhs.false1232
  %674 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind1239 = getelementptr inbounds %struct.options, %struct.options* %674, i32 0, i32 0
  %arrayidx1240 = getelementptr inbounds [128 x i8], [128 x i8]* %ind1239, i32 0, i32 118
  %675 = load i8, i8* %arrayidx1240, align 2
  %conv1241 = zext i8 %675 to i32
  %cmp1242 = icmp ne i32 %conv1241, 0
  br i1 %cmp1242, label %land.lhs.true1244, label %if.end1255

land.lhs.true1244:                                ; preds = %lor.lhs.false1238, %lor.lhs.false1232, %land.lhs.true1226
  %676 = load %struct._IO_FILE*, %struct._IO_FILE** %fout, align 4
  %call1245 = call i32 @fclose(%struct._IO_FILE* %676)
  %cmp1246 = icmp eq i32 %call1245, 0
  br i1 %cmp1246, label %cond.true1248, label %cond.false1249

cond.true1248:                                    ; preds = %land.lhs.true1244
  %677 = load i32, i32* %mcount, align 4
  br label %cond.end1250

cond.false1249:                                   ; preds = %land.lhs.true1244
  br label %cond.end1250

cond.end1250:                                     ; preds = %cond.false1249, %cond.true1248
  %cond1251 = phi i32 [ %677, %cond.true1248 ], [ -1, %cond.false1249 ]
  store i32 %cond1251, i32* %rcount, align 4
  %cmp1252 = icmp eq i32 %cond1251, -1
  br i1 %cmp1252, label %if.then1254, label %if.end1255

if.then1254:                                      ; preds = %cond.end1250
  store i32 1, i32* %ret, align 4
  br label %if.end1255

if.end1255:                                       ; preds = %if.then1254, %cond.end1250, %lor.lhs.false1238, %if.end1223
  %678 = load %struct._IO_FILE*, %struct._IO_FILE** %fout, align 4
  %679 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 4
  %cmp1256 = icmp ne %struct._IO_FILE* %678, %679
  br i1 %cmp1256, label %land.lhs.true1258, label %cond.false1277

land.lhs.true1258:                                ; preds = %if.end1255
  %680 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind1259 = getelementptr inbounds %struct.options, %struct.options* %680, i32 0, i32 0
  %arrayidx1260 = getelementptr inbounds [128 x i8], [128 x i8]* %ind1259, i32 0, i32 122
  %681 = load i8, i8* %arrayidx1260, align 2
  %conv1261 = zext i8 %681 to i32
  %cmp1262 = icmp ne i32 %conv1261, 0
  br i1 %cmp1262, label %cond.true1276, label %lor.lhs.false1264

lor.lhs.false1264:                                ; preds = %land.lhs.true1258
  %682 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind1265 = getelementptr inbounds %struct.options, %struct.options* %682, i32 0, i32 0
  %arrayidx1266 = getelementptr inbounds [128 x i8], [128 x i8]* %ind1265, i32 0, i32 115
  %683 = load i8, i8* %arrayidx1266, align 1
  %conv1267 = zext i8 %683 to i32
  %cmp1268 = icmp ne i32 %conv1267, 0
  br i1 %cmp1268, label %cond.true1276, label %lor.lhs.false1270

lor.lhs.false1270:                                ; preds = %lor.lhs.false1264
  %684 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind1271 = getelementptr inbounds %struct.options, %struct.options* %684, i32 0, i32 0
  %arrayidx1272 = getelementptr inbounds [128 x i8], [128 x i8]* %ind1271, i32 0, i32 118
  %685 = load i8, i8* %arrayidx1272, align 2
  %conv1273 = zext i8 %685 to i32
  %cmp1274 = icmp ne i32 %conv1273, 0
  br i1 %cmp1274, label %cond.true1276, label %cond.false1277

cond.true1276:                                    ; preds = %lor.lhs.false1270, %lor.lhs.false1264, %land.lhs.true1258
  br i1 true, label %lor.lhs.false1292, label %if.then1294

cond.false1277:                                   ; preds = %lor.lhs.false1270, %if.end1255
  %686 = load %struct._IO_FILE*, %struct._IO_FILE** %fout, align 4
  %687 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 4
  %cmp1278 = icmp eq %struct._IO_FILE* %686, %687
  br i1 %cmp1278, label %cond.true1280, label %cond.false1288

cond.true1280:                                    ; preds = %cond.false1277
  %688 = load %struct._IO_FILE*, %struct._IO_FILE** %fout, align 4
  %call1281 = call i32 @fflush(%struct._IO_FILE* %688)
  %cmp1282 = icmp eq i32 %call1281, 0
  br i1 %cmp1282, label %lor.lhs.false1292, label %lor.lhs.false1284

lor.lhs.false1284:                                ; preds = %cond.true1280
  %call1285 = call i32* @__errno_location()
  %689 = load i32, i32* %call1285, align 4
  %cmp1286 = icmp eq i32 %689, 9
  br i1 %cmp1286, label %lor.lhs.false1292, label %if.then1294

cond.false1288:                                   ; preds = %cond.false1277
  %690 = load %struct._IO_FILE*, %struct._IO_FILE** %fout, align 4
  %call1289 = call i32 @fclose(%struct._IO_FILE* %690)
  %cmp1290 = icmp eq i32 %call1289, 0
  br i1 %cmp1290, label %lor.lhs.false1292, label %if.then1294

lor.lhs.false1292:                                ; preds = %cond.false1288, %lor.lhs.false1284, %cond.true1280, %cond.true1276
  %691 = load i32, i32* %ret, align 4
  %tobool1293 = icmp ne i32 %691, 0
  br i1 %tobool1293, label %if.then1294, label %if.end1296

if.then1294:                                      ; preds = %lor.lhs.false1292, %cond.false1288, %lor.lhs.false1284, %cond.true1276
  %692 = load i8*, i8** %name.addr, align 4
  %call1295 = call i32* @__errno_location()
  %693 = load i32, i32* %call1295, align 4
  call void (i8*, i8*, ...) @zwarnnam(i8* %692, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.107, i32 0, i32 0), i32 %693)
  store i32 1, i32* %ret, align 4
  br label %if.end1296

if.end1296:                                       ; preds = %if.then1294, %lor.lhs.false1292
  %694 = load i8*, i8** %buf, align 4
  %tobool1297 = icmp ne i8* %694, null
  br i1 %tobool1297, label %if.then1298, label %if.end1336

if.then1298:                                      ; preds = %if.end1296
  %695 = load i32, i32* @queueing_enabled, align 4
  %inc1299 = add nsw i32 %695, 1
  store i32 %inc1299, i32* @queueing_enabled, align 4
  %696 = load i32, i32* %ret, align 4
  %tobool1300 = icmp ne i32 %696, 0
  br i1 %tobool1300, label %if.then1301, label %if.else1302

if.then1301:                                      ; preds = %if.then1298
  %697 = load i8*, i8** %buf, align 4
  call void @free(i8* %697)
  br label %if.end1312

if.else1302:                                      ; preds = %if.then1298
  %698 = load %struct.options*, %struct.options** %ops.addr, align 4
  %args1303 = getelementptr inbounds %struct.options, %struct.options* %698, i32 0, i32 1
  %699 = load i8**, i8*** %args1303, align 4
  %700 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind1304 = getelementptr inbounds %struct.options, %struct.options* %700, i32 0, i32 0
  %arrayidx1305 = getelementptr inbounds [128 x i8], [128 x i8]* %ind1304, i32 0, i32 118
  %701 = load i8, i8* %arrayidx1305, align 2
  %conv1306 = zext i8 %701 to i32
  %shr1307 = ashr i32 %conv1306, 2
  %sub1308 = sub nsw i32 %shr1307, 1
  %arrayidx1309 = getelementptr inbounds i8*, i8** %699, i32 %sub1308
  %702 = load i8*, i8** %arrayidx1309, align 4
  %703 = load i8*, i8** %buf, align 4
  %704 = load i32, i32* %rcount, align 4
  %call1310 = call i8* @metafy(i8* %703, i32 %704, i32 0)
  %call1311 = call %struct.param* @setsparam(i8* %702, i8* %call1310)
  br label %if.end1312

if.end1312:                                       ; preds = %if.else1302, %if.then1301
  br label %do.body1313

do.body1313:                                      ; preds = %if.end1312
  %705 = load i32, i32* @queueing_enabled, align 4
  %dec1314 = add nsw i32 %705, -1
  store i32 %dec1314, i32* @queueing_enabled, align 4
  %tobool1315 = icmp ne i32 %dec1314, 0
  br i1 %tobool1315, label %if.end1333, label %if.then1316

if.then1316:                                      ; preds = %do.body1313
  br label %do.body1317

do.body1317:                                      ; preds = %if.then1316
  br label %while.cond1318

while.cond1318:                                   ; preds = %while.body1321, %do.body1317
  %706 = load i32, i32* @queue_front, align 4
  %707 = load i32, i32* @queue_rear, align 4
  %cmp1319 = icmp ne i32 %706, %707
  br i1 %cmp1319, label %while.body1321, label %while.end1330

while.body1321:                                   ; preds = %while.cond1318
  %708 = load i32, i32* @queue_front, align 4
  %add1324 = add nsw i32 %708, 1
  %rem1325 = srem i32 %add1324, 128
  store i32 %rem1325, i32* @queue_front, align 4
  %709 = load i32, i32* @queue_front, align 4
  %arrayidx1326 = getelementptr inbounds [128 x %struct.__sigset_t], [128 x %struct.__sigset_t]* @signal_mask_queue, i32 0, i32 %709
  call void @signal_setmask(%struct.__sigset_t* sret %tmp1327, %struct.__sigset_t* byval align 4 %arrayidx1326)
  %710 = bitcast %struct.__sigset_t* %oset1323 to i8*
  %711 = bitcast %struct.__sigset_t* %tmp1327 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %710, i8* %711, i32 128, i32 4, i1 false)
  %712 = load i32, i32* @queue_front, align 4
  %arrayidx1328 = getelementptr inbounds [128 x i32], [128 x i32]* @signal_queue, i32 0, i32 %712
  %713 = load i32, i32* %arrayidx1328, align 4
  call void @zhandler(i32 %713)
  call void @signal_setmask(%struct.__sigset_t* sret %tmp1329, %struct.__sigset_t* byval align 4 %oset1323)
  br label %while.cond1318

while.end1330:                                    ; preds = %while.cond1318
  br label %do.end1332

do.end1332:                                       ; preds = %while.end1330
  br label %if.end1333

if.end1333:                                       ; preds = %do.end1332, %do.body1313
  br label %do.end1335

do.end1335:                                       ; preds = %if.end1333
  br label %if.end1336

if.end1336:                                       ; preds = %do.end1335, %if.end1296
  %714 = load i32, i32* %ret, align 4
  store i32 %714, i32* %retval, align 4
  br label %return

if.end1337:                                       ; preds = %if.end883
  %715 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind1338 = getelementptr inbounds %struct.options, %struct.options* %715, i32 0, i32 0
  %arrayidx1339 = getelementptr inbounds [128 x i8], [128 x i8]* %ind1338, i32 0, i32 118
  %716 = load i8, i8* %arrayidx1339, align 2
  %conv1340 = zext i8 %716 to i32
  %cmp1341 = icmp ne i32 %conv1340, 0
  br i1 %cmp1341, label %if.then1343, label %if.end1362

if.then1343:                                      ; preds = %if.end1337
  %717 = load %struct.options*, %struct.options** %ops.addr, align 4
  %args1346 = getelementptr inbounds %struct.options, %struct.options* %717, i32 0, i32 1
  %718 = load i8**, i8*** %args1346, align 4
  %719 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind1347 = getelementptr inbounds %struct.options, %struct.options* %719, i32 0, i32 0
  %arrayidx1348 = getelementptr inbounds [128 x i8], [128 x i8]* %ind1347, i32 0, i32 118
  %720 = load i8, i8* %arrayidx1348, align 2
  %conv1349 = zext i8 %720 to i32
  %shr1350 = ashr i32 %conv1349, 2
  %sub1351 = sub nsw i32 %shr1350, 1
  %arrayidx1352 = getelementptr inbounds i8*, i8** %718, i32 %sub1351
  %721 = load i8*, i8** %arrayidx1352, align 4
  store i8* %721, i8** %s, align 4
  %call1354 = call %struct.value* @getvalue(%struct.value* %vbuf, i8** %s, i32 0)
  store %struct.value* %call1354, %struct.value** %v, align 4
  %722 = load %struct.value*, %struct.value** %v, align 4
  %tobool1355 = icmp ne %struct.value* %722, null
  br i1 %tobool1355, label %land.rhs1356, label %land.end1361

land.rhs1356:                                     ; preds = %if.then1343
  %723 = load %struct.value*, %struct.value** %v, align 4
  %pm = getelementptr inbounds %struct.value, %struct.value* %723, i32 0, i32 1
  %724 = load %struct.param*, %struct.param** %pm, align 4
  %node1357 = getelementptr inbounds %struct.param, %struct.param* %724, i32 0, i32 0
  %flags1358 = getelementptr inbounds %struct.hashnode, %struct.hashnode* %node1357, i32 0, i32 2
  %725 = load i32, i32* %flags1358, align 8
  %and = and i32 %725, 31
  %cmp1359 = icmp eq i32 %and, 1
  br label %land.end1361

land.end1361:                                     ; preds = %land.rhs1356, %if.then1343
  %726 = phi i1 [ false, %if.then1343 ], [ %cmp1359, %land.rhs1356 ]
  %land.ext = zext i1 %726 to i32
  store i32 %land.ext, i32* %visarr, align 4
  br label %if.end1362

if.end1362:                                       ; preds = %land.end1361, %if.end1337
  %arraydecay = getelementptr inbounds [14 x i8], [14 x i8]* %spec, i32 0, i32 0
  store i8 37, i8* %arraydecay, align 1
  %727 = load i8**, i8*** %args.addr, align 4
  store i8** %727, i8*** %argp, align 4
  br label %do.body1363

do.body1363:                                      ; preds = %land.end2048, %if.end1362
  %728 = load i32, i32* %count, align 4
  store i32 %728, i32* %rcount, align 4
  %729 = load i8**, i8*** %argp, align 4
  %730 = load i8**, i8*** %args.addr, align 4
  %cmp1364 = icmp ugt i8** %729, %730
  br i1 %cmp1364, label %land.lhs.true1366, label %if.end1378

land.lhs.true1366:                                ; preds = %do.body1363
  %731 = load i32, i32* %visarr, align 4
  %tobool1367 = icmp ne i32 %731, 0
  br i1 %tobool1367, label %if.then1368, label %if.end1378

if.then1368:                                      ; preds = %land.lhs.true1366
  %732 = load i32*, i32** %splits, align 4
  %tobool1369 = icmp ne i32* %732, null
  br i1 %tobool1369, label %if.end1376, label %if.then1370

if.then1370:                                      ; preds = %if.then1368
  %733 = load i8**, i8*** %args.addr, align 4
  %call1371 = call i32 @arrlen(i8** %733)
  %734 = load i8**, i8*** %argp, align 4
  %735 = load i8**, i8*** %args.addr, align 4
  %sub.ptr.lhs.cast = ptrtoint i8** %734 to i32
  %sub.ptr.rhs.cast = ptrtoint i8** %735 to i32
  %sub.ptr.sub = sub i32 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i32 %sub.ptr.sub, 4
  %div1372 = sdiv i32 %call1371, %sub.ptr.div
  %add1373 = add nsw i32 %div1372, 1
  %mul1374 = mul i32 4, %add1373
  %call1375 = call i8* @zhalloc(i32 %mul1374)
  %736 = bitcast i8* %call1375 to i32*
  store i32* %736, i32** %splits, align 4
  store i32* %736, i32** %cursplit, align 4
  br label %if.end1376

if.end1376:                                       ; preds = %if.then1370, %if.then1368
  %737 = load i32, i32* %count, align 4
  %738 = load i32*, i32** %cursplit, align 4
  %incdec.ptr1377 = getelementptr inbounds i32, i32* %738, i32 1
  store i32* %incdec.ptr1377, i32** %cursplit, align 4
  store i32 %737, i32* %738, align 4
  br label %if.end1378

if.end1378:                                       ; preds = %if.end1376, %land.lhs.true1366, %do.body1363
  %739 = load i32, i32* %maxarg, align 4
  %tobool1379 = icmp ne i32 %739, 0
  br i1 %tobool1379, label %if.then1380, label %if.end1383

if.then1380:                                      ; preds = %if.end1378
  %740 = load i32, i32* %maxarg, align 4
  %741 = load i8**, i8*** %first, align 4
  %add.ptr1381 = getelementptr inbounds i8*, i8** %741, i32 %740
  store i8** %add.ptr1381, i8*** %first, align 4
  %742 = load i32, i32* %maxarg, align 4
  %743 = load i32, i32* %argc, align 4
  %sub1382 = sub nsw i32 %743, %742
  store i32 %sub1382, i32* %argc, align 4
  store i32 0, i32* %maxarg, align 4
  br label %if.end1383

if.end1383:                                       ; preds = %if.then1380, %if.end1378
  %744 = load i8*, i8** %fmt, align 4
  store i8* %744, i8** %c, align 4
  br label %for.cond1384

for.cond1384:                                     ; preds = %for.inc2027, %if.end1383
  %745 = load i8*, i8** %c, align 4
  %746 = load i8*, i8** %fmt, align 4
  %sub.ptr.lhs.cast1385 = ptrtoint i8* %745 to i32
  %sub.ptr.rhs.cast1386 = ptrtoint i8* %746 to i32
  %sub.ptr.sub1387 = sub i32 %sub.ptr.lhs.cast1385, %sub.ptr.rhs.cast1386
  %747 = load i32, i32* %flen, align 4
  %cmp1388 = icmp slt i32 %sub.ptr.sub1387, %747
  br i1 %cmp1388, label %for.body1390, label %for.end2029

for.body1390:                                     ; preds = %for.cond1384
  %748 = load i8*, i8** %c, align 4
  %749 = load i8, i8* %748, align 1
  %conv1391 = sext i8 %749 to i32
  %cmp1392 = icmp ne i32 %conv1391, 37
  br i1 %cmp1392, label %if.then1394, label %if.end1398

if.then1394:                                      ; preds = %for.body1390
  %750 = load i8*, i8** %c, align 4
  %751 = load i8, i8* %750, align 1
  %conv1395 = sext i8 %751 to i32
  %752 = load %struct._IO_FILE*, %struct._IO_FILE** %fout, align 4
  %call1396 = call i32 @putc(i32 %conv1395, %struct._IO_FILE* %752)
  %753 = load i32, i32* %count, align 4
  %inc1397 = add i32 %753, 1
  store i32 %inc1397, i32* %count, align 4
  br label %for.inc2027

if.end1398:                                       ; preds = %for.body1390
  %754 = load i8*, i8** %c, align 4
  %incdec.ptr1399 = getelementptr inbounds i8, i8* %754, i32 1
  store i8* %incdec.ptr1399, i8** %c, align 4
  store i8* %754, i8** %start, align 4
  %755 = load i8*, i8** %c, align 4
  %756 = load i8, i8* %755, align 1
  %conv1400 = sext i8 %756 to i32
  %cmp1401 = icmp eq i32 %conv1400, 37
  br i1 %cmp1401, label %if.then1403, label %if.end1406

if.then1403:                                      ; preds = %if.end1398
  %757 = load %struct._IO_FILE*, %struct._IO_FILE** %fout, align 4
  %call1404 = call i32 @putc(i32 37, %struct._IO_FILE* %757)
  %758 = load i32, i32* %count, align 4
  %inc1405 = add i32 %758, 1
  store i32 %inc1405, i32* %count, align 4
  br label %for.inc2027

if.end1406:                                       ; preds = %if.end1398
  store i32 -1, i32* %prec, align 4
  store i32 -1, i32* %type, align 4
  store i32 0, i32* %width, align 4
  store i8* null, i8** %curarg, align 4
  %arraydecay1407 = getelementptr inbounds [14 x i8], [14 x i8]* %spec, i32 0, i32 0
  %add.ptr1408 = getelementptr inbounds i8, i8* %arraydecay1407, i32 1
  store i8* %add.ptr1408, i8** %d, align 4
  %759 = load i8*, i8** %c, align 4
  %760 = load i8, i8* %759, align 1
  %conv1409 = sext i8 %760 to i32
  %cmp1410 = icmp sge i32 %conv1409, 49
  br i1 %cmp1410, label %land.lhs.true1412, label %if.end1450

land.lhs.true1412:                                ; preds = %if.end1406
  %761 = load i8*, i8** %c, align 4
  %762 = load i8, i8* %761, align 1
  %conv1413 = sext i8 %762 to i32
  %cmp1414 = icmp sle i32 %conv1413, 57
  br i1 %cmp1414, label %if.then1416, label %if.end1450

if.then1416:                                      ; preds = %land.lhs.true1412
  %763 = load i8*, i8** %c, align 4
  %call1417 = call i32 @strtoul(i8* %763, i8** %endptr, i32 0)
  store i32 %call1417, i32* %narg, align 4
  %764 = load i8*, i8** %endptr, align 4
  %765 = load i8, i8* %764, align 1
  %conv1418 = sext i8 %765 to i32
  %cmp1419 = icmp eq i32 %conv1418, 36
  br i1 %cmp1419, label %if.then1421, label %if.end1449

if.then1421:                                      ; preds = %if.then1416
  %766 = load i8*, i8** %endptr, align 4
  %add.ptr1422 = getelementptr inbounds i8, i8* %766, i32 1
  store i8* %add.ptr1422, i8** %c, align 4
  %767 = load i32, i32* %narg, align 4
  %768 = load i32, i32* %argc, align 4
  %cmp1423 = icmp sgt i32 %767, %768
  br i1 %cmp1423, label %if.then1425, label %if.else1434

if.then1425:                                      ; preds = %if.then1421
  %769 = load i8*, i8** %name.addr, align 4
  %770 = load i32, i32* %narg, align 4
  call void (i8*, i8*, ...) @zwarnnam(i8* %769, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.110, i32 0, i32 0), i32 %770)
  %771 = load %struct._IO_FILE*, %struct._IO_FILE** %fout, align 4
  %772 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 4
  %cmp1426 = icmp ne %struct._IO_FILE* %771, %772
  br i1 %cmp1426, label %if.then1428, label %if.end1430

if.then1428:                                      ; preds = %if.then1425
  %773 = load %struct._IO_FILE*, %struct._IO_FILE** %fout, align 4
  %call1429 = call i32 @fclose(%struct._IO_FILE* %773)
  br label %if.end1430

if.end1430:                                       ; preds = %if.then1428, %if.then1425
  %774 = load i8*, i8** %buf, align 4
  %tobool1431 = icmp ne i8* %774, null
  br i1 %tobool1431, label %if.then1432, label %if.end1433

if.then1432:                                      ; preds = %if.end1430
  %775 = load i8*, i8** %buf, align 4
  call void @free(i8* %775)
  br label %if.end1433

if.end1433:                                       ; preds = %if.then1432, %if.end1430
  store i32 1, i32* %retval, align 4
  br label %return

if.else1434:                                      ; preds = %if.then1421
  %776 = load i32, i32* %narg, align 4
  %777 = load i32, i32* %maxarg, align 4
  %cmp1435 = icmp sgt i32 %776, %777
  br i1 %cmp1435, label %if.then1437, label %if.end1438

if.then1437:                                      ; preds = %if.else1434
  %778 = load i32, i32* %narg, align 4
  store i32 %778, i32* %maxarg, align 4
  br label %if.end1438

if.end1438:                                       ; preds = %if.then1437, %if.else1434
  %779 = load i8**, i8*** %first, align 4
  %780 = load i32, i32* %narg, align 4
  %add.ptr1439 = getelementptr inbounds i8*, i8** %779, i32 %780
  %add.ptr1440 = getelementptr inbounds i8*, i8** %add.ptr1439, i32 -1
  %781 = load i8*, i8** %add.ptr1440, align 4
  store i8* %781, i8** %curarg, align 4
  %782 = load i32*, i32** %len, align 4
  %783 = load i8**, i8*** %first, align 4
  %784 = load i8**, i8*** %args.addr, align 4
  %sub.ptr.lhs.cast1441 = ptrtoint i8** %783 to i32
  %sub.ptr.rhs.cast1442 = ptrtoint i8** %784 to i32
  %sub.ptr.sub1443 = sub i32 %sub.ptr.lhs.cast1441, %sub.ptr.rhs.cast1442
  %sub.ptr.div1444 = sdiv exact i32 %sub.ptr.sub1443, 4
  %785 = load i32, i32* %narg, align 4
  %add1445 = add nsw i32 %sub.ptr.div1444, %785
  %sub1446 = sub nsw i32 %add1445, 1
  %arrayidx1447 = getelementptr inbounds i32, i32* %782, i32 %sub1446
  %786 = load i32, i32* %arrayidx1447, align 4
  store i32 %786, i32* %curlen, align 4
  br label %if.end1448

if.end1448:                                       ; preds = %if.end1438
  br label %if.end1449

if.end1449:                                       ; preds = %if.end1448, %if.then1416
  br label %if.end1450

if.end1450:                                       ; preds = %if.end1449, %land.lhs.true1412, %if.end1406
  %arraydecay1451 = getelementptr inbounds [6 x i32], [6 x i32]* %flags, i32 0, i32 0
  %787 = bitcast i32* %arraydecay1451 to i8*
  call void @llvm.memset.p0i8.i32(i8* %787, i8 0, i32 24, i32 4, i1 false)
  br label %while.cond1452

while.cond1452:                                   ; preds = %if.end1473, %if.end1450
  %788 = load i8*, i8** %c, align 4
  %789 = load i8, i8* %788, align 1
  %conv1453 = sext i8 %789 to i32
  %tobool1454 = icmp ne i32 %conv1453, 0
  br i1 %tobool1454, label %land.rhs1455, label %land.end1459

land.rhs1455:                                     ; preds = %while.cond1452
  %790 = load i8*, i8** %flagch, align 4
  %791 = load i8*, i8** %c, align 4
  %792 = load i8, i8* %791, align 1
  %conv1456 = sext i8 %792 to i32
  %call1457 = call i8* @strchr(i8* %790, i32 %conv1456)
  store i8* %call1457, i8** %flag, align 4
  %tobool1458 = icmp ne i8* %call1457, null
  br label %land.end1459

land.end1459:                                     ; preds = %land.rhs1455, %while.cond1452
  %793 = phi i1 [ false, %while.cond1452 ], [ %tobool1458, %land.rhs1455 ]
  br i1 %793, label %while.body1461, label %while.end1475

while.body1461:                                   ; preds = %land.end1459
  %794 = load i8*, i8** %flag, align 4
  %795 = load i8*, i8** %flagch, align 4
  %sub.ptr.lhs.cast1462 = ptrtoint i8* %794 to i32
  %sub.ptr.rhs.cast1463 = ptrtoint i8* %795 to i32
  %sub.ptr.sub1464 = sub i32 %sub.ptr.lhs.cast1462, %sub.ptr.rhs.cast1463
  %arrayidx1465 = getelementptr inbounds [6 x i32], [6 x i32]* %flags, i32 0, i32 %sub.ptr.sub1464
  %796 = load i32, i32* %arrayidx1465, align 4
  %tobool1466 = icmp ne i32 %796, 0
  br i1 %tobool1466, label %if.end1473, label %if.then1467

if.then1467:                                      ; preds = %while.body1461
  %797 = load i8*, i8** %flag, align 4
  %798 = load i8*, i8** %flagch, align 4
  %sub.ptr.lhs.cast1468 = ptrtoint i8* %797 to i32
  %sub.ptr.rhs.cast1469 = ptrtoint i8* %798 to i32
  %sub.ptr.sub1470 = sub i32 %sub.ptr.lhs.cast1468, %sub.ptr.rhs.cast1469
  %arrayidx1471 = getelementptr inbounds [6 x i32], [6 x i32]* %flags, i32 0, i32 %sub.ptr.sub1470
  store i32 1, i32* %arrayidx1471, align 4
  %799 = load i8*, i8** %c, align 4
  %800 = load i8, i8* %799, align 1
  %801 = load i8*, i8** %d, align 4
  %incdec.ptr1472 = getelementptr inbounds i8, i8* %801, i32 1
  store i8* %incdec.ptr1472, i8** %d, align 4
  store i8 %800, i8* %801, align 1
  br label %if.end1473

if.end1473:                                       ; preds = %if.then1467, %while.body1461
  %802 = load i8*, i8** %c, align 4
  %incdec.ptr1474 = getelementptr inbounds i8, i8* %802, i32 1
  store i8* %incdec.ptr1474, i8** %c, align 4
  br label %while.cond1452

while.end1475:                                    ; preds = %land.end1459
  %803 = load i8*, i8** %c, align 4
  %804 = load i8, i8* %803, align 1
  %idxprom = zext i8 %804 to i32
  %arrayidx1476 = getelementptr inbounds [256 x i16], [256 x i16]* @typtab, i32 0, i32 %idxprom
  %805 = load i16, i16* %arrayidx1476, align 2
  %conv1477 = sext i16 %805 to i32
  %and1478 = and i32 %conv1477, 1
  %tobool1479 = icmp ne i32 %and1478, 0
  br i1 %tobool1479, label %if.then1480, label %if.else1482

if.then1480:                                      ; preds = %while.end1475
  %806 = load i8*, i8** %c, align 4
  %call1481 = call i32 @strtoul(i8* %806, i8** %endptr, i32 0)
  store i32 %call1481, i32* %width, align 4
  %807 = load i8*, i8** %endptr, align 4
  store i8* %807, i8** %c, align 4
  br label %if.end1534

if.else1482:                                      ; preds = %while.end1475
  %808 = load i8*, i8** %c, align 4
  %809 = load i8, i8* %808, align 1
  %conv1483 = sext i8 %809 to i32
  %cmp1484 = icmp eq i32 %conv1483, 42
  br i1 %cmp1484, label %if.then1486, label %if.end1533

if.then1486:                                      ; preds = %if.else1482
  %810 = load i8*, i8** %c, align 4
  %incdec.ptr1487 = getelementptr inbounds i8, i8* %810, i32 1
  store i8* %incdec.ptr1487, i8** %c, align 4
  %811 = load i8, i8* %incdec.ptr1487, align 1
  %idxprom1488 = zext i8 %811 to i32
  %arrayidx1489 = getelementptr inbounds [256 x i16], [256 x i16]* @typtab, i32 0, i32 %idxprom1488
  %812 = load i16, i16* %arrayidx1489, align 2
  %conv1490 = sext i16 %812 to i32
  %and1491 = and i32 %conv1490, 1
  %tobool1492 = icmp ne i32 %and1491, 0
  br i1 %tobool1492, label %if.then1493, label %if.end1523

if.then1493:                                      ; preds = %if.then1486
  %813 = load i8*, i8** %c, align 4
  %call1494 = call i32 @strtoul(i8* %813, i8** %endptr, i32 0)
  store i32 %call1494, i32* %narg, align 4
  %814 = load i8*, i8** %endptr, align 4
  %815 = load i8, i8* %814, align 1
  %conv1495 = sext i8 %815 to i32
  %cmp1496 = icmp eq i32 %conv1495, 36
  br i1 %cmp1496, label %if.then1498, label %if.end1522

if.then1498:                                      ; preds = %if.then1493
  %816 = load i8*, i8** %endptr, align 4
  %add.ptr1499 = getelementptr inbounds i8, i8* %816, i32 1
  store i8* %add.ptr1499, i8** %c, align 4
  %817 = load i32, i32* %narg, align 4
  %818 = load i32, i32* %argc, align 4
  %cmp1500 = icmp sgt i32 %817, %818
  br i1 %cmp1500, label %if.then1505, label %lor.lhs.false1502

lor.lhs.false1502:                                ; preds = %if.then1498
  %819 = load i32, i32* %narg, align 4
  %cmp1503 = icmp sle i32 %819, 0
  br i1 %cmp1503, label %if.then1505, label %if.else1514

if.then1505:                                      ; preds = %lor.lhs.false1502, %if.then1498
  %820 = load i8*, i8** %name.addr, align 4
  %821 = load i32, i32* %narg, align 4
  call void (i8*, i8*, ...) @zwarnnam(i8* %820, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.110, i32 0, i32 0), i32 %821)
  %822 = load %struct._IO_FILE*, %struct._IO_FILE** %fout, align 4
  %823 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 4
  %cmp1506 = icmp ne %struct._IO_FILE* %822, %823
  br i1 %cmp1506, label %if.then1508, label %if.end1510

if.then1508:                                      ; preds = %if.then1505
  %824 = load %struct._IO_FILE*, %struct._IO_FILE** %fout, align 4
  %call1509 = call i32 @fclose(%struct._IO_FILE* %824)
  br label %if.end1510

if.end1510:                                       ; preds = %if.then1508, %if.then1505
  %825 = load i8*, i8** %buf, align 4
  %tobool1511 = icmp ne i8* %825, null
  br i1 %tobool1511, label %if.then1512, label %if.end1513

if.then1512:                                      ; preds = %if.end1510
  %826 = load i8*, i8** %buf, align 4
  call void @free(i8* %826)
  br label %if.end1513

if.end1513:                                       ; preds = %if.then1512, %if.end1510
  store i32 1, i32* %retval, align 4
  br label %return

if.else1514:                                      ; preds = %lor.lhs.false1502
  %827 = load i32, i32* %narg, align 4
  %828 = load i32, i32* %maxarg, align 4
  %cmp1515 = icmp sgt i32 %827, %828
  br i1 %cmp1515, label %if.then1517, label %if.end1518

if.then1517:                                      ; preds = %if.else1514
  %829 = load i32, i32* %narg, align 4
  store i32 %829, i32* %maxarg, align 4
  br label %if.end1518

if.end1518:                                       ; preds = %if.then1517, %if.else1514
  %830 = load i8**, i8*** %first, align 4
  %831 = load i32, i32* %narg, align 4
  %add.ptr1519 = getelementptr inbounds i8*, i8** %830, i32 %831
  %add.ptr1520 = getelementptr inbounds i8*, i8** %add.ptr1519, i32 -1
  store i8** %add.ptr1520, i8*** %argp, align 4
  br label %if.end1521

if.end1521:                                       ; preds = %if.end1518
  br label %if.end1522

if.end1522:                                       ; preds = %if.end1521, %if.then1493
  br label %if.end1523

if.end1523:                                       ; preds = %if.end1522, %if.then1486
  %832 = load i8**, i8*** %argp, align 4
  %833 = load i8*, i8** %832, align 4
  %tobool1524 = icmp ne i8* %833, null
  br i1 %tobool1524, label %if.then1525, label %if.end1532

if.then1525:                                      ; preds = %if.end1523
  %834 = load i8**, i8*** %argp, align 4
  %incdec.ptr1526 = getelementptr inbounds i8*, i8** %834, i32 1
  store i8** %incdec.ptr1526, i8*** %argp, align 4
  %835 = load i8*, i8** %834, align 4
  %call1527 = call i32 @mathevali(i8* %835)
  store i32 %call1527, i32* %width, align 4
  %836 = load i32, i32* @errflag, align 4
  %tobool1528 = icmp ne i32 %836, 0
  br i1 %tobool1528, label %if.then1529, label %if.end1531

if.then1529:                                      ; preds = %if.then1525
  %837 = load i32, i32* @errflag, align 4
  %and1530 = and i32 %837, -2
  store i32 %and1530, i32* @errflag, align 4
  store i32 1, i32* %ret, align 4
  br label %if.end1531

if.end1531:                                       ; preds = %if.then1529, %if.then1525
  br label %if.end1532

if.end1532:                                       ; preds = %if.end1531, %if.end1523
  br label %if.end1533

if.end1533:                                       ; preds = %if.end1532, %if.else1482
  br label %if.end1534

if.end1534:                                       ; preds = %if.end1533, %if.then1480
  %838 = load i8*, i8** %d, align 4
  %incdec.ptr1535 = getelementptr inbounds i8, i8* %838, i32 1
  store i8* %incdec.ptr1535, i8** %d, align 4
  store i8 42, i8* %838, align 1
  %839 = load i8*, i8** %c, align 4
  %840 = load i8, i8* %839, align 1
  %conv1536 = sext i8 %840 to i32
  %cmp1537 = icmp eq i32 %conv1536, 46
  br i1 %cmp1537, label %if.then1539, label %if.end1608

if.then1539:                                      ; preds = %if.end1534
  %841 = load i8*, i8** %c, align 4
  %incdec.ptr1540 = getelementptr inbounds i8, i8* %841, i32 1
  store i8* %incdec.ptr1540, i8** %c, align 4
  %842 = load i8, i8* %incdec.ptr1540, align 1
  %conv1541 = sext i8 %842 to i32
  %cmp1542 = icmp eq i32 %conv1541, 42
  br i1 %cmp1542, label %if.then1544, label %if.else1591

if.then1544:                                      ; preds = %if.then1539
  %843 = load i8*, i8** %c, align 4
  %incdec.ptr1545 = getelementptr inbounds i8, i8* %843, i32 1
  store i8* %incdec.ptr1545, i8** %c, align 4
  %844 = load i8, i8* %incdec.ptr1545, align 1
  %idxprom1546 = zext i8 %844 to i32
  %arrayidx1547 = getelementptr inbounds [256 x i16], [256 x i16]* @typtab, i32 0, i32 %idxprom1546
  %845 = load i16, i16* %arrayidx1547, align 2
  %conv1548 = sext i16 %845 to i32
  %and1549 = and i32 %conv1548, 1
  %tobool1550 = icmp ne i32 %and1549, 0
  br i1 %tobool1550, label %if.then1551, label %if.end1581

if.then1551:                                      ; preds = %if.then1544
  %846 = load i8*, i8** %c, align 4
  %call1552 = call i32 @strtoul(i8* %846, i8** %endptr, i32 0)
  store i32 %call1552, i32* %narg, align 4
  %847 = load i8*, i8** %endptr, align 4
  %848 = load i8, i8* %847, align 1
  %conv1553 = sext i8 %848 to i32
  %cmp1554 = icmp eq i32 %conv1553, 36
  br i1 %cmp1554, label %if.then1556, label %if.end1580

if.then1556:                                      ; preds = %if.then1551
  %849 = load i8*, i8** %endptr, align 4
  %add.ptr1557 = getelementptr inbounds i8, i8* %849, i32 1
  store i8* %add.ptr1557, i8** %c, align 4
  %850 = load i32, i32* %narg, align 4
  %851 = load i32, i32* %argc, align 4
  %cmp1558 = icmp sgt i32 %850, %851
  br i1 %cmp1558, label %if.then1563, label %lor.lhs.false1560

lor.lhs.false1560:                                ; preds = %if.then1556
  %852 = load i32, i32* %narg, align 4
  %cmp1561 = icmp sle i32 %852, 0
  br i1 %cmp1561, label %if.then1563, label %if.else1572

if.then1563:                                      ; preds = %lor.lhs.false1560, %if.then1556
  %853 = load i8*, i8** %name.addr, align 4
  %854 = load i32, i32* %narg, align 4
  call void (i8*, i8*, ...) @zwarnnam(i8* %853, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.110, i32 0, i32 0), i32 %854)
  %855 = load %struct._IO_FILE*, %struct._IO_FILE** %fout, align 4
  %856 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 4
  %cmp1564 = icmp ne %struct._IO_FILE* %855, %856
  br i1 %cmp1564, label %if.then1566, label %if.end1568

if.then1566:                                      ; preds = %if.then1563
  %857 = load %struct._IO_FILE*, %struct._IO_FILE** %fout, align 4
  %call1567 = call i32 @fclose(%struct._IO_FILE* %857)
  br label %if.end1568

if.end1568:                                       ; preds = %if.then1566, %if.then1563
  %858 = load i8*, i8** %buf, align 4
  %tobool1569 = icmp ne i8* %858, null
  br i1 %tobool1569, label %if.then1570, label %if.end1571

if.then1570:                                      ; preds = %if.end1568
  %859 = load i8*, i8** %buf, align 4
  call void @free(i8* %859)
  br label %if.end1571

if.end1571:                                       ; preds = %if.then1570, %if.end1568
  store i32 1, i32* %retval, align 4
  br label %return

if.else1572:                                      ; preds = %lor.lhs.false1560
  %860 = load i32, i32* %narg, align 4
  %861 = load i32, i32* %maxarg, align 4
  %cmp1573 = icmp sgt i32 %860, %861
  br i1 %cmp1573, label %if.then1575, label %if.end1576

if.then1575:                                      ; preds = %if.else1572
  %862 = load i32, i32* %narg, align 4
  store i32 %862, i32* %maxarg, align 4
  br label %if.end1576

if.end1576:                                       ; preds = %if.then1575, %if.else1572
  %863 = load i8**, i8*** %first, align 4
  %864 = load i32, i32* %narg, align 4
  %add.ptr1577 = getelementptr inbounds i8*, i8** %863, i32 %864
  %add.ptr1578 = getelementptr inbounds i8*, i8** %add.ptr1577, i32 -1
  store i8** %add.ptr1578, i8*** %argp, align 4
  br label %if.end1579

if.end1579:                                       ; preds = %if.end1576
  br label %if.end1580

if.end1580:                                       ; preds = %if.end1579, %if.then1551
  br label %if.end1581

if.end1581:                                       ; preds = %if.end1580, %if.then1544
  %865 = load i8**, i8*** %argp, align 4
  %866 = load i8*, i8** %865, align 4
  %tobool1582 = icmp ne i8* %866, null
  br i1 %tobool1582, label %if.then1583, label %if.end1590

if.then1583:                                      ; preds = %if.end1581
  %867 = load i8**, i8*** %argp, align 4
  %incdec.ptr1584 = getelementptr inbounds i8*, i8** %867, i32 1
  store i8** %incdec.ptr1584, i8*** %argp, align 4
  %868 = load i8*, i8** %867, align 4
  %call1585 = call i32 @mathevali(i8* %868)
  store i32 %call1585, i32* %prec, align 4
  %869 = load i32, i32* @errflag, align 4
  %tobool1586 = icmp ne i32 %869, 0
  br i1 %tobool1586, label %if.then1587, label %if.end1589

if.then1587:                                      ; preds = %if.then1583
  %870 = load i32, i32* @errflag, align 4
  %and1588 = and i32 %870, -2
  store i32 %and1588, i32* @errflag, align 4
  store i32 1, i32* %ret, align 4
  br label %if.end1589

if.end1589:                                       ; preds = %if.then1587, %if.then1583
  br label %if.end1590

if.end1590:                                       ; preds = %if.end1589, %if.end1581
  br label %if.end1601

if.else1591:                                      ; preds = %if.then1539
  %871 = load i8*, i8** %c, align 4
  %872 = load i8, i8* %871, align 1
  %idxprom1592 = zext i8 %872 to i32
  %arrayidx1593 = getelementptr inbounds [256 x i16], [256 x i16]* @typtab, i32 0, i32 %idxprom1592
  %873 = load i16, i16* %arrayidx1593, align 2
  %conv1594 = sext i16 %873 to i32
  %and1595 = and i32 %conv1594, 1
  %tobool1596 = icmp ne i32 %and1595, 0
  br i1 %tobool1596, label %if.then1597, label %if.else1599

if.then1597:                                      ; preds = %if.else1591
  %874 = load i8*, i8** %c, align 4
  %call1598 = call i32 @strtoul(i8* %874, i8** %endptr, i32 0)
  store i32 %call1598, i32* %prec, align 4
  %875 = load i8*, i8** %endptr, align 4
  store i8* %875, i8** %c, align 4
  br label %if.end1600

if.else1599:                                      ; preds = %if.else1591
  store i32 0, i32* %prec, align 4
  br label %if.end1600

if.end1600:                                       ; preds = %if.else1599, %if.then1597
  br label %if.end1601

if.end1601:                                       ; preds = %if.end1600, %if.end1590
  %876 = load i32, i32* %prec, align 4
  %cmp1602 = icmp sge i32 %876, 0
  br i1 %cmp1602, label %if.then1604, label %if.end1607

if.then1604:                                      ; preds = %if.end1601
  %877 = load i8*, i8** %d, align 4
  %incdec.ptr1605 = getelementptr inbounds i8, i8* %877, i32 1
  store i8* %incdec.ptr1605, i8** %d, align 4
  store i8 46, i8* %877, align 1
  %878 = load i8*, i8** %d, align 4
  %incdec.ptr1606 = getelementptr inbounds i8, i8* %878, i32 1
  store i8* %incdec.ptr1606, i8** %d, align 4
  store i8 42, i8* %878, align 1
  br label %if.end1607

if.end1607:                                       ; preds = %if.then1604, %if.end1601
  br label %if.end1608

if.end1608:                                       ; preds = %if.end1607, %if.end1534
  %879 = load i8*, i8** %c, align 4
  %880 = load i8, i8* %879, align 1
  %conv1609 = sext i8 %880 to i32
  %cmp1610 = icmp eq i32 %conv1609, 108
  br i1 %cmp1610, label %if.then1620, label %lor.lhs.false1612

lor.lhs.false1612:                                ; preds = %if.end1608
  %881 = load i8*, i8** %c, align 4
  %882 = load i8, i8* %881, align 1
  %conv1613 = sext i8 %882 to i32
  %cmp1614 = icmp eq i32 %conv1613, 76
  br i1 %cmp1614, label %if.then1620, label %lor.lhs.false1616

lor.lhs.false1616:                                ; preds = %lor.lhs.false1612
  %883 = load i8*, i8** %c, align 4
  %884 = load i8, i8* %883, align 1
  %conv1617 = sext i8 %884 to i32
  %cmp1618 = icmp eq i32 %conv1617, 104
  br i1 %cmp1618, label %if.then1620, label %if.end1622

if.then1620:                                      ; preds = %lor.lhs.false1616, %lor.lhs.false1612, %if.end1608
  %885 = load i8*, i8** %c, align 4
  %incdec.ptr1621 = getelementptr inbounds i8, i8* %885, i32 1
  store i8* %incdec.ptr1621, i8** %c, align 4
  br label %if.end1622

if.end1622:                                       ; preds = %if.then1620, %lor.lhs.false1616
  %886 = load i8*, i8** %curarg, align 4
  %tobool1623 = icmp ne i8* %886, null
  br i1 %tobool1623, label %if.end1633, label %land.lhs.true1624

land.lhs.true1624:                                ; preds = %if.end1622
  %887 = load i8**, i8*** %argp, align 4
  %888 = load i8*, i8** %887, align 4
  %tobool1625 = icmp ne i8* %888, null
  br i1 %tobool1625, label %if.then1626, label %if.end1633

if.then1626:                                      ; preds = %land.lhs.true1624
  %889 = load i8**, i8*** %argp, align 4
  %890 = load i8*, i8** %889, align 4
  store i8* %890, i8** %curarg, align 4
  %891 = load i32*, i32** %len, align 4
  %892 = load i8**, i8*** %argp, align 4
  %incdec.ptr1627 = getelementptr inbounds i8*, i8** %892, i32 1
  store i8** %incdec.ptr1627, i8*** %argp, align 4
  %893 = load i8**, i8*** %args.addr, align 4
  %sub.ptr.lhs.cast1628 = ptrtoint i8** %892 to i32
  %sub.ptr.rhs.cast1629 = ptrtoint i8** %893 to i32
  %sub.ptr.sub1630 = sub i32 %sub.ptr.lhs.cast1628, %sub.ptr.rhs.cast1629
  %sub.ptr.div1631 = sdiv exact i32 %sub.ptr.sub1630, 4
  %arrayidx1632 = getelementptr inbounds i32, i32* %891, i32 %sub.ptr.div1631
  %894 = load i32, i32* %arrayidx1632, align 4
  store i32 %894, i32* %curlen, align 4
  br label %if.end1633

if.end1633:                                       ; preds = %if.then1626, %land.lhs.true1624, %if.end1622
  %895 = load i8*, i8** %d, align 4
  %arrayidx1634 = getelementptr inbounds i8, i8* %895, i32 1
  store i8 0, i8* %arrayidx1634, align 1
  %896 = load i8*, i8** %c, align 4
  %897 = load i8, i8* %896, align 1
  %898 = load i8*, i8** %d, align 4
  store i8 %897, i8* %898, align 1
  %conv1635 = sext i8 %897 to i32
  switch i32 %conv1635, label %sw.default [
    i32 99, label %sw.bb
    i32 115, label %sw.bb1652
    i32 98, label %sw.bb1652
    i32 113, label %sw.bb1758
    i32 100, label %sw.bb1779
    i32 105, label %sw.bb1779
    i32 101, label %sw.bb1780
    i32 69, label %sw.bb1780
    i32 102, label %sw.bb1780
    i32 103, label %sw.bb1780
    i32 71, label %sw.bb1780
    i32 111, label %sw.bb1781
    i32 117, label %sw.bb1781
    i32 120, label %sw.bb1781
    i32 88, label %sw.bb1781
    i32 110, label %sw.bb1782
  ]

sw.bb:                                            ; preds = %if.end1633
  %899 = load i8*, i8** %curarg, align 4
  %tobool1636 = icmp ne i8* %899, null
  br i1 %tobool1636, label %if.then1637, label %if.else1639

if.then1637:                                      ; preds = %sw.bb
  %900 = load i8*, i8** %curarg, align 4
  %901 = load i8, i8* %900, align 1
  %conv1638 = sext i8 %901 to i32
  store i32 %conv1638, i32* %intval, align 4
  br label %if.end1640

if.else1639:                                      ; preds = %sw.bb
  store i32 0, i32* %intval, align 4
  br label %if.end1640

if.end1640:                                       ; preds = %if.else1639, %if.then1637
  %902 = load i32, i32* %prec, align 4
  %cmp1641 = icmp sge i32 %902, 0
  br i1 %cmp1641, label %if.then1643, label %if.else1647

if.then1643:                                      ; preds = %if.end1640
  %903 = load %struct._IO_FILE*, %struct._IO_FILE** %fout, align 4
  %arraydecay1644 = getelementptr inbounds [14 x i8], [14 x i8]* %spec, i32 0, i32 0
  %904 = load i32, i32* %width, align 4
  %905 = load i32, i32* %prec, align 4
  %906 = load i32, i32* %intval, align 4
  %call1645 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %903, i8* %arraydecay1644, i32 %904, i32 %905, i32 %906)
  %907 = load i32, i32* %count, align 4
  %add1646 = add i32 %907, %call1645
  store i32 %add1646, i32* %count, align 4
  br label %if.end1651

if.else1647:                                      ; preds = %if.end1640
  %908 = load %struct._IO_FILE*, %struct._IO_FILE** %fout, align 4
  %arraydecay1648 = getelementptr inbounds [14 x i8], [14 x i8]* %spec, i32 0, i32 0
  %909 = load i32, i32* %width, align 4
  %910 = load i32, i32* %intval, align 4
  %call1649 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %908, i8* %arraydecay1648, i32 %909, i32 %910)
  %911 = load i32, i32* %count, align 4
  %add1650 = add i32 %911, %call1649
  store i32 %add1650, i32* %count, align 4
  br label %if.end1651

if.end1651:                                       ; preds = %if.else1647, %if.then1643
  br label %sw.epilog

sw.bb1652:                                        ; preds = %if.end1633, %if.end1633
  %912 = load i8*, i8** %curarg, align 4
  %tobool1653 = icmp ne i8* %912, null
  br i1 %tobool1653, label %if.then1654, label %if.else1751

if.then1654:                                      ; preds = %sw.bb1652
  %913 = load i8*, i8** %c, align 4
  %914 = load i8, i8* %913, align 1
  %conv1662 = sext i8 %914 to i32
  %cmp1663 = icmp eq i32 %conv1662, 98
  br i1 %cmp1663, label %if.then1665, label %if.else1674

if.then1665:                                      ; preds = %if.then1654
  %915 = load i8*, i8** %curarg, align 4
  %916 = load i32, i32* %curlen, align 4
  %call1666 = call i8* @metafy(i8* %915, i32 %916, i32 1)
  %917 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind1667 = getelementptr inbounds %struct.options, %struct.options* %917, i32 0, i32 0
  %arrayidx1668 = getelementptr inbounds [128 x i8], [128 x i8]* %ind1667, i32 0, i32 98
  %918 = load i8, i8* %arrayidx1668, align 2
  %conv1669 = zext i8 %918 to i32
  %cmp1670 = icmp ne i32 %conv1669, 0
  %cond1672 = select i1 %cmp1670, i32 7, i32 8
  %call1673 = call i8* @getkeystring(i8* %call1666, i32* %lbytes, i32 %cond1672, i32* %nnl)
  store i8* %call1673, i8** %b, align 4
  br label %if.end1675

if.else1674:                                      ; preds = %if.then1654
  %919 = load i8*, i8** %curarg, align 4
  store i8* %919, i8** %b, align 4
  %920 = load i32, i32* %curlen, align 4
  store i32 %920, i32* %lbytes, align 4
  br label %if.end1675

if.end1675:                                       ; preds = %if.else1674, %if.then1665
  %921 = load i8*, i8** %b, align 4
  store i8* %921, i8** %ptr, align 4
  %922 = bitcast %struct.__mbstate_t* %mbs1661 to i8*
  call void @llvm.memset.p0i8.i32(i8* %922, i8 0, i32 8, i32 4, i1 false)
  store i32 0, i32* %lchars, align 4
  %923 = load i32, i32* %lbytes, align 4
  store i32 %923, i32* %lleft, align 4
  br label %for.cond1676

for.cond1676:                                     ; preds = %for.inc1709, %if.end1675
  %924 = load i32, i32* %lleft, align 4
  %cmp1677 = icmp sgt i32 %924, 0
  br i1 %cmp1677, label %for.body1679, label %for.end1711

for.body1679:                                     ; preds = %for.cond1676
  %925 = load i32, i32* %lchars, align 4
  %926 = load i32, i32* %prec, align 4
  %cmp1681 = icmp eq i32 %925, %926
  br i1 %cmp1681, label %if.then1683, label %if.end1687

if.then1683:                                      ; preds = %for.body1679
  %927 = load i8*, i8** %ptr, align 4
  %928 = load i8*, i8** %b, align 4
  %sub.ptr.lhs.cast1684 = ptrtoint i8* %927 to i32
  %sub.ptr.rhs.cast1685 = ptrtoint i8* %928 to i32
  %sub.ptr.sub1686 = sub i32 %sub.ptr.lhs.cast1684, %sub.ptr.rhs.cast1685
  store i32 %sub.ptr.sub1686, i32* %lbytes, align 4
  br label %for.end1711

if.end1687:                                       ; preds = %for.body1679
  %929 = load i8, i8* getelementptr inbounds ([181 x i8], [181 x i8]* @opts, i32 0, i32 118), align 1
  %tobool1688 = icmp ne i8 %929, 0
  br i1 %tobool1688, label %if.then1689, label %if.else1705

if.then1689:                                      ; preds = %if.end1687
  %930 = load i8*, i8** %ptr, align 4
  %931 = load i32, i32* %lleft, align 4
  %call1690 = call i32 @mbrlen(i8* %930, i32 %931, %struct.__mbstate_t* %mbs1661)
  store i32 %call1690, i32* %chars, align 4
  %932 = load i32, i32* %chars, align 4
  %cmp1691 = icmp slt i32 %932, 0
  br i1 %cmp1691, label %if.then1693, label %if.else1699

if.then1693:                                      ; preds = %if.then1689
  %933 = load i32, i32* %lleft, align 4
  %934 = load i32, i32* %lchars, align 4
  %add1694 = add nsw i32 %934, %933
  store i32 %add1694, i32* %lchars, align 4
  %935 = load i8*, i8** %ptr, align 4
  %936 = load i8*, i8** %b, align 4
  %sub.ptr.lhs.cast1695 = ptrtoint i8* %935 to i32
  %sub.ptr.rhs.cast1696 = ptrtoint i8* %936 to i32
  %sub.ptr.sub1697 = sub i32 %sub.ptr.lhs.cast1695, %sub.ptr.rhs.cast1696
  %937 = load i32, i32* %lleft, align 4
  %add1698 = add nsw i32 %sub.ptr.sub1697, %937
  store i32 %add1698, i32* %lbytes, align 4
  br label %for.end1711

if.else1699:                                      ; preds = %if.then1689
  %938 = load i32, i32* %chars, align 4
  %cmp1700 = icmp eq i32 %938, 0
  br i1 %cmp1700, label %if.then1702, label %if.end1703

if.then1702:                                      ; preds = %if.else1699
  store i32 1, i32* %chars, align 4
  br label %if.end1703

if.end1703:                                       ; preds = %if.then1702, %if.else1699
  br label %if.end1704

if.end1704:                                       ; preds = %if.end1703
  br label %if.end1706

if.else1705:                                      ; preds = %if.end1687
  store i32 1, i32* %chars, align 4
  br label %if.end1706

if.end1706:                                       ; preds = %if.else1705, %if.end1704
  %939 = load i32, i32* %chars, align 4
  %940 = load i32, i32* %lleft, align 4
  %sub1707 = sub nsw i32 %940, %939
  store i32 %sub1707, i32* %lleft, align 4
  %941 = load i32, i32* %chars, align 4
  %942 = load i8*, i8** %ptr, align 4
  %add.ptr1708 = getelementptr inbounds i8, i8* %942, i32 %941
  store i8* %add.ptr1708, i8** %ptr, align 4
  br label %for.inc1709

for.inc1709:                                      ; preds = %if.end1706
  %943 = load i32, i32* %lchars, align 4
  %inc1710 = add nsw i32 %943, 1
  store i32 %inc1710, i32* %lchars, align 4
  br label %for.cond1676

for.end1711:                                      ; preds = %if.then1693, %if.then1683, %for.cond1676
  %944 = load i32, i32* %width, align 4
  %cmp1712 = icmp sgt i32 %944, 0
  br i1 %cmp1712, label %land.lhs.true1714, label %if.end1719

land.lhs.true1714:                                ; preds = %for.end1711
  %arrayidx1715 = getelementptr inbounds [6 x i32], [6 x i32]* %flags, i32 0, i32 3
  %945 = load i32, i32* %arrayidx1715, align 4
  %tobool1716 = icmp ne i32 %945, 0
  br i1 %tobool1716, label %if.then1717, label %if.end1719

if.then1717:                                      ; preds = %land.lhs.true1714
  %946 = load i32, i32* %width, align 4
  %sub1718 = sub nsw i32 0, %946
  store i32 %sub1718, i32* %width, align 4
  br label %if.end1719

if.end1719:                                       ; preds = %if.then1717, %land.lhs.true1714, %for.end1711
  %947 = load i32, i32* %width, align 4
  %cmp1720 = icmp sgt i32 %947, 0
  br i1 %cmp1720, label %land.lhs.true1722, label %if.end1729

land.lhs.true1722:                                ; preds = %if.end1719
  %948 = load i32, i32* %lchars, align 4
  %949 = load i32, i32* %width, align 4
  %cmp1723 = icmp slt i32 %948, %949
  br i1 %cmp1723, label %if.then1725, label %if.end1729

if.then1725:                                      ; preds = %land.lhs.true1722
  %950 = load %struct._IO_FILE*, %struct._IO_FILE** %fout, align 4
  %951 = load i32, i32* %width, align 4
  %952 = load i32, i32* %lchars, align 4
  %sub1726 = sub nsw i32 %951, %952
  %call1727 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %950, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.111, i32 0, i32 0), i32 %sub1726, i32 32)
  %953 = load i32, i32* %count, align 4
  %add1728 = add i32 %953, %call1727
  store i32 %add1728, i32* %count, align 4
  br label %if.end1729

if.end1729:                                       ; preds = %if.then1725, %land.lhs.true1722, %if.end1719
  %954 = load i8*, i8** %b, align 4
  %955 = load i32, i32* %lbytes, align 4
  %956 = load %struct._IO_FILE*, %struct._IO_FILE** %fout, align 4
  %call1730 = call i32 @fwrite(i8* %954, i32 1, i32 %955, %struct._IO_FILE* %956)
  %957 = load i32, i32* %count, align 4
  %add1731 = add i32 %957, %call1730
  store i32 %add1731, i32* %count, align 4
  %958 = load i32, i32* %width, align 4
  %cmp1732 = icmp slt i32 %958, 0
  br i1 %cmp1732, label %land.lhs.true1734, label %if.end1743

land.lhs.true1734:                                ; preds = %if.end1729
  %959 = load i32, i32* %lchars, align 4
  %960 = load i32, i32* %width, align 4
  %sub1735 = sub nsw i32 0, %960
  %cmp1736 = icmp slt i32 %959, %sub1735
  br i1 %cmp1736, label %if.then1738, label %if.end1743

if.then1738:                                      ; preds = %land.lhs.true1734
  %961 = load %struct._IO_FILE*, %struct._IO_FILE** %fout, align 4
  %962 = load i32, i32* %width, align 4
  %sub1739 = sub nsw i32 0, %962
  %963 = load i32, i32* %lchars, align 4
  %sub1740 = sub nsw i32 %sub1739, %963
  %call1741 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %961, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.111, i32 0, i32 0), i32 %sub1740, i32 32)
  %964 = load i32, i32* %count, align 4
  %add1742 = add i32 %964, %call1741
  store i32 %add1742, i32* %count, align 4
  br label %if.end1743

if.end1743:                                       ; preds = %if.then1738, %land.lhs.true1734, %if.end1729
  %965 = load i32, i32* %nnl, align 4
  %tobool1744 = icmp ne i32 %965, 0
  br i1 %tobool1744, label %if.then1745, label %if.end1750

if.then1745:                                      ; preds = %if.end1743
  %966 = load i8*, i8** %c, align 4
  %967 = load i8*, i8** %fmt, align 4
  %sub.ptr.lhs.cast1746 = ptrtoint i8* %966 to i32
  %sub.ptr.rhs.cast1747 = ptrtoint i8* %967 to i32
  %sub.ptr.sub1748 = sub i32 %sub.ptr.lhs.cast1746, %sub.ptr.rhs.cast1747
  %add1749 = add nsw i32 %sub.ptr.sub1748, 1
  store i32 %add1749, i32* %flen, align 4
  store i32 1, i32* %fmttrunc, align 4
  br label %if.end1750

if.end1750:                                       ; preds = %if.then1745, %if.end1743
  br label %if.end1757

if.else1751:                                      ; preds = %sw.bb1652
  %968 = load i32, i32* %width, align 4
  %tobool1752 = icmp ne i32 %968, 0
  br i1 %tobool1752, label %if.then1753, label %if.end1756

if.then1753:                                      ; preds = %if.else1751
  %969 = load %struct._IO_FILE*, %struct._IO_FILE** %fout, align 4
  %970 = load i32, i32* %width, align 4
  %call1754 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %969, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.111, i32 0, i32 0), i32 %970, i32 32)
  %971 = load i32, i32* %count, align 4
  %add1755 = add i32 %971, %call1754
  store i32 %add1755, i32* %count, align 4
  br label %if.end1756

if.end1756:                                       ; preds = %if.then1753, %if.else1751
  br label %if.end1757

if.end1757:                                       ; preds = %if.end1756, %if.end1750
  br label %sw.epilog

sw.bb1758:                                        ; preds = %if.end1633
  %972 = load i8*, i8** %curarg, align 4
  %tobool1759 = icmp ne i8* %972, null
  br i1 %tobool1759, label %cond.true1760, label %cond.false1763

cond.true1760:                                    ; preds = %sw.bb1758
  %973 = load i8*, i8** %curarg, align 4
  %974 = load i32, i32* %curlen, align 4
  %call1761 = call i8* @metafy(i8* %973, i32 %974, i32 1)
  %call1762 = call i8* @quotestring(i8* %call1761, i32 8)
  br label %cond.end1764

cond.false1763:                                   ; preds = %sw.bb1758
  br label %cond.end1764

cond.end1764:                                     ; preds = %cond.false1763, %cond.true1760
  %cond1765 = phi i8* [ %call1762, %cond.true1760 ], [ %nullstr, %cond.false1763 ]
  store i8* %cond1765, i8** %stringval, align 4
  %975 = load i8*, i8** %d, align 4
  store i8 115, i8* %975, align 1
  %976 = load i32, i32* %prec, align 4
  %cmp1766 = icmp sge i32 %976, 0
  br i1 %cmp1766, label %if.then1768, label %if.else1773

if.then1768:                                      ; preds = %cond.end1764
  %977 = load %struct._IO_FILE*, %struct._IO_FILE** %fout, align 4
  %arraydecay1769 = getelementptr inbounds [14 x i8], [14 x i8]* %spec, i32 0, i32 0
  %978 = load i32, i32* %width, align 4
  %979 = load i32, i32* %prec, align 4
  %980 = load i8*, i8** %stringval, align 4
  %call1770 = call i8* @unmetafy(i8* %980, i32* %curlen)
  %call1771 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %977, i8* %arraydecay1769, i32 %978, i32 %979, i8* %call1770)
  %981 = load i32, i32* %count, align 4
  %add1772 = add i32 %981, %call1771
  store i32 %add1772, i32* %count, align 4
  br label %if.end1778

if.else1773:                                      ; preds = %cond.end1764
  %982 = load %struct._IO_FILE*, %struct._IO_FILE** %fout, align 4
  %arraydecay1774 = getelementptr inbounds [14 x i8], [14 x i8]* %spec, i32 0, i32 0
  %983 = load i32, i32* %width, align 4
  %984 = load i8*, i8** %stringval, align 4
  %call1775 = call i8* @unmetafy(i8* %984, i32* %curlen)
  %call1776 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %982, i8* %arraydecay1774, i32 %983, i8* %call1775)
  %985 = load i32, i32* %count, align 4
  %add1777 = add i32 %985, %call1776
  store i32 %add1777, i32* %count, align 4
  br label %if.end1778

if.end1778:                                       ; preds = %if.else1773, %if.then1768
  br label %sw.epilog

sw.bb1779:                                        ; preds = %if.end1633, %if.end1633
  store i32 1, i32* %type, align 4
  br label %sw.epilog

sw.bb1780:                                        ; preds = %if.end1633, %if.end1633, %if.end1633, %if.end1633, %if.end1633
  store i32 2, i32* %type, align 4
  br label %sw.epilog

sw.bb1781:                                        ; preds = %if.end1633, %if.end1633, %if.end1633, %if.end1633
  store i32 3, i32* %type, align 4
  br label %sw.epilog

sw.bb1782:                                        ; preds = %if.end1633
  %986 = load i8*, i8** %curarg, align 4
  %tobool1783 = icmp ne i8* %986, null
  br i1 %tobool1783, label %if.then1784, label %if.end1787

if.then1784:                                      ; preds = %sw.bb1782
  %987 = load i8*, i8** %curarg, align 4
  %988 = load i32, i32* %count, align 4
  %989 = load i32, i32* %rcount, align 4
  %sub1785 = sub i32 %988, %989
  %call1786 = call %struct.param* @setiparam(i8* %987, i32 %sub1785)
  br label %if.end1787

if.end1787:                                       ; preds = %if.then1784, %sw.bb1782
  br label %sw.epilog

sw.default:                                       ; preds = %if.end1633
  %990 = load i8*, i8** %c, align 4
  %991 = load i8, i8* %990, align 1
  %tobool1788 = icmp ne i8 %991, 0
  br i1 %tobool1788, label %if.then1789, label %if.end1792

if.then1789:                                      ; preds = %sw.default
  %992 = load i8*, i8** %c, align 4
  %arrayidx1790 = getelementptr inbounds i8, i8* %992, i32 1
  %993 = load i8, i8* %arrayidx1790, align 1
  store i8 %993, i8* %save, align 1
  %994 = load i8*, i8** %c, align 4
  %arrayidx1791 = getelementptr inbounds i8, i8* %994, i32 1
  store i8 0, i8* %arrayidx1791, align 1
  br label %if.end1792

if.end1792:                                       ; preds = %if.then1789, %sw.default
  %995 = load i8*, i8** %name.addr, align 4
  %996 = load i8*, i8** %start, align 4
  call void (i8*, i8*, ...) @zwarnnam(i8* %995, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.112, i32 0, i32 0), i8* %996)
  %997 = load i8*, i8** %c, align 4
  %998 = load i8, i8* %997, align 1
  %tobool1793 = icmp ne i8 %998, 0
  br i1 %tobool1793, label %if.then1794, label %if.end1796

if.then1794:                                      ; preds = %if.end1792
  %999 = load i8, i8* %save, align 1
  %1000 = load i8*, i8** %c, align 4
  %arrayidx1795 = getelementptr inbounds i8, i8* %1000, i32 1
  store i8 %999, i8* %arrayidx1795, align 1
  br label %if.end1796

if.end1796:                                       ; preds = %if.then1794, %if.end1792
  %1001 = load %struct._IO_FILE*, %struct._IO_FILE** %fout, align 4
  %1002 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 4
  %cmp1797 = icmp ne %struct._IO_FILE* %1001, %1002
  br i1 %cmp1797, label %land.lhs.true1799, label %cond.false1818

land.lhs.true1799:                                ; preds = %if.end1796
  %1003 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind1800 = getelementptr inbounds %struct.options, %struct.options* %1003, i32 0, i32 0
  %arrayidx1801 = getelementptr inbounds [128 x i8], [128 x i8]* %ind1800, i32 0, i32 122
  %1004 = load i8, i8* %arrayidx1801, align 2
  %conv1802 = zext i8 %1004 to i32
  %cmp1803 = icmp ne i32 %conv1802, 0
  br i1 %cmp1803, label %cond.true1817, label %lor.lhs.false1805

lor.lhs.false1805:                                ; preds = %land.lhs.true1799
  %1005 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind1806 = getelementptr inbounds %struct.options, %struct.options* %1005, i32 0, i32 0
  %arrayidx1807 = getelementptr inbounds [128 x i8], [128 x i8]* %ind1806, i32 0, i32 115
  %1006 = load i8, i8* %arrayidx1807, align 1
  %conv1808 = zext i8 %1006 to i32
  %cmp1809 = icmp ne i32 %conv1808, 0
  br i1 %cmp1809, label %cond.true1817, label %lor.lhs.false1811

lor.lhs.false1811:                                ; preds = %lor.lhs.false1805
  %1007 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind1812 = getelementptr inbounds %struct.options, %struct.options* %1007, i32 0, i32 0
  %arrayidx1813 = getelementptr inbounds [128 x i8], [128 x i8]* %ind1812, i32 0, i32 118
  %1008 = load i8, i8* %arrayidx1813, align 2
  %conv1814 = zext i8 %1008 to i32
  %cmp1815 = icmp ne i32 %conv1814, 0
  br i1 %cmp1815, label %cond.true1817, label %cond.false1818

cond.true1817:                                    ; preds = %lor.lhs.false1811, %lor.lhs.false1805, %land.lhs.true1799
  br i1 true, label %if.end1835, label %if.then1833

cond.false1818:                                   ; preds = %lor.lhs.false1811, %if.end1796
  %1009 = load %struct._IO_FILE*, %struct._IO_FILE** %fout, align 4
  %1010 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 4
  %cmp1819 = icmp eq %struct._IO_FILE* %1009, %1010
  br i1 %cmp1819, label %cond.true1821, label %cond.false1829

cond.true1821:                                    ; preds = %cond.false1818
  %1011 = load %struct._IO_FILE*, %struct._IO_FILE** %fout, align 4
  %call1822 = call i32 @fflush(%struct._IO_FILE* %1011)
  %cmp1823 = icmp eq i32 %call1822, 0
  br i1 %cmp1823, label %if.end1835, label %lor.lhs.false1825

lor.lhs.false1825:                                ; preds = %cond.true1821
  %call1826 = call i32* @__errno_location()
  %1012 = load i32, i32* %call1826, align 4
  %cmp1827 = icmp eq i32 %1012, 9
  br i1 %cmp1827, label %if.end1835, label %if.then1833

cond.false1829:                                   ; preds = %cond.false1818
  %1013 = load %struct._IO_FILE*, %struct._IO_FILE** %fout, align 4
  %call1830 = call i32 @fclose(%struct._IO_FILE* %1013)
  %cmp1831 = icmp eq i32 %call1830, 0
  br i1 %cmp1831, label %if.end1835, label %if.then1833

if.then1833:                                      ; preds = %cond.false1829, %lor.lhs.false1825, %cond.true1817
  %1014 = load i8*, i8** %name.addr, align 4
  %call1834 = call i32* @__errno_location()
  %1015 = load i32, i32* %call1834, align 4
  call void (i8*, i8*, ...) @zwarnnam(i8* %1014, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.107, i32 0, i32 0), i32 %1015)
  br label %if.end1835

if.end1835:                                       ; preds = %if.then1833, %cond.false1829, %lor.lhs.false1825, %cond.true1821, %cond.true1817
  %1016 = load i8*, i8** %buf, align 4
  %tobool1836 = icmp ne i8* %1016, null
  br i1 %tobool1836, label %if.then1837, label %if.end1838

if.then1837:                                      ; preds = %if.end1835
  %1017 = load i8*, i8** %buf, align 4
  call void @free(i8* %1017)
  br label %if.end1838

if.end1838:                                       ; preds = %if.then1837, %if.end1835
  store i32 1, i32* %retval, align 4
  br label %return

sw.epilog:                                        ; preds = %if.end1787, %sw.bb1781, %sw.bb1780, %sw.bb1779, %if.end1778, %if.end1757, %if.end1651
  %1018 = load i32, i32* %type, align 4
  %cmp1839 = icmp sgt i32 %1018, 0
  br i1 %cmp1839, label %if.then1841, label %if.end2012

if.then1841:                                      ; preds = %sw.epilog
  %1019 = load i8*, i8** %curarg, align 4
  %tobool1842 = icmp ne i8* %1019, null
  br i1 %tobool1842, label %land.lhs.true1843, label %if.else1901

land.lhs.true1843:                                ; preds = %if.then1841
  %1020 = load i8*, i8** %curarg, align 4
  %1021 = load i8, i8* %1020, align 1
  %conv1844 = sext i8 %1021 to i32
  %cmp1845 = icmp eq i32 %conv1844, 39
  br i1 %cmp1845, label %if.then1851, label %lor.lhs.false1847

lor.lhs.false1847:                                ; preds = %land.lhs.true1843
  %1022 = load i8*, i8** %curarg, align 4
  %1023 = load i8, i8* %1022, align 1
  %conv1848 = sext i8 %1023 to i32
  %cmp1849 = icmp eq i32 %conv1848, 34
  br i1 %cmp1849, label %if.then1851, label %if.else1901

if.then1851:                                      ; preds = %lor.lhs.false1847, %land.lhs.true1843
  %1024 = load i8, i8* getelementptr inbounds ([181 x i8], [181 x i8]* @opts, i32 0, i32 118), align 1
  %tobool1853 = icmp ne i8 %1024, 0
  br i1 %tobool1853, label %if.then1854, label %if.else1859

if.then1854:                                      ; preds = %if.then1851
  call void @mb_charinit()
  %1025 = load i8*, i8** %curarg, align 4
  %add.ptr1855 = getelementptr inbounds i8, i8* %1025, i32 1
  %1026 = load i32, i32* %curlen, align 4
  %sub1856 = sub nsw i32 %1026, 1
  %call1857 = call i8* @metafy(i8* %add.ptr1855, i32 %sub1856, i32 1)
  %call1858 = call i32 @mb_metacharlenconv(i8* %call1857, i32* %cc)
  br label %if.end1860

if.else1859:                                      ; preds = %if.then1851
  store i32 -1, i32* %cc, align 4
  br label %if.end1860

if.end1860:                                       ; preds = %if.else1859, %if.then1854
  %1027 = load i32, i32* %cc, align 4
  %cmp1861 = icmp eq i32 %1027, -1
  br i1 %cmp1861, label %if.then1863, label %if.end1872

if.then1863:                                      ; preds = %if.end1860
  %1028 = load i32, i32* %curlen, align 4
  %cmp1864 = icmp sgt i32 %1028, 1
  br i1 %cmp1864, label %cond.true1866, label %cond.false1869

cond.true1866:                                    ; preds = %if.then1863
  %1029 = load i8*, i8** %curarg, align 4
  %arrayidx1867 = getelementptr inbounds i8, i8* %1029, i32 1
  %1030 = load i8, i8* %arrayidx1867, align 1
  %conv1868 = zext i8 %1030 to i32
  br label %cond.end1870

cond.false1869:                                   ; preds = %if.then1863
  br label %cond.end1870

cond.end1870:                                     ; preds = %cond.false1869, %cond.true1866
  %cond1871 = phi i32 [ %conv1868, %cond.true1866 ], [ 0, %cond.false1869 ]
  store i32 %cond1871, i32* %cc, align 4
  br label %if.end1872

if.end1872:                                       ; preds = %cond.end1870, %if.end1860
  %1031 = load i32, i32* %type, align 4
  %cmp1873 = icmp eq i32 %1031, 2
  br i1 %cmp1873, label %if.then1875, label %if.else1888

if.then1875:                                      ; preds = %if.end1872
  %1032 = load i32, i32* %cc, align 4
  %conv1876 = uitofp i32 %1032 to double
  store double %conv1876, double* %doubleval, align 8
  %1033 = load i32, i32* %prec, align 4
  %cmp1877 = icmp sge i32 %1033, 0
  br i1 %cmp1877, label %if.then1879, label %if.else1883

if.then1879:                                      ; preds = %if.then1875
  %1034 = load %struct._IO_FILE*, %struct._IO_FILE** %fout, align 4
  %arraydecay1880 = getelementptr inbounds [14 x i8], [14 x i8]* %spec, i32 0, i32 0
  %1035 = load i32, i32* %width, align 4
  %1036 = load i32, i32* %prec, align 4
  %1037 = load double, double* %doubleval, align 8
  %call1881 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1034, i8* %arraydecay1880, i32 %1035, i32 %1036, double %1037)
  %1038 = load i32, i32* %count, align 4
  %add1882 = add i32 %1038, %call1881
  store i32 %add1882, i32* %count, align 4
  br label %if.end1887

if.else1883:                                      ; preds = %if.then1875
  %1039 = load %struct._IO_FILE*, %struct._IO_FILE** %fout, align 4
  %arraydecay1884 = getelementptr inbounds [14 x i8], [14 x i8]* %spec, i32 0, i32 0
  %1040 = load i32, i32* %width, align 4
  %1041 = load double, double* %doubleval, align 8
  %call1885 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1039, i8* %arraydecay1884, i32 %1040, double %1041)
  %1042 = load i32, i32* %count, align 4
  %add1886 = add i32 %1042, %call1885
  store i32 %add1886, i32* %count, align 4
  br label %if.end1887

if.end1887:                                       ; preds = %if.else1883, %if.then1879
  br label %if.end1900

if.else1888:                                      ; preds = %if.end1872
  %1043 = load i32, i32* %cc, align 4
  store i32 %1043, i32* %intval, align 4
  %1044 = load i32, i32* %prec, align 4
  %cmp1889 = icmp sge i32 %1044, 0
  br i1 %cmp1889, label %if.then1891, label %if.else1895

if.then1891:                                      ; preds = %if.else1888
  %1045 = load %struct._IO_FILE*, %struct._IO_FILE** %fout, align 4
  %arraydecay1892 = getelementptr inbounds [14 x i8], [14 x i8]* %spec, i32 0, i32 0
  %1046 = load i32, i32* %width, align 4
  %1047 = load i32, i32* %prec, align 4
  %1048 = load i32, i32* %intval, align 4
  %call1893 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1045, i8* %arraydecay1892, i32 %1046, i32 %1047, i32 %1048)
  %1049 = load i32, i32* %count, align 4
  %add1894 = add i32 %1049, %call1893
  store i32 %add1894, i32* %count, align 4
  br label %if.end1899

if.else1895:                                      ; preds = %if.else1888
  %1050 = load %struct._IO_FILE*, %struct._IO_FILE** %fout, align 4
  %arraydecay1896 = getelementptr inbounds [14 x i8], [14 x i8]* %spec, i32 0, i32 0
  %1051 = load i32, i32* %width, align 4
  %1052 = load i32, i32* %intval, align 4
  %call1897 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1050, i8* %arraydecay1896, i32 %1051, i32 %1052)
  %1053 = load i32, i32* %count, align 4
  %add1898 = add i32 %1053, %call1897
  store i32 %add1898, i32* %count, align 4
  br label %if.end1899

if.end1899:                                       ; preds = %if.else1895, %if.then1891
  br label %if.end1900

if.end1900:                                       ; preds = %if.end1899, %if.end1887
  br label %if.end2011

if.else1901:                                      ; preds = %lor.lhs.false1847, %if.then1841
  %1054 = load i32, i32* %type, align 4
  switch i32 %1054, label %sw.epilog2010 [
    i32 1, label %sw.bb1902
    i32 2, label %sw.bb1926
    i32 3, label %sw.bb1983
  ]

sw.bb1902:                                        ; preds = %if.else1901
  %1055 = load i8*, i8** %d, align 4
  %incdec.ptr1903 = getelementptr inbounds i8, i8* %1055, i32 1
  store i8* %incdec.ptr1903, i8** %d, align 4
  store i8 108, i8* %1055, align 1
  %1056 = load i8*, i8** %c, align 4
  %1057 = load i8, i8* %1056, align 1
  %1058 = load i8*, i8** %d, align 4
  %incdec.ptr1904 = getelementptr inbounds i8, i8* %1058, i32 1
  store i8* %incdec.ptr1904, i8** %d, align 4
  store i8 %1057, i8* %1058, align 1
  %1059 = load i8*, i8** %d, align 4
  store i8 0, i8* %1059, align 1
  %1060 = load i8*, i8** %curarg, align 4
  %tobool1905 = icmp ne i8* %1060, null
  br i1 %tobool1905, label %cond.true1906, label %cond.false1908

cond.true1906:                                    ; preds = %sw.bb1902
  %1061 = load i8*, i8** %curarg, align 4
  %call1907 = call i32 @mathevali(i8* %1061)
  br label %cond.end1909

cond.false1908:                                   ; preds = %sw.bb1902
  br label %cond.end1909

cond.end1909:                                     ; preds = %cond.false1908, %cond.true1906
  %cond1910 = phi i32 [ %call1907, %cond.true1906 ], [ 0, %cond.false1908 ]
  store i32 %cond1910, i32* %zlongval, align 4
  %1062 = load i32, i32* @errflag, align 4
  %tobool1911 = icmp ne i32 %1062, 0
  br i1 %tobool1911, label %if.then1912, label %if.end1914

if.then1912:                                      ; preds = %cond.end1909
  store i32 0, i32* %zlongval, align 4
  %1063 = load i32, i32* @errflag, align 4
  %and1913 = and i32 %1063, -2
  store i32 %and1913, i32* @errflag, align 4
  store i32 1, i32* %ret, align 4
  br label %if.end1914

if.end1914:                                       ; preds = %if.then1912, %cond.end1909
  %1064 = load i32, i32* %prec, align 4
  %cmp1915 = icmp sge i32 %1064, 0
  br i1 %cmp1915, label %if.then1917, label %if.else1921

if.then1917:                                      ; preds = %if.end1914
  %1065 = load %struct._IO_FILE*, %struct._IO_FILE** %fout, align 4
  %arraydecay1918 = getelementptr inbounds [14 x i8], [14 x i8]* %spec, i32 0, i32 0
  %1066 = load i32, i32* %width, align 4
  %1067 = load i32, i32* %prec, align 4
  %1068 = load i32, i32* %zlongval, align 4
  %call1919 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1065, i8* %arraydecay1918, i32 %1066, i32 %1067, i32 %1068)
  %1069 = load i32, i32* %count, align 4
  %add1920 = add i32 %1069, %call1919
  store i32 %add1920, i32* %count, align 4
  br label %if.end1925

if.else1921:                                      ; preds = %if.end1914
  %1070 = load %struct._IO_FILE*, %struct._IO_FILE** %fout, align 4
  %arraydecay1922 = getelementptr inbounds [14 x i8], [14 x i8]* %spec, i32 0, i32 0
  %1071 = load i32, i32* %width, align 4
  %1072 = load i32, i32* %zlongval, align 4
  %call1923 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1070, i8* %arraydecay1922, i32 %1071, i32 %1072)
  %1073 = load i32, i32* %count, align 4
  %add1924 = add i32 %1073, %call1923
  store i32 %add1924, i32* %count, align 4
  br label %if.end1925

if.end1925:                                       ; preds = %if.else1921, %if.then1917
  br label %sw.epilog2010

sw.bb1926:                                        ; preds = %if.else1901
  %1074 = load i8*, i8** %curarg, align 4
  %tobool1927 = icmp ne i8* %1074, null
  br i1 %tobool1927, label %if.then1928, label %if.else1949

if.then1928:                                      ; preds = %sw.bb1926
  %1075 = load i8*, i8** %curarg, align 4
  %call1931 = call double @strtod(i8* %1075, i8** %eptr1930)
  store double %call1931, double* %doubleval, align 8
  %1076 = load i8*, i8** %eptr1930, align 4
  %1077 = load i8, i8* %1076, align 1
  %conv1932 = sext i8 %1077 to i32
  %cmp1933 = icmp ne i32 %conv1932, 0
  br i1 %cmp1933, label %if.then1935, label %if.end1948

if.then1935:                                      ; preds = %if.then1928
  %1078 = load i8*, i8** %curarg, align 4
  call void @matheval(%struct.mnumber* sret %tmp1936, i8* %1078)
  %1079 = bitcast %struct.mnumber* %mnumval to i8*
  %1080 = bitcast %struct.mnumber* %tmp1936 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %1079, i8* %1080, i32 16, i32 8, i1 false)
  %type1937 = getelementptr inbounds %struct.mnumber, %struct.mnumber* %mnumval, i32 0, i32 1
  %1081 = load i32, i32* %type1937, align 8
  %and1938 = and i32 %1081, 2
  %tobool1939 = icmp ne i32 %and1938, 0
  br i1 %tobool1939, label %cond.true1940, label %cond.false1942

cond.true1940:                                    ; preds = %if.then1935
  %u = getelementptr inbounds %struct.mnumber, %struct.mnumber* %mnumval, i32 0, i32 0
  %d1941 = bitcast %union.anon.2* %u to double*
  %1082 = load double, double* %d1941, align 8
  br label %cond.end1946

cond.false1942:                                   ; preds = %if.then1935
  %u1943 = getelementptr inbounds %struct.mnumber, %struct.mnumber* %mnumval, i32 0, i32 0
  %l1944 = bitcast %union.anon.2* %u1943 to i32*
  %1083 = load i32, i32* %l1944, align 8
  %conv1945 = sitofp i32 %1083 to double
  br label %cond.end1946

cond.end1946:                                     ; preds = %cond.false1942, %cond.true1940
  %cond1947 = phi double [ %1082, %cond.true1940 ], [ %conv1945, %cond.false1942 ]
  store double %cond1947, double* %doubleval, align 8
  br label %if.end1948

if.end1948:                                       ; preds = %cond.end1946, %if.then1928
  br label %if.end1950

if.else1949:                                      ; preds = %sw.bb1926
  store double 0.000000e+00, double* %doubleval, align 8
  br label %if.end1950

if.end1950:                                       ; preds = %if.else1949, %if.end1948
  %1084 = load i32, i32* @errflag, align 4
  %tobool1951 = icmp ne i32 %1084, 0
  br i1 %tobool1951, label %if.then1952, label %if.end1954

if.then1952:                                      ; preds = %if.end1950
  store double 0.000000e+00, double* %doubleval, align 8
  %1085 = load i32, i32* @errflag, align 4
  %and1953 = and i32 %1085, -2
  store i32 %and1953, i32* @errflag, align 4
  store i32 1, i32* %ret, align 4
  br label %if.end1954

if.end1954:                                       ; preds = %if.then1952, %if.end1950
  %1086 = load double, double* %doubleval, align 8
  %call1955 = call i32 @isnan(double %1086)
  %tobool1956 = icmp ne i32 %call1955, 0
  br i1 %tobool1956, label %if.then1957, label %if.else1960

if.then1957:                                      ; preds = %if.end1954
  %1087 = load %struct._IO_FILE*, %struct._IO_FILE** %fout, align 4
  %call1958 = call i32 @fputs(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.113, i32 0, i32 0), %struct._IO_FILE* %1087)
  %1088 = load i32, i32* %count, align 4
  %add1959 = add i32 %1088, %call1958
  store i32 %add1959, i32* %count, align 4
  br label %if.end1982

if.else1960:                                      ; preds = %if.end1954
  %1089 = load double, double* %doubleval, align 8
  %call1961 = call i32 @isinf(double %1089)
  %tobool1962 = icmp ne i32 %call1961, 0
  br i1 %tobool1962, label %if.then1963, label %if.else1969

if.then1963:                                      ; preds = %if.else1960
  %1090 = load double, double* %doubleval, align 8
  %cmp1964 = fcmp olt double %1090, 0.000000e+00
  %cond1966 = select i1 %cmp1964, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.114, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.115, i32 0, i32 0)
  %1091 = load %struct._IO_FILE*, %struct._IO_FILE** %fout, align 4
  %call1967 = call i32 @fputs(i8* %cond1966, %struct._IO_FILE* %1091)
  %1092 = load i32, i32* %count, align 4
  %add1968 = add i32 %1092, %call1967
  store i32 %add1968, i32* %count, align 4
  br label %if.end1981

if.else1969:                                      ; preds = %if.else1960
  %1093 = load i32, i32* %prec, align 4
  %cmp1970 = icmp sge i32 %1093, 0
  br i1 %cmp1970, label %if.then1972, label %if.else1976

if.then1972:                                      ; preds = %if.else1969
  %1094 = load %struct._IO_FILE*, %struct._IO_FILE** %fout, align 4
  %arraydecay1973 = getelementptr inbounds [14 x i8], [14 x i8]* %spec, i32 0, i32 0
  %1095 = load i32, i32* %width, align 4
  %1096 = load i32, i32* %prec, align 4
  %1097 = load double, double* %doubleval, align 8
  %call1974 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1094, i8* %arraydecay1973, i32 %1095, i32 %1096, double %1097)
  %1098 = load i32, i32* %count, align 4
  %add1975 = add i32 %1098, %call1974
  store i32 %add1975, i32* %count, align 4
  br label %if.end1980

if.else1976:                                      ; preds = %if.else1969
  %1099 = load %struct._IO_FILE*, %struct._IO_FILE** %fout, align 4
  %arraydecay1977 = getelementptr inbounds [14 x i8], [14 x i8]* %spec, i32 0, i32 0
  %1100 = load i32, i32* %width, align 4
  %1101 = load double, double* %doubleval, align 8
  %call1978 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1099, i8* %arraydecay1977, i32 %1100, double %1101)
  %1102 = load i32, i32* %count, align 4
  %add1979 = add i32 %1102, %call1978
  store i32 %add1979, i32* %count, align 4
  br label %if.end1980

if.end1980:                                       ; preds = %if.else1976, %if.then1972
  br label %if.end1981

if.end1981:                                       ; preds = %if.end1980, %if.then1963
  br label %if.end1982

if.end1982:                                       ; preds = %if.end1981, %if.then1957
  br label %sw.epilog2010

sw.bb1983:                                        ; preds = %if.else1901
  %1103 = load i8*, i8** %d, align 4
  %incdec.ptr1984 = getelementptr inbounds i8, i8* %1103, i32 1
  store i8* %incdec.ptr1984, i8** %d, align 4
  store i8 108, i8* %1103, align 1
  %1104 = load i8*, i8** %c, align 4
  %1105 = load i8, i8* %1104, align 1
  %1106 = load i8*, i8** %d, align 4
  %incdec.ptr1985 = getelementptr inbounds i8, i8* %1106, i32 1
  store i8* %incdec.ptr1985, i8** %d, align 4
  store i8 %1105, i8* %1106, align 1
  %1107 = load i8*, i8** %d, align 4
  store i8 0, i8* %1107, align 1
  %1108 = load i8*, i8** %curarg, align 4
  %tobool1986 = icmp ne i8* %1108, null
  br i1 %tobool1986, label %if.else1988, label %if.then1987

if.then1987:                                      ; preds = %sw.bb1983
  store i32 0, i32* %zulongval, align 4
  br label %if.end1994

if.else1988:                                      ; preds = %sw.bb1983
  %1109 = load i8*, i8** %curarg, align 4
  %call1989 = call i32 @zstrtoul_underscore(i8* %1109, i32* %zulongval)
  %tobool1990 = icmp ne i32 %call1989, 0
  br i1 %tobool1990, label %if.end1993, label %if.then1991

if.then1991:                                      ; preds = %if.else1988
  %1110 = load i8*, i8** %curarg, align 4
  %call1992 = call i32 @mathevali(i8* %1110)
  store i32 %call1992, i32* %zulongval, align 4
  br label %if.end1993

if.end1993:                                       ; preds = %if.then1991, %if.else1988
  br label %if.end1994

if.end1994:                                       ; preds = %if.end1993, %if.then1987
  %1111 = load i32, i32* @errflag, align 4
  %tobool1995 = icmp ne i32 %1111, 0
  br i1 %tobool1995, label %if.then1996, label %if.end1998

if.then1996:                                      ; preds = %if.end1994
  store i32 0, i32* %zulongval, align 4
  %1112 = load i32, i32* @errflag, align 4
  %and1997 = and i32 %1112, -2
  store i32 %and1997, i32* @errflag, align 4
  store i32 1, i32* %ret, align 4
  br label %if.end1998

if.end1998:                                       ; preds = %if.then1996, %if.end1994
  %1113 = load i32, i32* %prec, align 4
  %cmp1999 = icmp sge i32 %1113, 0
  br i1 %cmp1999, label %if.then2001, label %if.else2005

if.then2001:                                      ; preds = %if.end1998
  %1114 = load %struct._IO_FILE*, %struct._IO_FILE** %fout, align 4
  %arraydecay2002 = getelementptr inbounds [14 x i8], [14 x i8]* %spec, i32 0, i32 0
  %1115 = load i32, i32* %width, align 4
  %1116 = load i32, i32* %prec, align 4
  %1117 = load i32, i32* %zulongval, align 4
  %call2003 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1114, i8* %arraydecay2002, i32 %1115, i32 %1116, i32 %1117)
  %1118 = load i32, i32* %count, align 4
  %add2004 = add i32 %1118, %call2003
  store i32 %add2004, i32* %count, align 4
  br label %if.end2009

if.else2005:                                      ; preds = %if.end1998
  %1119 = load %struct._IO_FILE*, %struct._IO_FILE** %fout, align 4
  %arraydecay2006 = getelementptr inbounds [14 x i8], [14 x i8]* %spec, i32 0, i32 0
  %1120 = load i32, i32* %width, align 4
  %1121 = load i32, i32* %zulongval, align 4
  %call2007 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1119, i8* %arraydecay2006, i32 %1120, i32 %1121)
  %1122 = load i32, i32* %count, align 4
  %add2008 = add i32 %1122, %call2007
  store i32 %add2008, i32* %count, align 4
  br label %if.end2009

if.end2009:                                       ; preds = %if.else2005, %if.then2001
  br label %sw.epilog2010

sw.epilog2010:                                    ; preds = %if.end2009, %if.else1901, %if.end1982, %if.end1925
  br label %if.end2011

if.end2011:                                       ; preds = %sw.epilog2010, %if.end1900
  br label %if.end2012

if.end2012:                                       ; preds = %if.end2011, %sw.epilog
  %1123 = load i32, i32* %maxarg, align 4
  %tobool2013 = icmp ne i32 %1123, 0
  br i1 %tobool2013, label %land.lhs.true2014, label %if.end2026

land.lhs.true2014:                                ; preds = %if.end2012
  %1124 = load i8**, i8*** %argp, align 4
  %1125 = load i8**, i8*** %first, align 4
  %sub.ptr.lhs.cast2015 = ptrtoint i8** %1124 to i32
  %sub.ptr.rhs.cast2016 = ptrtoint i8** %1125 to i32
  %sub.ptr.sub2017 = sub i32 %sub.ptr.lhs.cast2015, %sub.ptr.rhs.cast2016
  %sub.ptr.div2018 = sdiv exact i32 %sub.ptr.sub2017, 4
  %1126 = load i32, i32* %maxarg, align 4
  %cmp2019 = icmp sgt i32 %sub.ptr.div2018, %1126
  br i1 %cmp2019, label %if.then2021, label %if.end2026

if.then2021:                                      ; preds = %land.lhs.true2014
  %1127 = load i8**, i8*** %argp, align 4
  %1128 = load i8**, i8*** %first, align 4
  %sub.ptr.lhs.cast2022 = ptrtoint i8** %1127 to i32
  %sub.ptr.rhs.cast2023 = ptrtoint i8** %1128 to i32
  %sub.ptr.sub2024 = sub i32 %sub.ptr.lhs.cast2022, %sub.ptr.rhs.cast2023
  %sub.ptr.div2025 = sdiv exact i32 %sub.ptr.sub2024, 4
  store i32 %sub.ptr.div2025, i32* %maxarg, align 4
  br label %if.end2026

if.end2026:                                       ; preds = %if.then2021, %land.lhs.true2014, %if.end2012
  br label %for.inc2027

for.inc2027:                                      ; preds = %if.end2026, %if.then1403, %if.then1394
  %1129 = load i8*, i8** %c, align 4
  %incdec.ptr2028 = getelementptr inbounds i8, i8* %1129, i32 1
  store i8* %incdec.ptr2028, i8** %c, align 4
  br label %for.cond1384

for.end2029:                                      ; preds = %for.cond1384
  %1130 = load i32, i32* %maxarg, align 4
  %tobool2030 = icmp ne i32 %1130, 0
  br i1 %tobool2030, label %if.then2031, label %if.end2033

if.then2031:                                      ; preds = %for.end2029
  %1131 = load i8**, i8*** %first, align 4
  %1132 = load i32, i32* %maxarg, align 4
  %add.ptr2032 = getelementptr inbounds i8*, i8** %1131, i32 %1132
  store i8** %add.ptr2032, i8*** %argp, align 4
  br label %if.end2033

if.end2033:                                       ; preds = %if.then2031, %for.end2029
  br label %do.cond2034

do.cond2034:                                      ; preds = %if.end2033
  %1133 = load i8**, i8*** %argp, align 4
  %1134 = load i8*, i8** %1133, align 4
  %tobool2035 = icmp ne i8* %1134, null
  br i1 %tobool2035, label %land.lhs.true2036, label %land.end2048

land.lhs.true2036:                                ; preds = %do.cond2034
  %1135 = load i8**, i8*** %argp, align 4
  %1136 = load i8**, i8*** %first, align 4
  %cmp2037 = icmp ne i8** %1135, %1136
  br i1 %cmp2037, label %land.lhs.true2039, label %land.end2048

land.lhs.true2039:                                ; preds = %land.lhs.true2036
  %1137 = load i32, i32* %fmttrunc, align 4
  %tobool2040 = icmp ne i32 %1137, 0
  br i1 %tobool2040, label %land.end2048, label %land.rhs2041

land.rhs2041:                                     ; preds = %land.lhs.true2039
  %1138 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind2042 = getelementptr inbounds %struct.options, %struct.options* %1138, i32 0, i32 0
  %arrayidx2043 = getelementptr inbounds [128 x i8], [128 x i8]* %ind2042, i32 0, i32 114
  %1139 = load i8, i8* %arrayidx2043, align 2
  %conv2044 = zext i8 %1139 to i32
  %cmp2045 = icmp ne i32 %conv2044, 0
  %lnot2047 = xor i1 %cmp2045, true
  br label %land.end2048

land.end2048:                                     ; preds = %land.rhs2041, %land.lhs.true2039, %land.lhs.true2036, %do.cond2034
  %1140 = phi i1 [ false, %land.lhs.true2039 ], [ false, %land.lhs.true2036 ], [ false, %do.cond2034 ], [ %lnot2047, %land.rhs2041 ]
  br i1 %1140, label %do.body1363, label %do.end2050

do.end2050:                                       ; preds = %land.end2048
  %1141 = load %struct._IO_FILE*, %struct._IO_FILE** %fout, align 4
  %1142 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 4
  %cmp2051 = icmp ne %struct._IO_FILE* %1141, %1142
  br i1 %cmp2051, label %land.lhs.true2053, label %if.end2196

land.lhs.true2053:                                ; preds = %do.end2050
  %1143 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind2054 = getelementptr inbounds %struct.options, %struct.options* %1143, i32 0, i32 0
  %arrayidx2055 = getelementptr inbounds [128 x i8], [128 x i8]* %ind2054, i32 0, i32 122
  %1144 = load i8, i8* %arrayidx2055, align 2
  %conv2056 = zext i8 %1144 to i32
  %cmp2057 = icmp ne i32 %conv2056, 0
  br i1 %cmp2057, label %if.then2071, label %lor.lhs.false2059

lor.lhs.false2059:                                ; preds = %land.lhs.true2053
  %1145 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind2060 = getelementptr inbounds %struct.options, %struct.options* %1145, i32 0, i32 0
  %arrayidx2061 = getelementptr inbounds [128 x i8], [128 x i8]* %ind2060, i32 0, i32 115
  %1146 = load i8, i8* %arrayidx2061, align 1
  %conv2062 = zext i8 %1146 to i32
  %cmp2063 = icmp ne i32 %conv2062, 0
  br i1 %cmp2063, label %if.then2071, label %lor.lhs.false2065

lor.lhs.false2065:                                ; preds = %lor.lhs.false2059
  %1147 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind2066 = getelementptr inbounds %struct.options, %struct.options* %1147, i32 0, i32 0
  %arrayidx2067 = getelementptr inbounds [128 x i8], [128 x i8]* %ind2066, i32 0, i32 118
  %1148 = load i8, i8* %arrayidx2067, align 2
  %conv2068 = zext i8 %1148 to i32
  %cmp2069 = icmp ne i32 %conv2068, 0
  br i1 %cmp2069, label %if.then2071, label %if.end2196

if.then2071:                                      ; preds = %lor.lhs.false2065, %lor.lhs.false2059, %land.lhs.true2053
  %1149 = load i32, i32* @queueing_enabled, align 4
  %inc2072 = add nsw i32 %1149, 1
  store i32 %inc2072, i32* @queueing_enabled, align 4
  %1150 = load %struct._IO_FILE*, %struct._IO_FILE** %fout, align 4
  %call2073 = call i32 @fclose(%struct._IO_FILE* %1150)
  %cmp2074 = icmp eq i32 %call2073, 0
  br i1 %cmp2074, label %cond.true2076, label %cond.false2077

cond.true2076:                                    ; preds = %if.then2071
  %1151 = load i32, i32* %mcount, align 4
  br label %cond.end2078

cond.false2077:                                   ; preds = %if.then2071
  br label %cond.end2078

cond.end2078:                                     ; preds = %cond.false2077, %cond.true2076
  %cond2079 = phi i32 [ %1151, %cond.true2076 ], [ -1, %cond.false2077 ]
  store i32 %cond2079, i32* %rcount, align 4
  %cmp2080 = icmp eq i32 %cond2079, -1
  br i1 %cmp2080, label %if.then2082, label %if.else2087

if.then2082:                                      ; preds = %cond.end2078
  %1152 = load i8*, i8** %name.addr, align 4
  %call2083 = call i32* @__errno_location()
  %1153 = load i32, i32* %call2083, align 4
  call void (i8*, i8*, ...) @zwarnnam(i8* %1152, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.116, i32 0, i32 0), i32 %1153)
  %1154 = load i8*, i8** %buf, align 4
  %tobool2084 = icmp ne i8* %1154, null
  br i1 %tobool2084, label %if.then2085, label %if.end2086

if.then2085:                                      ; preds = %if.then2082
  %1155 = load i8*, i8** %buf, align 4
  call void @free(i8* %1155)
  br label %if.end2086

if.end2086:                                       ; preds = %if.then2085, %if.then2082
  br label %if.end2172

if.else2087:                                      ; preds = %cond.end2078
  %1156 = load i32, i32* %visarr, align 4
  %tobool2088 = icmp ne i32 %1156, 0
  br i1 %tobool2088, label %land.lhs.true2089, label %if.else2132

land.lhs.true2089:                                ; preds = %if.else2087
  %1157 = load i32*, i32** %splits, align 4
  %tobool2090 = icmp ne i32* %1157, null
  br i1 %tobool2090, label %if.then2091, label %if.else2132

if.then2091:                                      ; preds = %land.lhs.true2089
  %1158 = load i32*, i32** %cursplit, align 4
  %1159 = load i32*, i32** %splits, align 4
  %sub.ptr.lhs.cast2093 = ptrtoint i32* %1158 to i32
  %sub.ptr.rhs.cast2094 = ptrtoint i32* %1159 to i32
  %sub.ptr.sub2095 = sub i32 %sub.ptr.lhs.cast2093, %sub.ptr.rhs.cast2094
  %sub.ptr.div2096 = sdiv exact i32 %sub.ptr.sub2095, 4
  %add2097 = add nsw i32 %sub.ptr.div2096, 2
  %mul2098 = mul i32 %add2097, 4
  %call2099 = call i8* @zshcalloc(i32 %mul2098)
  %1160 = bitcast i8* %call2099 to i8**
  store i8** %1160, i8*** %arrayval, align 4
  br label %for.cond2100

for.cond2100:                                     ; preds = %for.inc2121, %if.then2091
  %1161 = load i32*, i32** %cursplit, align 4
  %1162 = load i32*, i32** %splits, align 4
  %cmp2101 = icmp uge i32* %1161, %1162
  br i1 %cmp2101, label %for.body2103, label %for.end2123

for.body2103:                                     ; preds = %for.cond2100
  %1163 = load i32*, i32** %cursplit, align 4
  %1164 = load i32*, i32** %splits, align 4
  %cmp2106 = icmp eq i32* %1163, %1164
  br i1 %cmp2106, label %cond.true2108, label %cond.false2109

cond.true2108:                                    ; preds = %for.body2103
  br label %cond.end2111

cond.false2109:                                   ; preds = %for.body2103
  %1165 = load i32*, i32** %cursplit, align 4
  %arrayidx2110 = getelementptr inbounds i32, i32* %1165, i32 -1
  %1166 = load i32, i32* %arrayidx2110, align 4
  br label %cond.end2111

cond.end2111:                                     ; preds = %cond.false2109, %cond.true2108
  %cond2112 = phi i32 [ 0, %cond.true2108 ], [ %1166, %cond.false2109 ]
  store i32 %cond2112, i32* %start2105, align 4
  %1167 = load i8*, i8** %buf, align 4
  %1168 = load i32, i32* %start2105, align 4
  %add.ptr2113 = getelementptr inbounds i8, i8* %1167, i32 %1168
  %1169 = load i32, i32* %count, align 4
  %1170 = load i32, i32* %start2105, align 4
  %sub2114 = sub i32 %1169, %1170
  %call2115 = call i8* @metafy(i8* %add.ptr2113, i32 %sub2114, i32 3)
  %1171 = load i8**, i8*** %arrayval, align 4
  %1172 = load i32*, i32** %cursplit, align 4
  %1173 = load i32*, i32** %splits, align 4
  %sub.ptr.lhs.cast2116 = ptrtoint i32* %1172 to i32
  %sub.ptr.rhs.cast2117 = ptrtoint i32* %1173 to i32
  %sub.ptr.sub2118 = sub i32 %sub.ptr.lhs.cast2116, %sub.ptr.rhs.cast2117
  %sub.ptr.div2119 = sdiv exact i32 %sub.ptr.sub2118, 4
  %arrayidx2120 = getelementptr inbounds i8*, i8** %1171, i32 %sub.ptr.div2119
  store i8* %call2115, i8** %arrayidx2120, align 4
  %1174 = load i32, i32* %start2105, align 4
  store i32 %1174, i32* %count, align 4
  br label %for.inc2121

for.inc2121:                                      ; preds = %cond.end2111
  %1175 = load i32*, i32** %cursplit, align 4
  %incdec.ptr2122 = getelementptr inbounds i32, i32* %1175, i32 -1
  store i32* %incdec.ptr2122, i32** %cursplit, align 4
  br label %for.cond2100

for.end2123:                                      ; preds = %for.cond2100
  %1176 = load %struct.options*, %struct.options** %ops.addr, align 4
  %args2124 = getelementptr inbounds %struct.options, %struct.options* %1176, i32 0, i32 1
  %1177 = load i8**, i8*** %args2124, align 4
  %1178 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind2125 = getelementptr inbounds %struct.options, %struct.options* %1178, i32 0, i32 0
  %arrayidx2126 = getelementptr inbounds [128 x i8], [128 x i8]* %ind2125, i32 0, i32 118
  %1179 = load i8, i8* %arrayidx2126, align 2
  %conv2127 = zext i8 %1179 to i32
  %shr2128 = ashr i32 %conv2127, 2
  %sub2129 = sub nsw i32 %shr2128, 1
  %arrayidx2130 = getelementptr inbounds i8*, i8** %1177, i32 %sub2129
  %1180 = load i8*, i8** %arrayidx2130, align 4
  %1181 = load i8**, i8*** %arrayval, align 4
  %call2131 = call %struct.param* @setaparam(i8* %1180, i8** %1181)
  %1182 = load i8*, i8** %buf, align 4
  call void @free(i8* %1182)
  br label %if.end2171

if.else2132:                                      ; preds = %land.lhs.true2089, %if.else2087
  %1183 = load i8*, i8** %buf, align 4
  %1184 = load i32, i32* %rcount, align 4
  %call2133 = call i8* @metafy(i8* %1183, i32 %1184, i32 0)
  store i8* %call2133, i8** %stringval, align 4
  %1185 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind2134 = getelementptr inbounds %struct.options, %struct.options* %1185, i32 0, i32 0
  %arrayidx2135 = getelementptr inbounds [128 x i8], [128 x i8]* %ind2134, i32 0, i32 122
  %1186 = load i8, i8* %arrayidx2135, align 2
  %conv2136 = zext i8 %1186 to i32
  %cmp2137 = icmp ne i32 %conv2136, 0
  br i1 %cmp2137, label %if.then2139, label %if.else2142

if.then2139:                                      ; preds = %if.else2132
  %1187 = load %union.linkroot*, %union.linkroot** @bufstack, align 4
  %1188 = load %union.linkroot*, %union.linkroot** @bufstack, align 4
  %node2140 = bitcast %union.linkroot* %1188 to %struct.linknode*
  %1189 = load i8*, i8** %stringval, align 4
  %call2141 = call %struct.linknode* @zinsertlinknode(%union.linkroot* %1187, %struct.linknode* %node2140, i8* %1189)
  br label %if.end2170

if.else2142:                                      ; preds = %if.else2132
  %1190 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind2143 = getelementptr inbounds %struct.options, %struct.options* %1190, i32 0, i32 0
  %arrayidx2144 = getelementptr inbounds [128 x i8], [128 x i8]* %ind2143, i32 0, i32 118
  %1191 = load i8, i8* %arrayidx2144, align 2
  %conv2145 = zext i8 %1191 to i32
  %cmp2146 = icmp ne i32 %conv2145, 0
  br i1 %cmp2146, label %if.then2148, label %if.else2157

if.then2148:                                      ; preds = %if.else2142
  %1192 = load %struct.options*, %struct.options** %ops.addr, align 4
  %args2149 = getelementptr inbounds %struct.options, %struct.options* %1192, i32 0, i32 1
  %1193 = load i8**, i8*** %args2149, align 4
  %1194 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind2150 = getelementptr inbounds %struct.options, %struct.options* %1194, i32 0, i32 0
  %arrayidx2151 = getelementptr inbounds [128 x i8], [128 x i8]* %ind2150, i32 0, i32 118
  %1195 = load i8, i8* %arrayidx2151, align 2
  %conv2152 = zext i8 %1195 to i32
  %shr2153 = ashr i32 %conv2152, 2
  %sub2154 = sub nsw i32 %shr2153, 1
  %arrayidx2155 = getelementptr inbounds i8*, i8** %1193, i32 %sub2154
  %1196 = load i8*, i8** %arrayidx2155, align 4
  %1197 = load i8*, i8** %stringval, align 4
  %call2156 = call %struct.param* @setsparam(i8* %1196, i8* %1197)
  br label %if.end2169

if.else2157:                                      ; preds = %if.else2142
  %call2158 = call %struct.histent* @prepnexthistent()
  store %struct.histent* %call2158, %struct.histent** %ent, align 4
  %1198 = load i8*, i8** %stringval, align 4
  %1199 = load %struct.histent*, %struct.histent** %ent, align 4
  %node2159 = getelementptr inbounds %struct.histent, %struct.histent* %1199, i32 0, i32 0
  %nam2160 = getelementptr inbounds %struct.hashnode, %struct.hashnode* %node2159, i32 0, i32 1
  store i8* %1198, i8** %nam2160, align 4
  %call2161 = call i32 @time(i32* null)
  %1200 = load %struct.histent*, %struct.histent** %ent, align 4
  %ftim2162 = getelementptr inbounds %struct.histent, %struct.histent* %1200, i32 0, i32 5
  store i32 %call2161, i32* %ftim2162, align 4
  %1201 = load %struct.histent*, %struct.histent** %ent, align 4
  %stim2163 = getelementptr inbounds %struct.histent, %struct.histent* %1201, i32 0, i32 4
  store i32 %call2161, i32* %stim2163, align 4
  %1202 = load %struct.histent*, %struct.histent** %ent, align 4
  %node2164 = getelementptr inbounds %struct.histent, %struct.histent* %1202, i32 0, i32 0
  %flags2165 = getelementptr inbounds %struct.hashnode, %struct.hashnode* %node2164, i32 0, i32 2
  store i32 0, i32* %flags2165, align 4
  %1203 = load %struct.histent*, %struct.histent** %ent, align 4
  %words2166 = getelementptr inbounds %struct.histent, %struct.histent* %1203, i32 0, i32 6
  store i16* null, i16** %words2166, align 4
  %1204 = load %struct.hashtable*, %struct.hashtable** @histtab, align 4
  %1205 = load %struct.histent*, %struct.histent** %ent, align 4
  %node2167 = getelementptr inbounds %struct.histent, %struct.histent* %1205, i32 0, i32 0
  %nam2168 = getelementptr inbounds %struct.hashnode, %struct.hashnode* %node2167, i32 0, i32 1
  %1206 = load i8*, i8** %nam2168, align 4
  %1207 = load %struct.histent*, %struct.histent** %ent, align 4
  %1208 = bitcast %struct.histent* %1207 to i8*
  call void @addhistnode(%struct.hashtable* %1204, i8* %1206, i8* %1208)
  br label %if.end2169

if.end2169:                                       ; preds = %if.else2157, %if.then2148
  br label %if.end2170

if.end2170:                                       ; preds = %if.end2169, %if.then2139
  br label %if.end2171

if.end2171:                                       ; preds = %if.end2170, %for.end2123
  br label %if.end2172

if.end2172:                                       ; preds = %if.end2171, %if.end2086
  br label %do.body2173

do.body2173:                                      ; preds = %if.end2172
  %1209 = load i32, i32* @queueing_enabled, align 4
  %dec2174 = add nsw i32 %1209, -1
  store i32 %dec2174, i32* @queueing_enabled, align 4
  %tobool2175 = icmp ne i32 %dec2174, 0
  br i1 %tobool2175, label %if.end2193, label %if.then2176

if.then2176:                                      ; preds = %do.body2173
  br label %do.body2177

do.body2177:                                      ; preds = %if.then2176
  br label %while.cond2178

while.cond2178:                                   ; preds = %while.body2181, %do.body2177
  %1210 = load i32, i32* @queue_front, align 4
  %1211 = load i32, i32* @queue_rear, align 4
  %cmp2179 = icmp ne i32 %1210, %1211
  br i1 %cmp2179, label %while.body2181, label %while.end2190

while.body2181:                                   ; preds = %while.cond2178
  %1212 = load i32, i32* @queue_front, align 4
  %add2184 = add nsw i32 %1212, 1
  %rem2185 = srem i32 %add2184, 128
  store i32 %rem2185, i32* @queue_front, align 4
  %1213 = load i32, i32* @queue_front, align 4
  %arrayidx2186 = getelementptr inbounds [128 x %struct.__sigset_t], [128 x %struct.__sigset_t]* @signal_mask_queue, i32 0, i32 %1213
  call void @signal_setmask(%struct.__sigset_t* sret %tmp2187, %struct.__sigset_t* byval align 4 %arrayidx2186)
  %1214 = bitcast %struct.__sigset_t* %oset2183 to i8*
  %1215 = bitcast %struct.__sigset_t* %tmp2187 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %1214, i8* %1215, i32 128, i32 4, i1 false)
  %1216 = load i32, i32* @queue_front, align 4
  %arrayidx2188 = getelementptr inbounds [128 x i32], [128 x i32]* @signal_queue, i32 0, i32 %1216
  %1217 = load i32, i32* %arrayidx2188, align 4
  call void @zhandler(i32 %1217)
  call void @signal_setmask(%struct.__sigset_t* sret %tmp2189, %struct.__sigset_t* byval align 4 %oset2183)
  br label %while.cond2178

while.end2190:                                    ; preds = %while.cond2178
  br label %do.end2192

do.end2192:                                       ; preds = %while.end2190
  br label %if.end2193

if.end2193:                                       ; preds = %do.end2192, %do.body2173
  br label %do.end2195

do.end2195:                                       ; preds = %if.end2193
  br label %if.end2196

if.end2196:                                       ; preds = %do.end2195, %lor.lhs.false2065, %do.end2050
  %1218 = load %struct._IO_FILE*, %struct._IO_FILE** %fout, align 4
  %1219 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 4
  %cmp2197 = icmp ne %struct._IO_FILE* %1218, %1219
  br i1 %cmp2197, label %land.lhs.true2199, label %cond.false2218

land.lhs.true2199:                                ; preds = %if.end2196
  %1220 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind2200 = getelementptr inbounds %struct.options, %struct.options* %1220, i32 0, i32 0
  %arrayidx2201 = getelementptr inbounds [128 x i8], [128 x i8]* %ind2200, i32 0, i32 122
  %1221 = load i8, i8* %arrayidx2201, align 2
  %conv2202 = zext i8 %1221 to i32
  %cmp2203 = icmp ne i32 %conv2202, 0
  br i1 %cmp2203, label %cond.true2217, label %lor.lhs.false2205

lor.lhs.false2205:                                ; preds = %land.lhs.true2199
  %1222 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind2206 = getelementptr inbounds %struct.options, %struct.options* %1222, i32 0, i32 0
  %arrayidx2207 = getelementptr inbounds [128 x i8], [128 x i8]* %ind2206, i32 0, i32 115
  %1223 = load i8, i8* %arrayidx2207, align 1
  %conv2208 = zext i8 %1223 to i32
  %cmp2209 = icmp ne i32 %conv2208, 0
  br i1 %cmp2209, label %cond.true2217, label %lor.lhs.false2211

lor.lhs.false2211:                                ; preds = %lor.lhs.false2205
  %1224 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind2212 = getelementptr inbounds %struct.options, %struct.options* %1224, i32 0, i32 0
  %arrayidx2213 = getelementptr inbounds [128 x i8], [128 x i8]* %ind2212, i32 0, i32 118
  %1225 = load i8, i8* %arrayidx2213, align 2
  %conv2214 = zext i8 %1225 to i32
  %cmp2215 = icmp ne i32 %conv2214, 0
  br i1 %cmp2215, label %cond.true2217, label %cond.false2218

cond.true2217:                                    ; preds = %lor.lhs.false2211, %lor.lhs.false2205, %land.lhs.true2199
  br i1 true, label %if.end2235, label %if.then2233

cond.false2218:                                   ; preds = %lor.lhs.false2211, %if.end2196
  %1226 = load %struct._IO_FILE*, %struct._IO_FILE** %fout, align 4
  %1227 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 4
  %cmp2219 = icmp eq %struct._IO_FILE* %1226, %1227
  br i1 %cmp2219, label %cond.true2221, label %cond.false2229

cond.true2221:                                    ; preds = %cond.false2218
  %1228 = load %struct._IO_FILE*, %struct._IO_FILE** %fout, align 4
  %call2222 = call i32 @fflush(%struct._IO_FILE* %1228)
  %cmp2223 = icmp eq i32 %call2222, 0
  br i1 %cmp2223, label %if.end2235, label %lor.lhs.false2225

lor.lhs.false2225:                                ; preds = %cond.true2221
  %call2226 = call i32* @__errno_location()
  %1229 = load i32, i32* %call2226, align 4
  %cmp2227 = icmp eq i32 %1229, 9
  br i1 %cmp2227, label %if.end2235, label %if.then2233

cond.false2229:                                   ; preds = %cond.false2218
  %1230 = load %struct._IO_FILE*, %struct._IO_FILE** %fout, align 4
  %call2230 = call i32 @fclose(%struct._IO_FILE* %1230)
  %cmp2231 = icmp eq i32 %call2230, 0
  br i1 %cmp2231, label %if.end2235, label %if.then2233

if.then2233:                                      ; preds = %cond.false2229, %lor.lhs.false2225, %cond.true2217
  %1231 = load i8*, i8** %name.addr, align 4
  %call2234 = call i32* @__errno_location()
  %1232 = load i32, i32* %call2234, align 4
  call void (i8*, i8*, ...) @zwarnnam(i8* %1231, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.107, i32 0, i32 0), i32 %1232)
  store i32 1, i32* %ret, align 4
  br label %if.end2235

if.end2235:                                       ; preds = %if.then2233, %cond.false2229, %lor.lhs.false2225, %cond.true2221, %cond.true2217
  %1233 = load i32, i32* %ret, align 4
  store i32 %1233, i32* %retval, align 4
  br label %return

return:                                           ; preds = %if.end2235, %if.end1838, %if.end1571, %if.end1513, %if.end1433, %if.end1336, %if.then1132, %do.end1082, %do.end1013, %do.end953, %if.end882, %if.then510, %if.then482, %if.then477, %if.then470, %if.then465, %if.then446, %if.then369, %if.then211, %do.end177, %if.then162, %if.then118, %if.then108, %if.then104, %if.then90, %if.then51, %if.then
  %1234 = load i32, i32* %retval, align 4
  ret i32 %1234
}

declare i8* @getkeystring(i8*, i32*, i32, i32*) #1

declare i8* @hcalloc(i32) #1

declare i8* @unmetafy(i8*, i32*) #1

declare i8* @promptexpand(i8*, i32, i8*, i8*, i32*) #1

declare i8* @dupstrpfx(i8*, i32) #1

declare void @free(i8*) #1

declare %struct.nameddir* @finddir(i8*) #1

declare i32 @strlen(i8*) #1

declare i32 @sprintf(i8*, i8*, ...) #1

declare i32 @dup(i32) #1

declare i32 @close(i32) #1

declare %struct._IO_FILE* @open_memstream(i8**, i32*) #1

; Function Attrs: nounwind readonly
declare i32 @isalpha(i32) #3

declare i32 @mbrtowc(i32*, i8*, i32, %struct.__mbstate_t*) #1

declare i32 @wcwidth(i32) #1

declare i32 @fwrite(i8*, i32, i32, %struct._IO_FILE*) #1

declare %struct.param* @setsparam(i8*, i8*) #1

declare i8* @sepjoin(i8**, i8*, i32) #1

declare void @histsplitwords(i8*, i16**, i32*, i32*, i32) #1

declare %struct.histent* @prepnexthistent() #1

declare i8* @zjoin(i8**, i32, i32) #1

declare i32 @time(i32*) #1

declare void @addhistnode(%struct.hashtable*, i8*, i8*) #1

declare i32 @zexpandtabs(i8*, i32, i32, i32, %struct._IO_FILE*, i32) #1

declare %struct.value* @getvalue(%struct.value*, i8**, i32) #1

declare i32 @putc(i32, %struct._IO_FILE*) #1

declare i32 @strtoul(i8*, i8**, i32) #1

declare i32 @mathevali(i8*) #1

declare i32 @mbrlen(i8*, i32, %struct.__mbstate_t*) #1

declare i8* @quotestring(i8*, i32) #1

declare %struct.param* @setiparam(i8*, i32) #1

declare void @mb_charinit() #1

declare i32 @mb_metacharlenconv(i8*, i32*) #1

declare double @strtod(i8*, i8**) #1

declare void @matheval(%struct.mnumber* sret, i8*) #1

declare i32 @isnan(double) #1

declare i32 @isinf(double) #1

declare i32 @zstrtoul_underscore(i8*, i32*) #1

; Function Attrs: noinline nounwind
define i32 @bin_shift(i8* %name, i8** %argv, %struct.options* %ops, i32 %func) #0 {
entry:
  %retval = alloca i32, align 4
  %name.addr = alloca i8*, align 4
  %argv.addr = alloca i8**, align 4
  %ops.addr = alloca %struct.options*, align 4
  %func.addr = alloca i32, align 4
  %num = alloca i32, align 4
  %l = alloca i32, align 4
  %ret = alloca i32, align 4
  %s = alloca i8**, align 4
  %oset = alloca %struct.__sigset_t, align 4
  %tmp = alloca %struct.__sigset_t, align 4
  %tmp9 = alloca %struct.__sigset_t, align 4
  %s2 = alloca i8**, align 4
  %src = alloca i8**, align 4
  %dst = alloca i8**, align 4
  %count = alloca i32, align 4
  %oset104 = alloca %struct.__sigset_t, align 4
  %tmp108 = alloca %struct.__sigset_t, align 4
  %tmp110 = alloca %struct.__sigset_t, align 4
  store i8* %name, i8** %name.addr, align 4
  store i8** %argv, i8*** %argv.addr, align 4
  store %struct.options* %ops, %struct.options** %ops.addr, align 4
  store i32 %func, i32* %func.addr, align 4
  store i32 1, i32* %num, align 4
  store i32 0, i32* %ret, align 4
  %0 = load i32, i32* @queueing_enabled, align 4
  %inc = add nsw i32 %0, 1
  store i32 %inc, i32* @queueing_enabled, align 4
  %1 = load i8**, i8*** %argv.addr, align 4
  %2 = load i8*, i8** %1, align 4
  %tobool = icmp ne i8* %2, null
  br i1 %tobool, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %entry
  %3 = load i8**, i8*** %argv.addr, align 4
  %4 = load i8*, i8** %3, align 4
  %call = call i8** @getaparam(i8* %4)
  %tobool1 = icmp ne i8** %call, null
  br i1 %tobool1, label %if.end, label %if.then

if.then:                                          ; preds = %land.lhs.true
  %5 = load i8**, i8*** %argv.addr, align 4
  %incdec.ptr = getelementptr inbounds i8*, i8** %5, i32 1
  store i8** %incdec.ptr, i8*** %argv.addr, align 4
  %6 = load i8*, i8** %5, align 4
  %call2 = call i32 @mathevali(i8* %6)
  store i32 %call2, i32* %num, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %7 = load i32, i32* %num, align 4
  %cmp = icmp slt i32 %7, 0
  br i1 %cmp, label %if.then3, label %if.end12

if.then3:                                         ; preds = %if.end
  br label %do.body

do.body:                                          ; preds = %if.then3
  %8 = load i32, i32* @queueing_enabled, align 4
  %dec = add nsw i32 %8, -1
  store i32 %dec, i32* @queueing_enabled, align 4
  %tobool4 = icmp ne i32 %dec, 0
  br i1 %tobool4, label %if.end10, label %if.then5

if.then5:                                         ; preds = %do.body
  br label %do.body6

do.body6:                                         ; preds = %if.then5
  br label %while.cond

while.cond:                                       ; preds = %while.body, %do.body6
  %9 = load i32, i32* @queue_front, align 4
  %10 = load i32, i32* @queue_rear, align 4
  %cmp7 = icmp ne i32 %9, %10
  br i1 %cmp7, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %11 = load i32, i32* @queue_front, align 4
  %add = add nsw i32 %11, 1
  %rem = srem i32 %add, 128
  store i32 %rem, i32* @queue_front, align 4
  %12 = load i32, i32* @queue_front, align 4
  %arrayidx = getelementptr inbounds [128 x %struct.__sigset_t], [128 x %struct.__sigset_t]* @signal_mask_queue, i32 0, i32 %12
  call void @signal_setmask(%struct.__sigset_t* sret %tmp, %struct.__sigset_t* byval align 4 %arrayidx)
  %13 = bitcast %struct.__sigset_t* %oset to i8*
  %14 = bitcast %struct.__sigset_t* %tmp to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %13, i8* %14, i32 128, i32 4, i1 false)
  %15 = load i32, i32* @queue_front, align 4
  %arrayidx8 = getelementptr inbounds [128 x i32], [128 x i32]* @signal_queue, i32 0, i32 %15
  %16 = load i32, i32* %arrayidx8, align 4
  call void @zhandler(i32 %16)
  call void @signal_setmask(%struct.__sigset_t* sret %tmp9, %struct.__sigset_t* byval align 4 %oset)
  br label %while.cond

while.end:                                        ; preds = %while.cond
  br label %do.end

do.end:                                           ; preds = %while.end
  br label %if.end10

if.end10:                                         ; preds = %do.end, %do.body
  br label %do.end11

do.end11:                                         ; preds = %if.end10
  %17 = load i8*, i8** %name.addr, align 4
  call void (i8*, i8*, ...) @zwarnnam(i8* %17, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.117, i32 0, i32 0))
  store i32 1, i32* %retval, align 4
  br label %return

if.end12:                                         ; preds = %if.end
  %18 = load i8**, i8*** %argv.addr, align 4
  %19 = load i8*, i8** %18, align 4
  %tobool13 = icmp ne i8* %19, null
  br i1 %tobool13, label %if.then14, label %if.else50

if.then14:                                        ; preds = %if.end12
  br label %for.cond

for.cond:                                         ; preds = %for.inc47, %if.then14
  %20 = load i8**, i8*** %argv.addr, align 4
  %21 = load i8*, i8** %20, align 4
  %tobool15 = icmp ne i8* %21, null
  br i1 %tobool15, label %for.body, label %for.end49

for.body:                                         ; preds = %for.cond
  %22 = load i8**, i8*** %argv.addr, align 4
  %23 = load i8*, i8** %22, align 4
  %call16 = call i8** @getaparam(i8* %23)
  store i8** %call16, i8*** %s, align 4
  %tobool17 = icmp ne i8** %call16, null
  br i1 %tobool17, label %if.then18, label %if.end46

if.then18:                                        ; preds = %for.body
  %24 = load i8**, i8*** %s, align 4
  %25 = load i32, i32* %num, align 4
  %call19 = call signext i8 @arrlen_lt(i8** %24, i32 %25)
  %tobool20 = icmp ne i8 %call19, 0
  br i1 %tobool20, label %if.then21, label %if.end23

if.then21:                                        ; preds = %if.then18
  %26 = load i8*, i8** %name.addr, align 4
  call void (i8*, i8*, ...) @zwarnnam(i8* %26, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.118, i32 0, i32 0))
  %27 = load i32, i32* %ret, align 4
  %inc22 = add nsw i32 %27, 1
  store i32 %inc22, i32* %ret, align 4
  br label %for.inc47

if.end23:                                         ; preds = %if.then18
  %28 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind = getelementptr inbounds %struct.options, %struct.options* %28, i32 0, i32 0
  %arrayidx24 = getelementptr inbounds [128 x i8], [128 x i8]* %ind, i32 0, i32 112
  %29 = load i8, i8* %arrayidx24, align 4
  %conv = zext i8 %29 to i32
  %cmp25 = icmp ne i32 %conv, 0
  br i1 %cmp25, label %if.then27, label %if.else

if.then27:                                        ; preds = %if.end23
  %30 = load i8**, i8*** %s, align 4
  %call32 = call i32 @arrlen(i8** %30)
  store i32 %call32, i32* %l, align 4
  %31 = load i8**, i8*** %s, align 4
  store i8** %31, i8*** %src, align 4
  %32 = load i32, i32* %l, align 4
  %33 = load i32, i32* %num, align 4
  %sub = sub nsw i32 %32, %33
  %add33 = add nsw i32 %sub, 1
  %mul = mul i32 %add33, 4
  %call34 = call i8* @zalloc(i32 %mul)
  %34 = bitcast i8* %call34 to i8**
  store i8** %34, i8*** %s2, align 4
  store i8** %34, i8*** %dst, align 4
  %35 = load i32, i32* %l, align 4
  %36 = load i32, i32* %num, align 4
  %sub35 = sub nsw i32 %35, %36
  store i32 %sub35, i32* %count, align 4
  br label %for.cond36

for.cond36:                                       ; preds = %for.inc, %if.then27
  %37 = load i32, i32* %count, align 4
  %tobool37 = icmp ne i32 %37, 0
  br i1 %tobool37, label %for.body38, label %for.end

for.body38:                                       ; preds = %for.cond36
  %38 = load i8**, i8*** %src, align 4
  %incdec.ptr39 = getelementptr inbounds i8*, i8** %38, i32 1
  store i8** %incdec.ptr39, i8*** %src, align 4
  %39 = load i8*, i8** %38, align 4
  %call40 = call i8* @ztrdup(i8* %39)
  %40 = load i8**, i8*** %dst, align 4
  %incdec.ptr41 = getelementptr inbounds i8*, i8** %40, i32 1
  store i8** %incdec.ptr41, i8*** %dst, align 4
  store i8* %call40, i8** %40, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body38
  %41 = load i32, i32* %count, align 4
  %dec42 = add nsw i32 %41, -1
  store i32 %dec42, i32* %count, align 4
  br label %for.cond36

for.end:                                          ; preds = %for.cond36
  %42 = load i8**, i8*** %dst, align 4
  store i8* null, i8** %42, align 4
  %43 = load i8**, i8*** %s2, align 4
  store i8** %43, i8*** %s, align 4
  br label %if.end44

if.else:                                          ; preds = %if.end23
  %44 = load i8**, i8*** %s, align 4
  %45 = load i32, i32* %num, align 4
  %add.ptr = getelementptr inbounds i8*, i8** %44, i32 %45
  %call43 = call i8** @zarrdup(i8** %add.ptr)
  store i8** %call43, i8*** %s, align 4
  br label %if.end44

if.end44:                                         ; preds = %if.else, %for.end
  %46 = load i8**, i8*** %argv.addr, align 4
  %47 = load i8*, i8** %46, align 4
  %48 = load i8**, i8*** %s, align 4
  %call45 = call %struct.param* @setaparam(i8* %47, i8** %48)
  br label %if.end46

if.end46:                                         ; preds = %if.end44, %for.body
  br label %for.inc47

for.inc47:                                        ; preds = %if.end46, %if.then21
  %49 = load i8**, i8*** %argv.addr, align 4
  %incdec.ptr48 = getelementptr inbounds i8*, i8** %49, i32 1
  store i8** %incdec.ptr48, i8*** %argv.addr, align 4
  br label %for.cond

for.end49:                                        ; preds = %for.cond
  br label %if.end93

if.else50:                                        ; preds = %if.end12
  %50 = load i32, i32* %num, align 4
  %51 = load i8**, i8*** @pparams, align 4
  %call51 = call i32 @arrlen(i8** %51)
  store i32 %call51, i32* %l, align 4
  %cmp52 = icmp sgt i32 %50, %call51
  br i1 %cmp52, label %if.then54, label %if.else55

if.then54:                                        ; preds = %if.else50
  %52 = load i8*, i8** %name.addr, align 4
  call void (i8*, i8*, ...) @zwarnnam(i8* %52, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.118, i32 0, i32 0))
  store i32 1, i32* %ret, align 4
  br label %if.end92

if.else55:                                        ; preds = %if.else50
  %53 = load i32, i32* %l, align 4
  %54 = load i32, i32* %num, align 4
  %sub56 = sub nsw i32 %53, %54
  %add57 = add nsw i32 %sub56, 1
  %mul58 = mul i32 %add57, 4
  %call59 = call i8* @zalloc(i32 %mul58)
  %55 = bitcast i8* %call59 to i8**
  store i8** %55, i8*** %s, align 4
  %56 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind60 = getelementptr inbounds %struct.options, %struct.options* %56, i32 0, i32 0
  %arrayidx61 = getelementptr inbounds [128 x i8], [128 x i8]* %ind60, i32 0, i32 112
  %57 = load i8, i8* %arrayidx61, align 4
  %conv62 = zext i8 %57 to i32
  %cmp63 = icmp ne i32 %conv62, 0
  br i1 %cmp63, label %if.then65, label %if.else78

if.then65:                                        ; preds = %if.else55
  %58 = load i8**, i8*** %s, align 4
  %59 = bitcast i8** %58 to i8*
  %60 = load i8**, i8*** @pparams, align 4
  %61 = bitcast i8** %60 to i8*
  %62 = load i32, i32* %l, align 4
  %63 = load i32, i32* %num, align 4
  %sub66 = sub nsw i32 %62, %63
  %mul67 = mul i32 %sub66, 4
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %59, i8* %61, i32 %mul67, i32 4, i1 false)
  %64 = load i8**, i8*** %s, align 4
  %65 = load i32, i32* %l, align 4
  %66 = load i32, i32* %num, align 4
  %sub68 = sub nsw i32 %65, %66
  %arrayidx69 = getelementptr inbounds i8*, i8** %64, i32 %sub68
  store i8* null, i8** %arrayidx69, align 4
  br label %while.cond70

while.cond70:                                     ; preds = %while.body73, %if.then65
  %67 = load i32, i32* %num, align 4
  %dec71 = add nsw i32 %67, -1
  store i32 %dec71, i32* %num, align 4
  %tobool72 = icmp ne i32 %67, 0
  br i1 %tobool72, label %while.body73, label %while.end77

while.body73:                                     ; preds = %while.cond70
  %68 = load i8**, i8*** @pparams, align 4
  %69 = load i32, i32* %l, align 4
  %sub74 = sub nsw i32 %69, 1
  %70 = load i32, i32* %num, align 4
  %sub75 = sub nsw i32 %sub74, %70
  %arrayidx76 = getelementptr inbounds i8*, i8** %68, i32 %sub75
  %71 = load i8*, i8** %arrayidx76, align 4
  call void @zsfree(i8* %71)
  br label %while.cond70

while.end77:                                      ; preds = %while.cond70
  br label %if.end89

if.else78:                                        ; preds = %if.else55
  %72 = load i8**, i8*** %s, align 4
  %73 = bitcast i8** %72 to i8*
  %74 = load i8**, i8*** @pparams, align 4
  %75 = load i32, i32* %num, align 4
  %add.ptr79 = getelementptr inbounds i8*, i8** %74, i32 %75
  %76 = bitcast i8** %add.ptr79 to i8*
  %77 = load i32, i32* %l, align 4
  %78 = load i32, i32* %num, align 4
  %sub80 = sub nsw i32 %77, %78
  %add81 = add nsw i32 %sub80, 1
  %mul82 = mul i32 %add81, 4
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %73, i8* %76, i32 %mul82, i32 4, i1 false)
  br label %while.cond83

while.cond83:                                     ; preds = %while.body86, %if.else78
  %79 = load i32, i32* %num, align 4
  %dec84 = add nsw i32 %79, -1
  store i32 %dec84, i32* %num, align 4
  %tobool85 = icmp ne i32 %79, 0
  br i1 %tobool85, label %while.body86, label %while.end88

while.body86:                                     ; preds = %while.cond83
  %80 = load i8**, i8*** @pparams, align 4
  %81 = load i32, i32* %num, align 4
  %arrayidx87 = getelementptr inbounds i8*, i8** %80, i32 %81
  %82 = load i8*, i8** %arrayidx87, align 4
  call void @zsfree(i8* %82)
  br label %while.cond83

while.end88:                                      ; preds = %while.cond83
  br label %if.end89

if.end89:                                         ; preds = %while.end88, %while.end77
  %83 = load i8**, i8*** @pparams, align 4
  %84 = bitcast i8** %83 to i8*
  %85 = load i32, i32* %l, align 4
  %add90 = add nsw i32 %85, 1
  %mul91 = mul i32 %add90, 4
  call void @zfree(i8* %84, i32 %mul91)
  %86 = load i8**, i8*** %s, align 4
  store i8** %86, i8*** @pparams, align 4
  br label %if.end92

if.end92:                                         ; preds = %if.end89, %if.then54
  br label %if.end93

if.end93:                                         ; preds = %if.end92, %for.end49
  br label %do.body94

do.body94:                                        ; preds = %if.end93
  %87 = load i32, i32* @queueing_enabled, align 4
  %dec95 = add nsw i32 %87, -1
  store i32 %dec95, i32* @queueing_enabled, align 4
  %tobool96 = icmp ne i32 %dec95, 0
  br i1 %tobool96, label %if.end113, label %if.then97

if.then97:                                        ; preds = %do.body94
  br label %do.body98

do.body98:                                        ; preds = %if.then97
  br label %while.cond99

while.cond99:                                     ; preds = %while.body102, %do.body98
  %88 = load i32, i32* @queue_front, align 4
  %89 = load i32, i32* @queue_rear, align 4
  %cmp100 = icmp ne i32 %88, %89
  br i1 %cmp100, label %while.body102, label %while.end111

while.body102:                                    ; preds = %while.cond99
  %90 = load i32, i32* @queue_front, align 4
  %add105 = add nsw i32 %90, 1
  %rem106 = srem i32 %add105, 128
  store i32 %rem106, i32* @queue_front, align 4
  %91 = load i32, i32* @queue_front, align 4
  %arrayidx107 = getelementptr inbounds [128 x %struct.__sigset_t], [128 x %struct.__sigset_t]* @signal_mask_queue, i32 0, i32 %91
  call void @signal_setmask(%struct.__sigset_t* sret %tmp108, %struct.__sigset_t* byval align 4 %arrayidx107)
  %92 = bitcast %struct.__sigset_t* %oset104 to i8*
  %93 = bitcast %struct.__sigset_t* %tmp108 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %92, i8* %93, i32 128, i32 4, i1 false)
  %94 = load i32, i32* @queue_front, align 4
  %arrayidx109 = getelementptr inbounds [128 x i32], [128 x i32]* @signal_queue, i32 0, i32 %94
  %95 = load i32, i32* %arrayidx109, align 4
  call void @zhandler(i32 %95)
  call void @signal_setmask(%struct.__sigset_t* sret %tmp110, %struct.__sigset_t* byval align 4 %oset104)
  br label %while.cond99

while.end111:                                     ; preds = %while.cond99
  br label %do.end112

do.end112:                                        ; preds = %while.end111
  br label %if.end113

if.end113:                                        ; preds = %do.end112, %do.body94
  br label %do.end114

do.end114:                                        ; preds = %if.end113
  %96 = load i32, i32* %ret, align 4
  store i32 %96, i32* %retval, align 4
  br label %return

return:                                           ; preds = %do.end114, %do.end11
  %97 = load i32, i32* %retval, align 4
  ret i32 %97
}

declare signext i8 @arrlen_lt(i8**, i32) #1

declare void @zfree(i8*, i32) #1

; Function Attrs: noinline nounwind
define i32 @bin_getopts(i8* %name, i8** %argv, %struct.options* %ops, i32 %func) #0 {
entry:
  %retval = alloca i32, align 4
  %name.addr = alloca i8*, align 4
  %argv.addr = alloca i8**, align 4
  %ops.addr = alloca %struct.options*, align 4
  %func.addr = alloca i32, align 4
  %lenstr = alloca i32, align 4
  %lenoptstr = alloca i32, align 4
  %quiet = alloca i32, align 4
  %lenoptbuf = alloca i32, align 4
  %optstr = alloca i8*, align 4
  %var = alloca i8*, align 4
  %args = alloca i8**, align 4
  %str = alloca i8*, align 4
  %optbuf = alloca [2 x i8], align 1
  %p = alloca i8*, align 4
  %opch = alloca i8, align 1
  store i8* %name, i8** %name.addr, align 4
  store i8** %argv, i8*** %argv.addr, align 4
  store %struct.options* %ops, %struct.options** %ops.addr, align 4
  store i32 %func, i32* %func.addr, align 4
  %0 = load i8**, i8*** %argv.addr, align 4
  %incdec.ptr = getelementptr inbounds i8*, i8** %0, i32 1
  store i8** %incdec.ptr, i8*** %argv.addr, align 4
  %1 = load i8*, i8** %0, align 4
  %call = call i8* @unmetafy(i8* %1, i32* %lenoptstr)
  store i8* %call, i8** %optstr, align 4
  %2 = load i8**, i8*** %argv.addr, align 4
  %incdec.ptr1 = getelementptr inbounds i8*, i8** %2, i32 1
  store i8** %incdec.ptr1, i8*** %argv.addr, align 4
  %3 = load i8*, i8** %2, align 4
  store i8* %3, i8** %var, align 4
  %4 = load i8**, i8*** %argv.addr, align 4
  %5 = load i8*, i8** %4, align 4
  %tobool = icmp ne i8* %5, null
  br i1 %tobool, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %6 = load i8**, i8*** %argv.addr, align 4
  br label %cond.end

cond.false:                                       ; preds = %entry
  %7 = load i8**, i8*** @pparams, align 4
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8** [ %6, %cond.true ], [ %7, %cond.false ]
  store i8** %cond, i8*** %args, align 4
  %8 = bitcast [2 x i8]* %optbuf to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %8, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @bin_getopts.optbuf, i32 0, i32 0), i32 2, i32 1, i1 false)
  %9 = load i32, i32* @zoptind, align 4
  %cmp = icmp slt i32 %9, 1
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %cond.end
  store i32 1, i32* @zoptind, align 4
  store i32 0, i32* @optcind, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %cond.end
  %10 = load i8**, i8*** %args, align 4
  %11 = load i32, i32* @zoptind, align 4
  %call2 = call signext i8 @arrlen_lt(i8** %10, i32 %11)
  %tobool3 = icmp ne i8 %call2, 0
  br i1 %tobool3, label %if.then4, label %if.end5

if.then4:                                         ; preds = %if.end
  store i32 1, i32* %retval, align 4
  br label %return

if.end5:                                          ; preds = %if.end
  %12 = load i8*, i8** %optstr, align 4
  %13 = load i8, i8* %12, align 1
  %conv = sext i8 %13 to i32
  %cmp6 = icmp eq i32 %conv, 58
  %conv7 = zext i1 %cmp6 to i32
  store i32 %conv7, i32* %quiet, align 4
  %14 = load i32, i32* %quiet, align 4
  %15 = load i8*, i8** %optstr, align 4
  %add.ptr = getelementptr inbounds i8, i8* %15, i32 %14
  store i8* %add.ptr, i8** %optstr, align 4
  %16 = load i32, i32* %quiet, align 4
  %17 = load i32, i32* %lenoptstr, align 4
  %sub = sub nsw i32 %17, %16
  store i32 %sub, i32* %lenoptstr, align 4
  %18 = load i8**, i8*** %args, align 4
  %19 = load i32, i32* @zoptind, align 4
  %sub8 = sub nsw i32 %19, 1
  %arrayidx = getelementptr inbounds i8*, i8** %18, i32 %sub8
  %20 = load i8*, i8** %arrayidx, align 4
  %call9 = call i8* @dupstring(i8* %20)
  %call10 = call i8* @unmetafy(i8* %call9, i32* %lenstr)
  store i8* %call10, i8** %str, align 4
  %21 = load i32, i32* %lenstr, align 4
  %tobool11 = icmp ne i32 %21, 0
  br i1 %tobool11, label %if.end13, label %if.then12

if.then12:                                        ; preds = %if.end5
  store i32 1, i32* %retval, align 4
  br label %return

if.end13:                                         ; preds = %if.end5
  %22 = load i32, i32* @optcind, align 4
  %23 = load i32, i32* %lenstr, align 4
  %cmp14 = icmp sge i32 %22, %23
  br i1 %cmp14, label %if.then16, label %if.end25

if.then16:                                        ; preds = %if.end13
  store i32 0, i32* @optcind, align 4
  %24 = load i8**, i8*** %args, align 4
  %25 = load i32, i32* @zoptind, align 4
  %inc = add nsw i32 %25, 1
  store i32 %inc, i32* @zoptind, align 4
  %arrayidx17 = getelementptr inbounds i8*, i8** %24, i32 %25
  %26 = load i8*, i8** %arrayidx17, align 4
  %tobool18 = icmp ne i8* %26, null
  br i1 %tobool18, label %if.end20, label %if.then19

if.then19:                                        ; preds = %if.then16
  store i32 1, i32* %retval, align 4
  br label %return

if.end20:                                         ; preds = %if.then16
  %27 = load i8**, i8*** %args, align 4
  %28 = load i32, i32* @zoptind, align 4
  %sub21 = sub nsw i32 %28, 1
  %arrayidx22 = getelementptr inbounds i8*, i8** %27, i32 %sub21
  %29 = load i8*, i8** %arrayidx22, align 4
  %call23 = call i8* @dupstring(i8* %29)
  %call24 = call i8* @unmetafy(i8* %call23, i32* %lenstr)
  store i8* %call24, i8** %str, align 4
  br label %if.end25

if.end25:                                         ; preds = %if.end20, %if.end13
  %30 = load i32, i32* @optcind, align 4
  %tobool26 = icmp ne i32 %30, 0
  br i1 %tobool26, label %if.end54, label %if.then27

if.then27:                                        ; preds = %if.end25
  %31 = load i32, i32* %lenstr, align 4
  %cmp28 = icmp slt i32 %31, 2
  br i1 %cmp28, label %if.then36, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.then27
  %32 = load i8*, i8** %str, align 4
  %33 = load i8, i8* %32, align 1
  %conv30 = sext i8 %33 to i32
  %cmp31 = icmp ne i32 %conv30, 45
  br i1 %cmp31, label %land.lhs.true, label %if.end37

land.lhs.true:                                    ; preds = %lor.lhs.false
  %34 = load i8*, i8** %str, align 4
  %35 = load i8, i8* %34, align 1
  %conv33 = sext i8 %35 to i32
  %cmp34 = icmp ne i32 %conv33, 43
  br i1 %cmp34, label %if.then36, label %if.end37

if.then36:                                        ; preds = %land.lhs.true, %if.then27
  store i32 1, i32* %retval, align 4
  br label %return

if.end37:                                         ; preds = %land.lhs.true, %lor.lhs.false
  %36 = load i32, i32* %lenstr, align 4
  %cmp38 = icmp eq i32 %36, 2
  br i1 %cmp38, label %land.lhs.true40, label %if.end52

land.lhs.true40:                                  ; preds = %if.end37
  %37 = load i8*, i8** %str, align 4
  %arrayidx41 = getelementptr inbounds i8, i8* %37, i32 0
  %38 = load i8, i8* %arrayidx41, align 1
  %conv42 = sext i8 %38 to i32
  %cmp43 = icmp eq i32 %conv42, 45
  br i1 %cmp43, label %land.lhs.true45, label %if.end52

land.lhs.true45:                                  ; preds = %land.lhs.true40
  %39 = load i8*, i8** %str, align 4
  %arrayidx46 = getelementptr inbounds i8, i8* %39, i32 1
  %40 = load i8, i8* %arrayidx46, align 1
  %conv47 = sext i8 %40 to i32
  %cmp48 = icmp eq i32 %conv47, 45
  br i1 %cmp48, label %if.then50, label %if.end52

if.then50:                                        ; preds = %land.lhs.true45
  %41 = load i32, i32* @zoptind, align 4
  %inc51 = add nsw i32 %41, 1
  store i32 %inc51, i32* @zoptind, align 4
  store i32 1, i32* %retval, align 4
  br label %return

if.end52:                                         ; preds = %land.lhs.true45, %land.lhs.true40, %if.end37
  %42 = load i32, i32* @optcind, align 4
  %inc53 = add nsw i32 %42, 1
  store i32 %inc53, i32* @optcind, align 4
  br label %if.end54

if.end54:                                         ; preds = %if.end52, %if.end25
  %43 = load i8*, i8** %str, align 4
  %44 = load i32, i32* @optcind, align 4
  %inc55 = add nsw i32 %44, 1
  store i32 %inc55, i32* @optcind, align 4
  %arrayidx56 = getelementptr inbounds i8, i8* %43, i32 %44
  %45 = load i8, i8* %arrayidx56, align 1
  store i8 %45, i8* %opch, align 1
  %46 = load i8*, i8** %str, align 4
  %arrayidx57 = getelementptr inbounds i8, i8* %46, i32 0
  %47 = load i8, i8* %arrayidx57, align 1
  %conv58 = sext i8 %47 to i32
  %cmp59 = icmp eq i32 %conv58, 43
  br i1 %cmp59, label %if.then61, label %if.else

if.then61:                                        ; preds = %if.end54
  %arrayidx62 = getelementptr inbounds [2 x i8], [2 x i8]* %optbuf, i32 0, i32 0
  store i8 43, i8* %arrayidx62, align 1
  store i32 2, i32* %lenoptbuf, align 4
  br label %if.end63

if.else:                                          ; preds = %if.end54
  store i32 1, i32* %lenoptbuf, align 4
  br label %if.end63

if.end63:                                         ; preds = %if.else, %if.then61
  %48 = load i8, i8* %opch, align 1
  %49 = load i32, i32* %lenoptbuf, align 4
  %sub64 = sub nsw i32 %49, 1
  %arrayidx65 = getelementptr inbounds [2 x i8], [2 x i8]* %optbuf, i32 0, i32 %sub64
  store i8 %48, i8* %arrayidx65, align 1
  %50 = load i8, i8* %opch, align 1
  %conv66 = sext i8 %50 to i32
  %cmp67 = icmp eq i32 %conv66, 58
  br i1 %cmp67, label %if.then73, label %lor.lhs.false69

lor.lhs.false69:                                  ; preds = %if.end63
  %51 = load i8*, i8** %optstr, align 4
  %52 = load i8, i8* %opch, align 1
  %conv70 = sext i8 %52 to i32
  %53 = load i32, i32* %lenoptstr, align 4
  %call71 = call i8* @memchr(i8* %51, i32 %conv70, i32 %53)
  store i8* %call71, i8** %p, align 4
  %tobool72 = icmp ne i8* %call71, null
  br i1 %tobool72, label %if.end89, label %if.then73

if.then73:                                        ; preds = %lor.lhs.false69, %if.end63
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.119, i32 0, i32 0), i8** %p, align 4
  br label %err

err:                                              ; preds = %if.then100, %if.then73
  %54 = load i8*, i8** @zoptarg, align 4
  call void @zsfree(i8* %54)
  %55 = load i8*, i8** %var, align 4
  %56 = load i8*, i8** %p, align 4
  %call74 = call i8* @ztrdup(i8* %56)
  %call75 = call %struct.param* @setsparam(i8* %55, i8* %call74)
  %57 = load i32, i32* %quiet, align 4
  %tobool76 = icmp ne i32 %57, 0
  br i1 %tobool76, label %if.then77, label %if.else79

if.then77:                                        ; preds = %err
  %arraydecay = getelementptr inbounds [2 x i8], [2 x i8]* %optbuf, i32 0, i32 0
  %58 = load i32, i32* %lenoptbuf, align 4
  %call78 = call i8* @metafy(i8* %arraydecay, i32 %58, i32 3)
  store i8* %call78, i8** @zoptarg, align 4
  br label %if.end88

if.else79:                                        ; preds = %err
  %59 = load i8*, i8** %p, align 4
  %60 = load i8, i8* %59, align 1
  %conv80 = sext i8 %60 to i32
  %cmp81 = icmp eq i32 %conv80, 63
  %cond83 = select i1 %cmp81, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.6, i32 0, i32 0), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.120, i32 0, i32 0)
  %61 = load i32, i32* %lenoptbuf, align 4
  %arrayidx84 = getelementptr inbounds [4 x i8], [4 x i8]* @.str.121, i32 0, i32 %61
  %62 = load i8, i8* %arrayidx84, align 1
  %conv85 = sext i8 %62 to i32
  %63 = load i8, i8* %opch, align 1
  %conv86 = sext i8 %63 to i32
  call void (i8*, ...) @zwarn(i8* %cond83, i32 %conv85, i32 %conv86)
  %call87 = call i8* @ztrdup(i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.34, i32 0, i32 0))
  store i8* %call87, i8** @zoptarg, align 4
  br label %if.end88

if.end88:                                         ; preds = %if.else79, %if.then77
  store i32 0, i32* %retval, align 4
  br label %return

if.end89:                                         ; preds = %lor.lhs.false69
  %64 = load i8*, i8** %p, align 4
  %arrayidx90 = getelementptr inbounds i8, i8* %64, i32 1
  %65 = load i8, i8* %arrayidx90, align 1
  %conv91 = sext i8 %65 to i32
  %cmp92 = icmp eq i32 %conv91, 58
  br i1 %cmp92, label %if.then94, label %if.else111

if.then94:                                        ; preds = %if.end89
  %66 = load i32, i32* @optcind, align 4
  %67 = load i32, i32* %lenstr, align 4
  %cmp95 = icmp eq i32 %66, %67
  br i1 %cmp95, label %if.then97, label %if.else105

if.then97:                                        ; preds = %if.then94
  %68 = load i8**, i8*** %args, align 4
  %69 = load i32, i32* @zoptind, align 4
  %arrayidx98 = getelementptr inbounds i8*, i8** %68, i32 %69
  %70 = load i8*, i8** %arrayidx98, align 4
  %tobool99 = icmp ne i8* %70, null
  br i1 %tobool99, label %if.end101, label %if.then100

if.then100:                                       ; preds = %if.then97
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.122, i32 0, i32 0), i8** %p, align 4
  br label %err

if.end101:                                        ; preds = %if.then97
  %71 = load i8**, i8*** %args, align 4
  %72 = load i32, i32* @zoptind, align 4
  %inc102 = add nsw i32 %72, 1
  store i32 %inc102, i32* @zoptind, align 4
  %arrayidx103 = getelementptr inbounds i8*, i8** %71, i32 %72
  %73 = load i8*, i8** %arrayidx103, align 4
  %call104 = call i8* @ztrdup(i8* %73)
  store i8* %call104, i8** %p, align 4
  br label %if.end109

if.else105:                                       ; preds = %if.then94
  %74 = load i8*, i8** %str, align 4
  %75 = load i32, i32* @optcind, align 4
  %add.ptr106 = getelementptr inbounds i8, i8* %74, i32 %75
  %76 = load i32, i32* %lenstr, align 4
  %77 = load i32, i32* @optcind, align 4
  %sub107 = sub nsw i32 %76, %77
  %call108 = call i8* @metafy(i8* %add.ptr106, i32 %sub107, i32 3)
  store i8* %call108, i8** %p, align 4
  br label %if.end109

if.end109:                                        ; preds = %if.else105, %if.end101
  store i32 0, i32* @optcind, align 4
  %78 = load i32, i32* @zoptind, align 4
  %inc110 = add nsw i32 %78, 1
  store i32 %inc110, i32* @zoptind, align 4
  %79 = load i8*, i8** @zoptarg, align 4
  call void @zsfree(i8* %79)
  %80 = load i8*, i8** %p, align 4
  store i8* %80, i8** @zoptarg, align 4
  br label %if.end113

if.else111:                                       ; preds = %if.end89
  %81 = load i8*, i8** @zoptarg, align 4
  call void @zsfree(i8* %81)
  %call112 = call i8* @ztrdup(i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.34, i32 0, i32 0))
  store i8* %call112, i8** @zoptarg, align 4
  br label %if.end113

if.end113:                                        ; preds = %if.else111, %if.end109
  %82 = load i8*, i8** %var, align 4
  %arraydecay114 = getelementptr inbounds [2 x i8], [2 x i8]* %optbuf, i32 0, i32 0
  %83 = load i32, i32* %lenoptbuf, align 4
  %call115 = call i8* @metafy(i8* %arraydecay114, i32 %83, i32 3)
  %call116 = call %struct.param* @setsparam(i8* %82, i8* %call115)
  store i32 0, i32* %retval, align 4
  br label %return

return:                                           ; preds = %if.end113, %if.end88, %if.then50, %if.then36, %if.then19, %if.then12, %if.then4
  %84 = load i32, i32* %retval, align 4
  ret i32 %84
}

declare i8* @memchr(i8*, i32, i32) #1

; Function Attrs: noinline nounwind
define i32 @bin_break(i8* %name, i8** %argv, %struct.options* %ops, i32 %func) #0 {
entry:
  %retval = alloca i32, align 4
  %name.addr = alloca i8*, align 4
  %argv.addr = alloca i8**, align 4
  %ops.addr = alloca %struct.options*, align 4
  %func.addr = alloca i32, align 4
  %num = alloca i32, align 4
  %nump = alloca i32, align 4
  %implicit = alloca i32, align 4
  store i8* %name, i8** %name.addr, align 4
  store i8** %argv, i8*** %argv.addr, align 4
  store %struct.options* %ops, %struct.options** %ops.addr, align 4
  store i32 %func, i32* %func.addr, align 4
  %0 = load i32, i32* @lastval, align 4
  store i32 %0, i32* %num, align 4
  store i32 0, i32* %nump, align 4
  %1 = load i8**, i8*** %argv.addr, align 4
  %2 = load i8*, i8** %1, align 4
  %tobool = icmp ne i8* %2, null
  %lnot = xor i1 %tobool, true
  %lnot.ext = zext i1 %lnot to i32
  store i32 %lnot.ext, i32* %implicit, align 4
  %3 = load i8**, i8*** %argv.addr, align 4
  %4 = load i8*, i8** %3, align 4
  %tobool1 = icmp ne i8* %4, null
  br i1 %tobool1, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %5 = load i8**, i8*** %argv.addr, align 4
  %incdec.ptr = getelementptr inbounds i8*, i8** %5, i32 1
  store i8** %incdec.ptr, i8*** %argv.addr, align 4
  %6 = load i8*, i8** %5, align 4
  %call = call i32 @mathevali(i8* %6)
  store i32 %call, i32* %num, align 4
  store i32 1, i32* %nump, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %7 = load i32, i32* %nump, align 4
  %cmp = icmp sgt i32 %7, 0
  br i1 %cmp, label %land.lhs.true, label %if.end7

land.lhs.true:                                    ; preds = %if.end
  %8 = load i32, i32* %func.addr, align 4
  %cmp2 = icmp eq i32 %8, 7
  br i1 %cmp2, label %land.lhs.true4, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true
  %9 = load i32, i32* %func.addr, align 4
  %cmp3 = icmp eq i32 %9, 6
  br i1 %cmp3, label %land.lhs.true4, label %if.end7

land.lhs.true4:                                   ; preds = %lor.lhs.false, %land.lhs.true
  %10 = load i32, i32* %num, align 4
  %cmp5 = icmp sle i32 %10, 0
  br i1 %cmp5, label %if.then6, label %if.end7

if.then6:                                         ; preds = %land.lhs.true4
  %11 = load i8*, i8** %name.addr, align 4
  %12 = load i32, i32* %num, align 4
  call void (i8*, i8*, ...) @zerrnam(i8* %11, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.123, i32 0, i32 0), i32 %12)
  store i32 1, i32* %retval, align 4
  br label %return

if.end7:                                          ; preds = %land.lhs.true4, %lor.lhs.false, %if.end
  %13 = load i32, i32* %func.addr, align 4
  switch i32 %13, label %sw.epilog [
    i32 7, label %sw.bb
    i32 6, label %sw.bb11
    i32 9, label %sw.bb21
    i32 19, label %sw.bb44
    i32 8, label %sw.bb48
  ]

sw.bb:                                            ; preds = %if.end7
  %14 = load i32, i32* @loops, align 4
  %tobool8 = icmp ne i32 %14, 0
  br i1 %tobool8, label %if.end10, label %if.then9

if.then9:                                         ; preds = %sw.bb
  %15 = load i8*, i8** %name.addr, align 4
  call void (i8*, i8*, ...) @zerrnam(i8* %15, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.124, i32 0, i32 0))
  store i32 1, i32* %retval, align 4
  br label %return

if.end10:                                         ; preds = %sw.bb
  store i32 1, i32* @contflag, align 4
  br label %sw.bb11

sw.bb11:                                          ; preds = %if.end7, %if.end10
  %16 = load i32, i32* @loops, align 4
  %tobool12 = icmp ne i32 %16, 0
  br i1 %tobool12, label %if.end14, label %if.then13

if.then13:                                        ; preds = %sw.bb11
  %17 = load i8*, i8** %name.addr, align 4
  call void (i8*, i8*, ...) @zerrnam(i8* %17, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.124, i32 0, i32 0))
  store i32 1, i32* %retval, align 4
  br label %return

if.end14:                                         ; preds = %sw.bb11
  %18 = load i32, i32* %nump, align 4
  %tobool15 = icmp ne i32 %18, 0
  br i1 %tobool15, label %cond.true, label %cond.false18

cond.true:                                        ; preds = %if.end14
  %19 = load i32, i32* %num, align 4
  %20 = load i32, i32* @loops, align 4
  %cmp16 = icmp slt i32 %19, %20
  br i1 %cmp16, label %cond.true17, label %cond.false

cond.true17:                                      ; preds = %cond.true
  %21 = load i32, i32* %num, align 4
  br label %cond.end

cond.false:                                       ; preds = %cond.true
  %22 = load i32, i32* @loops, align 4
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true17
  %cond = phi i32 [ %21, %cond.true17 ], [ %22, %cond.false ]
  br label %cond.end19

cond.false18:                                     ; preds = %if.end14
  br label %cond.end19

cond.end19:                                       ; preds = %cond.false18, %cond.end
  %cond20 = phi i32 [ %cond, %cond.end ], [ 1, %cond.false18 ]
  store i32 %cond20, i32* @breaks, align 4
  br label %sw.epilog

sw.bb21:                                          ; preds = %if.end7
  %23 = load i8, i8* getelementptr inbounds ([181 x i8], [181 x i8]* @opts, i32 0, i32 94), align 1
  %conv = sext i8 %23 to i32
  %tobool22 = icmp ne i32 %conv, 0
  br i1 %tobool22, label %land.lhs.true23, label %lor.lhs.false26

land.lhs.true23:                                  ; preds = %sw.bb21
  %24 = load i8, i8* getelementptr inbounds ([181 x i8], [181 x i8]* @opts, i32 0, i32 161), align 1
  %conv24 = sext i8 %24 to i32
  %tobool25 = icmp ne i32 %conv24, 0
  br i1 %tobool25, label %if.then30, label %lor.lhs.false26

lor.lhs.false26:                                  ; preds = %land.lhs.true23, %sw.bb21
  %25 = load i32, i32* @locallevel, align 4
  %tobool27 = icmp ne i32 %25, 0
  br i1 %tobool27, label %if.then30, label %lor.lhs.false28

lor.lhs.false28:                                  ; preds = %lor.lhs.false26
  %26 = load i32, i32* @sourcelevel, align 4
  %tobool29 = icmp ne i32 %26, 0
  br i1 %tobool29, label %if.then30, label %if.end43

if.then30:                                        ; preds = %lor.lhs.false28, %lor.lhs.false26, %land.lhs.true23
  store i32 1, i32* @retflag, align 4
  %27 = load i32, i32* @loops, align 4
  store i32 %27, i32* @breaks, align 4
  %28 = load i32, i32* %num, align 4
  store i32 %28, i32* @lastval, align 4
  %29 = load i32, i32* @trap_state, align 4
  %cmp31 = icmp eq i32 %29, 1
  br i1 %cmp31, label %land.lhs.true33, label %if.end42

land.lhs.true33:                                  ; preds = %if.then30
  %30 = load i32, i32* @trap_return, align 4
  %cmp34 = icmp eq i32 %30, -2
  br i1 %cmp34, label %land.lhs.true36, label %if.end42

land.lhs.true36:                                  ; preds = %land.lhs.true33
  %31 = load i8, i8* getelementptr inbounds ([181 x i8], [181 x i8]* @opts, i32 0, i32 137), align 1
  %conv37 = sext i8 %31 to i32
  %tobool38 = icmp ne i32 %conv37, 0
  br i1 %tobool38, label %land.lhs.true39, label %if.then41

land.lhs.true39:                                  ; preds = %land.lhs.true36
  %32 = load i32, i32* %implicit, align 4
  %tobool40 = icmp ne i32 %32, 0
  br i1 %tobool40, label %if.end42, label %if.then41

if.then41:                                        ; preds = %land.lhs.true39, %land.lhs.true36
  store i32 2, i32* @trap_state, align 4
  %33 = load i32, i32* @lastval, align 4
  store i32 %33, i32* @trap_return, align 4
  br label %if.end42

if.end42:                                         ; preds = %if.then41, %land.lhs.true39, %land.lhs.true33, %if.then30
  %34 = load i32, i32* @lastval, align 4
  store i32 %34, i32* %retval, align 4
  br label %return

if.end43:                                         ; preds = %lor.lhs.false28
  %35 = load i32, i32* %num, align 4
  call void @zexit(i32 %35, i32 0)
  br label %sw.epilog

sw.bb44:                                          ; preds = %if.end7
  %36 = load i8, i8* getelementptr inbounds ([181 x i8], [181 x i8]* @opts, i32 0, i32 111), align 1
  %tobool45 = icmp ne i8 %36, 0
  br i1 %tobool45, label %if.end47, label %if.then46

if.then46:                                        ; preds = %sw.bb44
  %37 = load i8*, i8** %name.addr, align 4
  call void (i8*, i8*, ...) @zerrnam(i8* %37, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.125, i32 0, i32 0))
  store i32 1, i32* %retval, align 4
  br label %return

if.end47:                                         ; preds = %sw.bb44
  br label %sw.bb48

sw.bb48:                                          ; preds = %if.end7, %if.end47
  %38 = load i32, i32* @locallevel, align 4
  %39 = load i32, i32* @forklevel, align 4
  %cmp49 = icmp sgt i32 %38, %39
  br i1 %cmp49, label %land.lhs.true51, label %if.else

land.lhs.true51:                                  ; preds = %sw.bb48
  %40 = load i32, i32* @shell_exiting, align 4
  %cmp52 = icmp ne i32 %40, -1
  br i1 %cmp52, label %if.then54, label %if.else

if.then54:                                        ; preds = %land.lhs.true51
  %41 = load i32, i32* @stopmsg, align 4
  %tobool55 = icmp ne i32 %41, 0
  br i1 %tobool55, label %if.then60, label %lor.lhs.false56

lor.lhs.false56:                                  ; preds = %if.then54
  call void @zexit(i32 0, i32 2)
  %42 = load i32, i32* @stopmsg, align 4
  %tobool57 = icmp ne i32 %42, 0
  %lnot58 = xor i1 %tobool57, true
  br i1 %lnot58, label %if.then60, label %if.end61

if.then60:                                        ; preds = %lor.lhs.false56, %if.then54
  store i32 1, i32* @retflag, align 4
  %43 = load i32, i32* @loops, align 4
  store i32 %43, i32* @breaks, align 4
  %44 = load i32, i32* %num, align 4
  %shl = shl i32 %44, 1
  %or = or i32 %shl, 1
  store i32 %or, i32* @exit_pending, align 4
  %45 = load i32, i32* @locallevel, align 4
  store i32 %45, i32* @exit_level, align 4
  br label %if.end61

if.end61:                                         ; preds = %if.then60, %lor.lhs.false56
  br label %if.end62

if.else:                                          ; preds = %land.lhs.true51, %sw.bb48
  %46 = load i32, i32* %num, align 4
  call void @zexit(i32 %46, i32 0)
  br label %if.end62

if.end62:                                         ; preds = %if.else, %if.end61
  br label %sw.epilog

sw.epilog:                                        ; preds = %if.end7, %if.end62, %if.end43, %cond.end19
  store i32 0, i32* %retval, align 4
  br label %return

return:                                           ; preds = %sw.epilog, %if.then46, %if.end42, %if.then13, %if.then9, %if.then6
  %47 = load i32, i32* %retval, align 4
  ret i32 %47
}

; Function Attrs: noinline nounwind
define void @zexit(i32 %val, i32 %from_where) #0 {
entry:
  %val.addr = alloca i32, align 4
  %from_where.addr = alloca i32, align 4
  %writeflags = alloca i32, align 4
  store i32 %val, i32* %val.addr, align 4
  store i32 %from_where, i32* %from_where.addr, align 4
  %0 = load i32, i32* @shell_exiting, align 4
  %cmp = icmp eq i32 %0, -1
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  br label %return

if.end:                                           ; preds = %entry
  %1 = load i8, i8* getelementptr inbounds ([181 x i8], [181 x i8]* @opts, i32 0, i32 117), align 1
  %conv = sext i8 %1 to i32
  %tobool = icmp ne i32 %conv, 0
  br i1 %tobool, label %land.lhs.true, label %if.end12

land.lhs.true:                                    ; preds = %if.end
  %2 = load i32, i32* @stopmsg, align 4
  %tobool1 = icmp ne i32 %2, 0
  br i1 %tobool1, label %if.end12, label %land.lhs.true2

land.lhs.true2:                                   ; preds = %land.lhs.true
  %3 = load i32, i32* %from_where.addr, align 4
  %cmp3 = icmp ne i32 %3, 1
  br i1 %cmp3, label %if.then5, label %if.end12

if.then5:                                         ; preds = %land.lhs.true2
  call void @scanjobs()
  %4 = load i8, i8* getelementptr inbounds ([181 x i8], [181 x i8]* @opts, i32 0, i32 32), align 1
  %tobool6 = icmp ne i8 %4, 0
  br i1 %tobool6, label %if.then7, label %if.end8

if.then7:                                         ; preds = %if.then5
  call void @checkjobs()
  br label %if.end8

if.end8:                                          ; preds = %if.then7, %if.then5
  %5 = load i32, i32* @stopmsg, align 4
  %tobool9 = icmp ne i32 %5, 0
  br i1 %tobool9, label %if.then10, label %if.end11

if.then10:                                        ; preds = %if.end8
  store i32 2, i32* @stopmsg, align 4
  br label %return

if.end11:                                         ; preds = %if.end8
  br label %if.end12

if.end12:                                         ; preds = %if.end11, %land.lhs.true2, %land.lhs.true, %if.end
  %6 = load i32, i32* %from_where.addr, align 4
  %cmp13 = icmp eq i32 %6, 2
  br i1 %cmp13, label %if.then18, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end12
  %7 = load i32, i32* @shell_exiting, align 4
  %inc = add nsw i32 %7, 1
  store i32 %inc, i32* @shell_exiting, align 4
  %tobool15 = icmp ne i32 %7, 0
  br i1 %tobool15, label %land.lhs.true16, label %if.end19

land.lhs.true16:                                  ; preds = %lor.lhs.false
  %8 = load i32, i32* %from_where.addr, align 4
  %tobool17 = icmp ne i32 %8, 0
  br i1 %tobool17, label %if.then18, label %if.end19

if.then18:                                        ; preds = %land.lhs.true16, %if.end12
  br label %return

if.end19:                                         ; preds = %land.lhs.true16, %lor.lhs.false
  store i32 -1, i32* @shell_exiting, align 4
  store i32 0, i32* @errflag, align 4
  %9 = load i8, i8* getelementptr inbounds ([181 x i8], [181 x i8]* @opts, i32 0, i32 117), align 1
  %tobool20 = icmp ne i8 %9, 0
  br i1 %tobool20, label %if.then21, label %if.end24

if.then21:                                        ; preds = %if.end19
  %10 = load i32, i32* %from_where.addr, align 4
  %cmp22 = icmp eq i32 %10, 1
  %conv23 = zext i1 %cmp22 to i32
  call void @killrunjobs(i32 %conv23)
  br label %if.end24

if.end24:                                         ; preds = %if.then21, %if.end19
  %11 = load i8, i8* getelementptr inbounds ([181 x i8], [181 x i8]* @opts, i32 0, i32 152), align 1
  %conv25 = sext i8 %11 to i32
  %tobool26 = icmp ne i32 %conv25, 0
  br i1 %tobool26, label %land.lhs.true27, label %if.end52

land.lhs.true27:                                  ; preds = %if.end24
  %12 = load i8, i8* getelementptr inbounds ([181 x i8], [181 x i8]* @opts, i32 0, i32 94), align 1
  %conv28 = sext i8 %12 to i32
  %tobool29 = icmp ne i32 %conv28, 0
  br i1 %tobool29, label %if.then30, label %if.end52

if.then30:                                        ; preds = %land.lhs.true27
  %13 = load i32, i32* @nohistsave, align 4
  %tobool31 = icmp ne i32 %13, 0
  br i1 %tobool31, label %if.end37, label %if.then32

if.then32:                                        ; preds = %if.then30
  store i32 32768, i32* %writeflags, align 4
  %14 = load i32, i32* %from_where.addr, align 4
  %cmp33 = icmp eq i32 %14, 1
  br i1 %cmp33, label %if.then35, label %if.end36

if.then35:                                        ; preds = %if.then32
  %15 = load i32, i32* %writeflags, align 4
  %or = or i32 %15, 32
  store i32 %or, i32* %writeflags, align 4
  br label %if.end36

if.end36:                                         ; preds = %if.then35, %if.then32
  %16 = load i32, i32* %writeflags, align 4
  %call = call i32 @saveandpophiststack(i32 1, i32 %16)
  %17 = load i32, i32* %writeflags, align 4
  call void @savehistfile(i8* null, i32 1, i32 %17)
  br label %if.end37

if.end37:                                         ; preds = %if.end36, %if.then30
  %18 = load i8, i8* getelementptr inbounds ([181 x i8], [181 x i8]* @opts, i32 0, i32 111), align 1
  %conv38 = sext i8 %18 to i32
  %tobool39 = icmp ne i32 %conv38, 0
  br i1 %tobool39, label %land.lhs.true40, label %if.end51

land.lhs.true40:                                  ; preds = %if.end37
  %19 = load i32, i32* @subsh, align 4
  %tobool41 = icmp ne i32 %19, 0
  br i1 %tobool41, label %if.end51, label %if.then42

if.then42:                                        ; preds = %land.lhs.true40
  call void @sourcehome(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.126, i32 0, i32 0))
  %20 = load i8, i8* getelementptr inbounds ([181 x i8], [181 x i8]* @opts, i32 0, i32 152), align 1
  %conv43 = sext i8 %20 to i32
  %tobool44 = icmp ne i32 %conv43, 0
  br i1 %tobool44, label %land.lhs.true45, label %if.end50

land.lhs.true45:                                  ; preds = %if.then42
  %21 = load i8, i8* getelementptr inbounds ([181 x i8], [181 x i8]* @opts, i32 0, i32 62), align 1
  %conv46 = sext i8 %21 to i32
  %tobool47 = icmp ne i32 %conv46, 0
  br i1 %tobool47, label %if.then48, label %if.end50

if.then48:                                        ; preds = %land.lhs.true45
  %call49 = call i32 @source(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.127, i32 0, i32 0))
  br label %if.end50

if.end50:                                         ; preds = %if.then48, %land.lhs.true45, %if.then42
  br label %if.end51

if.end51:                                         ; preds = %if.end50, %land.lhs.true40, %if.end37
  br label %if.end52

if.end52:                                         ; preds = %if.end51, %land.lhs.true27, %if.end24
  %22 = load i32, i32* %val.addr, align 4
  store i32 %22, i32* @lastval, align 4
  store i32 0, i32* @intrap, align 4
  store i32 0, i32* @errflag, align 4
  %23 = load i32, i32* getelementptr inbounds ([34 x i32], [34 x i32]* @sigtrapped, i32 0, i32 0), align 4
  %tobool53 = icmp ne i32 %23, 0
  br i1 %tobool53, label %if.then54, label %if.end55

if.then54:                                        ; preds = %if.end52
  call void @dotrap(i32 0)
  br label %if.end55

if.end55:                                         ; preds = %if.then54, %if.end52
  %call56 = call i32 @callhookfunc(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.128, i32 0, i32 0), %union.linkroot* null, i32 1, i32* null)
  %call57 = call i32 @runhookdef(%struct.hookdef* getelementptr inbounds ([0 x %struct.hookdef], [0 x %struct.hookdef]* @zshhooks, i32 0, i32 0), i8* null)
  %24 = load i8, i8* getelementptr inbounds ([181 x i8], [181 x i8]* @opts, i32 0, i32 117), align 1
  %conv58 = sext i8 %24 to i32
  %tobool59 = icmp ne i32 %conv58, 0
  br i1 %tobool59, label %land.lhs.true60, label %if.end67

land.lhs.true60:                                  ; preds = %if.end55
  %25 = load i8, i8* getelementptr inbounds ([181 x i8], [181 x i8]* @opts, i32 0, i32 94), align 1
  %conv61 = sext i8 %25 to i32
  %tobool62 = icmp ne i32 %conv61, 0
  br i1 %tobool62, label %land.lhs.true63, label %if.end67

land.lhs.true63:                                  ; preds = %land.lhs.true60
  %26 = load i32, i32* @SHTTY, align 4
  %cmp64 = icmp ne i32 %26, -1
  br i1 %cmp64, label %if.then66, label %if.end67

if.then66:                                        ; preds = %land.lhs.true63
  call void @release_pgrp()
  br label %if.end67

if.end67:                                         ; preds = %if.then66, %land.lhs.true63, %land.lhs.true60, %if.end55
  %27 = load i32, i32* @mypid, align 4
  %call68 = call i32 @getpid()
  %cmp69 = icmp ne i32 %27, %call68
  br i1 %cmp69, label %if.then71, label %if.else

if.then71:                                        ; preds = %if.end67
  %28 = load i32, i32* %val.addr, align 4
  call void @_exit(i32 %28) #6
  unreachable

if.else:                                          ; preds = %if.end67
  %29 = load i32, i32* %val.addr, align 4
  call void @exit(i32 %29) #6
  unreachable

return:                                           ; preds = %if.then18, %if.then10, %if.then
  ret void
}

declare void @scanjobs() #1

; Function Attrs: noinline nounwind
define internal void @checkjobs() #0 {
entry:
  %i = alloca i32, align 4
  store i32 1, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @maxjob, align 4
  %cmp = icmp sle i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %2 = load i32, i32* %i, align 4
  %3 = load i32, i32* @thisjob, align 4
  %cmp1 = icmp ne i32 %2, %3
  br i1 %cmp1, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %for.body
  %4 = load %struct.job*, %struct.job** @jobtab, align 4
  %5 = load i32, i32* %i, align 4
  %arrayidx = getelementptr inbounds %struct.job, %struct.job* %4, i32 %5
  %stat = getelementptr inbounds %struct.job, %struct.job* %arrayidx, i32 0, i32 2
  %6 = load i32, i32* %stat, align 4
  %and = and i32 %6, 16
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %land.lhs.true2, label %if.end

land.lhs.true2:                                   ; preds = %land.lhs.true
  %7 = load %struct.job*, %struct.job** @jobtab, align 4
  %8 = load i32, i32* %i, align 4
  %arrayidx3 = getelementptr inbounds %struct.job, %struct.job* %7, i32 %8
  %stat4 = getelementptr inbounds %struct.job, %struct.job* %arrayidx3, i32 0, i32 2
  %9 = load i32, i32* %stat4, align 4
  %and5 = and i32 %9, 32
  %tobool6 = icmp ne i32 %and5, 0
  br i1 %tobool6, label %if.end, label %land.lhs.true7

land.lhs.true7:                                   ; preds = %land.lhs.true2
  %10 = load i8, i8* getelementptr inbounds ([181 x i8], [181 x i8]* @opts, i32 0, i32 33), align 1
  %conv = sext i8 %10 to i32
  %tobool8 = icmp ne i32 %conv, 0
  br i1 %tobool8, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true7
  %11 = load %struct.job*, %struct.job** @jobtab, align 4
  %12 = load i32, i32* %i, align 4
  %arrayidx9 = getelementptr inbounds %struct.job, %struct.job* %11, i32 %12
  %stat10 = getelementptr inbounds %struct.job, %struct.job* %arrayidx9, i32 0, i32 2
  %13 = load i32, i32* %stat10, align 4
  %and11 = and i32 %13, 2
  %tobool12 = icmp ne i32 %and11, 0
  br i1 %tobool12, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false, %land.lhs.true7
  br label %for.end

if.end:                                           ; preds = %lor.lhs.false, %land.lhs.true2, %land.lhs.true, %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %14 = load i32, i32* %i, align 4
  %inc = add nsw i32 %14, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %if.then, %for.cond
  %15 = load i32, i32* %i, align 4
  %16 = load i32, i32* @maxjob, align 4
  %cmp13 = icmp sle i32 %15, %16
  br i1 %cmp13, label %if.then15, label %if.end22

if.then15:                                        ; preds = %for.end
  %17 = load %struct.job*, %struct.job** @jobtab, align 4
  %18 = load i32, i32* %i, align 4
  %arrayidx16 = getelementptr inbounds %struct.job, %struct.job* %17, i32 %18
  %stat17 = getelementptr inbounds %struct.job, %struct.job* %arrayidx16, i32 0, i32 2
  %19 = load i32, i32* %stat17, align 4
  %and18 = and i32 %19, 2
  %tobool19 = icmp ne i32 %and18, 0
  br i1 %tobool19, label %if.then20, label %if.else

if.then20:                                        ; preds = %if.then15
  call void (i8*, ...) @zerr(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.337, i32 0, i32 0))
  br label %if.end21

if.else:                                          ; preds = %if.then15
  call void (i8*, ...) @zerr(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.338, i32 0, i32 0))
  br label %if.end21

if.end21:                                         ; preds = %if.else, %if.then20
  store i32 1, i32* @stopmsg, align 4
  br label %if.end22

if.end22:                                         ; preds = %if.end21, %for.end
  ret void
}

declare void @killrunjobs(i32) #1

declare void @sourcehome(i8*) #1

declare i32 @source(i8*) #1

declare void @dotrap(i32) #1

declare i32 @callhookfunc(i8*, %union.linkroot*, i32, i32*) #1

declare i32 @runhookdef(%struct.hookdef*, i8*) #1

declare void @release_pgrp() #1

declare i32 @getpid() #1

; Function Attrs: noreturn
declare void @_exit(i32) #4

; Function Attrs: noreturn
declare void @exit(i32) #4

; Function Attrs: noinline nounwind
define i32 @bin_dot(i8* %name, i8** %argv, %struct.options* %ops, i32 %func) #0 {
entry:
  %retval = alloca i32, align 4
  %name.addr = alloca i8*, align 4
  %argv.addr = alloca i8**, align 4
  %ops.addr = alloca %struct.options*, align 4
  %func.addr = alloca i32, align 4
  %old = alloca i8**, align 4
  %old0 = alloca i8*, align 4
  %diddot = alloca i32, align 4
  %dotdot = alloca i32, align 4
  %s = alloca i8*, align 4
  %t = alloca i8**, align 4
  %enam = alloca i8*, align 4
  %arg0 = alloca i8*, align 4
  %buf = alloca i8*, align 4
  %st = alloca %struct.stat, align 8
  %ret = alloca i32, align 4
  store i8* %name, i8** %name.addr, align 4
  store i8** %argv, i8*** %argv.addr, align 4
  store %struct.options* %ops, %struct.options** %ops.addr, align 4
  store i32 %func, i32* %func.addr, align 4
  store i8* null, i8** %old0, align 4
  store i32 0, i32* %diddot, align 4
  store i32 0, i32* %dotdot, align 4
  %0 = load i8**, i8*** %argv.addr, align 4
  %1 = load i8*, i8** %0, align 4
  %tobool = icmp ne i8* %1, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4
  br label %return

if.end:                                           ; preds = %entry
  %2 = load i8**, i8*** @pparams, align 4
  store i8** %2, i8*** %old, align 4
  %3 = load i8**, i8*** %argv.addr, align 4
  %arrayidx = getelementptr inbounds i8*, i8** %3, i32 1
  %4 = load i8*, i8** %arrayidx, align 4
  %tobool1 = icmp ne i8* %4, null
  br i1 %tobool1, label %if.then2, label %if.end3

if.then2:                                         ; preds = %if.end
  %5 = load i8**, i8*** %argv.addr, align 4
  %add.ptr = getelementptr inbounds i8*, i8** %5, i32 1
  %call = call i8** @zarrdup(i8** %add.ptr)
  store i8** %call, i8*** @pparams, align 4
  br label %if.end3

if.end3:                                          ; preds = %if.then2, %if.end
  %6 = load i8**, i8*** %argv.addr, align 4
  %7 = load i8*, i8** %6, align 4
  %call4 = call i8* @ztrdup(i8* %7)
  store i8* %call4, i8** %arg0, align 4
  store i8* %call4, i8** %enam, align 4
  %8 = load i8, i8* getelementptr inbounds ([181 x i8], [181 x i8]* @opts, i32 0, i32 59), align 1
  %tobool5 = icmp ne i8 %8, 0
  br i1 %tobool5, label %if.then6, label %if.end8

if.then6:                                         ; preds = %if.end3
  %9 = load i8*, i8** @argzero, align 4
  store i8* %9, i8** %old0, align 4
  %10 = load i8*, i8** %arg0, align 4
  %call7 = call i8* @ztrdup(i8* %10)
  store i8* %call7, i8** @argzero, align 4
  br label %if.end8

if.end8:                                          ; preds = %if.then6, %if.end3
  %11 = load i8*, i8** %enam, align 4
  %call9 = call i8* @unmeta(i8* %11)
  store i8* %call9, i8** %s, align 4
  %call10 = call i32* @__errno_location()
  store i32 2, i32* %call10, align 4
  store i32 1, i32* %ret, align 4
  %12 = load i8*, i8** %name.addr, align 4
  %13 = load i8, i8* %12, align 1
  %conv = sext i8 %13 to i32
  %cmp = icmp ne i32 %conv, 46
  br i1 %cmp, label %land.lhs.true, label %if.end24

land.lhs.true:                                    ; preds = %if.end8
  %14 = load i8*, i8** %s, align 4
  %call12 = call i32 @access(i8* %14, i32 0)
  %cmp13 = icmp eq i32 %call12, 0
  br i1 %cmp13, label %land.lhs.true15, label %if.end24

land.lhs.true15:                                  ; preds = %land.lhs.true
  %15 = load i8*, i8** %s, align 4
  %call16 = call i32 @stat(i8* %15, %struct.stat* %st)
  %cmp17 = icmp sge i32 %call16, 0
  br i1 %cmp17, label %land.lhs.true19, label %if.end24

land.lhs.true19:                                  ; preds = %land.lhs.true15
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 6
  %16 = load i32, i32* %st_mode, align 8
  %and = and i32 %16, 61440
  %cmp20 = icmp eq i32 %and, 16384
  br i1 %cmp20, label %if.end24, label %if.then22

if.then22:                                        ; preds = %land.lhs.true19
  store i32 1, i32* %diddot, align 4
  %17 = load i8*, i8** %enam, align 4
  %call23 = call i32 @source(i8* %17)
  store i32 %call23, i32* %ret, align 4
  br label %if.end24

if.end24:                                         ; preds = %if.then22, %land.lhs.true19, %land.lhs.true15, %land.lhs.true, %if.end8
  %18 = load i32, i32* %ret, align 4
  %cmp25 = icmp eq i32 %18, 1
  br i1 %cmp25, label %if.then27, label %if.end110

if.then27:                                        ; preds = %if.end24
  %19 = load i8*, i8** %arg0, align 4
  store i8* %19, i8** %s, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then27
  %20 = load i8*, i8** %s, align 4
  %21 = load i8, i8* %20, align 1
  %tobool28 = icmp ne i8 %21, 0
  br i1 %tobool28, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %22 = load i8*, i8** %s, align 4
  %23 = load i8, i8* %22, align 1
  %conv29 = sext i8 %23 to i32
  %cmp30 = icmp eq i32 %conv29, 47
  br i1 %cmp30, label %if.then32, label %if.end55

if.then32:                                        ; preds = %for.body
  %24 = load i8*, i8** %arg0, align 4
  %25 = load i8, i8* %24, align 1
  %conv33 = sext i8 %25 to i32
  %cmp34 = icmp eq i32 %conv33, 46
  br i1 %cmp34, label %if.then36, label %if.end53

if.then36:                                        ; preds = %if.then32
  %26 = load i8*, i8** %arg0, align 4
  %add.ptr37 = getelementptr inbounds i8, i8* %26, i32 1
  %27 = load i8*, i8** %s, align 4
  %cmp38 = icmp eq i8* %add.ptr37, %27
  br i1 %cmp38, label %if.then40, label %if.else

if.then40:                                        ; preds = %if.then36
  %28 = load i32, i32* %diddot, align 4
  %inc = add nsw i32 %28, 1
  store i32 %inc, i32* %diddot, align 4
  br label %if.end52

if.else:                                          ; preds = %if.then36
  %29 = load i8*, i8** %arg0, align 4
  %arrayidx41 = getelementptr inbounds i8, i8* %29, i32 1
  %30 = load i8, i8* %arrayidx41, align 1
  %conv42 = sext i8 %30 to i32
  %cmp43 = icmp eq i32 %conv42, 46
  br i1 %cmp43, label %land.lhs.true45, label %if.end51

land.lhs.true45:                                  ; preds = %if.else
  %31 = load i8*, i8** %arg0, align 4
  %add.ptr46 = getelementptr inbounds i8, i8* %31, i32 2
  %32 = load i8*, i8** %s, align 4
  %cmp47 = icmp eq i8* %add.ptr46, %32
  br i1 %cmp47, label %if.then49, label %if.end51

if.then49:                                        ; preds = %land.lhs.true45
  %33 = load i32, i32* %dotdot, align 4
  %inc50 = add nsw i32 %33, 1
  store i32 %inc50, i32* %dotdot, align 4
  br label %if.end51

if.end51:                                         ; preds = %if.then49, %land.lhs.true45, %if.else
  br label %if.end52

if.end52:                                         ; preds = %if.end51, %if.then40
  br label %if.end53

if.end53:                                         ; preds = %if.end52, %if.then32
  %34 = load i8*, i8** %arg0, align 4
  %call54 = call i32 @source(i8* %34)
  store i32 %call54, i32* %ret, align 4
  br label %for.end

if.end55:                                         ; preds = %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end55
  %35 = load i8*, i8** %s, align 4
  %incdec.ptr = getelementptr inbounds i8, i8* %35, i32 1
  store i8* %incdec.ptr, i8** %s, align 4
  br label %for.cond

for.end:                                          ; preds = %if.end53, %for.cond
  %36 = load i8*, i8** %s, align 4
  %37 = load i8, i8* %36, align 1
  %tobool56 = icmp ne i8 %37, 0
  br i1 %tobool56, label %lor.lhs.false, label %if.then68

lor.lhs.false:                                    ; preds = %for.end
  %38 = load i32, i32* %ret, align 4
  %cmp57 = icmp eq i32 %38, 1
  br i1 %cmp57, label %land.lhs.true59, label %if.end109

land.lhs.true59:                                  ; preds = %lor.lhs.false
  %39 = load i8, i8* getelementptr inbounds ([181 x i8], [181 x i8]* @opts, i32 0, i32 127), align 1
  %conv60 = sext i8 %39 to i32
  %tobool61 = icmp ne i32 %conv60, 0
  br i1 %tobool61, label %land.lhs.true62, label %if.end109

land.lhs.true62:                                  ; preds = %land.lhs.true59
  %40 = load i32, i32* %diddot, align 4
  %cmp63 = icmp slt i32 %40, 2
  br i1 %cmp63, label %land.lhs.true65, label %if.end109

land.lhs.true65:                                  ; preds = %land.lhs.true62
  %41 = load i32, i32* %dotdot, align 4
  %cmp66 = icmp eq i32 %41, 0
  br i1 %cmp66, label %if.then68, label %if.end109

if.then68:                                        ; preds = %land.lhs.true65, %for.end
  call void @pushheap()
  %42 = load i8**, i8*** @path, align 4
  store i8** %42, i8*** %t, align 4
  br label %for.cond69

for.cond69:                                       ; preds = %for.inc106, %if.then68
  %43 = load i8**, i8*** %t, align 4
  %44 = load i8*, i8** %43, align 4
  %tobool70 = icmp ne i8* %44, null
  br i1 %tobool70, label %for.body71, label %for.end108

for.body71:                                       ; preds = %for.cond69
  %45 = load i8**, i8*** %t, align 4
  %46 = load i8*, i8** %45, align 4
  %arrayidx72 = getelementptr inbounds i8, i8* %46, i32 0
  %47 = load i8, i8* %arrayidx72, align 1
  %tobool73 = icmp ne i8 %47, 0
  br i1 %tobool73, label %lor.lhs.false74, label %if.then82

lor.lhs.false74:                                  ; preds = %for.body71
  %48 = load i8**, i8*** %t, align 4
  %49 = load i8*, i8** %48, align 4
  %arrayidx75 = getelementptr inbounds i8, i8* %49, i32 0
  %50 = load i8, i8* %arrayidx75, align 1
  %conv76 = sext i8 %50 to i32
  %cmp77 = icmp eq i32 %conv76, 46
  br i1 %cmp77, label %land.lhs.true79, label %if.else87

land.lhs.true79:                                  ; preds = %lor.lhs.false74
  %51 = load i8**, i8*** %t, align 4
  %52 = load i8*, i8** %51, align 4
  %arrayidx80 = getelementptr inbounds i8, i8* %52, i32 1
  %53 = load i8, i8* %arrayidx80, align 1
  %tobool81 = icmp ne i8 %53, 0
  br i1 %tobool81, label %if.else87, label %if.then82

if.then82:                                        ; preds = %land.lhs.true79, %for.body71
  %54 = load i32, i32* %diddot, align 4
  %tobool83 = icmp ne i32 %54, 0
  br i1 %tobool83, label %if.then84, label %if.end85

if.then84:                                        ; preds = %if.then82
  br label %for.inc106

if.end85:                                         ; preds = %if.then82
  store i32 1, i32* %diddot, align 4
  %55 = load i8*, i8** %arg0, align 4
  %call86 = call i8* @dupstring(i8* %55)
  store i8* %call86, i8** %buf, align 4
  br label %if.end89

if.else87:                                        ; preds = %land.lhs.true79, %lor.lhs.false74
  %56 = load i8**, i8*** %t, align 4
  %57 = load i8*, i8** %56, align 4
  %58 = load i8*, i8** %arg0, align 4
  %call88 = call i8* @zhtricat(i8* %57, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.76, i32 0, i32 0), i8* %58)
  store i8* %call88, i8** %buf, align 4
  br label %if.end89

if.end89:                                         ; preds = %if.else87, %if.end85
  %59 = load i8*, i8** %buf, align 4
  %call90 = call i8* @unmeta(i8* %59)
  store i8* %call90, i8** %s, align 4
  %60 = load i8*, i8** %s, align 4
  %call91 = call i32 @access(i8* %60, i32 0)
  %cmp92 = icmp eq i32 %call91, 0
  br i1 %cmp92, label %land.lhs.true94, label %if.end105

land.lhs.true94:                                  ; preds = %if.end89
  %61 = load i8*, i8** %s, align 4
  %call95 = call i32 @stat(i8* %61, %struct.stat* %st)
  %cmp96 = icmp sge i32 %call95, 0
  br i1 %cmp96, label %land.lhs.true98, label %if.end105

land.lhs.true98:                                  ; preds = %land.lhs.true94
  %st_mode99 = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 6
  %62 = load i32, i32* %st_mode99, align 8
  %and100 = and i32 %62, 61440
  %cmp101 = icmp eq i32 %and100, 16384
  br i1 %cmp101, label %if.end105, label %if.then103

if.then103:                                       ; preds = %land.lhs.true98
  %63 = load i8*, i8** %buf, align 4
  store i8* %63, i8** %enam, align 4
  %call104 = call i32 @source(i8* %63)
  store i32 %call104, i32* %ret, align 4
  br label %for.end108

if.end105:                                        ; preds = %land.lhs.true98, %land.lhs.true94, %if.end89
  br label %for.inc106

for.inc106:                                       ; preds = %if.end105, %if.then84
  %64 = load i8**, i8*** %t, align 4
  %incdec.ptr107 = getelementptr inbounds i8*, i8** %64, i32 1
  store i8** %incdec.ptr107, i8*** %t, align 4
  br label %for.cond69

for.end108:                                       ; preds = %if.then103, %for.cond69
  call void @popheap()
  br label %if.end109

if.end109:                                        ; preds = %for.end108, %land.lhs.true65, %land.lhs.true62, %land.lhs.true59, %lor.lhs.false
  br label %if.end110

if.end110:                                        ; preds = %if.end109, %if.end24
  %65 = load i8**, i8*** %argv.addr, align 4
  %arrayidx111 = getelementptr inbounds i8*, i8** %65, i32 1
  %66 = load i8*, i8** %arrayidx111, align 4
  %tobool112 = icmp ne i8* %66, null
  br i1 %tobool112, label %if.then113, label %if.end114

if.then113:                                       ; preds = %if.end110
  %67 = load i8**, i8*** @pparams, align 4
  call void @freearray(i8** %67)
  %68 = load i8**, i8*** %old, align 4
  store i8** %68, i8*** @pparams, align 4
  br label %if.end114

if.end114:                                        ; preds = %if.then113, %if.end110
  %69 = load i32, i32* %ret, align 4
  %cmp115 = icmp eq i32 %69, 1
  br i1 %cmp115, label %if.then117, label %if.end124

if.then117:                                       ; preds = %if.end114
  %70 = load i8, i8* getelementptr inbounds ([181 x i8], [181 x i8]* @opts, i32 0, i32 132), align 1
  %tobool118 = icmp ne i8 %70, 0
  br i1 %tobool118, label %if.then119, label %if.else121

if.then119:                                       ; preds = %if.then117
  %71 = load i8*, i8** %name.addr, align 4
  %call120 = call i32* @__errno_location()
  %72 = load i32, i32* %call120, align 4
  %73 = load i8*, i8** %enam, align 4
  call void (i8*, i8*, ...) @zerrnam(i8* %71, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.48, i32 0, i32 0), i32 %72, i8* %73)
  br label %if.end123

if.else121:                                       ; preds = %if.then117
  %74 = load i8*, i8** %name.addr, align 4
  %call122 = call i32* @__errno_location()
  %75 = load i32, i32* %call122, align 4
  %76 = load i8*, i8** %enam, align 4
  call void (i8*, i8*, ...) @zwarnnam(i8* %74, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.48, i32 0, i32 0), i32 %75, i8* %76)
  br label %if.end123

if.end123:                                        ; preds = %if.else121, %if.then119
  br label %if.end124

if.end124:                                        ; preds = %if.end123, %if.end114
  %77 = load i8*, i8** %arg0, align 4
  call void @zsfree(i8* %77)
  %78 = load i8*, i8** %old0, align 4
  %tobool125 = icmp ne i8* %78, null
  br i1 %tobool125, label %if.then126, label %if.end127

if.then126:                                       ; preds = %if.end124
  %79 = load i8*, i8** @argzero, align 4
  call void @zsfree(i8* %79)
  %80 = load i8*, i8** %old0, align 4
  store i8* %80, i8** @argzero, align 4
  br label %if.end127

if.end127:                                        ; preds = %if.then126, %if.end124
  %81 = load i32, i32* %ret, align 4
  %cmp128 = icmp eq i32 %81, 0
  br i1 %cmp128, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end127
  %82 = load i32, i32* @lastval, align 4
  br label %cond.end

cond.false:                                       ; preds = %if.end127
  %83 = load i32, i32* %ret, align 4
  %sub = sub i32 128, %83
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %82, %cond.true ], [ %sub, %cond.false ]
  store i32 %cond, i32* %retval, align 4
  br label %return

return:                                           ; preds = %cond.end, %if.then
  %84 = load i32, i32* %retval, align 4
  ret i32 %84
}

declare i32 @access(i8*, i32) #1

; Function Attrs: noinline nounwind
define i32 @bin_emulate(i8* %nam, i8** %argv, %struct.options* %ops, i32 %func) #0 {
entry:
  %retval = alloca i32, align 4
  %nam.addr = alloca i8*, align 4
  %argv.addr = alloca i8**, align 4
  %ops.addr = alloca %struct.options*, align 4
  %func.addr = alloca i32, align 4
  %opt_L = alloca i32, align 4
  %opt_R = alloca i32, align 4
  %opt_l = alloca i32, align 4
  %saveemulation = alloca i32, align 4
  %savehackchar = alloca i32, align 4
  %ret = alloca i32, align 4
  %new_emulation = alloca i32, align 4
  %savepatterns = alloca i32, align 4
  %saveopts = alloca [181 x i8], align 1
  %new_opts = alloca [181 x i8], align 1
  %cmd = alloca i8*, align 4
  %shname = alloca i8*, align 4
  %optlist = alloca %union.linkroot*, align 4
  %optnode = alloca %struct.linknode*, align 4
  %save_sticky = alloca %struct.emulation_options*, align 4
  %on_ptr = alloca i8*, align 4
  %off_ptr = alloca i8*, align 4
  %cmdopts = alloca i8*, align 4
  %optptr = alloca i8*, align 4
  %optptr90 = alloca i8*, align 4
  %optno = alloca i32, align 4
  store i8* %nam, i8** %nam.addr, align 4
  store i8** %argv, i8*** %argv.addr, align 4
  store %struct.options* %ops, %struct.options** %ops.addr, align 4
  store i32 %func, i32* %func.addr, align 4
  %0 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind = getelementptr inbounds %struct.options, %struct.options* %0, i32 0, i32 0
  %arrayidx = getelementptr inbounds [128 x i8], [128 x i8]* %ind, i32 0, i32 76
  %1 = load i8, i8* %arrayidx, align 4
  %conv = zext i8 %1 to i32
  %cmp = icmp ne i32 %conv, 0
  %conv1 = zext i1 %cmp to i32
  store i32 %conv1, i32* %opt_L, align 4
  %2 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind2 = getelementptr inbounds %struct.options, %struct.options* %2, i32 0, i32 0
  %arrayidx3 = getelementptr inbounds [128 x i8], [128 x i8]* %ind2, i32 0, i32 82
  %3 = load i8, i8* %arrayidx3, align 2
  %conv4 = zext i8 %3 to i32
  %cmp5 = icmp ne i32 %conv4, 0
  %conv6 = zext i1 %cmp5 to i32
  store i32 %conv6, i32* %opt_R, align 4
  %4 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind7 = getelementptr inbounds %struct.options, %struct.options* %4, i32 0, i32 0
  %arrayidx8 = getelementptr inbounds [128 x i8], [128 x i8]* %ind7, i32 0, i32 108
  %5 = load i8, i8* %arrayidx8, align 4
  %conv9 = zext i8 %5 to i32
  %cmp10 = icmp ne i32 %conv9, 0
  %conv11 = zext i1 %cmp10 to i32
  store i32 %conv11, i32* %opt_l, align 4
  store i32 1, i32* %ret, align 4
  store i8* null, i8** %cmd, align 4
  %6 = load i8**, i8*** %argv.addr, align 4
  %7 = load i8*, i8** %6, align 4
  store i8* %7, i8** %shname, align 4
  %8 = load i8*, i8** %shname, align 4
  %tobool = icmp ne i8* %8, null
  br i1 %tobool, label %if.end17, label %if.then

if.then:                                          ; preds = %entry
  %9 = load i32, i32* %opt_L, align 4
  %tobool12 = icmp ne i32 %9, 0
  br i1 %tobool12, label %if.then14, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.then
  %10 = load i32, i32* %opt_R, align 4
  %tobool13 = icmp ne i32 %10, 0
  br i1 %tobool13, label %if.then14, label %if.end

if.then14:                                        ; preds = %lor.lhs.false, %if.then
  %11 = load i8*, i8** %nam.addr, align 4
  call void (i8*, i8*, ...) @zwarnnam(i8* %11, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.9, i32 0, i32 0))
  store i32 1, i32* %retval, align 4
  br label %return

if.end:                                           ; preds = %lor.lhs.false
  %12 = load i32, i32* @emulation, align 4
  %and = and i32 %12, 31
  switch i32 %and, label %sw.default [
    i32 2, label %sw.bb
    i32 4, label %sw.bb15
    i32 8, label %sw.bb16
  ]

sw.bb:                                            ; preds = %if.end
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.129, i32 0, i32 0), i8** %shname, align 4
  br label %sw.epilog

sw.bb15:                                          ; preds = %if.end
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.130, i32 0, i32 0), i8** %shname, align 4
  br label %sw.epilog

sw.bb16:                                          ; preds = %if.end
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.131, i32 0, i32 0), i8** %shname, align 4
  br label %sw.epilog

sw.default:                                       ; preds = %if.end
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i32 0, i32 0), i8** %shname, align 4
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %sw.bb16, %sw.bb15, %sw.bb
  %13 = load i8*, i8** %shname, align 4
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.21, i32 0, i32 0), i8* %13)
  store i32 0, i32* %retval, align 4
  br label %return

if.end17:                                         ; preds = %entry
  %14 = load i8**, i8*** %argv.addr, align 4
  %arrayidx18 = getelementptr inbounds i8*, i8** %14, i32 1
  %15 = load i8*, i8** %arrayidx18, align 4
  %tobool19 = icmp ne i8* %15, null
  br i1 %tobool19, label %if.end34, label %if.then20

if.then20:                                        ; preds = %if.end17
  %16 = load i32, i32* %opt_l, align 4
  %tobool21 = icmp ne i32 %16, 0
  br i1 %tobool21, label %if.then22, label %if.else

if.then22:                                        ; preds = %if.then20
  %call23 = call i8* @zhalloc(i32 181)
  store i8* %call23, i8** %cmdopts, align 4
  %17 = load i8*, i8** %cmdopts, align 4
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %17, i8* getelementptr inbounds ([181 x i8], [181 x i8]* @opts, i32 0, i32 0), i32 181, i32 1, i1 false)
  br label %if.end24

if.else:                                          ; preds = %if.then20
  store i8* getelementptr inbounds ([181 x i8], [181 x i8]* @opts, i32 0, i32 0), i8** %cmdopts, align 4
  br label %if.end24

if.end24:                                         ; preds = %if.else, %if.then22
  %18 = load i8*, i8** %shname, align 4
  %19 = load i32, i32* %opt_R, align 4
  %20 = load i8*, i8** %cmdopts, align 4
  call void @emulate(i8* %18, i32 %19, i32* @emulation, i8* %20)
  %21 = load i32, i32* %opt_L, align 4
  %tobool25 = icmp ne i32 %21, 0
  br i1 %tobool25, label %if.then26, label %if.end30

if.then26:                                        ; preds = %if.end24
  %22 = load i8*, i8** %cmdopts, align 4
  %arrayidx27 = getelementptr inbounds i8, i8* %22, i32 109
  store i8 1, i8* %arrayidx27, align 1
  %23 = load i8*, i8** %cmdopts, align 4
  %arrayidx28 = getelementptr inbounds i8, i8* %23, i32 110
  store i8 1, i8* %arrayidx28, align 1
  %24 = load i8*, i8** %cmdopts, align 4
  %arrayidx29 = getelementptr inbounds i8, i8* %24, i32 108
  store i8 1, i8* %arrayidx29, align 1
  br label %if.end30

if.end30:                                         ; preds = %if.then26, %if.end24
  %25 = load i32, i32* %opt_l, align 4
  %tobool31 = icmp ne i32 %25, 0
  br i1 %tobool31, label %if.then32, label %if.end33

if.then32:                                        ; preds = %if.end30
  %26 = load i8*, i8** %cmdopts, align 4
  %27 = load i32, i32* %opt_R, align 4
  call void @list_emulate_options(i8* %26, i32 %27)
  store i32 0, i32* %retval, align 4
  br label %return

if.end33:                                         ; preds = %if.end30
  call void @clearpatterndisables()
  store i32 0, i32* %retval, align 4
  br label %return

if.end34:                                         ; preds = %if.end17
  %28 = load i32, i32* %opt_l, align 4
  %tobool35 = icmp ne i32 %28, 0
  br i1 %tobool35, label %if.then36, label %if.end37

if.then36:                                        ; preds = %if.end34
  %29 = load i8*, i8** %nam.addr, align 4
  call void (i8*, i8*, ...) @zwarnnam(i8* %29, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.132, i32 0, i32 0))
  store i32 1, i32* %retval, align 4
  br label %return

if.end37:                                         ; preds = %if.end34
  %30 = load i8**, i8*** %argv.addr, align 4
  %incdec.ptr = getelementptr inbounds i8*, i8** %30, i32 1
  store i8** %incdec.ptr, i8*** %argv.addr, align 4
  %arraydecay = getelementptr inbounds [181 x i8], [181 x i8]* %saveopts, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %arraydecay, i8* getelementptr inbounds ([181 x i8], [181 x i8]* @opts, i32 0, i32 0), i32 181, i32 1, i1 false)
  %arraydecay38 = getelementptr inbounds [181 x i8], [181 x i8]* %new_opts, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %arraydecay38, i8* getelementptr inbounds ([181 x i8], [181 x i8]* @opts, i32 0, i32 0), i32 181, i32 1, i1 false)
  %31 = load i8, i8* @keyboardhackchar, align 1
  %conv39 = zext i8 %31 to i32
  store i32 %conv39, i32* %savehackchar, align 4
  %32 = load i8*, i8** %shname, align 4
  %33 = load i32, i32* %opt_R, align 4
  %arraydecay40 = getelementptr inbounds [181 x i8], [181 x i8]* %new_opts, i32 0, i32 0
  call void @emulate(i8* %32, i32 %33, i32* %new_emulation, i8* %arraydecay40)
  %call41 = call %union.linkroot* @newlinklist()
  store %union.linkroot* %call41, %union.linkroot** %optlist, align 4
  %34 = load i8*, i8** %nam.addr, align 4
  %arraydecay42 = getelementptr inbounds [181 x i8], [181 x i8]* %new_opts, i32 0, i32 0
  %35 = load %union.linkroot*, %union.linkroot** %optlist, align 4
  %call43 = call i32 @parseopts(i8* %34, i8*** %argv.addr, i8* %arraydecay42, i8** %cmd, %union.linkroot* %35, i32 0)
  %tobool44 = icmp ne i32 %call43, 0
  br i1 %tobool44, label %if.then45, label %if.end46

if.then45:                                        ; preds = %if.end37
  store i32 1, i32* %ret, align 4
  br label %restore

if.end46:                                         ; preds = %if.end37
  %36 = load i8**, i8*** %argv.addr, align 4
  %37 = load i8*, i8** %36, align 4
  %tobool47 = icmp ne i8* %37, null
  br i1 %tobool47, label %if.then48, label %if.end49

if.then48:                                        ; preds = %if.end46
  %38 = load i8*, i8** %nam.addr, align 4
  %39 = load i8**, i8*** %argv.addr, align 4
  %40 = load i8*, i8** %39, align 4
  call void (i8*, i8*, ...) @zwarnnam(i8* %38, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.133, i32 0, i32 0), i8* %40)
  br label %restore

if.end49:                                         ; preds = %if.end46
  %call50 = call i32 @savepatterndisables()
  store i32 %call50, i32* %savepatterns, align 4
  call void @clearpatterndisables()
  %41 = load i32, i32* @emulation, align 4
  store i32 %41, i32* %saveemulation, align 4
  %42 = load i32, i32* %new_emulation, align 4
  store i32 %42, i32* @emulation, align 4
  %arraydecay51 = getelementptr inbounds [181 x i8], [181 x i8]* %new_opts, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* getelementptr inbounds ([181 x i8], [181 x i8]* @opts, i32 0, i32 0), i8* %arraydecay51, i32 181, i32 1, i1 false)
  %43 = load i8*, i8** %cmd, align 4
  %tobool52 = icmp ne i8* %43, null
  br i1 %tobool52, label %if.then53, label %if.else58

if.then53:                                        ; preds = %if.end49
  %44 = load i32, i32* %opt_L, align 4
  %tobool54 = icmp ne i32 %44, 0
  br i1 %tobool54, label %if.then55, label %if.end56

if.then55:                                        ; preds = %if.then53
  %45 = load i8*, i8** %nam.addr, align 4
  call void (i8*, i8*, ...) @zwarnnam(i8* %45, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.134, i32 0, i32 0))
  br label %restore2

if.end56:                                         ; preds = %if.then53
  %46 = load i8*, i8** %cmd, align 4
  %47 = load i8**, i8*** %argv.addr, align 4
  %incdec.ptr57 = getelementptr inbounds i8*, i8** %47, i32 -1
  store i8** %incdec.ptr57, i8*** %argv.addr, align 4
  store i8* %46, i8** %incdec.ptr57, align 4
  br label %if.end62

if.else58:                                        ; preds = %if.end49
  %48 = load i32, i32* %opt_L, align 4
  %tobool59 = icmp ne i32 %48, 0
  br i1 %tobool59, label %if.then60, label %if.end61

if.then60:                                        ; preds = %if.else58
  store i8 1, i8* getelementptr inbounds ([181 x i8], [181 x i8]* @opts, i32 0, i32 109), align 1
  store i8 1, i8* getelementptr inbounds ([181 x i8], [181 x i8]* @opts, i32 0, i32 110), align 1
  store i8 1, i8* getelementptr inbounds ([181 x i8], [181 x i8]* @opts, i32 0, i32 108), align 1
  br label %if.end61

if.end61:                                         ; preds = %if.then60, %if.else58
  store i32 0, i32* %retval, align 4
  br label %return

if.end62:                                         ; preds = %if.end56
  %49 = load %struct.emulation_options*, %struct.emulation_options** @sticky, align 4
  store %struct.emulation_options* %49, %struct.emulation_options** %save_sticky, align 4
  %call63 = call i8* @hcalloc(i32 20)
  %50 = bitcast i8* %call63 to %struct.emulation_options*
  store %struct.emulation_options* %50, %struct.emulation_options** @sticky, align 4
  %51 = load i32, i32* @emulation, align 4
  %52 = load %struct.emulation_options*, %struct.emulation_options** @sticky, align 4
  %emulation = getelementptr inbounds %struct.emulation_options, %struct.emulation_options* %52, i32 0, i32 0
  store i32 %51, i32* %emulation, align 4
  %53 = load %union.linkroot*, %union.linkroot** %optlist, align 4
  %list = bitcast %union.linkroot* %53 to %struct.linklist*
  %first = getelementptr inbounds %struct.linklist, %struct.linklist* %list, i32 0, i32 0
  %54 = load %struct.linknode*, %struct.linknode** %first, align 4
  store %struct.linknode* %54, %struct.linknode** %optnode, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end62
  %55 = load %struct.linknode*, %struct.linknode** %optnode, align 4
  %tobool64 = icmp ne %struct.linknode* %55, null
  br i1 %tobool64, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %56 = load %struct.linknode*, %struct.linknode** %optnode, align 4
  %dat = getelementptr inbounds %struct.linknode, %struct.linknode* %56, i32 0, i32 2
  %57 = load i8*, i8** %dat, align 4
  store i8* %57, i8** %optptr, align 4
  %58 = load i8*, i8** %optptr, align 4
  %59 = load i8, i8* %58, align 1
  %tobool65 = icmp ne i8 %59, 0
  br i1 %tobool65, label %if.then66, label %if.else67

if.then66:                                        ; preds = %for.body
  %60 = load %struct.emulation_options*, %struct.emulation_options** @sticky, align 4
  %n_on_opts = getelementptr inbounds %struct.emulation_options, %struct.emulation_options* %60, i32 0, i32 1
  %61 = load i32, i32* %n_on_opts, align 4
  %inc = add nsw i32 %61, 1
  store i32 %inc, i32* %n_on_opts, align 4
  br label %if.end69

if.else67:                                        ; preds = %for.body
  %62 = load %struct.emulation_options*, %struct.emulation_options** @sticky, align 4
  %n_off_opts = getelementptr inbounds %struct.emulation_options, %struct.emulation_options* %62, i32 0, i32 2
  %63 = load i32, i32* %n_off_opts, align 4
  %inc68 = add nsw i32 %63, 1
  store i32 %inc68, i32* %n_off_opts, align 4
  br label %if.end69

if.end69:                                         ; preds = %if.else67, %if.then66
  br label %for.inc

for.inc:                                          ; preds = %if.end69
  %64 = load %struct.linknode*, %struct.linknode** %optnode, align 4
  %next = getelementptr inbounds %struct.linknode, %struct.linknode* %64, i32 0, i32 0
  %65 = load %struct.linknode*, %struct.linknode** %next, align 4
  store %struct.linknode* %65, %struct.linknode** %optnode, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %66 = load %struct.emulation_options*, %struct.emulation_options** @sticky, align 4
  %n_on_opts70 = getelementptr inbounds %struct.emulation_options, %struct.emulation_options* %66, i32 0, i32 1
  %67 = load i32, i32* %n_on_opts70, align 4
  %tobool71 = icmp ne i32 %67, 0
  br i1 %tobool71, label %if.then72, label %if.else75

if.then72:                                        ; preds = %for.end
  %68 = load %struct.emulation_options*, %struct.emulation_options** @sticky, align 4
  %n_on_opts73 = getelementptr inbounds %struct.emulation_options, %struct.emulation_options* %68, i32 0, i32 1
  %69 = load i32, i32* %n_on_opts73, align 4
  %mul = mul i32 %69, 1
  %call74 = call i8* @zhalloc(i32 %mul)
  %70 = load %struct.emulation_options*, %struct.emulation_options** @sticky, align 4
  %on_opts = getelementptr inbounds %struct.emulation_options, %struct.emulation_options* %70, i32 0, i32 3
  store i8* %call74, i8** %on_opts, align 4
  store i8* %call74, i8** %on_ptr, align 4
  br label %if.end76

if.else75:                                        ; preds = %for.end
  store i8* null, i8** %on_ptr, align 4
  br label %if.end76

if.end76:                                         ; preds = %if.else75, %if.then72
  %71 = load %struct.emulation_options*, %struct.emulation_options** @sticky, align 4
  %n_off_opts77 = getelementptr inbounds %struct.emulation_options, %struct.emulation_options* %71, i32 0, i32 2
  %72 = load i32, i32* %n_off_opts77, align 4
  %tobool78 = icmp ne i32 %72, 0
  br i1 %tobool78, label %if.then79, label %if.else83

if.then79:                                        ; preds = %if.end76
  %73 = load %struct.emulation_options*, %struct.emulation_options** @sticky, align 4
  %n_off_opts80 = getelementptr inbounds %struct.emulation_options, %struct.emulation_options* %73, i32 0, i32 2
  %74 = load i32, i32* %n_off_opts80, align 4
  %mul81 = mul i32 %74, 1
  %call82 = call i8* @zhalloc(i32 %mul81)
  %75 = load %struct.emulation_options*, %struct.emulation_options** @sticky, align 4
  %off_opts = getelementptr inbounds %struct.emulation_options, %struct.emulation_options* %75, i32 0, i32 4
  store i8* %call82, i8** %off_opts, align 4
  store i8* %call82, i8** %off_ptr, align 4
  br label %if.end84

if.else83:                                        ; preds = %if.end76
  store i8* null, i8** %off_ptr, align 4
  br label %if.end84

if.end84:                                         ; preds = %if.else83, %if.then79
  %76 = load %union.linkroot*, %union.linkroot** %optlist, align 4
  %list85 = bitcast %union.linkroot* %76 to %struct.linklist*
  %first86 = getelementptr inbounds %struct.linklist, %struct.linklist* %list85, i32 0, i32 0
  %77 = load %struct.linknode*, %struct.linknode** %first86, align 4
  store %struct.linknode* %77, %struct.linknode** %optnode, align 4
  br label %for.cond87

for.cond87:                                       ; preds = %for.inc101, %if.end84
  %78 = load %struct.linknode*, %struct.linknode** %optnode, align 4
  %tobool88 = icmp ne %struct.linknode* %78, null
  br i1 %tobool88, label %for.body89, label %for.end103

for.body89:                                       ; preds = %for.cond87
  %79 = load %struct.linknode*, %struct.linknode** %optnode, align 4
  %dat91 = getelementptr inbounds %struct.linknode, %struct.linknode* %79, i32 0, i32 2
  %80 = load i8*, i8** %dat91, align 4
  store i8* %80, i8** %optptr90, align 4
  %81 = load i8*, i8** %optptr90, align 4
  %arraydecay92 = getelementptr inbounds [181 x i8], [181 x i8]* %new_opts, i32 0, i32 0
  %sub.ptr.lhs.cast = ptrtoint i8* %81 to i32
  %sub.ptr.rhs.cast = ptrtoint i8* %arraydecay92 to i32
  %sub.ptr.sub = sub i32 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  store i32 %sub.ptr.sub, i32* %optno, align 4
  %82 = load i8*, i8** %optptr90, align 4
  %83 = load i8, i8* %82, align 1
  %tobool93 = icmp ne i8 %83, 0
  br i1 %tobool93, label %if.then94, label %if.else97

if.then94:                                        ; preds = %for.body89
  %84 = load i32, i32* %optno, align 4
  %conv95 = trunc i32 %84 to i8
  %85 = load i8*, i8** %on_ptr, align 4
  %incdec.ptr96 = getelementptr inbounds i8, i8* %85, i32 1
  store i8* %incdec.ptr96, i8** %on_ptr, align 4
  store i8 %conv95, i8* %85, align 1
  br label %if.end100

if.else97:                                        ; preds = %for.body89
  %86 = load i32, i32* %optno, align 4
  %conv98 = trunc i32 %86 to i8
  %87 = load i8*, i8** %off_ptr, align 4
  %incdec.ptr99 = getelementptr inbounds i8, i8* %87, i32 1
  store i8* %incdec.ptr99, i8** %off_ptr, align 4
  store i8 %conv98, i8* %87, align 1
  br label %if.end100

if.end100:                                        ; preds = %if.else97, %if.then94
  br label %for.inc101

for.inc101:                                       ; preds = %if.end100
  %88 = load %struct.linknode*, %struct.linknode** %optnode, align 4
  %next102 = getelementptr inbounds %struct.linknode, %struct.linknode* %88, i32 0, i32 0
  %89 = load %struct.linknode*, %struct.linknode** %next102, align 4
  store %struct.linknode* %89, %struct.linknode** %optnode, align 4
  br label %for.cond87

for.end103:                                       ; preds = %for.cond87
  %90 = load i8**, i8*** %argv.addr, align 4
  %call104 = call i32 @eval(i8** %90)
  store i32 %call104, i32* %ret, align 4
  %91 = load %struct.emulation_options*, %struct.emulation_options** %save_sticky, align 4
  store %struct.emulation_options* %91, %struct.emulation_options** @sticky, align 4
  br label %restore2

restore2:                                         ; preds = %for.end103, %if.then55
  %92 = load i32, i32* %saveemulation, align 4
  store i32 %92, i32* @emulation, align 4
  %arraydecay105 = getelementptr inbounds [181 x i8], [181 x i8]* %saveopts, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* getelementptr inbounds ([181 x i8], [181 x i8]* @opts, i32 0, i32 0), i8* %arraydecay105, i32 181, i32 1, i1 false)
  %93 = load i32, i32* %savepatterns, align 4
  call void @restorepatterndisables(i32 %93)
  br label %restore

restore:                                          ; preds = %restore2, %if.then48, %if.then45
  %94 = load i32, i32* %savehackchar, align 4
  %conv106 = trunc i32 %94 to i8
  store i8 %conv106, i8* @keyboardhackchar, align 1
  call void @inittyptab()
  %95 = load i32, i32* %ret, align 4
  store i32 %95, i32* %retval, align 4
  br label %return

return:                                           ; preds = %restore, %if.end61, %if.then36, %if.end33, %if.then32, %sw.epilog, %if.then14
  %96 = load i32, i32* %retval, align 4
  ret i32 %96
}

declare void @emulate(i8*, i32, i32*, i8*) #1

declare void @list_emulate_options(i8*, i32) #1

declare void @clearpatterndisables() #1

declare i32 @parseopts(i8*, i8***, i8*, i8**, %union.linkroot*, i32) #1

declare i32 @savepatterndisables() #1

; Function Attrs: noinline nounwind
define internal i32 @eval(i8** %argv) #0 {
entry:
  %argv.addr = alloca i8**, align 4
  %prog = alloca %struct.eprog*, align 4
  %oscriptname = alloca i8*, align 4
  %oineval = alloca i32, align 4
  %fpushed = alloca i32, align 4
  %fstack = alloca %struct.funcstack, align 4
  store i8** %argv, i8*** %argv.addr, align 4
  %0 = load i8*, i8** @scriptname, align 4
  store i8* %0, i8** %oscriptname, align 4
  %1 = load i32, i32* @ineval, align 4
  store i32 %1, i32* %oineval, align 4
  %2 = load i8, i8* getelementptr inbounds ([181 x i8], [181 x i8]* @opts, i32 0, i32 56), align 1
  %tobool = icmp ne i8 %2, 0
  %lnot = xor i1 %tobool, true
  %lnot.ext = zext i1 %lnot to i32
  store i32 %lnot.ext, i32* @ineval, align 4
  %3 = load i32, i32* @ineval, align 4
  %tobool1 = icmp ne i32 %3, 0
  br i1 %tobool1, label %if.else23, label %if.then

if.then:                                          ; preds = %entry
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.339, i32 0, i32 0), i8** @scriptname, align 4
  %4 = load %struct.funcstack*, %struct.funcstack** @funcstack, align 4
  %prev = getelementptr inbounds %struct.funcstack, %struct.funcstack* %fstack, i32 0, i32 0
  store %struct.funcstack* %4, %struct.funcstack** %prev, align 4
  %5 = load i8*, i8** @scriptname, align 4
  %name = getelementptr inbounds %struct.funcstack, %struct.funcstack* %fstack, i32 0, i32 1
  store i8* %5, i8** %name, align 4
  %6 = load %struct.funcstack*, %struct.funcstack** @funcstack, align 4
  %tobool2 = icmp ne %struct.funcstack* %6, null
  br i1 %tobool2, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.then
  %7 = load %struct.funcstack*, %struct.funcstack** @funcstack, align 4
  %name3 = getelementptr inbounds %struct.funcstack, %struct.funcstack* %7, i32 0, i32 1
  %8 = load i8*, i8** %name3, align 4
  br label %cond.end

cond.false:                                       ; preds = %if.then
  %9 = load i8*, i8** @argzero, align 4
  %call = call i8* @dupstring(i8* %9)
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %8, %cond.true ], [ %call, %cond.false ]
  %caller = getelementptr inbounds %struct.funcstack, %struct.funcstack* %fstack, i32 0, i32 3
  store i8* %cond, i8** %caller, align 4
  %10 = load i32, i32* @lineno, align 4
  %lineno = getelementptr inbounds %struct.funcstack, %struct.funcstack* %fstack, i32 0, i32 5
  store i32 %10, i32* %lineno, align 4
  %tp = getelementptr inbounds %struct.funcstack, %struct.funcstack* %fstack, i32 0, i32 6
  store i32 2, i32* %tp, align 4
  %11 = load %struct.funcstack*, %struct.funcstack** @funcstack, align 4
  %tobool4 = icmp ne %struct.funcstack* %11, null
  br i1 %tobool4, label %lor.lhs.false, label %if.then6

lor.lhs.false:                                    ; preds = %cond.end
  %12 = load %struct.funcstack*, %struct.funcstack** @funcstack, align 4
  %tp5 = getelementptr inbounds %struct.funcstack, %struct.funcstack* %12, i32 0, i32 6
  %13 = load i32, i32* %tp5, align 4
  %cmp = icmp eq i32 %13, 0
  br i1 %cmp, label %if.then6, label %if.else

if.then6:                                         ; preds = %lor.lhs.false, %cond.end
  %lineno7 = getelementptr inbounds %struct.funcstack, %struct.funcstack* %fstack, i32 0, i32 5
  %14 = load i32, i32* %lineno7, align 4
  %flineno = getelementptr inbounds %struct.funcstack, %struct.funcstack* %fstack, i32 0, i32 4
  store i32 %14, i32* %flineno, align 4
  %caller8 = getelementptr inbounds %struct.funcstack, %struct.funcstack* %fstack, i32 0, i32 3
  %15 = load i8*, i8** %caller8, align 4
  %filename = getelementptr inbounds %struct.funcstack, %struct.funcstack* %fstack, i32 0, i32 2
  store i8* %15, i8** %filename, align 4
  br label %if.end22

if.else:                                          ; preds = %lor.lhs.false
  %16 = load %struct.funcstack*, %struct.funcstack** @funcstack, align 4
  %flineno9 = getelementptr inbounds %struct.funcstack, %struct.funcstack* %16, i32 0, i32 4
  %17 = load i32, i32* %flineno9, align 4
  %18 = load i32, i32* @lineno, align 4
  %add = add nsw i32 %17, %18
  %flineno10 = getelementptr inbounds %struct.funcstack, %struct.funcstack* %fstack, i32 0, i32 4
  store i32 %add, i32* %flineno10, align 4
  %19 = load %struct.funcstack*, %struct.funcstack** @funcstack, align 4
  %tp11 = getelementptr inbounds %struct.funcstack, %struct.funcstack* %19, i32 0, i32 6
  %20 = load i32, i32* %tp11, align 4
  %cmp12 = icmp eq i32 %20, 2
  br i1 %cmp12, label %if.then13, label %if.end

if.then13:                                        ; preds = %if.else
  %flineno14 = getelementptr inbounds %struct.funcstack, %struct.funcstack* %fstack, i32 0, i32 4
  %21 = load i32, i32* %flineno14, align 4
  %dec = add nsw i32 %21, -1
  store i32 %dec, i32* %flineno14, align 4
  br label %if.end

if.end:                                           ; preds = %if.then13, %if.else
  %22 = load %struct.funcstack*, %struct.funcstack** @funcstack, align 4
  %filename15 = getelementptr inbounds %struct.funcstack, %struct.funcstack* %22, i32 0, i32 2
  %23 = load i8*, i8** %filename15, align 4
  %filename16 = getelementptr inbounds %struct.funcstack, %struct.funcstack* %fstack, i32 0, i32 2
  store i8* %23, i8** %filename16, align 4
  %filename17 = getelementptr inbounds %struct.funcstack, %struct.funcstack* %fstack, i32 0, i32 2
  %24 = load i8*, i8** %filename17, align 4
  %tobool18 = icmp ne i8* %24, null
  br i1 %tobool18, label %if.end21, label %if.then19

if.then19:                                        ; preds = %if.end
  %filename20 = getelementptr inbounds %struct.funcstack, %struct.funcstack* %fstack, i32 0, i32 2
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.34, i32 0, i32 0), i8** %filename20, align 4
  br label %if.end21

if.end21:                                         ; preds = %if.then19, %if.end
  br label %if.end22

if.end22:                                         ; preds = %if.end21, %if.then6
  store %struct.funcstack* %fstack, %struct.funcstack** @funcstack, align 4
  store i32 1, i32* %fpushed, align 4
  br label %if.end24

if.else23:                                        ; preds = %entry
  store i32 0, i32* %fpushed, align 4
  br label %if.end24

if.end24:                                         ; preds = %if.else23, %if.end22
  %25 = load i8**, i8*** %argv.addr, align 4
  %call25 = call i8* @zjoin(i8** %25, i32 32, i32 1)
  %call26 = call %struct.eprog* @parse_string(i8* %call25, i32 1)
  store %struct.eprog* %call26, %struct.eprog** %prog, align 4
  %26 = load %struct.eprog*, %struct.eprog** %prog, align 4
  %tobool27 = icmp ne %struct.eprog* %26, null
  br i1 %tobool27, label %if.then28, label %if.else38

if.then28:                                        ; preds = %if.end24
  %27 = load %struct.eprog*, %struct.eprog** %prog, align 4
  %prog29 = getelementptr inbounds %struct.eprog, %struct.eprog* %27, i32 0, i32 5
  %28 = load i32*, i32** %prog29, align 4
  %29 = load i32, i32* %28, align 4
  %and = and i32 %29, 31
  %cmp30 = icmp ne i32 %and, 1
  br i1 %cmp30, label %if.then31, label %if.else32

if.then31:                                        ; preds = %if.then28
  store i32 0, i32* @lastval, align 4
  br label %if.end37

if.else32:                                        ; preds = %if.then28
  %30 = load %struct.eprog*, %struct.eprog** %prog, align 4
  call void @execode(%struct.eprog* %30, i32 1, i32 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.197, i32 0, i32 0))
  %31 = load i32, i32* @errflag, align 4
  %tobool33 = icmp ne i32 %31, 0
  br i1 %tobool33, label %land.lhs.true, label %if.end36

land.lhs.true:                                    ; preds = %if.else32
  %32 = load i32, i32* @lastval, align 4
  %tobool34 = icmp ne i32 %32, 0
  br i1 %tobool34, label %if.end36, label %if.then35

if.then35:                                        ; preds = %land.lhs.true
  %33 = load i32, i32* @errflag, align 4
  store i32 %33, i32* @lastval, align 4
  br label %if.end36

if.end36:                                         ; preds = %if.then35, %land.lhs.true, %if.else32
  br label %if.end37

if.end37:                                         ; preds = %if.end36, %if.then31
  br label %if.end39

if.else38:                                        ; preds = %if.end24
  store i32 1, i32* @lastval, align 4
  br label %if.end39

if.end39:                                         ; preds = %if.else38, %if.end37
  %34 = load i32, i32* %fpushed, align 4
  %tobool40 = icmp ne i32 %34, 0
  br i1 %tobool40, label %if.then41, label %if.end43

if.then41:                                        ; preds = %if.end39
  %35 = load %struct.funcstack*, %struct.funcstack** @funcstack, align 4
  %prev42 = getelementptr inbounds %struct.funcstack, %struct.funcstack* %35, i32 0, i32 0
  %36 = load %struct.funcstack*, %struct.funcstack** %prev42, align 4
  store %struct.funcstack* %36, %struct.funcstack** @funcstack, align 4
  br label %if.end43

if.end43:                                         ; preds = %if.then41, %if.end39
  %37 = load i32, i32* @errflag, align 4
  %and44 = and i32 %37, -2
  store i32 %and44, i32* @errflag, align 4
  %38 = load i8*, i8** %oscriptname, align 4
  store i8* %38, i8** @scriptname, align 4
  %39 = load i32, i32* %oineval, align 4
  store i32 %39, i32* @ineval, align 4
  %40 = load i32, i32* @lastval, align 4
  ret i32 %40
}

declare void @restorepatterndisables(i32) #1

; Function Attrs: noinline nounwind
define i32 @bin_read(i8* %name, i8** %args, %struct.options* %ops, i32 %func) #0 {
entry:
  %retval = alloca i32, align 4
  %name.addr = alloca i8*, align 4
  %args.addr = alloca i8**, align 4
  %ops.addr = alloca %struct.options*, align 4
  %func.addr = alloca i32, align 4
  %reply = alloca i8*, align 4
  %readpmpt = alloca i8*, align 4
  %bsiz = alloca i32, align 4
  %c = alloca i32, align 4
  %gotnl = alloca i32, align 4
  %al = alloca i32, align 4
  %first = alloca i32, align 4
  %nchars = alloca i32, align 4
  %bslash = alloca i32, align 4
  %keys = alloca i32, align 4
  %haso = alloca i32, align 4
  %isem = alloca i32, align 4
  %izle = alloca i32, align 4
  %buf = alloca i8*, align 4
  %bptr = alloca i8*, align 4
  %firstarg = alloca i8*, align 4
  %zbuforig = alloca i8*, align 4
  %readll = alloca %union.linkroot*, align 4
  %oshout = alloca %struct._IO_FILE*, align 4
  %readchar = alloca i32, align 4
  %val = alloca i32, align 4
  %resettty = alloca i32, align 4
  %saveti = alloca %struct.ttyinfo, align 4
  %d = alloca i8, align 1
  %izle_timeout = alloca i32, align 4
  %delim = alloca i32, align 4
  %wc = alloca i32, align 4
  %mbs = alloca %struct.__mbstate_t, align 4
  %laststart = alloca i8*, align 4
  %ret = alloca i32, align 4
  %eptr = alloca i8*, align 4
  %optarg = alloca i8*, align 4
  %eptr114 = alloca i8*, align 4
  %argptr = alloca i8*, align 4
  %ti = alloca %struct.ttyinfo, align 4
  %delimstr = alloca i8*, align 4
  %wi = alloca i32, align 4
  %ti230 = alloca %struct.ttyinfo, align 4
  %timeout = alloca i32, align 4
  %mn = alloca %struct.mnumber, align 8
  %tmp = alloca %struct.mnumber, align 8
  %eof = alloca i32, align 4
  %s = alloca %struct.__sigset_t, align 4
  %blen = alloca i32, align 4
  %llen = alloca i32, align 4
  %tmp715 = alloca %struct.__sigset_t, align 4
  %pp = alloca i8**, align 4
  %p = alloca i8**, align 4
  %n = alloca %struct.linknode*, align 4
  %s858 = alloca %struct.__sigset_t, align 4
  %blen961 = alloca i32, align 4
  %llen966 = alloca i32, align 4
  %tmp976 = alloca %struct.__sigset_t, align 4
  %first1041 = alloca i8, align 1
  store i8* %name, i8** %name.addr, align 4
  store i8** %args, i8*** %args.addr, align 4
  store %struct.options* %ops, %struct.options** %ops.addr, align 4
  store i32 %func, i32* %func.addr, align 4
  store i32 0, i32* %c, align 4
  store i32 0, i32* %gotnl, align 4
  store i32 0, i32* %al, align 4
  store i32 1, i32* %nchars, align 4
  store i32 0, i32* %keys, align 4
  store i32 0, i32* %haso, align 4
  %0 = load i8*, i8** @term, align 4
  %call = call i32 @strcmp(i8* %0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.135, i32 0, i32 0))
  %tobool = icmp ne i32 %call, 0
  %lnot = xor i1 %tobool, true
  %lnot.ext = zext i1 %lnot to i32
  store i32 %lnot.ext, i32* %isem, align 4
  %1 = load i32, i32* @zleactive, align 4
  store i32 %1, i32* %izle, align 4
  %call1 = call %union.linkroot* @newlinklist()
  store %union.linkroot* %call1, %union.linkroot** %readll, align 4
  store %struct._IO_FILE* null, %struct._IO_FILE** %oshout, align 4
  store i32 -1, i32* %readchar, align 4
  store i32 0, i32* %resettty, align 4
  store i32 0, i32* %izle_timeout, align 4
  store i32 10, i32* %delim, align 4
  %2 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind = getelementptr inbounds %struct.options, %struct.options* %2, i32 0, i32 0
  store i32 107, i32* %c, align 4
  %arrayidx = getelementptr inbounds [128 x i8], [128 x i8]* %ind, i32 0, i32 107
  %3 = load i8, i8* %arrayidx, align 1
  %conv = zext i8 %3 to i32
  %cmp = icmp sgt i32 %conv, 3
  br i1 %cmp, label %if.then, label %if.end11

if.then:                                          ; preds = %entry
  %4 = load %struct.options*, %struct.options** %ops.addr, align 4
  %args3 = getelementptr inbounds %struct.options, %struct.options* %4, i32 0, i32 1
  %5 = load i8**, i8*** %args3, align 4
  %6 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind4 = getelementptr inbounds %struct.options, %struct.options* %6, i32 0, i32 0
  %7 = load i32, i32* %c, align 4
  %arrayidx5 = getelementptr inbounds [128 x i8], [128 x i8]* %ind4, i32 0, i32 %7
  %8 = load i8, i8* %arrayidx5, align 1
  %conv6 = zext i8 %8 to i32
  %shr = ashr i32 %conv6, 2
  %sub = sub nsw i32 %shr, 1
  %arrayidx7 = getelementptr inbounds i8*, i8** %5, i32 %sub
  %9 = load i8*, i8** %arrayidx7, align 4
  store i8* %9, i8** %optarg, align 4
  %10 = load i8*, i8** %optarg, align 4
  %call8 = call i32 @zstrtol(i8* %10, i8** %eptr, i32 10)
  store i32 %call8, i32* %nchars, align 4
  %11 = load i8*, i8** %eptr, align 4
  %12 = load i8, i8* %11, align 1
  %tobool9 = icmp ne i8 %12, 0
  br i1 %tobool9, label %if.then10, label %if.end

if.then10:                                        ; preds = %if.then
  %13 = load i8*, i8** %name.addr, align 4
  %14 = load i32, i32* %c, align 4
  %15 = load i8*, i8** %optarg, align 4
  call void (i8*, i8*, ...) @zwarnnam(i8* %13, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.96, i32 0, i32 0), i32 %14, i8* %15)
  store i32 1, i32* %retval, align 4
  br label %return

if.end:                                           ; preds = %if.then
  br label %if.end11

if.end11:                                         ; preds = %if.end, %entry
  %16 = load i8**, i8*** %args.addr, align 4
  %17 = load i8*, i8** %16, align 4
  %tobool12 = icmp ne i8* %17, null
  br i1 %tobool12, label %land.lhs.true, label %cond.false

land.lhs.true:                                    ; preds = %if.end11
  %18 = load i8**, i8*** %args.addr, align 4
  %19 = load i8*, i8** %18, align 4
  %20 = load i8, i8* %19, align 1
  %conv13 = sext i8 %20 to i32
  %cmp14 = icmp eq i32 %conv13, 63
  br i1 %cmp14, label %cond.true, label %cond.false

cond.true:                                        ; preds = %land.lhs.true
  %21 = load i8**, i8*** %args.addr, align 4
  %incdec.ptr = getelementptr inbounds i8*, i8** %21, i32 1
  store i8** %incdec.ptr, i8*** %args.addr, align 4
  %22 = load i8*, i8** %21, align 4
  br label %cond.end

cond.false:                                       ; preds = %land.lhs.true, %if.end11
  %23 = load i8**, i8*** %args.addr, align 4
  %24 = load i8*, i8** %23, align 4
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %22, %cond.true ], [ %24, %cond.false ]
  store i8* %cond, i8** %firstarg, align 4
  %25 = load i8**, i8*** %args.addr, align 4
  %26 = load i8*, i8** %25, align 4
  %tobool16 = icmp ne i8* %26, null
  br i1 %tobool16, label %cond.true17, label %cond.false19

cond.true17:                                      ; preds = %cond.end
  %27 = load i8**, i8*** %args.addr, align 4
  %incdec.ptr18 = getelementptr inbounds i8*, i8** %27, i32 1
  store i8** %incdec.ptr18, i8*** %args.addr, align 4
  %28 = load i8*, i8** %27, align 4
  br label %cond.end26

cond.false19:                                     ; preds = %cond.end
  %29 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind20 = getelementptr inbounds %struct.options, %struct.options* %29, i32 0, i32 0
  %arrayidx21 = getelementptr inbounds [128 x i8], [128 x i8]* %ind20, i32 0, i32 65
  %30 = load i8, i8* %arrayidx21, align 1
  %conv22 = zext i8 %30 to i32
  %cmp23 = icmp ne i32 %conv22, 0
  %cond25 = select i1 %cmp23, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.136, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.137, i32 0, i32 0)
  br label %cond.end26

cond.end26:                                       ; preds = %cond.false19, %cond.true17
  %cond27 = phi i8* [ %28, %cond.true17 ], [ %cond25, %cond.false19 ]
  store i8* %cond27, i8** %reply, align 4
  %31 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind28 = getelementptr inbounds %struct.options, %struct.options* %31, i32 0, i32 0
  %arrayidx29 = getelementptr inbounds [128 x i8], [128 x i8]* %ind28, i32 0, i32 65
  %32 = load i8, i8* %arrayidx29, align 1
  %conv30 = zext i8 %32 to i32
  %cmp31 = icmp ne i32 %conv30, 0
  br i1 %cmp31, label %land.lhs.true33, label %if.end36

land.lhs.true33:                                  ; preds = %cond.end26
  %33 = load i8**, i8*** %args.addr, align 4
  %34 = load i8*, i8** %33, align 4
  %tobool34 = icmp ne i8* %34, null
  br i1 %tobool34, label %if.then35, label %if.end36

if.then35:                                        ; preds = %land.lhs.true33
  %35 = load i8*, i8** %name.addr, align 4
  call void (i8*, i8*, ...) @zwarnnam(i8* %35, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.138, i32 0, i32 0))
  store i32 1, i32* %retval, align 4
  br label %return

if.end36:                                         ; preds = %land.lhs.true33, %cond.end26
  %36 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind37 = getelementptr inbounds %struct.options, %struct.options* %36, i32 0, i32 0
  %arrayidx38 = getelementptr inbounds [128 x i8], [128 x i8]* %ind37, i32 0, i32 108
  %37 = load i8, i8* %arrayidx38, align 4
  %conv39 = zext i8 %37 to i32
  %cmp40 = icmp ne i32 %conv39, 0
  br i1 %cmp40, label %if.then47, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end36
  %38 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind42 = getelementptr inbounds %struct.options, %struct.options* %38, i32 0, i32 0
  %arrayidx43 = getelementptr inbounds [128 x i8], [128 x i8]* %ind42, i32 0, i32 99
  %39 = load i8, i8* %arrayidx43, align 1
  %conv44 = zext i8 %39 to i32
  %cmp45 = icmp ne i32 %conv44, 0
  br i1 %cmp45, label %if.then47, label %if.end49

if.then47:                                        ; preds = %lor.lhs.false, %if.end36
  %40 = load i32 (i8*, i8**, %struct.options*, i8*)*, i32 (i8*, i8**, %struct.options*, i8*)** @compctlreadptr, align 4
  %41 = load i8*, i8** %name.addr, align 4
  %42 = load i8**, i8*** %args.addr, align 4
  %43 = load %struct.options*, %struct.options** %ops.addr, align 4
  %44 = load i8*, i8** %reply, align 4
  %call48 = call i32 %40(i8* %41, i8** %42, %struct.options* %43, i8* %44)
  store i32 %call48, i32* %retval, align 4
  br label %return

if.end49:                                         ; preds = %lor.lhs.false
  %45 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind50 = getelementptr inbounds %struct.options, %struct.options* %45, i32 0, i32 0
  %arrayidx51 = getelementptr inbounds [128 x i8], [128 x i8]* %ind50, i32 0, i32 107
  %46 = load i8, i8* %arrayidx51, align 1
  %conv52 = zext i8 %46 to i32
  %cmp53 = icmp ne i32 %conv52, 0
  br i1 %cmp53, label %land.lhs.true61, label %lor.lhs.false55

lor.lhs.false55:                                  ; preds = %if.end49
  %47 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind56 = getelementptr inbounds %struct.options, %struct.options* %47, i32 0, i32 0
  %arrayidx57 = getelementptr inbounds [128 x i8], [128 x i8]* %ind56, i32 0, i32 113
  %48 = load i8, i8* %arrayidx57, align 1
  %conv58 = zext i8 %48 to i32
  %cmp59 = icmp ne i32 %conv58, 0
  br i1 %cmp59, label %land.lhs.true61, label %if.else101

land.lhs.true61:                                  ; preds = %lor.lhs.false55, %if.end49
  %49 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind62 = getelementptr inbounds %struct.options, %struct.options* %49, i32 0, i32 0
  %arrayidx63 = getelementptr inbounds [128 x i8], [128 x i8]* %ind62, i32 0, i32 117
  %50 = load i8, i8* %arrayidx63, align 1
  %conv64 = zext i8 %50 to i32
  %cmp65 = icmp ne i32 %conv64, 0
  br i1 %cmp65, label %if.else101, label %land.lhs.true67

land.lhs.true67:                                  ; preds = %land.lhs.true61
  %51 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind68 = getelementptr inbounds %struct.options, %struct.options* %51, i32 0, i32 0
  %arrayidx69 = getelementptr inbounds [128 x i8], [128 x i8]* %ind68, i32 0, i32 112
  %52 = load i8, i8* %arrayidx69, align 4
  %conv70 = zext i8 %52 to i32
  %cmp71 = icmp ne i32 %conv70, 0
  br i1 %cmp71, label %if.else101, label %if.then73

if.then73:                                        ; preds = %land.lhs.true67
  %53 = load i32, i32* @zleactive, align 4
  %tobool74 = icmp ne i32 %53, 0
  br i1 %tobool74, label %if.end100, label %if.then75

if.then75:                                        ; preds = %if.then73
  %54 = load i32, i32* @SHTTY, align 4
  %cmp76 = icmp eq i32 %54, -1
  br i1 %cmp76, label %if.then78, label %if.else

if.then78:                                        ; preds = %if.then75
  %call79 = call i32 (i8*, i32, ...) @open(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.139, i32 0, i32 0), i32 258)
  store i32 %call79, i32* @SHTTY, align 4
  %cmp80 = icmp ne i32 %call79, -1
  br i1 %cmp80, label %if.then82, label %if.end83

if.then82:                                        ; preds = %if.then78
  store i32 1, i32* %haso, align 4
  %55 = load %struct._IO_FILE*, %struct._IO_FILE** @shout, align 4
  store %struct._IO_FILE* %55, %struct._IO_FILE** %oshout, align 4
  call void @init_shout()
  br label %if.end83

if.end83:                                         ; preds = %if.then82, %if.then78
  br label %if.end87

if.else:                                          ; preds = %if.then75
  %56 = load %struct._IO_FILE*, %struct._IO_FILE** @shout, align 4
  %tobool84 = icmp ne %struct._IO_FILE* %56, null
  br i1 %tobool84, label %if.end86, label %if.then85

if.then85:                                        ; preds = %if.else
  call void @init_shout()
  br label %if.end86

if.end86:                                         ; preds = %if.then85, %if.else
  br label %if.end87

if.end87:                                         ; preds = %if.end86, %if.end83
  %57 = load i32, i32* @SHTTY, align 4
  %cmp88 = icmp eq i32 %57, -1
  br i1 %cmp88, label %if.then90, label %if.end93

if.then90:                                        ; preds = %if.end87
  %58 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 4
  %call91 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %58, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.140, i32 0, i32 0))
  %59 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 4
  %call92 = call i32 @fflush(%struct._IO_FILE* %59)
  store i32 1, i32* %retval, align 4
  br label %return

if.end93:                                         ; preds = %if.end87
  %60 = load i8, i8* getelementptr inbounds ([181 x i8], [181 x i8]* @opts, i32 0, i32 94), align 1
  %tobool94 = icmp ne i8 %60, 0
  br i1 %tobool94, label %if.end96, label %if.then95

if.then95:                                        ; preds = %if.end93
  call void @gettyinfo(%struct.ttyinfo* @shttyinfo)
  br label %if.end96

if.end96:                                         ; preds = %if.then95, %if.end93
  %61 = load i32, i32* @mypgrp, align 4
  call void @attachtty(i32 %61)
  %62 = load i32, i32* %isem, align 4
  %tobool97 = icmp ne i32 %62, 0
  br i1 %tobool97, label %if.end99, label %if.then98

if.then98:                                        ; preds = %if.end96
  call void @setcbreak()
  br label %if.end99

if.end99:                                         ; preds = %if.then98, %if.end96
  %63 = load i32, i32* @SHTTY, align 4
  store i32 %63, i32* @readfd, align 4
  br label %if.end100

if.end100:                                        ; preds = %if.end99, %if.then73
  store i32 1, i32* %keys, align 4
  br label %if.end149

if.else101:                                       ; preds = %land.lhs.true67, %land.lhs.true61, %lor.lhs.false55
  %64 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind102 = getelementptr inbounds %struct.options, %struct.options* %64, i32 0, i32 0
  %arrayidx103 = getelementptr inbounds [128 x i8], [128 x i8]* %ind102, i32 0, i32 117
  %65 = load i8, i8* %arrayidx103, align 1
  %conv104 = zext i8 %65 to i32
  %cmp105 = icmp sgt i32 %conv104, 3
  br i1 %cmp105, label %land.lhs.true107, label %if.else135

land.lhs.true107:                                 ; preds = %if.else101
  %66 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind108 = getelementptr inbounds %struct.options, %struct.options* %66, i32 0, i32 0
  %arrayidx109 = getelementptr inbounds [128 x i8], [128 x i8]* %ind108, i32 0, i32 112
  %67 = load i8, i8* %arrayidx109, align 4
  %conv110 = zext i8 %67 to i32
  %cmp111 = icmp ne i32 %conv110, 0
  br i1 %cmp111, label %if.else135, label %if.then113

if.then113:                                       ; preds = %land.lhs.true107
  %68 = load %struct.options*, %struct.options** %ops.addr, align 4
  %args115 = getelementptr inbounds %struct.options, %struct.options* %68, i32 0, i32 1
  %69 = load i8**, i8*** %args115, align 4
  %70 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind116 = getelementptr inbounds %struct.options, %struct.options* %70, i32 0, i32 0
  %arrayidx117 = getelementptr inbounds [128 x i8], [128 x i8]* %ind116, i32 0, i32 117
  %71 = load i8, i8* %arrayidx117, align 1
  %conv118 = zext i8 %71 to i32
  %shr119 = ashr i32 %conv118, 2
  %sub120 = sub nsw i32 %shr119, 1
  %arrayidx121 = getelementptr inbounds i8*, i8** %69, i32 %sub120
  %72 = load i8*, i8** %arrayidx121, align 4
  store i8* %72, i8** %argptr, align 4
  %73 = load i8*, i8** %argptr, align 4
  %call122 = call i32 @strcmp(i8* %73, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.102, i32 0, i32 0))
  %tobool123 = icmp ne i32 %call122, 0
  br i1 %tobool123, label %if.else129, label %if.then124

if.then124:                                       ; preds = %if.then113
  %74 = load i32, i32* @coprocin, align 4
  store i32 %74, i32* @readfd, align 4
  %75 = load i32, i32* @readfd, align 4
  %cmp125 = icmp slt i32 %75, 0
  br i1 %cmp125, label %if.then127, label %if.end128

if.then127:                                       ; preds = %if.then124
  %76 = load i8*, i8** %name.addr, align 4
  call void (i8*, i8*, ...) @zwarnnam(i8* %76, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.101, i32 0, i32 0))
  store i32 1, i32* %retval, align 4
  br label %return

if.end128:                                        ; preds = %if.then124
  br label %if.end134

if.else129:                                       ; preds = %if.then113
  %77 = load i8*, i8** %argptr, align 4
  %call130 = call i32 @zstrtol(i8* %77, i8** %eptr114, i32 10)
  store i32 %call130, i32* @readfd, align 4
  %78 = load i8*, i8** %eptr114, align 4
  %79 = load i8, i8* %78, align 1
  %tobool131 = icmp ne i8 %79, 0
  br i1 %tobool131, label %if.then132, label %if.end133

if.then132:                                       ; preds = %if.else129
  %80 = load i8*, i8** %name.addr, align 4
  %81 = load i8*, i8** %argptr, align 4
  call void (i8*, i8*, ...) @zwarnnam(i8* %80, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.96, i32 0, i32 0), i32 117, i8* %81)
  store i32 1, i32* %retval, align 4
  br label %return

if.end133:                                        ; preds = %if.else129
  br label %if.end134

if.end134:                                        ; preds = %if.end133, %if.end128
  store i32 0, i32* %izle, align 4
  br label %if.end148

if.else135:                                       ; preds = %land.lhs.true107, %if.else101
  %82 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind136 = getelementptr inbounds %struct.options, %struct.options* %82, i32 0, i32 0
  %arrayidx137 = getelementptr inbounds [128 x i8], [128 x i8]* %ind136, i32 0, i32 112
  %83 = load i8, i8* %arrayidx137, align 4
  %conv138 = zext i8 %83 to i32
  %cmp139 = icmp ne i32 %conv138, 0
  br i1 %cmp139, label %if.then141, label %if.else146

if.then141:                                       ; preds = %if.else135
  %84 = load i32, i32* @coprocin, align 4
  store i32 %84, i32* @readfd, align 4
  %85 = load i32, i32* @readfd, align 4
  %cmp142 = icmp slt i32 %85, 0
  br i1 %cmp142, label %if.then144, label %if.end145

if.then144:                                       ; preds = %if.then141
  %86 = load i8*, i8** %name.addr, align 4
  call void (i8*, i8*, ...) @zwarnnam(i8* %86, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.101, i32 0, i32 0))
  store i32 1, i32* %retval, align 4
  br label %return

if.end145:                                        ; preds = %if.then141
  store i32 0, i32* %izle, align 4
  br label %if.end147

if.else146:                                       ; preds = %if.else135
  store i32 0, i32* %izle, align 4
  store i32 0, i32* @readfd, align 4
  br label %if.end147

if.end147:                                        ; preds = %if.else146, %if.end145
  br label %if.end148

if.end148:                                        ; preds = %if.end147, %if.end134
  br label %if.end149

if.end149:                                        ; preds = %if.end148, %if.end100
  %87 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind150 = getelementptr inbounds %struct.options, %struct.options* %87, i32 0, i32 0
  %arrayidx151 = getelementptr inbounds [128 x i8], [128 x i8]* %ind150, i32 0, i32 115
  %88 = load i8, i8* %arrayidx151, align 1
  %conv152 = zext i8 %88 to i32
  %cmp153 = icmp ne i32 %conv152, 0
  br i1 %cmp153, label %land.lhs.true155, label %if.end159

land.lhs.true155:                                 ; preds = %if.end149
  %89 = load i32, i32* @SHTTY, align 4
  %cmp156 = icmp ne i32 %89, -1
  br i1 %cmp156, label %if.then158, label %if.end159

if.then158:                                       ; preds = %land.lhs.true155
  call void @gettyinfo(%struct.ttyinfo* %ti)
  %90 = bitcast %struct.ttyinfo* %saveti to i8*
  %91 = bitcast %struct.ttyinfo* %ti to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %90, i8* %91, i32 68, i32 4, i1 false)
  store i32 1, i32* %resettty, align 4
  %tio = getelementptr inbounds %struct.ttyinfo, %struct.ttyinfo* %ti, i32 0, i32 0
  %c_lflag = getelementptr inbounds %struct.termios, %struct.termios* %tio, i32 0, i32 3
  %92 = load i32, i32* %c_lflag, align 4
  %and = and i32 %92, -9
  store i32 %and, i32* %c_lflag, align 4
  call void @settyinfo(%struct.ttyinfo* %ti)
  br label %if.end159

if.end159:                                        ; preds = %if.then158, %land.lhs.true155, %if.end149
  %93 = load i8*, i8** %firstarg, align 4
  %tobool160 = icmp ne i8* %93, null
  br i1 %tobool160, label %if.then161, label %if.end191

if.then161:                                       ; preds = %if.end159
  %94 = load i8*, i8** %firstarg, align 4
  store i8* %94, i8** %readpmpt, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then161
  %95 = load i8*, i8** %readpmpt, align 4
  %96 = load i8, i8* %95, align 1
  %conv162 = sext i8 %96 to i32
  %tobool163 = icmp ne i32 %conv162, 0
  br i1 %tobool163, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %for.cond
  %97 = load i8*, i8** %readpmpt, align 4
  %98 = load i8, i8* %97, align 1
  %conv164 = sext i8 %98 to i32
  %cmp165 = icmp ne i32 %conv164, 63
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %99 = phi i1 [ false, %for.cond ], [ %cmp165, %land.rhs ]
  br i1 %99, label %for.body, label %for.end

for.body:                                         ; preds = %land.end
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %100 = load i8*, i8** %readpmpt, align 4
  %incdec.ptr167 = getelementptr inbounds i8, i8* %100, i32 1
  store i8* %incdec.ptr167, i8** %readpmpt, align 4
  br label %for.cond

for.end:                                          ; preds = %land.end
  %101 = load i8*, i8** %readpmpt, align 4
  %incdec.ptr168 = getelementptr inbounds i8, i8* %101, i32 1
  store i8* %incdec.ptr168, i8** %readpmpt, align 4
  %102 = load i8, i8* %101, align 1
  %tobool169 = icmp ne i8 %102, 0
  br i1 %tobool169, label %if.then170, label %if.end190

if.then170:                                       ; preds = %for.end
  %103 = load i32, i32* %keys, align 4
  %tobool171 = icmp ne i32 %103, 0
  br i1 %tobool171, label %if.then175, label %lor.lhs.false172

lor.lhs.false172:                                 ; preds = %if.then170
  %call173 = call i32 @isatty(i32 0)
  %tobool174 = icmp ne i32 %call173, 0
  br i1 %tobool174, label %if.then175, label %if.end188

if.then175:                                       ; preds = %lor.lhs.false172, %if.then170
  %104 = load i8*, i8** %readpmpt, align 4
  %105 = load %struct._IO_FILE*, %struct._IO_FILE** @shout, align 4
  %tobool176 = icmp ne %struct._IO_FILE* %105, null
  br i1 %tobool176, label %cond.true177, label %cond.false178

cond.true177:                                     ; preds = %if.then175
  %106 = load %struct._IO_FILE*, %struct._IO_FILE** @shout, align 4
  br label %cond.end179

cond.false178:                                    ; preds = %if.then175
  %107 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 4
  br label %cond.end179

cond.end179:                                      ; preds = %cond.false178, %cond.true177
  %cond180 = phi %struct._IO_FILE* [ %106, %cond.true177 ], [ %107, %cond.false178 ]
  %call181 = call i32 @zputs(i8* %104, %struct._IO_FILE* %cond180)
  %108 = load %struct._IO_FILE*, %struct._IO_FILE** @shout, align 4
  %tobool182 = icmp ne %struct._IO_FILE* %108, null
  br i1 %tobool182, label %cond.true183, label %cond.false184

cond.true183:                                     ; preds = %cond.end179
  %109 = load %struct._IO_FILE*, %struct._IO_FILE** @shout, align 4
  br label %cond.end185

cond.false184:                                    ; preds = %cond.end179
  %110 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 4
  br label %cond.end185

cond.end185:                                      ; preds = %cond.false184, %cond.true183
  %cond186 = phi %struct._IO_FILE* [ %109, %cond.true183 ], [ %110, %cond.false184 ]
  %call187 = call i32 @fflush(%struct._IO_FILE* %cond186)
  br label %if.end188

if.end188:                                        ; preds = %cond.end185, %lor.lhs.false172
  %111 = load i8*, i8** %readpmpt, align 4
  %arrayidx189 = getelementptr inbounds i8, i8* %111, i32 -1
  store i8 0, i8* %arrayidx189, align 1
  br label %if.end190

if.end190:                                        ; preds = %if.end188, %for.end
  br label %if.end191

if.end191:                                        ; preds = %if.end190, %if.end159
  %112 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind192 = getelementptr inbounds %struct.options, %struct.options* %112, i32 0, i32 0
  %arrayidx193 = getelementptr inbounds [128 x i8], [128 x i8]* %ind192, i32 0, i32 100
  %113 = load i8, i8* %arrayidx193, align 4
  %conv194 = zext i8 %113 to i32
  %cmp195 = icmp ne i32 %conv194, 0
  br i1 %cmp195, label %if.then197, label %if.end243

if.then197:                                       ; preds = %if.end191
  %114 = load %struct.options*, %struct.options** %ops.addr, align 4
  %args198 = getelementptr inbounds %struct.options, %struct.options* %114, i32 0, i32 1
  %115 = load i8**, i8*** %args198, align 4
  %116 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind199 = getelementptr inbounds %struct.options, %struct.options* %116, i32 0, i32 0
  %arrayidx200 = getelementptr inbounds [128 x i8], [128 x i8]* %ind199, i32 0, i32 100
  %117 = load i8, i8* %arrayidx200, align 4
  %conv201 = zext i8 %117 to i32
  %shr202 = ashr i32 %conv201, 2
  %sub203 = sub nsw i32 %shr202, 1
  %arrayidx204 = getelementptr inbounds i8*, i8** %115, i32 %sub203
  %118 = load i8*, i8** %arrayidx204, align 4
  store i8* %118, i8** %delimstr, align 4
  %119 = load i8, i8* getelementptr inbounds ([181 x i8], [181 x i8]* @opts, i32 0, i32 118), align 1
  %tobool205 = icmp ne i8 %119, 0
  br i1 %tobool205, label %if.then206, label %if.else208

if.then206:                                       ; preds = %if.then197
  call void @mb_charinit()
  %120 = load i8*, i8** %delimstr, align 4
  %call207 = call i32 @mb_metacharlenconv(i8* %120, i32* %wi)
  br label %if.end209

if.else208:                                       ; preds = %if.then197
  store i32 -1, i32* %wi, align 4
  br label %if.end209

if.end209:                                        ; preds = %if.else208, %if.then206
  %121 = load i32, i32* %wi, align 4
  %cmp210 = icmp ne i32 %121, -1
  br i1 %cmp210, label %if.then212, label %if.else213

if.then212:                                       ; preds = %if.end209
  %122 = load i32, i32* %wi, align 4
  store i32 %122, i32* %delim, align 4
  br label %if.end226

if.else213:                                       ; preds = %if.end209
  %123 = load i8*, i8** %delimstr, align 4
  %arrayidx214 = getelementptr inbounds i8, i8* %123, i32 0
  %124 = load i8, i8* %arrayidx214, align 1
  %conv215 = sext i8 %124 to i32
  %cmp216 = icmp eq i32 %conv215, -125
  br i1 %cmp216, label %cond.true218, label %cond.false221

cond.true218:                                     ; preds = %if.else213
  %125 = load i8*, i8** %delimstr, align 4
  %arrayidx219 = getelementptr inbounds i8, i8* %125, i32 1
  %126 = load i8, i8* %arrayidx219, align 1
  %conv220 = sext i8 %126 to i32
  %xor = xor i32 %conv220, 32
  br label %cond.end224

cond.false221:                                    ; preds = %if.else213
  %127 = load i8*, i8** %delimstr, align 4
  %arrayidx222 = getelementptr inbounds i8, i8* %127, i32 0
  %128 = load i8, i8* %arrayidx222, align 1
  %conv223 = sext i8 %128 to i32
  br label %cond.end224

cond.end224:                                      ; preds = %cond.false221, %cond.true218
  %cond225 = phi i32 [ %xor, %cond.true218 ], [ %conv223, %cond.false221 ]
  store i32 %cond225, i32* %delim, align 4
  br label %if.end226

if.end226:                                        ; preds = %cond.end224, %if.then212
  %129 = load i32, i32* @SHTTY, align 4
  %cmp227 = icmp ne i32 %129, -1
  br i1 %cmp227, label %if.then229, label %if.end242

if.then229:                                       ; preds = %if.end226
  call void @gettyinfo(%struct.ttyinfo* %ti230)
  %130 = load i32, i32* %resettty, align 4
  %tobool231 = icmp ne i32 %130, 0
  br i1 %tobool231, label %if.end233, label %if.then232

if.then232:                                       ; preds = %if.then229
  %131 = bitcast %struct.ttyinfo* %saveti to i8*
  %132 = bitcast %struct.ttyinfo* %ti230 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %131, i8* %132, i32 68, i32 4, i1 false)
  store i32 1, i32* %resettty, align 4
  br label %if.end233

if.end233:                                        ; preds = %if.then232, %if.then229
  %tio234 = getelementptr inbounds %struct.ttyinfo, %struct.ttyinfo* %ti230, i32 0, i32 0
  %c_lflag235 = getelementptr inbounds %struct.termios, %struct.termios* %tio234, i32 0, i32 3
  %133 = load i32, i32* %c_lflag235, align 4
  %and236 = and i32 %133, -3
  store i32 %and236, i32* %c_lflag235, align 4
  %tio237 = getelementptr inbounds %struct.ttyinfo, %struct.ttyinfo* %ti230, i32 0, i32 0
  %c_cc = getelementptr inbounds %struct.termios, %struct.termios* %tio237, i32 0, i32 5
  %arrayidx238 = getelementptr inbounds [32 x i8], [32 x i8]* %c_cc, i32 0, i32 6
  store i8 1, i8* %arrayidx238, align 1
  %tio239 = getelementptr inbounds %struct.ttyinfo, %struct.ttyinfo* %ti230, i32 0, i32 0
  %c_cc240 = getelementptr inbounds %struct.termios, %struct.termios* %tio239, i32 0, i32 5
  %arrayidx241 = getelementptr inbounds [32 x i8], [32 x i8]* %c_cc240, i32 0, i32 5
  store i8 0, i8* %arrayidx241, align 1
  call void @settyinfo(%struct.ttyinfo* %ti230)
  br label %if.end242

if.end242:                                        ; preds = %if.end233, %if.end226
  br label %if.end243

if.end243:                                        ; preds = %if.end242, %if.end191
  %134 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind244 = getelementptr inbounds %struct.options, %struct.options* %134, i32 0, i32 0
  %arrayidx245 = getelementptr inbounds [128 x i8], [128 x i8]* %ind244, i32 0, i32 116
  %135 = load i8, i8* %arrayidx245, align 4
  %conv246 = zext i8 %135 to i32
  %cmp247 = icmp ne i32 %conv246, 0
  br i1 %cmp247, label %if.then249, label %if.end324

if.then249:                                       ; preds = %if.end243
  store i32 0, i32* %timeout, align 4
  %136 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind250 = getelementptr inbounds %struct.options, %struct.options* %136, i32 0, i32 0
  %arrayidx251 = getelementptr inbounds [128 x i8], [128 x i8]* %ind250, i32 0, i32 116
  %137 = load i8, i8* %arrayidx251, align 4
  %conv252 = zext i8 %137 to i32
  %cmp253 = icmp sgt i32 %conv252, 3
  br i1 %cmp253, label %if.then255, label %if.end277

if.then255:                                       ; preds = %if.then249
  %138 = bitcast %struct.mnumber* %mn to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %138, i8* bitcast (%struct.mnumber* @zero_mnumber to i8*), i32 16, i32 8, i1 false)
  %139 = load %struct.options*, %struct.options** %ops.addr, align 4
  %args256 = getelementptr inbounds %struct.options, %struct.options* %139, i32 0, i32 1
  %140 = load i8**, i8*** %args256, align 4
  %141 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind257 = getelementptr inbounds %struct.options, %struct.options* %141, i32 0, i32 0
  %arrayidx258 = getelementptr inbounds [128 x i8], [128 x i8]* %ind257, i32 0, i32 116
  %142 = load i8, i8* %arrayidx258, align 4
  %conv259 = zext i8 %142 to i32
  %shr260 = ashr i32 %conv259, 2
  %sub261 = sub nsw i32 %shr260, 1
  %arrayidx262 = getelementptr inbounds i8*, i8** %140, i32 %sub261
  %143 = load i8*, i8** %arrayidx262, align 4
  call void @matheval(%struct.mnumber* sret %tmp, i8* %143)
  %144 = bitcast %struct.mnumber* %mn to i8*
  %145 = bitcast %struct.mnumber* %tmp to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %144, i8* %145, i32 16, i32 8, i1 false)
  %146 = load i32, i32* @errflag, align 4
  %tobool263 = icmp ne i32 %146, 0
  br i1 %tobool263, label %if.then264, label %if.end265

if.then264:                                       ; preds = %if.then255
  store i32 1, i32* %retval, align 4
  br label %return

if.end265:                                        ; preds = %if.then255
  %type = getelementptr inbounds %struct.mnumber, %struct.mnumber* %mn, i32 0, i32 1
  %147 = load i32, i32* %type, align 8
  %cmp266 = icmp eq i32 %147, 2
  br i1 %cmp266, label %if.then268, label %if.else273

if.then268:                                       ; preds = %if.end265
  %u = getelementptr inbounds %struct.mnumber, %struct.mnumber* %mn, i32 0, i32 0
  %d269 = bitcast %union.anon.2* %u to double*
  %148 = load double, double* %d269, align 8
  %mul = fmul double %148, 1.000000e+06
  store double %mul, double* %d269, align 8
  %u270 = getelementptr inbounds %struct.mnumber, %struct.mnumber* %mn, i32 0, i32 0
  %d271 = bitcast %union.anon.2* %u270 to double*
  %149 = load double, double* %d271, align 8
  %conv272 = fptosi double %149 to i32
  store i32 %conv272, i32* %timeout, align 4
  br label %if.end276

if.else273:                                       ; preds = %if.end265
  %u274 = getelementptr inbounds %struct.mnumber, %struct.mnumber* %mn, i32 0, i32 0
  %l = bitcast %union.anon.2* %u274 to i32*
  %150 = load i32, i32* %l, align 8
  %mul275 = mul nsw i32 %150, 1000000
  store i32 %mul275, i32* %timeout, align 4
  br label %if.end276

if.end276:                                        ; preds = %if.else273, %if.then268
  br label %if.end277

if.end277:                                        ; preds = %if.end276, %if.then249
  %151 = load i32, i32* %izle, align 4
  %tobool278 = icmp ne i32 %151, 0
  br i1 %tobool278, label %if.then279, label %if.else285

if.then279:                                       ; preds = %if.end277
  %152 = load i32, i32* %timeout, align 4
  %div = sdiv i32 %152, 10000
  %add = add nsw i32 %div, 1
  %sub280 = sub nsw i32 0, %add
  store i32 %sub280, i32* %timeout, align 4
  %153 = load i32, i32* %timeout, align 4
  store i32 %153, i32* %izle_timeout, align 4
  %154 = load i32, i32* %izle_timeout, align 4
  %155 = load i32, i32* %timeout, align 4
  %cmp281 = icmp ne i32 %154, %155
  br i1 %cmp281, label %if.then283, label %if.end284

if.then283:                                       ; preds = %if.then279
  store i32 2147483647, i32* %izle_timeout, align 4
  br label %if.end284

if.end284:                                        ; preds = %if.then283, %if.then279
  br label %if.end323

if.else285:                                       ; preds = %if.end277
  %156 = load i32, i32* @readfd, align 4
  %cmp286 = icmp eq i32 %156, -1
  br i1 %cmp286, label %if.then297, label %lor.lhs.false288

lor.lhs.false288:                                 ; preds = %if.else285
  %157 = load i32, i32* @readfd, align 4
  %158 = load i32, i32* %keys, align 4
  %tobool289 = icmp ne i32 %158, 0
  br i1 %tobool289, label %land.rhs290, label %land.end294

land.rhs290:                                      ; preds = %lor.lhs.false288
  %159 = load i32, i32* @zleactive, align 4
  %tobool291 = icmp ne i32 %159, 0
  %lnot292 = xor i1 %tobool291, true
  br label %land.end294

land.end294:                                      ; preds = %land.rhs290, %lor.lhs.false288
  %160 = phi i1 [ false, %lor.lhs.false288 ], [ %lnot292, %land.rhs290 ]
  %land.ext = zext i1 %160 to i32
  %161 = load i32, i32* %timeout, align 4
  %call295 = call i32 @read_poll(i32 %157, i32* %readchar, i32 %land.ext, i32 %161)
  %tobool296 = icmp ne i32 %call295, 0
  br i1 %tobool296, label %if.end322, label %if.then297

if.then297:                                       ; preds = %land.end294, %if.else285
  %162 = load i32, i32* %keys, align 4
  %tobool298 = icmp ne i32 %162, 0
  br i1 %tobool298, label %land.lhs.true299, label %if.else304

land.lhs.true299:                                 ; preds = %if.then297
  %163 = load i32, i32* @zleactive, align 4
  %tobool300 = icmp ne i32 %163, 0
  br i1 %tobool300, label %if.else304, label %land.lhs.true301

land.lhs.true301:                                 ; preds = %land.lhs.true299
  %164 = load i32, i32* %isem, align 4
  %tobool302 = icmp ne i32 %164, 0
  br i1 %tobool302, label %if.else304, label %if.then303

if.then303:                                       ; preds = %land.lhs.true301
  call void @settyinfo(%struct.ttyinfo* @shttyinfo)
  br label %if.end311

if.else304:                                       ; preds = %land.lhs.true301, %land.lhs.true299, %if.then297
  %165 = load i32, i32* %resettty, align 4
  %tobool305 = icmp ne i32 %165, 0
  br i1 %tobool305, label %land.lhs.true306, label %if.end310

land.lhs.true306:                                 ; preds = %if.else304
  %166 = load i32, i32* @SHTTY, align 4
  %cmp307 = icmp ne i32 %166, -1
  br i1 %cmp307, label %if.then309, label %if.end310

if.then309:                                       ; preds = %land.lhs.true306
  call void @settyinfo(%struct.ttyinfo* %saveti)
  br label %if.end310

if.end310:                                        ; preds = %if.then309, %land.lhs.true306, %if.else304
  br label %if.end311

if.end311:                                        ; preds = %if.end310, %if.then303
  %167 = load i32, i32* %haso, align 4
  %tobool312 = icmp ne i32 %167, 0
  br i1 %tobool312, label %if.then313, label %if.end315

if.then313:                                       ; preds = %if.end311
  %168 = load %struct._IO_FILE*, %struct._IO_FILE** @shout, align 4
  %call314 = call i32 @fclose(%struct._IO_FILE* %168)
  %169 = load %struct._IO_FILE*, %struct._IO_FILE** %oshout, align 4
  store %struct._IO_FILE* %169, %struct._IO_FILE** @shout, align 4
  store i32 -1, i32* @SHTTY, align 4
  br label %if.end315

if.end315:                                        ; preds = %if.then313, %if.end311
  %170 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind316 = getelementptr inbounds %struct.options, %struct.options* %170, i32 0, i32 0
  %arrayidx317 = getelementptr inbounds [128 x i8], [128 x i8]* %ind316, i32 0, i32 113
  %171 = load i8, i8* %arrayidx317, align 1
  %conv318 = zext i8 %171 to i32
  %cmp319 = icmp ne i32 %conv318, 0
  %cond321 = select i1 %cmp319, i32 2, i32 1
  store i32 %cond321, i32* %retval, align 4
  br label %return

if.end322:                                        ; preds = %land.end294
  br label %if.end323

if.end323:                                        ; preds = %if.end322, %if.end284
  br label %if.end324

if.end324:                                        ; preds = %if.end323, %if.end243
  %172 = bitcast %struct.__mbstate_t* %mbs to i8*
  call void @llvm.memset.p0i8.i32(i8* %172, i8 0, i32 8, i32 4, i1 false)
  %173 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind325 = getelementptr inbounds %struct.options, %struct.options* %173, i32 0, i32 0
  %arrayidx326 = getelementptr inbounds [128 x i8], [128 x i8]* %ind325, i32 0, i32 107
  %174 = load i8, i8* %arrayidx326, align 1
  %conv327 = zext i8 %174 to i32
  %cmp328 = icmp ne i32 %conv327, 0
  br i1 %cmp328, label %if.then336, label %lor.lhs.false330

lor.lhs.false330:                                 ; preds = %if.end324
  %175 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind331 = getelementptr inbounds %struct.options, %struct.options* %175, i32 0, i32 0
  %arrayidx332 = getelementptr inbounds [128 x i8], [128 x i8]* %ind331, i32 0, i32 113
  %176 = load i8, i8* %arrayidx332, align 1
  %conv333 = zext i8 %176 to i32
  %cmp334 = icmp ne i32 %conv333, 0
  br i1 %cmp334, label %if.then336, label %if.end536

if.then336:                                       ; preds = %lor.lhs.false330, %if.end324
  store i32 0, i32* %eof, align 4
  %177 = load i32, i32* %nchars, align 4
  %call338 = call i32 @__ctype_get_mb_cur_max()
  %mul339 = mul i32 %177, %call338
  %add340 = add i32 %mul339, 1
  %call341 = call i8* @zalloc(i32 %add340)
  store i8* %call341, i8** %buf, align 4
  store i8* %call341, i8** %bptr, align 4
  br label %do.body

do.body:                                          ; preds = %do.cond, %if.then336
  %178 = load i32, i32* %izle, align 4
  %tobool342 = icmp ne i32 %178, 0
  br i1 %tobool342, label %if.then343, label %if.else366

if.then343:                                       ; preds = %do.body
  %179 = load i32, i32* %izle_timeout, align 4
  %call344 = call i8* (i32, ...) @zleentry(i32 7, i32 %179, i8* null, i32* %val)
  %180 = load i32, i32* %val, align 4
  %cmp345 = icmp slt i32 %180, 0
  br i1 %cmp345, label %if.then347, label %if.end348

if.then347:                                       ; preds = %if.then343
  store i32 1, i32* %eof, align 4
  br label %do.end

if.end348:                                        ; preds = %if.then343
  %181 = load i32, i32* %val, align 4
  %conv349 = trunc i32 %181 to i8
  %182 = load i8*, i8** %bptr, align 4
  store i8 %conv349, i8* %182, align 1
  %183 = load i8, i8* getelementptr inbounds ([181 x i8], [181 x i8]* @opts, i32 0, i32 118), align 1
  %tobool350 = icmp ne i8 %183, 0
  br i1 %tobool350, label %if.then351, label %if.else362

if.then351:                                       ; preds = %if.end348
  %184 = load i8*, i8** %bptr, align 4
  %incdec.ptr352 = getelementptr inbounds i8, i8* %184, i32 1
  store i8* %incdec.ptr352, i8** %bptr, align 4
  %call353 = call i32 @mbrlen(i8* %184, i32 1, %struct.__mbstate_t* %mbs)
  store i32 %call353, i32* %ret, align 4
  %185 = load i32, i32* %ret, align 4
  %cmp354 = icmp eq i32 %185, -1
  br i1 %cmp354, label %if.then356, label %if.end357

if.then356:                                       ; preds = %if.then351
  %186 = bitcast %struct.__mbstate_t* %mbs to i8*
  call void @llvm.memset.p0i8.i32(i8* %186, i8 0, i32 8, i32 4, i1 false)
  br label %if.end357

if.end357:                                        ; preds = %if.then356, %if.then351
  %187 = load i32, i32* %ret, align 4
  %cmp358 = icmp ne i32 %187, -2
  br i1 %cmp358, label %if.then360, label %if.end361

if.then360:                                       ; preds = %if.end357
  %188 = load i32, i32* %nchars, align 4
  %dec = add nsw i32 %188, -1
  store i32 %dec, i32* %nchars, align 4
  br label %if.end361

if.end361:                                        ; preds = %if.then360, %if.end357
  br label %do.cond

if.else362:                                       ; preds = %if.end348
  %189 = load i8*, i8** %bptr, align 4
  %incdec.ptr363 = getelementptr inbounds i8, i8* %189, i32 1
  store i8* %incdec.ptr363, i8** %bptr, align 4
  %190 = load i32, i32* %nchars, align 4
  %dec364 = add nsw i32 %190, -1
  store i32 %dec364, i32* %nchars, align 4
  br label %if.end365

if.end365:                                        ; preds = %if.else362
  br label %if.end426

if.else366:                                       ; preds = %do.body
  %191 = load i32, i32* %readchar, align 4
  %cmp367 = icmp sge i32 %191, 0
  br i1 %cmp367, label %if.then369, label %if.else371

if.then369:                                       ; preds = %if.else366
  %192 = load i32, i32* %readchar, align 4
  %conv370 = trunc i32 %192 to i8
  %193 = load i8*, i8** %bptr, align 4
  store i8 %conv370, i8* %193, align 1
  store i32 1, i32* %val, align 4
  store i32 -1, i32* %readchar, align 4
  br label %if.end392

if.else371:                                       ; preds = %if.else366
  br label %while.cond

while.cond:                                       ; preds = %if.end387, %if.else371
  %194 = load i32, i32* @readfd, align 4
  %195 = load i8*, i8** %bptr, align 4
  %196 = load i32, i32* %nchars, align 4
  %call372 = call i32 @read(i32 %194, i8* %195, i32 %196)
  store i32 %call372, i32* %val, align 4
  %cmp373 = icmp slt i32 %call372, 0
  br i1 %cmp373, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %call375 = call i32* @__errno_location()
  %197 = load i32, i32* %call375, align 4
  %cmp376 = icmp ne i32 %197, 4
  br i1 %cmp376, label %if.then386, label %lor.lhs.false378

lor.lhs.false378:                                 ; preds = %while.body
  %198 = load i32, i32* @errflag, align 4
  %tobool379 = icmp ne i32 %198, 0
  br i1 %tobool379, label %if.then386, label %lor.lhs.false380

lor.lhs.false380:                                 ; preds = %lor.lhs.false378
  %199 = load i32, i32* @retflag, align 4
  %tobool381 = icmp ne i32 %199, 0
  br i1 %tobool381, label %if.then386, label %lor.lhs.false382

lor.lhs.false382:                                 ; preds = %lor.lhs.false380
  %200 = load i32, i32* @breaks, align 4
  %tobool383 = icmp ne i32 %200, 0
  br i1 %tobool383, label %if.then386, label %lor.lhs.false384

lor.lhs.false384:                                 ; preds = %lor.lhs.false382
  %201 = load i32, i32* @contflag, align 4
  %tobool385 = icmp ne i32 %201, 0
  br i1 %tobool385, label %if.then386, label %if.end387

if.then386:                                       ; preds = %lor.lhs.false384, %lor.lhs.false382, %lor.lhs.false380, %lor.lhs.false378, %while.body
  br label %while.end

if.end387:                                        ; preds = %lor.lhs.false384
  br label %while.cond

while.end:                                        ; preds = %if.then386, %while.cond
  %202 = load i32, i32* %val, align 4
  %cmp388 = icmp sle i32 %202, 0
  br i1 %cmp388, label %if.then390, label %if.end391

if.then390:                                       ; preds = %while.end
  store i32 1, i32* %eof, align 4
  br label %do.end

if.end391:                                        ; preds = %while.end
  br label %if.end392

if.end392:                                        ; preds = %if.end391, %if.then369
  %203 = load i8, i8* getelementptr inbounds ([181 x i8], [181 x i8]* @opts, i32 0, i32 118), align 1
  %tobool393 = icmp ne i8 %203, 0
  br i1 %tobool393, label %if.then394, label %if.end423

if.then394:                                       ; preds = %if.end392
  br label %while.cond395

while.cond395:                                    ; preds = %if.end421, %if.then394
  %204 = load i32, i32* %val, align 4
  %cmp396 = icmp sgt i32 %204, 0
  br i1 %cmp396, label %while.body398, label %while.end422

while.body398:                                    ; preds = %while.cond395
  %205 = load i8*, i8** %bptr, align 4
  %206 = load i32, i32* %val, align 4
  %call399 = call i32 @mbrlen(i8* %205, i32 %206, %struct.__mbstate_t* %mbs)
  store i32 %call399, i32* %ret, align 4
  %207 = load i32, i32* %ret, align 4
  %cmp400 = icmp eq i32 %207, -2
  br i1 %cmp400, label %if.then402, label %if.else403

if.then402:                                       ; preds = %while.body398
  %208 = load i32, i32* %val, align 4
  %209 = load i8*, i8** %bptr, align 4
  %add.ptr = getelementptr inbounds i8, i8* %209, i32 %208
  store i8* %add.ptr, i8** %bptr, align 4
  br label %while.end422

if.else403:                                       ; preds = %while.body398
  %210 = load i32, i32* %ret, align 4
  %cmp404 = icmp eq i32 %210, -1
  br i1 %cmp404, label %if.then406, label %if.else407

if.then406:                                       ; preds = %if.else403
  %211 = bitcast %struct.__mbstate_t* %mbs to i8*
  call void @llvm.memset.p0i8.i32(i8* %211, i8 0, i32 8, i32 4, i1 false)
  store i32 1, i32* %ret, align 4
  br label %if.end417

if.else407:                                       ; preds = %if.else403
  %212 = load i32, i32* %ret, align 4
  %cmp408 = icmp eq i32 %212, 0
  br i1 %cmp408, label %if.then410, label %if.else411

if.then410:                                       ; preds = %if.else407
  store i32 1, i32* %ret, align 4
  br label %if.end416

if.else411:                                       ; preds = %if.else407
  %213 = load i32, i32* %ret, align 4
  %214 = load i32, i32* %val, align 4
  %cmp412 = icmp ugt i32 %213, %214
  br i1 %cmp412, label %if.then414, label %if.end415

if.then414:                                       ; preds = %if.else411
  %215 = load i32, i32* %val, align 4
  store i32 %215, i32* %ret, align 4
  br label %if.end415

if.end415:                                        ; preds = %if.then414, %if.else411
  br label %if.end416

if.end416:                                        ; preds = %if.end415, %if.then410
  br label %if.end417

if.end417:                                        ; preds = %if.end416, %if.then406
  %216 = load i32, i32* %nchars, align 4
  %dec418 = add nsw i32 %216, -1
  store i32 %dec418, i32* %nchars, align 4
  %217 = load i32, i32* %ret, align 4
  %218 = load i32, i32* %val, align 4
  %sub419 = sub i32 %218, %217
  store i32 %sub419, i32* %val, align 4
  %219 = load i32, i32* %ret, align 4
  %220 = load i8*, i8** %bptr, align 4
  %add.ptr420 = getelementptr inbounds i8, i8* %220, i32 %219
  store i8* %add.ptr420, i8** %bptr, align 4
  br label %if.end421

if.end421:                                        ; preds = %if.end417
  br label %while.cond395

while.end422:                                     ; preds = %if.then402, %while.cond395
  br label %do.cond

if.end423:                                        ; preds = %if.end392
  %221 = load i32, i32* %val, align 4
  %222 = load i32, i32* %nchars, align 4
  %sub424 = sub nsw i32 %222, %221
  store i32 %sub424, i32* %nchars, align 4
  %223 = load i32, i32* %val, align 4
  %224 = load i8*, i8** %bptr, align 4
  %add.ptr425 = getelementptr inbounds i8, i8* %224, i32 %223
  store i8* %add.ptr425, i8** %bptr, align 4
  br label %if.end426

if.end426:                                        ; preds = %if.end423, %if.end365
  br label %do.cond

do.cond:                                          ; preds = %if.end426, %while.end422, %if.end361
  %225 = load i32, i32* %nchars, align 4
  %cmp427 = icmp sgt i32 %225, 0
  br i1 %cmp427, label %do.body, label %do.end

do.end:                                           ; preds = %do.cond, %if.then390, %if.then347
  %226 = load i32, i32* %izle, align 4
  %tobool429 = icmp ne i32 %226, 0
  br i1 %tobool429, label %if.end466, label %land.lhs.true430

land.lhs.true430:                                 ; preds = %do.end
  %227 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind431 = getelementptr inbounds %struct.options, %struct.options* %227, i32 0, i32 0
  %arrayidx432 = getelementptr inbounds [128 x i8], [128 x i8]* %ind431, i32 0, i32 117
  %228 = load i8, i8* %arrayidx432, align 1
  %conv433 = zext i8 %228 to i32
  %cmp434 = icmp ne i32 %conv433, 0
  br i1 %cmp434, label %if.end466, label %land.lhs.true436

land.lhs.true436:                                 ; preds = %land.lhs.true430
  %229 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind437 = getelementptr inbounds %struct.options, %struct.options* %229, i32 0, i32 0
  %arrayidx438 = getelementptr inbounds [128 x i8], [128 x i8]* %ind437, i32 0, i32 112
  %230 = load i8, i8* %arrayidx438, align 4
  %conv439 = zext i8 %230 to i32
  %cmp440 = icmp ne i32 %conv439, 0
  br i1 %cmp440, label %if.end466, label %if.then442

if.then442:                                       ; preds = %land.lhs.true436
  %231 = load i32, i32* %isem, align 4
  %tobool443 = icmp ne i32 %231, 0
  br i1 %tobool443, label %if.then444, label %if.else460

if.then444:                                       ; preds = %if.then442
  br label %while.cond445

while.cond445:                                    ; preds = %while.body458, %if.then444
  %232 = load i32, i32* %val, align 4
  %cmp446 = icmp sgt i32 %232, 0
  br i1 %cmp446, label %land.lhs.true448, label %land.end456

land.lhs.true448:                                 ; preds = %while.cond445
  %233 = load i32, i32* @SHTTY, align 4
  %call449 = call i32 @read(i32 %233, i8* %d, i32 1)
  %cmp450 = icmp eq i32 %call449, 1
  br i1 %cmp450, label %land.rhs452, label %land.end456

land.rhs452:                                      ; preds = %land.lhs.true448
  %234 = load i8, i8* %d, align 1
  %conv453 = sext i8 %234 to i32
  %cmp454 = icmp ne i32 %conv453, 10
  br label %land.end456

land.end456:                                      ; preds = %land.rhs452, %land.lhs.true448, %while.cond445
  %235 = phi i1 [ false, %land.lhs.true448 ], [ false, %while.cond445 ], [ %cmp454, %land.rhs452 ]
  br i1 %235, label %while.body458, label %while.end459

while.body458:                                    ; preds = %land.end456
  br label %while.cond445

while.end459:                                     ; preds = %land.end456
  br label %if.end461

if.else460:                                       ; preds = %if.then442
  call void @settyinfo(%struct.ttyinfo* @shttyinfo)
  store i32 0, i32* %resettty, align 4
  br label %if.end461

if.end461:                                        ; preds = %if.else460, %while.end459
  %236 = load i32, i32* %haso, align 4
  %tobool462 = icmp ne i32 %236, 0
  br i1 %tobool462, label %if.then463, label %if.end465

if.then463:                                       ; preds = %if.end461
  %237 = load %struct._IO_FILE*, %struct._IO_FILE** @shout, align 4
  %call464 = call i32 @fclose(%struct._IO_FILE* %237)
  %238 = load %struct._IO_FILE*, %struct._IO_FILE** %oshout, align 4
  store %struct._IO_FILE* %238, %struct._IO_FILE** @shout, align 4
  store i32 -1, i32* @SHTTY, align 4
  br label %if.end465

if.end465:                                        ; preds = %if.then463, %if.end461
  br label %if.end466

if.end466:                                        ; preds = %if.end465, %land.lhs.true436, %land.lhs.true430, %do.end
  %239 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind467 = getelementptr inbounds %struct.options, %struct.options* %239, i32 0, i32 0
  %arrayidx468 = getelementptr inbounds [128 x i8], [128 x i8]* %ind467, i32 0, i32 113
  %240 = load i8, i8* %arrayidx468, align 1
  %conv469 = zext i8 %240 to i32
  %cmp470 = icmp ne i32 %conv469, 0
  br i1 %cmp470, label %if.then472, label %if.end495

if.then472:                                       ; preds = %if.end466
  %241 = load i32, i32* %eof, align 4
  %tobool473 = icmp ne i32 %241, 0
  br i1 %tobool473, label %if.then474, label %if.else475

if.then474:                                       ; preds = %if.then472
  store i32 2, i32* %eof, align 4
  br label %if.end489

if.else475:                                       ; preds = %if.then472
  %242 = load i8*, i8** %bptr, align 4
  %243 = load i8*, i8** %buf, align 4
  %sub.ptr.lhs.cast = ptrtoint i8* %242 to i32
  %sub.ptr.rhs.cast = ptrtoint i8* %243 to i32
  %sub.ptr.sub = sub i32 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %cmp476 = icmp ne i32 %sub.ptr.sub, 1
  br i1 %cmp476, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %if.else475
  %244 = load i8*, i8** %buf, align 4
  %arrayidx478 = getelementptr inbounds i8, i8* %244, i32 0
  %245 = load i8, i8* %arrayidx478, align 1
  %conv479 = sext i8 %245 to i32
  %cmp480 = icmp ne i32 %conv479, 121
  br i1 %cmp480, label %land.rhs482, label %land.end487

land.rhs482:                                      ; preds = %lor.rhs
  %246 = load i8*, i8** %buf, align 4
  %arrayidx483 = getelementptr inbounds i8, i8* %246, i32 0
  %247 = load i8, i8* %arrayidx483, align 1
  %conv484 = sext i8 %247 to i32
  %cmp485 = icmp ne i32 %conv484, 89
  br label %land.end487

land.end487:                                      ; preds = %land.rhs482, %lor.rhs
  %248 = phi i1 [ false, %lor.rhs ], [ %cmp485, %land.rhs482 ]
  br label %lor.end

lor.end:                                          ; preds = %land.end487, %if.else475
  %249 = phi i1 [ true, %if.else475 ], [ %248, %land.end487 ]
  %lor.ext = zext i1 %249 to i32
  store i32 %lor.ext, i32* %eof, align 4
  br label %if.end489

if.end489:                                        ; preds = %lor.end, %if.then474
  %250 = load i32, i32* %eof, align 4
  %tobool490 = icmp ne i32 %250, 0
  %cond491 = select i1 %tobool490, i32 110, i32 121
  %conv492 = trunc i32 %cond491 to i8
  %251 = load i8*, i8** %buf, align 4
  %arrayidx493 = getelementptr inbounds i8, i8* %251, i32 0
  store i8 %conv492, i8* %arrayidx493, align 1
  %252 = load i8*, i8** %buf, align 4
  %add.ptr494 = getelementptr inbounds i8, i8* %252, i32 1
  store i8* %add.ptr494, i8** %bptr, align 4
  br label %if.end495

if.end495:                                        ; preds = %if.end489, %if.end466
  %253 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind496 = getelementptr inbounds %struct.options, %struct.options* %253, i32 0, i32 0
  %arrayidx497 = getelementptr inbounds [128 x i8], [128 x i8]* %ind496, i32 0, i32 101
  %254 = load i8, i8* %arrayidx497, align 1
  %conv498 = zext i8 %254 to i32
  %cmp499 = icmp ne i32 %conv498, 0
  br i1 %cmp499, label %if.then507, label %lor.lhs.false501

lor.lhs.false501:                                 ; preds = %if.end495
  %255 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind502 = getelementptr inbounds %struct.options, %struct.options* %255, i32 0, i32 0
  %arrayidx503 = getelementptr inbounds [128 x i8], [128 x i8]* %ind502, i32 0, i32 69
  %256 = load i8, i8* %arrayidx503, align 1
  %conv504 = zext i8 %256 to i32
  %cmp505 = icmp ne i32 %conv504, 0
  br i1 %cmp505, label %if.then507, label %if.end512

if.then507:                                       ; preds = %lor.lhs.false501, %if.end495
  %257 = load i8*, i8** %buf, align 4
  %258 = load i8*, i8** %bptr, align 4
  %259 = load i8*, i8** %buf, align 4
  %sub.ptr.lhs.cast508 = ptrtoint i8* %258 to i32
  %sub.ptr.rhs.cast509 = ptrtoint i8* %259 to i32
  %sub.ptr.sub510 = sub i32 %sub.ptr.lhs.cast508, %sub.ptr.rhs.cast509
  %260 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 4
  %call511 = call i32 @fwrite(i8* %257, i32 %sub.ptr.sub510, i32 1, %struct._IO_FILE* %260)
  br label %if.end512

if.end512:                                        ; preds = %if.then507, %lor.lhs.false501
  %261 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind513 = getelementptr inbounds %struct.options, %struct.options* %261, i32 0, i32 0
  %arrayidx514 = getelementptr inbounds [128 x i8], [128 x i8]* %ind513, i32 0, i32 101
  %262 = load i8, i8* %arrayidx514, align 1
  %conv515 = zext i8 %262 to i32
  %cmp516 = icmp ne i32 %conv515, 0
  br i1 %cmp516, label %if.else524, label %if.then518

if.then518:                                       ; preds = %if.end512
  %263 = load i8*, i8** %reply, align 4
  %264 = load i8*, i8** %buf, align 4
  %265 = load i8*, i8** %bptr, align 4
  %266 = load i8*, i8** %buf, align 4
  %sub.ptr.lhs.cast519 = ptrtoint i8* %265 to i32
  %sub.ptr.rhs.cast520 = ptrtoint i8* %266 to i32
  %sub.ptr.sub521 = sub i32 %sub.ptr.lhs.cast519, %sub.ptr.rhs.cast520
  %call522 = call i8* @metafy(i8* %264, i32 %sub.ptr.sub521, i32 0)
  %call523 = call %struct.param* @setsparam(i8* %263, i8* %call522)
  br label %if.end529

if.else524:                                       ; preds = %if.end512
  %267 = load i8*, i8** %buf, align 4
  %268 = load i8*, i8** %bptr, align 4
  %269 = load i8*, i8** %buf, align 4
  %sub.ptr.lhs.cast525 = ptrtoint i8* %268 to i32
  %sub.ptr.rhs.cast526 = ptrtoint i8* %269 to i32
  %sub.ptr.sub527 = sub i32 %sub.ptr.lhs.cast525, %sub.ptr.rhs.cast526
  %add528 = add nsw i32 %sub.ptr.sub527, 1
  call void @zfree(i8* %267, i32 %add528)
  br label %if.end529

if.end529:                                        ; preds = %if.else524, %if.then518
  %270 = load i32, i32* %resettty, align 4
  %tobool530 = icmp ne i32 %270, 0
  br i1 %tobool530, label %land.lhs.true531, label %if.end535

land.lhs.true531:                                 ; preds = %if.end529
  %271 = load i32, i32* @SHTTY, align 4
  %cmp532 = icmp ne i32 %271, -1
  br i1 %cmp532, label %if.then534, label %if.end535

if.then534:                                       ; preds = %land.lhs.true531
  call void @settyinfo(%struct.ttyinfo* %saveti)
  br label %if.end535

if.end535:                                        ; preds = %if.then534, %land.lhs.true531, %if.end529
  %272 = load i32, i32* %eof, align 4
  store i32 %272, i32* %retval, align 4
  br label %return

if.end536:                                        ; preds = %lor.lhs.false330
  %273 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind537 = getelementptr inbounds %struct.options, %struct.options* %273, i32 0, i32 0
  %arrayidx538 = getelementptr inbounds [128 x i8], [128 x i8]* %ind537, i32 0, i32 122
  %274 = load i8, i8* %arrayidx538, align 2
  %conv539 = zext i8 %274 to i32
  %cmp540 = icmp ne i32 %conv539, 0
  br i1 %cmp540, label %cond.false543, label %cond.true542

cond.true542:                                     ; preds = %if.end536
  br label %cond.end553

cond.false543:                                    ; preds = %if.end536
  %275 = load %union.linkroot*, %union.linkroot** @bufstack, align 4
  %list = bitcast %union.linkroot* %275 to %struct.linklist*
  %first544 = getelementptr inbounds %struct.linklist, %struct.linklist* %list, i32 0, i32 0
  %276 = load %struct.linknode*, %struct.linknode** %first544, align 4
  %cmp545 = icmp ne %struct.linknode* %276, null
  br i1 %cmp545, label %cond.true547, label %cond.false549

cond.true547:                                     ; preds = %cond.false543
  %277 = load %union.linkroot*, %union.linkroot** @bufstack, align 4
  %call548 = call i8* @getlinknode(%union.linkroot* %277)
  br label %cond.end551

cond.false549:                                    ; preds = %cond.false543
  %call550 = call i8* @ztrdup(i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.34, i32 0, i32 0))
  br label %cond.end551

cond.end551:                                      ; preds = %cond.false549, %cond.true547
  %cond552 = phi i8* [ %call548, %cond.true547 ], [ %call550, %cond.false549 ]
  br label %cond.end553

cond.end553:                                      ; preds = %cond.end551, %cond.true542
  %cond554 = phi i8* [ null, %cond.true542 ], [ %cond552, %cond.end551 ]
  store i8* %cond554, i8** @zbuf, align 4
  store i8* %cond554, i8** %zbuforig, align 4
  store i32 1, i32* %first, align 4
  store i32 0, i32* %bslash, align 4
  br label %while.cond555

while.cond555:                                    ; preds = %if.end784, %cond.end553
  %278 = load i8**, i8*** %args.addr, align 4
  %279 = load i8*, i8** %278, align 4
  %tobool556 = icmp ne i8* %279, null
  br i1 %tobool556, label %lor.end569, label %lor.rhs557

lor.rhs557:                                       ; preds = %while.cond555
  %280 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind558 = getelementptr inbounds %struct.options, %struct.options* %280, i32 0, i32 0
  %arrayidx559 = getelementptr inbounds [128 x i8], [128 x i8]* %ind558, i32 0, i32 65
  %281 = load i8, i8* %arrayidx559, align 1
  %conv560 = zext i8 %281 to i32
  %cmp561 = icmp ne i32 %conv560, 0
  br i1 %cmp561, label %land.rhs563, label %land.end567

land.rhs563:                                      ; preds = %lor.rhs557
  %282 = load i32, i32* %gotnl, align 4
  %tobool564 = icmp ne i32 %282, 0
  %lnot565 = xor i1 %tobool564, true
  br label %land.end567

land.end567:                                      ; preds = %land.rhs563, %lor.rhs557
  %283 = phi i1 [ false, %lor.rhs557 ], [ %lnot565, %land.rhs563 ]
  br label %lor.end569

lor.end569:                                       ; preds = %land.end567, %while.cond555
  %284 = phi i1 [ true, %while.cond555 ], [ %283, %land.end567 ]
  br i1 %284, label %while.body571, label %while.end785

while.body571:                                    ; preds = %lor.end569
  call void @signal_unblock(%struct.__sigset_t* sret %s, %struct.__sigset_t* byval align 4 @sigchld_mask)
  store i32 64, i32* %bsiz, align 4
  %call573 = call i8* @zalloc(i32 64)
  store i8* %call573, i8** %bptr, align 4
  store i8* %call573, i8** %buf, align 4
  %285 = load i8*, i8** %buf, align 4
  store i8* %285, i8** %laststart, align 4
  store i32 -2, i32* %ret, align 4
  br label %while.cond574

while.cond574:                                    ; preds = %if.end713, %if.then673, %land.end652, %if.then604, %while.body571
  %286 = load i32, i32* %gotnl, align 4
  %tobool575 = icmp ne i32 %286, 0
  %lnot576 = xor i1 %tobool575, true
  br i1 %lnot576, label %while.body578, label %while.end714

while.body578:                                    ; preds = %while.cond574
  %287 = load i32, i32* %izle, align 4
  %288 = load i32, i32* %izle_timeout, align 4
  %call579 = call i32 @zread(i32 %287, i32* %readchar, i32 %288)
  store i32 %call579, i32* %c, align 4
  %289 = load i32, i32* %c, align 4
  %cmp580 = icmp eq i32 %289, -1
  br i1 %cmp580, label %if.then582, label %if.end583

if.then582:                                       ; preds = %while.body578
  store i32 0, i32* %ret, align 4
  br label %while.end714

if.end583:                                        ; preds = %while.body578
  %290 = load i32, i32* %c, align 4
  %conv584 = trunc i32 %290 to i8
  %291 = load i8*, i8** %bptr, align 4
  store i8 %conv584, i8* %291, align 1
  %292 = load i8, i8* getelementptr inbounds ([181 x i8], [181 x i8]* @opts, i32 0, i32 118), align 1
  %tobool585 = icmp ne i8 %292, 0
  br i1 %tobool585, label %if.then586, label %if.else591

if.then586:                                       ; preds = %if.end583
  %293 = load i8*, i8** %bptr, align 4
  %call587 = call i32 @mbrtowc(i32* %wc, i8* %293, i32 1, %struct.__mbstate_t* %mbs)
  store i32 %call587, i32* %ret, align 4
  %294 = load i32, i32* %ret, align 4
  %tobool588 = icmp ne i32 %294, 0
  br i1 %tobool588, label %if.end590, label %if.then589

if.then589:                                       ; preds = %if.then586
  store i32 1, i32* %ret, align 4
  br label %if.end590

if.end590:                                        ; preds = %if.then589, %if.then586
  br label %if.end592

if.else591:                                       ; preds = %if.end583
  store i32 1, i32* %ret, align 4
  %295 = load i32, i32* %c, align 4
  store i32 %295, i32* %wc, align 4
  br label %if.end592

if.end592:                                        ; preds = %if.else591, %if.end590
  %296 = load i32, i32* %ret, align 4
  %cmp593 = icmp ne i32 %296, -2
  br i1 %cmp593, label %if.then595, label %if.end675

if.then595:                                       ; preds = %if.end592
  %297 = load i32, i32* %ret, align 4
  %cmp596 = icmp eq i32 %297, -1
  br i1 %cmp596, label %if.then598, label %if.end599

if.then598:                                       ; preds = %if.then595
  %298 = bitcast %struct.__mbstate_t* %mbs to i8*
  call void @llvm.memset.p0i8.i32(i8* %298, i8 0, i32 8, i32 4, i1 false)
  %299 = load i32, i32* %c, align 4
  store i32 %299, i32* %wc, align 4
  %300 = load i8*, i8** %bptr, align 4
  store i8* %300, i8** %laststart, align 4
  br label %if.end599

if.end599:                                        ; preds = %if.then598, %if.then595
  %301 = load i32, i32* %bslash, align 4
  %tobool600 = icmp ne i32 %301, 0
  br i1 %tobool600, label %land.lhs.true601, label %if.end605

land.lhs.true601:                                 ; preds = %if.end599
  %302 = load i32, i32* %wc, align 4
  %303 = load i32, i32* %delim, align 4
  %cmp602 = icmp eq i32 %302, %303
  br i1 %cmp602, label %if.then604, label %if.end605

if.then604:                                       ; preds = %land.lhs.true601
  store i32 0, i32* %bslash, align 4
  br label %while.cond574

if.end605:                                        ; preds = %land.lhs.true601, %if.end599
  %304 = load i32, i32* %wc, align 4
  %305 = load i32, i32* %delim, align 4
  %cmp606 = icmp eq i32 %304, %305
  br i1 %cmp606, label %if.then608, label %if.end609

if.then608:                                       ; preds = %if.end605
  br label %while.end714

if.end609:                                        ; preds = %if.end605
  %306 = load i32, i32* %bslash, align 4
  %tobool610 = icmp ne i32 %306, 0
  br i1 %tobool610, label %if.end657, label %land.lhs.true611

land.lhs.true611:                                 ; preds = %if.end609
  %307 = load i32, i32* %wc, align 4
  %call612 = call i32 @wcsitype(i32 %307, i32 32)
  %tobool613 = icmp ne i32 %call612, 0
  br i1 %tobool613, label %if.then614, label %if.end657

if.then614:                                       ; preds = %land.lhs.true611
  %308 = load i8*, i8** %bptr, align 4
  %309 = load i8*, i8** %buf, align 4
  %cmp615 = icmp ne i8* %308, %309
  br i1 %cmp615, label %if.then628, label %lor.lhs.false617

lor.lhs.false617:                                 ; preds = %if.then614
  %310 = load i32, i32* %c, align 4
  %cmp618 = icmp slt i32 %310, 128
  br i1 %cmp618, label %land.lhs.true620, label %land.lhs.true626

land.lhs.true620:                                 ; preds = %lor.lhs.false617
  %311 = load i32, i32* %c, align 4
  %conv621 = trunc i32 %311 to i8
  %idxprom = zext i8 %conv621 to i32
  %arrayidx622 = getelementptr inbounds [256 x i16], [256 x i16]* @typtab, i32 0, i32 %idxprom
  %312 = load i16, i16* %arrayidx622, align 2
  %conv623 = sext i16 %312 to i32
  %and624 = and i32 %conv623, 8192
  %tobool625 = icmp ne i32 %and624, 0
  br i1 %tobool625, label %if.end642, label %land.lhs.true626

land.lhs.true626:                                 ; preds = %land.lhs.true620, %lor.lhs.false617
  %313 = load i32, i32* %first, align 4
  %tobool627 = icmp ne i32 %313, 0
  br i1 %tobool627, label %if.then628, label %if.end642

if.then628:                                       ; preds = %land.lhs.true626, %if.then614
  %314 = load i32, i32* %c, align 4
  %cmp629 = icmp slt i32 %314, 128
  br i1 %cmp629, label %land.rhs631, label %land.end638

land.rhs631:                                      ; preds = %if.then628
  %315 = load i32, i32* %c, align 4
  %conv632 = trunc i32 %315 to i8
  %idxprom633 = zext i8 %conv632 to i32
  %arrayidx634 = getelementptr inbounds [256 x i16], [256 x i16]* @typtab, i32 0, i32 %idxprom633
  %316 = load i16, i16* %arrayidx634, align 2
  %conv635 = sext i16 %316 to i32
  %and636 = and i32 %conv635, 8192
  %tobool637 = icmp ne i32 %and636, 0
  br label %land.end638

land.end638:                                      ; preds = %land.rhs631, %if.then628
  %317 = phi i1 [ false, %if.then628 ], [ %tobool637, %land.rhs631 ]
  %lnot640 = xor i1 %317, true
  %lnot.ext641 = zext i1 %lnot640 to i32
  %318 = load i32, i32* %first, align 4
  %or = or i32 %318, %lnot.ext641
  store i32 %or, i32* %first, align 4
  br label %while.end714

if.end642:                                        ; preds = %land.lhs.true626, %land.lhs.true620
  %319 = load i32, i32* %c, align 4
  %cmp643 = icmp slt i32 %319, 128
  br i1 %cmp643, label %land.rhs645, label %land.end652

land.rhs645:                                      ; preds = %if.end642
  %320 = load i32, i32* %c, align 4
  %conv646 = trunc i32 %320 to i8
  %idxprom647 = zext i8 %conv646 to i32
  %arrayidx648 = getelementptr inbounds [256 x i16], [256 x i16]* @typtab, i32 0, i32 %idxprom647
  %321 = load i16, i16* %arrayidx648, align 2
  %conv649 = sext i16 %321 to i32
  %and650 = and i32 %conv649, 8192
  %tobool651 = icmp ne i32 %and650, 0
  br label %land.end652

land.end652:                                      ; preds = %land.rhs645, %if.end642
  %322 = phi i1 [ false, %if.end642 ], [ %tobool651, %land.rhs645 ]
  %lnot654 = xor i1 %322, true
  %lnot.ext655 = zext i1 %lnot654 to i32
  %323 = load i32, i32* %first, align 4
  %or656 = or i32 %323, %lnot.ext655
  store i32 %or656, i32* %first, align 4
  br label %while.cond574

if.end657:                                        ; preds = %land.lhs.true611, %if.end609
  %324 = load i32, i32* %wc, align 4
  %cmp658 = icmp eq i32 %324, 92
  br i1 %cmp658, label %land.lhs.true660, label %land.end670

land.lhs.true660:                                 ; preds = %if.end657
  %325 = load i32, i32* %bslash, align 4
  %tobool661 = icmp ne i32 %325, 0
  br i1 %tobool661, label %land.end670, label %land.rhs662

land.rhs662:                                      ; preds = %land.lhs.true660
  %326 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind663 = getelementptr inbounds %struct.options, %struct.options* %326, i32 0, i32 0
  %arrayidx664 = getelementptr inbounds [128 x i8], [128 x i8]* %ind663, i32 0, i32 114
  %327 = load i8, i8* %arrayidx664, align 2
  %conv665 = zext i8 %327 to i32
  %cmp666 = icmp ne i32 %conv665, 0
  %lnot668 = xor i1 %cmp666, true
  br label %land.end670

land.end670:                                      ; preds = %land.rhs662, %land.lhs.true660, %if.end657
  %328 = phi i1 [ false, %land.lhs.true660 ], [ false, %if.end657 ], [ %lnot668, %land.rhs662 ]
  %land.ext671 = zext i1 %328 to i32
  store i32 %land.ext671, i32* %bslash, align 4
  %329 = load i32, i32* %bslash, align 4
  %tobool672 = icmp ne i32 %329, 0
  br i1 %tobool672, label %if.then673, label %if.end674

if.then673:                                       ; preds = %land.end670
  br label %while.cond574

if.end674:                                        ; preds = %land.end670
  store i32 0, i32* %first, align 4
  br label %if.end675

if.end675:                                        ; preds = %if.end674, %if.end592
  %330 = load i8*, i8** %bptr, align 4
  %331 = load i8, i8* %330, align 1
  %idxprom676 = zext i8 %331 to i32
  %arrayidx677 = getelementptr inbounds [256 x i16], [256 x i16]* @typtab, i32 0, i32 %idxprom676
  %332 = load i16, i16* %arrayidx677, align 2
  %conv678 = sext i16 %332 to i32
  %and679 = and i32 %conv678, 4096
  %tobool680 = icmp ne i32 %and679, 0
  br i1 %tobool680, label %if.then681, label %if.else689

if.then681:                                       ; preds = %if.end675
  %333 = load i8*, i8** %bptr, align 4
  %arrayidx682 = getelementptr inbounds i8, i8* %333, i32 0
  %334 = load i8, i8* %arrayidx682, align 1
  %conv683 = sext i8 %334 to i32
  %xor684 = xor i32 %conv683, 32
  %conv685 = trunc i32 %xor684 to i8
  %335 = load i8*, i8** %bptr, align 4
  %arrayidx686 = getelementptr inbounds i8, i8* %335, i32 1
  store i8 %conv685, i8* %arrayidx686, align 1
  %336 = load i8*, i8** %bptr, align 4
  %arrayidx687 = getelementptr inbounds i8, i8* %336, i32 0
  store i8 -125, i8* %arrayidx687, align 1
  %337 = load i8*, i8** %bptr, align 4
  %add.ptr688 = getelementptr inbounds i8, i8* %337, i32 2
  store i8* %add.ptr688, i8** %bptr, align 4
  br label %if.end691

if.else689:                                       ; preds = %if.end675
  %338 = load i8*, i8** %bptr, align 4
  %incdec.ptr690 = getelementptr inbounds i8, i8* %338, i32 1
  store i8* %incdec.ptr690, i8** %bptr, align 4
  br label %if.end691

if.end691:                                        ; preds = %if.else689, %if.then681
  %339 = load i32, i32* %ret, align 4
  %cmp692 = icmp ne i32 %339, -2
  br i1 %cmp692, label %if.then694, label %if.end695

if.then694:                                       ; preds = %if.end691
  %340 = load i8*, i8** %bptr, align 4
  store i8* %340, i8** %laststart, align 4
  br label %if.end695

if.end695:                                        ; preds = %if.then694, %if.end691
  %341 = load i8*, i8** %bptr, align 4
  %342 = load i8*, i8** %buf, align 4
  %343 = load i32, i32* %bsiz, align 4
  %add.ptr696 = getelementptr inbounds i8, i8* %342, i32 %343
  %add.ptr697 = getelementptr inbounds i8, i8* %add.ptr696, i32 -1
  %cmp698 = icmp uge i8* %341, %add.ptr697
  br i1 %cmp698, label %if.then700, label %if.end713

if.then700:                                       ; preds = %if.end695
  %344 = load i8*, i8** %bptr, align 4
  %345 = load i8*, i8** %buf, align 4
  %sub.ptr.lhs.cast702 = ptrtoint i8* %344 to i32
  %sub.ptr.rhs.cast703 = ptrtoint i8* %345 to i32
  %sub.ptr.sub704 = sub i32 %sub.ptr.lhs.cast702, %sub.ptr.rhs.cast703
  store i32 %sub.ptr.sub704, i32* %blen, align 4
  %346 = load i8*, i8** %laststart, align 4
  %347 = load i8*, i8** %buf, align 4
  %sub.ptr.lhs.cast706 = ptrtoint i8* %346 to i32
  %sub.ptr.rhs.cast707 = ptrtoint i8* %347 to i32
  %sub.ptr.sub708 = sub i32 %sub.ptr.lhs.cast706, %sub.ptr.rhs.cast707
  store i32 %sub.ptr.sub708, i32* %llen, align 4
  %348 = load i8*, i8** %buf, align 4
  %349 = load i32, i32* %bsiz, align 4
  %mul709 = mul nsw i32 %349, 2
  store i32 %mul709, i32* %bsiz, align 4
  %call710 = call i8* @realloc(i8* %348, i32 %mul709)
  store i8* %call710, i8** %buf, align 4
  %350 = load i8*, i8** %buf, align 4
  %351 = load i32, i32* %blen, align 4
  %add.ptr711 = getelementptr inbounds i8, i8* %350, i32 %351
  store i8* %add.ptr711, i8** %bptr, align 4
  %352 = load i8*, i8** %buf, align 4
  %353 = load i32, i32* %llen, align 4
  %add.ptr712 = getelementptr inbounds i8, i8* %352, i32 %353
  store i8* %add.ptr712, i8** %laststart, align 4
  br label %if.end713

if.end713:                                        ; preds = %if.then700, %if.end695
  br label %while.cond574

while.end714:                                     ; preds = %land.end638, %if.then608, %if.then582, %while.cond574
  call void @signal_setmask(%struct.__sigset_t* sret %tmp715, %struct.__sigset_t* byval align 4 %s)
  %354 = load i32, i32* %c, align 4
  %cmp716 = icmp eq i32 %354, -1
  br i1 %cmp716, label %if.then718, label %if.else719

if.then718:                                       ; preds = %while.end714
  store i32 1, i32* %gotnl, align 4
  %355 = load i8*, i8** %bptr, align 4
  store i8 0, i8* %355, align 1
  br label %if.end729

if.else719:                                       ; preds = %while.end714
  %356 = load i32, i32* %ret, align 4
  %cmp720 = icmp eq i32 %356, -2
  br i1 %cmp720, label %if.then722, label %if.else723

if.then722:                                       ; preds = %if.else719
  %357 = load i8*, i8** %bptr, align 4
  store i8 0, i8* %357, align 1
  br label %if.end728

if.else723:                                       ; preds = %if.else719
  %358 = load i32, i32* %wc, align 4
  %359 = load i32, i32* %delim, align 4
  %cmp724 = icmp eq i32 %358, %359
  br i1 %cmp724, label %if.then726, label %if.end727

if.then726:                                       ; preds = %if.else723
  store i32 1, i32* %gotnl, align 4
  br label %if.end727

if.end727:                                        ; preds = %if.then726, %if.else723
  %360 = load i8*, i8** %laststart, align 4
  store i8 0, i8* %360, align 1
  br label %if.end728

if.end728:                                        ; preds = %if.end727, %if.then722
  br label %if.end729

if.end729:                                        ; preds = %if.end728, %if.then718
  %361 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind730 = getelementptr inbounds %struct.options, %struct.options* %361, i32 0, i32 0
  %arrayidx731 = getelementptr inbounds [128 x i8], [128 x i8]* %ind730, i32 0, i32 101
  %362 = load i8, i8* %arrayidx731, align 1
  %conv732 = zext i8 %362 to i32
  %cmp733 = icmp ne i32 %conv732, 0
  br i1 %cmp733, label %if.then747, label %lor.lhs.false735

lor.lhs.false735:                                 ; preds = %if.end729
  %363 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind736 = getelementptr inbounds %struct.options, %struct.options* %363, i32 0, i32 0
  %arrayidx737 = getelementptr inbounds [128 x i8], [128 x i8]* %ind736, i32 0, i32 69
  %364 = load i8, i8* %arrayidx737, align 1
  %conv738 = zext i8 %364 to i32
  %cmp739 = icmp ne i32 %conv738, 0
  br i1 %cmp739, label %land.lhs.true741, label %if.end750

land.lhs.true741:                                 ; preds = %lor.lhs.false735
  %365 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind742 = getelementptr inbounds %struct.options, %struct.options* %365, i32 0, i32 0
  %arrayidx743 = getelementptr inbounds [128 x i8], [128 x i8]* %ind742, i32 0, i32 65
  %366 = load i8, i8* %arrayidx743, align 1
  %conv744 = zext i8 %366 to i32
  %cmp745 = icmp ne i32 %conv744, 0
  br i1 %cmp745, label %if.end750, label %if.then747

if.then747:                                       ; preds = %land.lhs.true741, %if.end729
  %367 = load i8*, i8** %buf, align 4
  %368 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 4
  %call748 = call i32 @zputs(i8* %367, %struct._IO_FILE* %368)
  %call749 = call i32 @putchar(i32 10)
  br label %if.end750

if.end750:                                        ; preds = %if.then747, %land.lhs.true741, %lor.lhs.false735
  %369 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind751 = getelementptr inbounds %struct.options, %struct.options* %369, i32 0, i32 0
  %arrayidx752 = getelementptr inbounds [128 x i8], [128 x i8]* %ind751, i32 0, i32 101
  %370 = load i8, i8* %arrayidx752, align 1
  %conv753 = zext i8 %370 to i32
  %cmp754 = icmp ne i32 %conv753, 0
  br i1 %cmp754, label %if.else775, label %land.lhs.true756

land.lhs.true756:                                 ; preds = %if.end750
  %371 = load i8*, i8** %buf, align 4
  %372 = load i8, i8* %371, align 1
  %conv757 = sext i8 %372 to i32
  %tobool758 = icmp ne i32 %conv757, 0
  br i1 %tobool758, label %if.then763, label %lor.lhs.false759

lor.lhs.false759:                                 ; preds = %land.lhs.true756
  %373 = load i32, i32* %first, align 4
  %tobool760 = icmp ne i32 %373, 0
  br i1 %tobool760, label %if.then763, label %lor.lhs.false761

lor.lhs.false761:                                 ; preds = %lor.lhs.false759
  %374 = load i32, i32* %gotnl, align 4
  %tobool762 = icmp ne i32 %374, 0
  br i1 %tobool762, label %if.then763, label %if.else775

if.then763:                                       ; preds = %lor.lhs.false761, %lor.lhs.false759, %land.lhs.true756
  %375 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind764 = getelementptr inbounds %struct.options, %struct.options* %375, i32 0, i32 0
  %arrayidx765 = getelementptr inbounds [128 x i8], [128 x i8]* %ind764, i32 0, i32 65
  %376 = load i8, i8* %arrayidx765, align 1
  %conv766 = zext i8 %376 to i32
  %cmp767 = icmp ne i32 %conv766, 0
  br i1 %cmp767, label %if.then769, label %if.else772

if.then769:                                       ; preds = %if.then763
  %377 = load %union.linkroot*, %union.linkroot** %readll, align 4
  %378 = load %union.linkroot*, %union.linkroot** %readll, align 4
  %list770 = bitcast %union.linkroot* %378 to %struct.linklist*
  %last = getelementptr inbounds %struct.linklist, %struct.linklist* %list770, i32 0, i32 1
  %379 = load %struct.linknode*, %struct.linknode** %last, align 4
  %380 = load i8*, i8** %buf, align 4
  %call771 = call %struct.linknode* @insertlinknode(%union.linkroot* %377, %struct.linknode* %379, i8* %380)
  %381 = load i32, i32* %al, align 4
  %inc = add nsw i32 %381, 1
  store i32 %inc, i32* %al, align 4
  br label %if.end774

if.else772:                                       ; preds = %if.then763
  %382 = load i8*, i8** %reply, align 4
  %383 = load i8*, i8** %buf, align 4
  %call773 = call %struct.param* @setsparam(i8* %382, i8* %383)
  br label %if.end774

if.end774:                                        ; preds = %if.else772, %if.then769
  br label %if.end776

if.else775:                                       ; preds = %lor.lhs.false761, %if.end750
  %384 = load i8*, i8** %buf, align 4
  call void @free(i8* %384)
  br label %if.end776

if.end776:                                        ; preds = %if.else775, %if.end774
  %385 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind777 = getelementptr inbounds %struct.options, %struct.options* %385, i32 0, i32 0
  %arrayidx778 = getelementptr inbounds [128 x i8], [128 x i8]* %ind777, i32 0, i32 65
  %386 = load i8, i8* %arrayidx778, align 1
  %conv779 = zext i8 %386 to i32
  %cmp780 = icmp ne i32 %conv779, 0
  br i1 %cmp780, label %if.end784, label %if.then782

if.then782:                                       ; preds = %if.end776
  %387 = load i8**, i8*** %args.addr, align 4
  %incdec.ptr783 = getelementptr inbounds i8*, i8** %387, i32 1
  store i8** %incdec.ptr783, i8*** %args.addr, align 4
  %388 = load i8*, i8** %387, align 4
  store i8* %388, i8** %reply, align 4
  br label %if.end784

if.end784:                                        ; preds = %if.then782, %if.end776
  br label %while.cond555

while.end785:                                     ; preds = %lor.end569
  %389 = load i32, i32* %c, align 4
  %cmp786 = icmp eq i32 %389, -1
  br i1 %cmp786, label %if.then788, label %if.end795

if.then788:                                       ; preds = %while.end785
  %390 = load i32, i32* @readfd, align 4
  %391 = load i32, i32* @coprocin, align 4
  %cmp789 = icmp eq i32 %390, %391
  br i1 %cmp789, label %if.then791, label %if.end794

if.then791:                                       ; preds = %if.then788
  %392 = load i32, i32* @coprocin, align 4
  %call792 = call i32 @close(i32 %392)
  %393 = load i32, i32* @coprocout, align 4
  %call793 = call i32 @close(i32 %393)
  store i32 -1, i32* @coprocout, align 4
  store i32 -1, i32* @coprocin, align 4
  br label %if.end794

if.end794:                                        ; preds = %if.then791, %if.then788
  br label %if.end795

if.end795:                                        ; preds = %if.end794, %while.end785
  %394 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind796 = getelementptr inbounds %struct.options, %struct.options* %394, i32 0, i32 0
  %arrayidx797 = getelementptr inbounds [128 x i8], [128 x i8]* %ind796, i32 0, i32 65
  %395 = load i8, i8* %arrayidx797, align 1
  %conv798 = zext i8 %395 to i32
  %cmp799 = icmp ne i32 %conv798, 0
  br i1 %cmp799, label %if.then801, label %if.end853

if.then801:                                       ; preds = %if.end795
  store i8** null, i8*** %p, align 4
  %396 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind805 = getelementptr inbounds %struct.options, %struct.options* %396, i32 0, i32 0
  %arrayidx806 = getelementptr inbounds [128 x i8], [128 x i8]* %ind805, i32 0, i32 101
  %397 = load i8, i8* %arrayidx806, align 1
  %conv807 = zext i8 %397 to i32
  %cmp808 = icmp ne i32 %conv807, 0
  br i1 %cmp808, label %cond.true810, label %cond.false811

cond.true810:                                     ; preds = %if.then801
  br label %cond.end815

cond.false811:                                    ; preds = %if.then801
  %398 = load i32, i32* %al, align 4
  %add812 = add nsw i32 %398, 1
  %mul813 = mul i32 %add812, 4
  %call814 = call i8* @zalloc(i32 %mul813)
  %399 = bitcast i8* %call814 to i8**
  br label %cond.end815

cond.end815:                                      ; preds = %cond.false811, %cond.true810
  %cond816 = phi i8** [ null, %cond.true810 ], [ %399, %cond.false811 ]
  store i8** %cond816, i8*** %p, align 4
  %400 = load i8**, i8*** %p, align 4
  store i8** %400, i8*** %pp, align 4
  %401 = load %union.linkroot*, %union.linkroot** %readll, align 4
  %list817 = bitcast %union.linkroot* %401 to %struct.linklist*
  %first818 = getelementptr inbounds %struct.linklist, %struct.linklist* %list817, i32 0, i32 0
  %402 = load %struct.linknode*, %struct.linknode** %first818, align 4
  store %struct.linknode* %402, %struct.linknode** %n, align 4
  br label %for.cond819

for.cond819:                                      ; preds = %for.inc838, %cond.end815
  %403 = load %struct.linknode*, %struct.linknode** %n, align 4
  %tobool820 = icmp ne %struct.linknode* %403, null
  br i1 %tobool820, label %for.body821, label %for.end839

for.body821:                                      ; preds = %for.cond819
  %404 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind822 = getelementptr inbounds %struct.options, %struct.options* %404, i32 0, i32 0
  %arrayidx823 = getelementptr inbounds [128 x i8], [128 x i8]* %ind822, i32 0, i32 69
  %405 = load i8, i8* %arrayidx823, align 1
  %conv824 = zext i8 %405 to i32
  %cmp825 = icmp ne i32 %conv824, 0
  br i1 %cmp825, label %if.then827, label %if.end830

if.then827:                                       ; preds = %for.body821
  %406 = load %struct.linknode*, %struct.linknode** %n, align 4
  %dat = getelementptr inbounds %struct.linknode, %struct.linknode* %406, i32 0, i32 2
  %407 = load i8*, i8** %dat, align 4
  %408 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 4
  %call828 = call i32 @zputs(i8* %407, %struct._IO_FILE* %408)
  %call829 = call i32 @putchar(i32 10)
  br label %if.end830

if.end830:                                        ; preds = %if.then827, %for.body821
  %409 = load i8**, i8*** %p, align 4
  %tobool831 = icmp ne i8** %409, null
  br i1 %tobool831, label %if.then832, label %if.else835

if.then832:                                       ; preds = %if.end830
  %410 = load %struct.linknode*, %struct.linknode** %n, align 4
  %dat833 = getelementptr inbounds %struct.linknode, %struct.linknode* %410, i32 0, i32 2
  %411 = load i8*, i8** %dat833, align 4
  %412 = load i8**, i8*** %pp, align 4
  %incdec.ptr834 = getelementptr inbounds i8*, i8** %412, i32 1
  store i8** %incdec.ptr834, i8*** %pp, align 4
  store i8* %411, i8** %412, align 4
  br label %if.end837

if.else835:                                       ; preds = %if.end830
  %413 = load %struct.linknode*, %struct.linknode** %n, align 4
  %dat836 = getelementptr inbounds %struct.linknode, %struct.linknode* %413, i32 0, i32 2
  %414 = load i8*, i8** %dat836, align 4
  call void @zsfree(i8* %414)
  br label %if.end837

if.end837:                                        ; preds = %if.else835, %if.then832
  br label %for.inc838

for.inc838:                                       ; preds = %if.end837
  %415 = load %struct.linknode*, %struct.linknode** %n, align 4
  %next = getelementptr inbounds %struct.linknode, %struct.linknode* %415, i32 0, i32 0
  %416 = load %struct.linknode*, %struct.linknode** %next, align 4
  store %struct.linknode* %416, %struct.linknode** %n, align 4
  br label %for.cond819

for.end839:                                       ; preds = %for.cond819
  %417 = load i8**, i8*** %p, align 4
  %tobool840 = icmp ne i8** %417, null
  br i1 %tobool840, label %if.then841, label %if.end844

if.then841:                                       ; preds = %for.end839
  %418 = load i8**, i8*** %pp, align 4
  %incdec.ptr842 = getelementptr inbounds i8*, i8** %418, i32 1
  store i8** %incdec.ptr842, i8*** %pp, align 4
  store i8* null, i8** %418, align 4
  %419 = load i8*, i8** %reply, align 4
  %420 = load i8**, i8*** %p, align 4
  %call843 = call %struct.param* @setaparam(i8* %419, i8** %420)
  br label %if.end844

if.end844:                                        ; preds = %if.then841, %for.end839
  %421 = load i32, i32* %resettty, align 4
  %tobool845 = icmp ne i32 %421, 0
  br i1 %tobool845, label %land.lhs.true846, label %if.end850

land.lhs.true846:                                 ; preds = %if.end844
  %422 = load i32, i32* @SHTTY, align 4
  %cmp847 = icmp ne i32 %422, -1
  br i1 %cmp847, label %if.then849, label %if.end850

if.then849:                                       ; preds = %land.lhs.true846
  call void @settyinfo(%struct.ttyinfo* %saveti)
  br label %if.end850

if.end850:                                        ; preds = %if.then849, %land.lhs.true846, %if.end844
  %423 = load i32, i32* %c, align 4
  %cmp851 = icmp eq i32 %423, -1
  %conv852 = zext i1 %cmp851 to i32
  store i32 %conv852, i32* %retval, align 4
  br label %return

if.end853:                                        ; preds = %if.end795
  store i32 64, i32* %bsiz, align 4
  %call854 = call i8* @zalloc(i32 64)
  store i8* %call854, i8** %bptr, align 4
  store i8* %call854, i8** %buf, align 4
  %424 = load i8*, i8** %buf, align 4
  store i8* %424, i8** %laststart, align 4
  store i32 -2, i32* %ret, align 4
  store i32 0, i32* %bslash, align 4
  %425 = load i32, i32* %gotnl, align 4
  %tobool855 = icmp ne i32 %425, 0
  br i1 %tobool855, label %if.end977, label %if.then856

if.then856:                                       ; preds = %if.end853
  call void @signal_unblock(%struct.__sigset_t* sret %s858, %struct.__sigset_t* byval align 4 @sigchld_mask)
  br label %for.cond859

for.cond859:                                      ; preds = %if.end974, %if.then932, %if.then913, %if.then910, %if.then885, %if.then856
  %426 = load i32, i32* %izle, align 4
  %427 = load i32, i32* %izle_timeout, align 4
  %call860 = call i32 @zread(i32 %426, i32* %readchar, i32 %427)
  store i32 %call860, i32* %c, align 4
  %428 = load i32, i32* %c, align 4
  %cmp861 = icmp eq i32 %428, -1
  br i1 %cmp861, label %if.then863, label %if.end864

if.then863:                                       ; preds = %for.cond859
  store i32 0, i32* %ret, align 4
  br label %for.end975

if.end864:                                        ; preds = %for.cond859
  %429 = load i32, i32* %c, align 4
  %conv865 = trunc i32 %429 to i8
  %430 = load i8*, i8** %bptr, align 4
  store i8 %conv865, i8* %430, align 1
  %431 = load i8, i8* getelementptr inbounds ([181 x i8], [181 x i8]* @opts, i32 0, i32 118), align 1
  %tobool866 = icmp ne i8 %431, 0
  br i1 %tobool866, label %if.then867, label %if.else872

if.then867:                                       ; preds = %if.end864
  %432 = load i8*, i8** %bptr, align 4
  %call868 = call i32 @mbrtowc(i32* %wc, i8* %432, i32 1, %struct.__mbstate_t* %mbs)
  store i32 %call868, i32* %ret, align 4
  %433 = load i32, i32* %ret, align 4
  %tobool869 = icmp ne i32 %433, 0
  br i1 %tobool869, label %if.end871, label %if.then870

if.then870:                                       ; preds = %if.then867
  store i32 1, i32* %ret, align 4
  br label %if.end871

if.end871:                                        ; preds = %if.then870, %if.then867
  br label %if.end873

if.else872:                                       ; preds = %if.end864
  store i32 1, i32* %ret, align 4
  %434 = load i32, i32* %c, align 4
  store i32 %434, i32* %wc, align 4
  br label %if.end873

if.end873:                                        ; preds = %if.else872, %if.end871
  %435 = load i32, i32* %ret, align 4
  %cmp874 = icmp ne i32 %435, -2
  br i1 %cmp874, label %if.then876, label %if.end934

if.then876:                                       ; preds = %if.end873
  %436 = load i32, i32* %ret, align 4
  %cmp877 = icmp eq i32 %436, -1
  br i1 %cmp877, label %if.then879, label %if.end880

if.then879:                                       ; preds = %if.then876
  %437 = bitcast %struct.__mbstate_t* %mbs to i8*
  call void @llvm.memset.p0i8.i32(i8* %437, i8 0, i32 8, i32 4, i1 false)
  %438 = load i32, i32* %c, align 4
  store i32 %438, i32* %wc, align 4
  %439 = load i8*, i8** %bptr, align 4
  store i8* %439, i8** %laststart, align 4
  br label %if.end880

if.end880:                                        ; preds = %if.then879, %if.then876
  %440 = load i32, i32* %bslash, align 4
  %tobool881 = icmp ne i32 %440, 0
  br i1 %tobool881, label %land.lhs.true882, label %if.end886

land.lhs.true882:                                 ; preds = %if.end880
  %441 = load i32, i32* %wc, align 4
  %442 = load i32, i32* %delim, align 4
  %cmp883 = icmp eq i32 %441, %442
  br i1 %cmp883, label %if.then885, label %if.end886

if.then885:                                       ; preds = %land.lhs.true882
  store i32 0, i32* %bslash, align 4
  br label %for.cond859

if.end886:                                        ; preds = %land.lhs.true882, %if.end880
  %443 = load i32, i32* %wc, align 4
  %444 = load i32, i32* %delim, align 4
  %cmp887 = icmp eq i32 %443, %444
  br i1 %cmp887, label %land.lhs.true889, label %if.end892

land.lhs.true889:                                 ; preds = %if.end886
  %445 = load i8*, i8** @zbuf, align 4
  %tobool890 = icmp ne i8* %445, null
  br i1 %tobool890, label %if.end892, label %if.then891

if.then891:                                       ; preds = %land.lhs.true889
  br label %for.end975

if.end892:                                        ; preds = %land.lhs.true889, %if.end886
  %446 = load i32, i32* %bslash, align 4
  %tobool893 = icmp ne i32 %446, 0
  br i1 %tobool893, label %if.end916, label %land.lhs.true894

land.lhs.true894:                                 ; preds = %if.end892
  %447 = load i8*, i8** %bptr, align 4
  %448 = load i8*, i8** %buf, align 4
  %cmp895 = icmp eq i8* %447, %448
  br i1 %cmp895, label %land.lhs.true897, label %if.end916

land.lhs.true897:                                 ; preds = %land.lhs.true894
  %449 = load i32, i32* %wc, align 4
  %call898 = call i32 @wcsitype(i32 %449, i32 32)
  %tobool899 = icmp ne i32 %call898, 0
  br i1 %tobool899, label %if.then900, label %if.end916

if.then900:                                       ; preds = %land.lhs.true897
  %450 = load i32, i32* %c, align 4
  %cmp901 = icmp slt i32 %450, 128
  br i1 %cmp901, label %land.lhs.true903, label %if.else911

land.lhs.true903:                                 ; preds = %if.then900
  %451 = load i32, i32* %c, align 4
  %conv904 = trunc i32 %451 to i8
  %idxprom905 = zext i8 %conv904 to i32
  %arrayidx906 = getelementptr inbounds [256 x i16], [256 x i16]* @typtab, i32 0, i32 %idxprom905
  %452 = load i16, i16* %arrayidx906, align 2
  %conv907 = sext i16 %452 to i32
  %and908 = and i32 %conv907, 8192
  %tobool909 = icmp ne i32 %and908, 0
  br i1 %tobool909, label %if.then910, label %if.else911

if.then910:                                       ; preds = %land.lhs.true903
  br label %for.cond859

if.else911:                                       ; preds = %land.lhs.true903, %if.then900
  %453 = load i32, i32* %first, align 4
  %tobool912 = icmp ne i32 %453, 0
  br i1 %tobool912, label %if.end914, label %if.then913

if.then913:                                       ; preds = %if.else911
  store i32 1, i32* %first, align 4
  br label %for.cond859

if.end914:                                        ; preds = %if.else911
  br label %if.end915

if.end915:                                        ; preds = %if.end914
  br label %if.end916

if.end916:                                        ; preds = %if.end915, %land.lhs.true897, %land.lhs.true894, %if.end892
  %454 = load i32, i32* %wc, align 4
  %cmp917 = icmp eq i32 %454, 92
  br i1 %cmp917, label %land.lhs.true919, label %land.end929

land.lhs.true919:                                 ; preds = %if.end916
  %455 = load i32, i32* %bslash, align 4
  %tobool920 = icmp ne i32 %455, 0
  br i1 %tobool920, label %land.end929, label %land.rhs921

land.rhs921:                                      ; preds = %land.lhs.true919
  %456 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind922 = getelementptr inbounds %struct.options, %struct.options* %456, i32 0, i32 0
  %arrayidx923 = getelementptr inbounds [128 x i8], [128 x i8]* %ind922, i32 0, i32 114
  %457 = load i8, i8* %arrayidx923, align 2
  %conv924 = zext i8 %457 to i32
  %cmp925 = icmp ne i32 %conv924, 0
  %lnot927 = xor i1 %cmp925, true
  br label %land.end929

land.end929:                                      ; preds = %land.rhs921, %land.lhs.true919, %if.end916
  %458 = phi i1 [ false, %land.lhs.true919 ], [ false, %if.end916 ], [ %lnot927, %land.rhs921 ]
  %land.ext930 = zext i1 %458 to i32
  store i32 %land.ext930, i32* %bslash, align 4
  %459 = load i32, i32* %bslash, align 4
  %tobool931 = icmp ne i32 %459, 0
  br i1 %tobool931, label %if.then932, label %if.end933

if.then932:                                       ; preds = %land.end929
  br label %for.cond859

if.end933:                                        ; preds = %land.end929
  br label %if.end934

if.end934:                                        ; preds = %if.end933, %if.end873
  %460 = load i8*, i8** %bptr, align 4
  %461 = load i8, i8* %460, align 1
  %idxprom935 = zext i8 %461 to i32
  %arrayidx936 = getelementptr inbounds [256 x i16], [256 x i16]* @typtab, i32 0, i32 %idxprom935
  %462 = load i16, i16* %arrayidx936, align 2
  %conv937 = sext i16 %462 to i32
  %and938 = and i32 %conv937, 4096
  %tobool939 = icmp ne i32 %and938, 0
  br i1 %tobool939, label %if.then940, label %if.else948

if.then940:                                       ; preds = %if.end934
  %463 = load i8*, i8** %bptr, align 4
  %arrayidx941 = getelementptr inbounds i8, i8* %463, i32 0
  %464 = load i8, i8* %arrayidx941, align 1
  %conv942 = sext i8 %464 to i32
  %xor943 = xor i32 %conv942, 32
  %conv944 = trunc i32 %xor943 to i8
  %465 = load i8*, i8** %bptr, align 4
  %arrayidx945 = getelementptr inbounds i8, i8* %465, i32 1
  store i8 %conv944, i8* %arrayidx945, align 1
  %466 = load i8*, i8** %bptr, align 4
  %arrayidx946 = getelementptr inbounds i8, i8* %466, i32 0
  store i8 -125, i8* %arrayidx946, align 1
  %467 = load i8*, i8** %bptr, align 4
  %add.ptr947 = getelementptr inbounds i8, i8* %467, i32 2
  store i8* %add.ptr947, i8** %bptr, align 4
  br label %if.end950

if.else948:                                       ; preds = %if.end934
  %468 = load i8*, i8** %bptr, align 4
  %incdec.ptr949 = getelementptr inbounds i8, i8* %468, i32 1
  store i8* %incdec.ptr949, i8** %bptr, align 4
  br label %if.end950

if.end950:                                        ; preds = %if.else948, %if.then940
  %469 = load i32, i32* %ret, align 4
  %cmp951 = icmp ne i32 %469, -2
  br i1 %cmp951, label %if.then953, label %if.end954

if.then953:                                       ; preds = %if.end950
  %470 = load i8*, i8** %bptr, align 4
  store i8* %470, i8** %laststart, align 4
  br label %if.end954

if.end954:                                        ; preds = %if.then953, %if.end950
  %471 = load i8*, i8** %bptr, align 4
  %472 = load i8*, i8** %buf, align 4
  %473 = load i32, i32* %bsiz, align 4
  %add.ptr955 = getelementptr inbounds i8, i8* %472, i32 %473
  %add.ptr956 = getelementptr inbounds i8, i8* %add.ptr955, i32 -1
  %cmp957 = icmp uge i8* %471, %add.ptr956
  br i1 %cmp957, label %if.then959, label %if.end974

if.then959:                                       ; preds = %if.end954
  %474 = load i8*, i8** %bptr, align 4
  %475 = load i8*, i8** %buf, align 4
  %sub.ptr.lhs.cast962 = ptrtoint i8* %474 to i32
  %sub.ptr.rhs.cast963 = ptrtoint i8* %475 to i32
  %sub.ptr.sub964 = sub i32 %sub.ptr.lhs.cast962, %sub.ptr.rhs.cast963
  store i32 %sub.ptr.sub964, i32* %blen961, align 4
  %476 = load i8*, i8** %laststart, align 4
  %477 = load i8*, i8** %buf, align 4
  %sub.ptr.lhs.cast967 = ptrtoint i8* %476 to i32
  %sub.ptr.rhs.cast968 = ptrtoint i8* %477 to i32
  %sub.ptr.sub969 = sub i32 %sub.ptr.lhs.cast967, %sub.ptr.rhs.cast968
  store i32 %sub.ptr.sub969, i32* %llen966, align 4
  %478 = load i8*, i8** %buf, align 4
  %479 = load i32, i32* %bsiz, align 4
  %mul970 = mul nsw i32 %479, 2
  store i32 %mul970, i32* %bsiz, align 4
  %call971 = call i8* @realloc(i8* %478, i32 %mul970)
  store i8* %call971, i8** %buf, align 4
  %480 = load i8*, i8** %buf, align 4
  %481 = load i32, i32* %blen961, align 4
  %add.ptr972 = getelementptr inbounds i8, i8* %480, i32 %481
  store i8* %add.ptr972, i8** %bptr, align 4
  %482 = load i8*, i8** %buf, align 4
  %483 = load i32, i32* %llen966, align 4
  %add.ptr973 = getelementptr inbounds i8, i8* %482, i32 %483
  store i8* %add.ptr973, i8** %laststart, align 4
  br label %if.end974

if.end974:                                        ; preds = %if.then959, %if.end954
  br label %for.cond859

for.end975:                                       ; preds = %if.then891, %if.then863
  call void @signal_setmask(%struct.__sigset_t* sret %tmp976, %struct.__sigset_t* byval align 4 %s858)
  br label %if.end977

if.end977:                                        ; preds = %for.end975, %if.end853
  %484 = load i32, i32* %ret, align 4
  %cmp978 = icmp ne i32 %484, -2
  br i1 %cmp978, label %if.then980, label %if.end981

if.then980:                                       ; preds = %if.end977
  %485 = load i8*, i8** %laststart, align 4
  store i8* %485, i8** %bptr, align 4
  br label %if.end981

if.end981:                                        ; preds = %if.then980, %if.end977
  br label %while.cond982

while.cond982:                                    ; preds = %if.end1006, %if.end981
  %486 = load i8*, i8** %bptr, align 4
  %487 = load i8*, i8** %buf, align 4
  %cmp983 = icmp ugt i8* %486, %487
  br i1 %cmp983, label %while.body985, label %while.end1007

while.body985:                                    ; preds = %while.cond982
  %488 = load i8*, i8** %bptr, align 4
  %489 = load i8*, i8** %buf, align 4
  %add.ptr986 = getelementptr inbounds i8, i8* %489, i32 1
  %cmp987 = icmp ugt i8* %488, %add.ptr986
  br i1 %cmp987, label %land.lhs.true989, label %if.else995

land.lhs.true989:                                 ; preds = %while.body985
  %490 = load i8*, i8** %bptr, align 4
  %arrayidx990 = getelementptr inbounds i8, i8* %490, i32 -2
  %491 = load i8, i8* %arrayidx990, align 1
  %conv991 = sext i8 %491 to i32
  %cmp992 = icmp eq i32 %conv991, -125
  br i1 %cmp992, label %if.then994, label %if.else995

if.then994:                                       ; preds = %land.lhs.true989
  br label %while.end1007

if.else995:                                       ; preds = %land.lhs.true989, %while.body985
  %492 = load i8*, i8** %bptr, align 4
  %arrayidx996 = getelementptr inbounds i8, i8* %492, i32 -1
  %493 = load i8, i8* %arrayidx996, align 1
  %idxprom997 = zext i8 %493 to i32
  %arrayidx998 = getelementptr inbounds [256 x i16], [256 x i16]* @typtab, i32 0, i32 %idxprom997
  %494 = load i16, i16* %arrayidx998, align 2
  %conv999 = sext i16 %494 to i32
  %and1000 = and i32 %conv999, 8192
  %tobool1001 = icmp ne i32 %and1000, 0
  br i1 %tobool1001, label %if.then1002, label %if.else1004

if.then1002:                                      ; preds = %if.else995
  %495 = load i8*, i8** %bptr, align 4
  %incdec.ptr1003 = getelementptr inbounds i8, i8* %495, i32 -1
  store i8* %incdec.ptr1003, i8** %bptr, align 4
  br label %if.end1005

if.else1004:                                      ; preds = %if.else995
  br label %while.end1007

if.end1005:                                       ; preds = %if.then1002
  br label %if.end1006

if.end1006:                                       ; preds = %if.end1005
  br label %while.cond982

while.end1007:                                    ; preds = %if.else1004, %if.then994, %while.cond982
  %496 = load i8*, i8** %bptr, align 4
  store i8 0, i8* %496, align 1
  %497 = load i32, i32* %resettty, align 4
  %tobool1008 = icmp ne i32 %497, 0
  br i1 %tobool1008, label %land.lhs.true1009, label %if.end1013

land.lhs.true1009:                                ; preds = %while.end1007
  %498 = load i32, i32* @SHTTY, align 4
  %cmp1010 = icmp ne i32 %498, -1
  br i1 %cmp1010, label %if.then1012, label %if.end1013

if.then1012:                                      ; preds = %land.lhs.true1009
  call void @settyinfo(%struct.ttyinfo* %saveti)
  br label %if.end1013

if.end1013:                                       ; preds = %if.then1012, %land.lhs.true1009, %while.end1007
  %499 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind1014 = getelementptr inbounds %struct.options, %struct.options* %499, i32 0, i32 0
  %arrayidx1015 = getelementptr inbounds [128 x i8], [128 x i8]* %ind1014, i32 0, i32 101
  %500 = load i8, i8* %arrayidx1015, align 1
  %conv1016 = zext i8 %500 to i32
  %cmp1017 = icmp ne i32 %conv1016, 0
  br i1 %cmp1017, label %if.then1025, label %lor.lhs.false1019

lor.lhs.false1019:                                ; preds = %if.end1013
  %501 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind1020 = getelementptr inbounds %struct.options, %struct.options* %501, i32 0, i32 0
  %arrayidx1021 = getelementptr inbounds [128 x i8], [128 x i8]* %ind1020, i32 0, i32 69
  %502 = load i8, i8* %arrayidx1021, align 1
  %conv1022 = zext i8 %502 to i32
  %cmp1023 = icmp ne i32 %conv1022, 0
  br i1 %cmp1023, label %if.then1025, label %if.end1028

if.then1025:                                      ; preds = %lor.lhs.false1019, %if.end1013
  %503 = load i8*, i8** %buf, align 4
  %504 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 4
  %call1026 = call i32 @zputs(i8* %503, %struct._IO_FILE* %504)
  %call1027 = call i32 @putchar(i32 10)
  br label %if.end1028

if.end1028:                                       ; preds = %if.then1025, %lor.lhs.false1019
  %505 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind1029 = getelementptr inbounds %struct.options, %struct.options* %505, i32 0, i32 0
  %arrayidx1030 = getelementptr inbounds [128 x i8], [128 x i8]* %ind1029, i32 0, i32 101
  %506 = load i8, i8* %arrayidx1030, align 1
  %conv1031 = zext i8 %506 to i32
  %cmp1032 = icmp ne i32 %conv1031, 0
  br i1 %cmp1032, label %if.else1036, label %if.then1034

if.then1034:                                      ; preds = %if.end1028
  %507 = load i8*, i8** %reply, align 4
  %508 = load i8*, i8** %buf, align 4
  %call1035 = call %struct.param* @setsparam(i8* %507, i8* %508)
  br label %if.end1037

if.else1036:                                      ; preds = %if.end1028
  %509 = load i8*, i8** %buf, align 4
  call void @zsfree(i8* %509)
  br label %if.end1037

if.end1037:                                       ; preds = %if.else1036, %if.then1034
  %510 = load i8*, i8** %zbuforig, align 4
  %tobool1038 = icmp ne i8* %510, null
  br i1 %tobool1038, label %if.then1039, label %if.else1045

if.then1039:                                      ; preds = %if.end1037
  %511 = load i8*, i8** %zbuforig, align 4
  %512 = load i8, i8* %511, align 1
  store i8 %512, i8* %first1041, align 1
  %513 = load i8*, i8** %zbuforig, align 4
  call void @zsfree(i8* %513)
  %514 = load i8, i8* %first1041, align 1
  %tobool1042 = icmp ne i8 %514, 0
  br i1 %tobool1042, label %if.end1044, label %if.then1043

if.then1043:                                      ; preds = %if.then1039
  store i32 1, i32* %retval, align 4
  br label %return

if.end1044:                                       ; preds = %if.then1039
  br label %if.end1056

if.else1045:                                      ; preds = %if.end1037
  %515 = load i32, i32* %c, align 4
  %cmp1046 = icmp eq i32 %515, -1
  br i1 %cmp1046, label %if.then1048, label %if.end1055

if.then1048:                                      ; preds = %if.else1045
  %516 = load i32, i32* @readfd, align 4
  %517 = load i32, i32* @coprocin, align 4
  %cmp1049 = icmp eq i32 %516, %517
  br i1 %cmp1049, label %if.then1051, label %if.end1054

if.then1051:                                      ; preds = %if.then1048
  %518 = load i32, i32* @coprocin, align 4
  %call1052 = call i32 @close(i32 %518)
  %519 = load i32, i32* @coprocout, align 4
  %call1053 = call i32 @close(i32 %519)
  store i32 -1, i32* @coprocout, align 4
  store i32 -1, i32* @coprocin, align 4
  br label %if.end1054

if.end1054:                                       ; preds = %if.then1051, %if.then1048
  store i32 1, i32* %retval, align 4
  br label %return

if.end1055:                                       ; preds = %if.else1045
  br label %if.end1056

if.end1056:                                       ; preds = %if.end1055, %if.end1044
  %520 = load i32, i32* @errflag, align 4
  store i32 %520, i32* %retval, align 4
  br label %return

return:                                           ; preds = %if.end1056, %if.end1054, %if.then1043, %if.end850, %if.end535, %if.end315, %if.then264, %if.then144, %if.then132, %if.then127, %if.then90, %if.then47, %if.then35, %if.then10
  %521 = load i32, i32* %retval, align 4
  ret i32 %521
}

declare i32 @open(i8*, i32, ...) #1

declare void @init_shout() #1

declare void @gettyinfo(%struct.ttyinfo*) #1

declare void @attachtty(i32) #1

declare void @setcbreak() #1

declare void @settyinfo(%struct.ttyinfo*) #1

declare i32 @isatty(i32) #1

declare i32 @read_poll(i32, i32*, i32, i32) #1

declare i32 @__ctype_get_mb_cur_max() #1

declare i8* @zleentry(i32, ...) #1

declare i32 @read(i32, i8*, i32) #1

declare void @signal_unblock(%struct.__sigset_t* sret, %struct.__sigset_t* byval align 4) #1

; Function Attrs: noinline nounwind
define internal i32 @zread(i32 %izle, i32* %readchar, i32 %izle_timeout) #0 {
entry:
  %retval = alloca i32, align 4
  %izle.addr = alloca i32, align 4
  %readchar.addr = alloca i32*, align 4
  %izle_timeout.addr = alloca i32, align 4
  %cc = alloca i8, align 1
  %retry = alloca i8, align 1
  %ret = alloca i32, align 4
  %c = alloca i32, align 4
  store i32 %izle, i32* %izle.addr, align 4
  store i32* %readchar, i32** %readchar.addr, align 4
  store i32 %izle_timeout, i32* %izle_timeout.addr, align 4
  store i8 0, i8* %retry, align 1
  %0 = load i32, i32* %izle.addr, align 4
  %tobool = icmp ne i32 %0, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %izle_timeout.addr, align 4
  %call = call i8* (i32, ...) @zleentry(i32 7, i32 %1, i8* null, i32* %c)
  %2 = load i32, i32* %c, align 4
  %cmp = icmp slt i32 %2, 0
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.then
  br label %cond.end

cond.false:                                       ; preds = %if.then
  %3 = load i32, i32* %c, align 4
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ -1, %cond.true ], [ %3, %cond.false ]
  store i32 %cond, i32* %retval, align 4
  br label %return

if.end:                                           ; preds = %entry
  %4 = load i8*, i8** @zbuf, align 4
  %tobool1 = icmp ne i8* %4, null
  br i1 %tobool1, label %if.then2, label %if.end18

if.then2:                                         ; preds = %if.end
  %5 = load i8*, i8** @zbuf, align 4
  %6 = load i8, i8* %5, align 1
  %conv = sext i8 %6 to i32
  %cmp3 = icmp eq i32 %conv, -125
  br i1 %cmp3, label %if.then5, label %if.else

if.then5:                                         ; preds = %if.then2
  %7 = load i8*, i8** @zbuf, align 4
  %incdec.ptr = getelementptr inbounds i8, i8* %7, i32 1
  store i8* %incdec.ptr, i8** @zbuf, align 4
  %8 = load i8*, i8** @zbuf, align 4
  %incdec.ptr6 = getelementptr inbounds i8, i8* %8, i32 1
  store i8* %incdec.ptr6, i8** @zbuf, align 4
  %9 = load i8, i8* %8, align 1
  %conv7 = sext i8 %9 to i32
  %xor = xor i32 %conv7, 32
  %conv8 = trunc i32 %xor to i8
  %conv9 = zext i8 %conv8 to i32
  store i32 %conv9, i32* %retval, align 4
  br label %return

if.else:                                          ; preds = %if.then2
  %10 = load i8*, i8** @zbuf, align 4
  %11 = load i8, i8* %10, align 1
  %conv10 = sext i8 %11 to i32
  %tobool11 = icmp ne i32 %conv10, 0
  br i1 %tobool11, label %cond.true12, label %cond.false15

cond.true12:                                      ; preds = %if.else
  %12 = load i8*, i8** @zbuf, align 4
  %incdec.ptr13 = getelementptr inbounds i8, i8* %12, i32 1
  store i8* %incdec.ptr13, i8** @zbuf, align 4
  %13 = load i8, i8* %12, align 1
  %conv14 = zext i8 %13 to i32
  br label %cond.end16

cond.false15:                                     ; preds = %if.else
  br label %cond.end16

cond.end16:                                       ; preds = %cond.false15, %cond.true12
  %cond17 = phi i32 [ %conv14, %cond.true12 ], [ -1, %cond.false15 ]
  store i32 %cond17, i32* %retval, align 4
  br label %return

if.end18:                                         ; preds = %if.end
  %14 = load i32*, i32** %readchar.addr, align 4
  %15 = load i32, i32* %14, align 4
  %cmp19 = icmp sge i32 %15, 0
  br i1 %cmp19, label %if.then21, label %if.end24

if.then21:                                        ; preds = %if.end18
  %16 = load i32*, i32** %readchar.addr, align 4
  %17 = load i32, i32* %16, align 4
  %conv22 = trunc i32 %17 to i8
  store i8 %conv22, i8* %cc, align 1
  %18 = load i32*, i32** %readchar.addr, align 4
  store i32 -1, i32* %18, align 4
  %19 = load i8, i8* %cc, align 1
  %conv23 = zext i8 %19 to i32
  store i32 %conv23, i32* %retval, align 4
  br label %return

if.end24:                                         ; preds = %if.end18
  br label %for.cond

for.cond:                                         ; preds = %if.then54, %if.then41, %if.end24
  %20 = load i32, i32* @readfd, align 4
  %call25 = call i32 @read(i32 %20, i8* %cc, i32 1)
  store i32 %call25, i32* %ret, align 4
  %21 = load i32, i32* %ret, align 4
  switch i32 %21, label %sw.epilog [
    i32 1, label %sw.bb
    i32 -1, label %sw.bb27
  ]

sw.bb:                                            ; preds = %for.cond
  %22 = load i8, i8* %cc, align 1
  %conv26 = zext i8 %22 to i32
  store i32 %conv26, i32* %retval, align 4
  br label %return

sw.bb27:                                          ; preds = %for.cond
  %23 = load i8, i8* %retry, align 1
  %tobool28 = icmp ne i8 %23, 0
  br i1 %tobool28, label %if.else42, label %land.lhs.true

land.lhs.true:                                    ; preds = %sw.bb27
  %24 = load i32, i32* @readfd, align 4
  %cmp29 = icmp eq i32 %24, 0
  br i1 %cmp29, label %land.lhs.true31, label %if.else42

land.lhs.true31:                                  ; preds = %land.lhs.true
  %call32 = call i32* @__errno_location()
  %25 = load i32, i32* %call32, align 4
  %cmp33 = icmp eq i32 %25, 11
  br i1 %cmp33, label %land.lhs.true38, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true31
  %call35 = call i32* @__errno_location()
  %26 = load i32, i32* %call35, align 4
  %cmp36 = icmp eq i32 %26, 11
  br i1 %cmp36, label %land.lhs.true38, label %if.else42

land.lhs.true38:                                  ; preds = %lor.lhs.false, %land.lhs.true31
  %call39 = call i32 @setblock_stdin()
  %tobool40 = icmp ne i32 %call39, 0
  br i1 %tobool40, label %if.then41, label %if.else42

if.then41:                                        ; preds = %land.lhs.true38
  store i8 1, i8* %retry, align 1
  br label %for.cond

if.else42:                                        ; preds = %land.lhs.true38, %lor.lhs.false, %land.lhs.true, %sw.bb27
  %call43 = call i32* @__errno_location()
  %27 = load i32, i32* %call43, align 4
  %cmp44 = icmp eq i32 %27, 4
  br i1 %cmp44, label %land.lhs.true46, label %if.end55

land.lhs.true46:                                  ; preds = %if.else42
  %28 = load i32, i32* @errflag, align 4
  %tobool47 = icmp ne i32 %28, 0
  br i1 %tobool47, label %if.end55, label %lor.lhs.false48

lor.lhs.false48:                                  ; preds = %land.lhs.true46
  %29 = load i32, i32* @retflag, align 4
  %tobool49 = icmp ne i32 %29, 0
  br i1 %tobool49, label %if.end55, label %lor.lhs.false50

lor.lhs.false50:                                  ; preds = %lor.lhs.false48
  %30 = load i32, i32* @breaks, align 4
  %tobool51 = icmp ne i32 %30, 0
  br i1 %tobool51, label %if.end55, label %lor.lhs.false52

lor.lhs.false52:                                  ; preds = %lor.lhs.false50
  %31 = load i32, i32* @contflag, align 4
  %tobool53 = icmp ne i32 %31, 0
  br i1 %tobool53, label %if.end55, label %if.then54

if.then54:                                        ; preds = %lor.lhs.false52
  br label %for.cond

if.end55:                                         ; preds = %lor.lhs.false52, %lor.lhs.false50, %lor.lhs.false48, %land.lhs.true46, %if.else42
  br label %if.end56

if.end56:                                         ; preds = %if.end55
  br label %sw.epilog

sw.epilog:                                        ; preds = %for.cond, %if.end56
  store i32 -1, i32* %retval, align 4
  br label %return

return:                                           ; preds = %sw.epilog, %sw.bb, %if.then21, %cond.end16, %if.then5, %cond.end
  %32 = load i32, i32* %retval, align 4
  ret i32 %32
}

declare i32 @wcsitype(i32, i32) #1

declare i8* @realloc(i8*, i32) #1

; Function Attrs: noinline nounwind
define void @testlex() #0 {
entry:
  %0 = load i32, i32* @tok, align 4
  %cmp = icmp eq i32 %0, 38
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  br label %return

if.end:                                           ; preds = %entry
  %1 = load i8**, i8*** @testargs, align 4
  store i8** %1, i8*** @curtestarg, align 4
  %2 = load i8*, i8** %1, align 4
  store i8* %2, i8** @tokstr, align 4
  %3 = load i8**, i8*** @testargs, align 4
  %4 = load i8*, i8** %3, align 4
  %tobool = icmp ne i8* %4, null
  br i1 %tobool, label %if.else, label %if.then1

if.then1:                                         ; preds = %if.end
  %5 = load i32, i32* @tok, align 4
  %tobool2 = icmp ne i32 %5, 0
  %cond = select i1 %tobool2, i32 0, i32 38
  store i32 %cond, i32* @tok, align 4
  br label %return

if.else:                                          ; preds = %if.end
  %6 = load i8**, i8*** @testargs, align 4
  %7 = load i8*, i8** %6, align 4
  %call = call i32 @strcmp(i8* %7, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.141, i32 0, i32 0))
  %tobool3 = icmp ne i32 %call, 0
  br i1 %tobool3, label %if.else5, label %if.then4

if.then4:                                         ; preds = %if.else
  store i32 8, i32* @tok, align 4
  br label %if.end26

if.else5:                                         ; preds = %if.else
  %8 = load i8**, i8*** @testargs, align 4
  %9 = load i8*, i8** %8, align 4
  %call6 = call i32 @strcmp(i8* %9, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.142, i32 0, i32 0))
  %tobool7 = icmp ne i32 %call6, 0
  br i1 %tobool7, label %if.else9, label %if.then8

if.then8:                                         ; preds = %if.else5
  store i32 9, i32* @tok, align 4
  br label %if.end25

if.else9:                                         ; preds = %if.else5
  %10 = load i8**, i8*** @testargs, align 4
  %11 = load i8*, i8** %10, align 4
  %call10 = call i32 @strcmp(i8* %11, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.143, i32 0, i32 0))
  %tobool11 = icmp ne i32 %call10, 0
  br i1 %tobool11, label %if.else13, label %if.then12

if.then12:                                        ; preds = %if.else9
  store i32 39, i32* @tok, align 4
  br label %if.end24

if.else13:                                        ; preds = %if.else9
  %12 = load i8**, i8*** @testargs, align 4
  %13 = load i8*, i8** %12, align 4
  %call14 = call i32 @strcmp(i8* %13, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.144, i32 0, i32 0))
  %tobool15 = icmp ne i32 %call14, 0
  br i1 %tobool15, label %if.else17, label %if.then16

if.then16:                                        ; preds = %if.else13
  store i32 6, i32* @tok, align 4
  br label %if.end23

if.else17:                                        ; preds = %if.else13
  %14 = load i8**, i8*** @testargs, align 4
  %15 = load i8*, i8** %14, align 4
  %call18 = call i32 @strcmp(i8* %15, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.145, i32 0, i32 0))
  %tobool19 = icmp ne i32 %call18, 0
  br i1 %tobool19, label %if.else21, label %if.then20

if.then20:                                        ; preds = %if.else17
  store i32 7, i32* @tok, align 4
  br label %if.end22

if.else21:                                        ; preds = %if.else17
  store i32 34, i32* @tok, align 4
  br label %if.end22

if.end22:                                         ; preds = %if.else21, %if.then20
  br label %if.end23

if.end23:                                         ; preds = %if.end22, %if.then16
  br label %if.end24

if.end24:                                         ; preds = %if.end23, %if.then12
  br label %if.end25

if.end25:                                         ; preds = %if.end24, %if.then8
  br label %if.end26

if.end26:                                         ; preds = %if.end25, %if.then4
  br label %if.end27

if.end27:                                         ; preds = %if.end26
  %16 = load i8**, i8*** @testargs, align 4
  %incdec.ptr = getelementptr inbounds i8*, i8** %16, i32 1
  store i8** %incdec.ptr, i8*** @testargs, align 4
  br label %return

return:                                           ; preds = %if.end27, %if.then1, %if.then
  ret void
}

; Function Attrs: noinline nounwind
define i32 @bin_test(i8* %name, i8** %argv, %struct.options* %ops, i32 %func) #0 {
entry:
  %retval = alloca i32, align 4
  %name.addr = alloca i8*, align 4
  %argv.addr = alloca i8**, align 4
  %ops.addr = alloca %struct.options*, align 4
  %func.addr = alloca i32, align 4
  %s = alloca i8**, align 4
  %prog = alloca %struct.eprog*, align 4
  %state = alloca %struct.estate, align 4
  %nargs = alloca i32, align 4
  %sense = alloca i32, align 4
  %ret = alloca i32, align 4
  store i8* %name, i8** %name.addr, align 4
  store i8** %argv, i8*** %argv.addr, align 4
  store %struct.options* %ops, %struct.options** %ops.addr, align 4
  store i32 %func, i32* %func.addr, align 4
  store i32 0, i32* %sense, align 4
  %0 = load i32, i32* %func.addr, align 4
  %cmp = icmp eq i32 %0, 21
  br i1 %cmp, label %if.then, label %if.end5

if.then:                                          ; preds = %entry
  %1 = load i8**, i8*** %argv.addr, align 4
  store i8** %1, i8*** %s, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then
  %2 = load i8**, i8*** %s, align 4
  %3 = load i8*, i8** %2, align 4
  %tobool = icmp ne i8* %3, null
  br i1 %tobool, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %4 = load i8**, i8*** %s, align 4
  %incdec.ptr = getelementptr inbounds i8*, i8** %4, i32 1
  store i8** %incdec.ptr, i8*** %s, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %5 = load i8**, i8*** %s, align 4
  %6 = load i8**, i8*** %argv.addr, align 4
  %cmp1 = icmp eq i8** %5, %6
  br i1 %cmp1, label %if.then3, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %for.end
  %7 = load i8**, i8*** %s, align 4
  %arrayidx = getelementptr inbounds i8*, i8** %7, i32 -1
  %8 = load i8*, i8** %arrayidx, align 4
  %call = call i32 @strcmp(i8* %8, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.146, i32 0, i32 0))
  %tobool2 = icmp ne i32 %call, 0
  br i1 %tobool2, label %if.then3, label %if.end

if.then3:                                         ; preds = %lor.lhs.false, %for.end
  %9 = load i8*, i8** %name.addr, align 4
  call void (i8*, i8*, ...) @zwarnnam(i8* %9, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.147, i32 0, i32 0))
  store i32 2, i32* %retval, align 4
  br label %return

if.end:                                           ; preds = %lor.lhs.false
  %10 = load i8**, i8*** %s, align 4
  %arrayidx4 = getelementptr inbounds i8*, i8** %10, i32 -1
  store i8* null, i8** %arrayidx4, align 4
  br label %if.end5

if.end5:                                          ; preds = %if.end, %entry
  %11 = load i8**, i8*** %argv.addr, align 4
  %12 = load i8*, i8** %11, align 4
  %tobool6 = icmp ne i8* %12, null
  br i1 %tobool6, label %if.end8, label %if.then7

if.then7:                                         ; preds = %if.end5
  store i32 1, i32* %retval, align 4
  br label %return

if.end8:                                          ; preds = %if.end5
  %13 = load i8**, i8*** %argv.addr, align 4
  %call9 = call i32 @arrlen(i8** %13)
  store i32 %call9, i32* %nargs, align 4
  %14 = load i32, i32* %nargs, align 4
  %cmp10 = icmp eq i32 %14, 3
  br i1 %cmp10, label %if.then13, label %lor.lhs.false11

lor.lhs.false11:                                  ; preds = %if.end8
  %15 = load i32, i32* %nargs, align 4
  %cmp12 = icmp eq i32 %15, 4
  br i1 %cmp12, label %if.then13, label %if.end39

if.then13:                                        ; preds = %lor.lhs.false11, %if.end8
  %16 = load i8**, i8*** %argv.addr, align 4
  %arrayidx14 = getelementptr inbounds i8*, i8** %16, i32 0
  %17 = load i8*, i8** %arrayidx14, align 4
  %call15 = call i32 @strcmp(i8* %17, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.144, i32 0, i32 0))
  %tobool16 = icmp ne i32 %call15, 0
  br i1 %tobool16, label %if.end30, label %land.lhs.true

land.lhs.true:                                    ; preds = %if.then13
  %18 = load i8**, i8*** %argv.addr, align 4
  %19 = load i32, i32* %nargs, align 4
  %sub = sub nsw i32 %19, 1
  %arrayidx17 = getelementptr inbounds i8*, i8** %18, i32 %sub
  %20 = load i8*, i8** %arrayidx17, align 4
  %call18 = call i32 @strcmp(i8* %20, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.145, i32 0, i32 0))
  %tobool19 = icmp ne i32 %call18, 0
  br i1 %tobool19, label %if.end30, label %land.lhs.true20

land.lhs.true20:                                  ; preds = %land.lhs.true
  %21 = load i32, i32* %nargs, align 4
  %cmp21 = icmp ne i32 %21, 3
  br i1 %cmp21, label %if.then26, label %lor.lhs.false22

lor.lhs.false22:                                  ; preds = %land.lhs.true20
  %22 = load i8**, i8*** %argv.addr, align 4
  %arrayidx23 = getelementptr inbounds i8*, i8** %22, i32 1
  %23 = load i8*, i8** %arrayidx23, align 4
  %call24 = call i32 @is_cond_binary_op(i8* %23)
  %tobool25 = icmp ne i32 %call24, 0
  br i1 %tobool25, label %if.end30, label %if.then26

if.then26:                                        ; preds = %lor.lhs.false22, %land.lhs.true20
  %24 = load i8**, i8*** %argv.addr, align 4
  %25 = load i32, i32* %nargs, align 4
  %sub27 = sub nsw i32 %25, 1
  %arrayidx28 = getelementptr inbounds i8*, i8** %24, i32 %sub27
  store i8* null, i8** %arrayidx28, align 4
  %26 = load i8**, i8*** %argv.addr, align 4
  %incdec.ptr29 = getelementptr inbounds i8*, i8** %26, i32 1
  store i8** %incdec.ptr29, i8*** %argv.addr, align 4
  br label %if.end30

if.end30:                                         ; preds = %if.then26, %lor.lhs.false22, %land.lhs.true, %if.then13
  %27 = load i32, i32* %nargs, align 4
  %cmp31 = icmp eq i32 %27, 4
  br i1 %cmp31, label %land.lhs.true32, label %if.end38

land.lhs.true32:                                  ; preds = %if.end30
  %28 = load i8**, i8*** %argv.addr, align 4
  %arrayidx33 = getelementptr inbounds i8*, i8** %28, i32 0
  %29 = load i8*, i8** %arrayidx33, align 4
  %call34 = call i32 @strcmp(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.143, i32 0, i32 0), i8* %29)
  %tobool35 = icmp ne i32 %call34, 0
  br i1 %tobool35, label %if.end38, label %if.then36

if.then36:                                        ; preds = %land.lhs.true32
  store i32 1, i32* %sense, align 4
  %30 = load i8**, i8*** %argv.addr, align 4
  %incdec.ptr37 = getelementptr inbounds i8*, i8** %30, i32 1
  store i8** %incdec.ptr37, i8*** %argv.addr, align 4
  br label %if.end38

if.end38:                                         ; preds = %if.then36, %land.lhs.true32, %if.end30
  br label %if.end39

if.end39:                                         ; preds = %if.end38, %lor.lhs.false11
  call void @zcontext_save()
  %31 = load i8**, i8*** %argv.addr, align 4
  store i8** %31, i8*** @testargs, align 4
  store i32 0, i32* @tok, align 4
  store void ()* @testlex, void ()** @condlex, align 4
  call void @testlex()
  %call40 = call %struct.eprog* @parse_cond()
  store %struct.eprog* %call40, %struct.eprog** %prog, align 4
  store void ()* @zshlex, void ()** @condlex, align 4
  %32 = load i32, i32* @errflag, align 4
  %tobool41 = icmp ne i32 %32, 0
  br i1 %tobool41, label %if.then42, label %if.end43

if.then42:                                        ; preds = %if.end39
  %33 = load i32, i32* @errflag, align 4
  %and = and i32 %33, -2
  store i32 %and, i32* @errflag, align 4
  call void @zcontext_restore()
  store i32 2, i32* %retval, align 4
  br label %return

if.end43:                                         ; preds = %if.end39
  %34 = load %struct.eprog*, %struct.eprog** %prog, align 4
  %tobool44 = icmp ne %struct.eprog* %34, null
  br i1 %tobool44, label %lor.lhs.false45, label %if.then47

lor.lhs.false45:                                  ; preds = %if.end43
  %35 = load i32, i32* @tok, align 4
  %cmp46 = icmp eq i32 %35, 38
  br i1 %cmp46, label %if.then47, label %if.end49

if.then47:                                        ; preds = %lor.lhs.false45, %if.end43
  %36 = load i8*, i8** %name.addr, align 4
  %37 = load i8*, i8** @tokstr, align 4
  %tobool48 = icmp ne i8* %37, null
  %cond = select i1 %tobool48, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.148, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.149, i32 0, i32 0)
  call void (i8*, i8*, ...) @zwarnnam(i8* %36, i8* %cond)
  call void @zcontext_restore()
  store i32 2, i32* %retval, align 4
  br label %return

if.end49:                                         ; preds = %lor.lhs.false45
  call void @zcontext_restore()
  %38 = load i8**, i8*** @curtestarg, align 4
  %39 = load i8*, i8** %38, align 4
  %tobool50 = icmp ne i8* %39, null
  br i1 %tobool50, label %if.then51, label %if.end52

if.then51:                                        ; preds = %if.end49
  %40 = load i8*, i8** %name.addr, align 4
  call void (i8*, i8*, ...) @zwarnnam(i8* %40, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.10, i32 0, i32 0))
  store i32 2, i32* %retval, align 4
  br label %return

if.end52:                                         ; preds = %if.end49
  %41 = load %struct.eprog*, %struct.eprog** %prog, align 4
  %prog53 = getelementptr inbounds %struct.estate, %struct.estate* %state, i32 0, i32 0
  store %struct.eprog* %41, %struct.eprog** %prog53, align 4
  %42 = load %struct.eprog*, %struct.eprog** %prog, align 4
  %prog54 = getelementptr inbounds %struct.eprog, %struct.eprog* %42, i32 0, i32 5
  %43 = load i32*, i32** %prog54, align 4
  %pc = getelementptr inbounds %struct.estate, %struct.estate* %state, i32 0, i32 1
  store i32* %43, i32** %pc, align 4
  %44 = load %struct.eprog*, %struct.eprog** %prog, align 4
  %strs = getelementptr inbounds %struct.eprog, %struct.eprog* %44, i32 0, i32 6
  %45 = load i8*, i8** %strs, align 4
  %strs55 = getelementptr inbounds %struct.estate, %struct.estate* %state, i32 0, i32 2
  store i8* %45, i8** %strs55, align 4
  %46 = load i8*, i8** %name.addr, align 4
  %call56 = call i32 @evalcond(%struct.estate* %state, i8* %46)
  store i32 %call56, i32* %ret, align 4
  %47 = load i32, i32* %ret, align 4
  %cmp57 = icmp slt i32 %47, 2
  br i1 %cmp57, label %land.lhs.true58, label %if.end62

land.lhs.true58:                                  ; preds = %if.end52
  %48 = load i32, i32* %sense, align 4
  %tobool59 = icmp ne i32 %48, 0
  br i1 %tobool59, label %if.then60, label %if.end62

if.then60:                                        ; preds = %land.lhs.true58
  %49 = load i32, i32* %ret, align 4
  %tobool61 = icmp ne i32 %49, 0
  %lnot = xor i1 %tobool61, true
  %lnot.ext = zext i1 %lnot to i32
  store i32 %lnot.ext, i32* %ret, align 4
  br label %if.end62

if.end62:                                         ; preds = %if.then60, %land.lhs.true58, %if.end52
  %50 = load i32, i32* %ret, align 4
  store i32 %50, i32* %retval, align 4
  br label %return

return:                                           ; preds = %if.end62, %if.then51, %if.then47, %if.then42, %if.then7, %if.then3
  %51 = load i32, i32* %retval, align 4
  ret i32 %51
}

declare i32 @is_cond_binary_op(i8*) #1

declare void @zcontext_save() #1

declare %struct.eprog* @parse_cond() #1

declare void @zshlex() #1

declare void @zcontext_restore() #1

declare i32 @evalcond(%struct.estate*, i8*) #1

; Function Attrs: noinline nounwind
define i32 @bin_times(i8* %name, i8** %argv, %struct.options* %ops, i32 %func) #0 {
entry:
  %retval = alloca i32, align 4
  %name.addr = alloca i8*, align 4
  %argv.addr = alloca i8**, align 4
  %ops.addr = alloca %struct.options*, align 4
  %func.addr = alloca i32, align 4
  %buf = alloca %struct.tms, align 4
  %clktck = alloca i32, align 4
  store i8* %name, i8** %name.addr, align 4
  store i8** %argv, i8*** %argv.addr, align 4
  store %struct.options* %ops, %struct.options** %ops.addr, align 4
  store i32 %func, i32* %func.addr, align 4
  %call = call i32 @get_clktck()
  store i32 %call, i32* %clktck, align 4
  %call1 = call i32 @times(%struct.tms* %buf)
  %cmp = icmp eq i32 %call1, -1
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 1, i32* %retval, align 4
  br label %return

if.end:                                           ; preds = %entry
  %tms_utime = getelementptr inbounds %struct.tms, %struct.tms* %buf, i32 0, i32 0
  %0 = load i32, i32* %tms_utime, align 4
  %1 = load i32, i32* %clktck, align 4
  %mul = mul nsw i32 60, %1
  %div = sdiv i32 %0, %mul
  %tms_utime2 = getelementptr inbounds %struct.tms, %struct.tms* %buf, i32 0, i32 0
  %2 = load i32, i32* %tms_utime2, align 4
  %3 = load i32, i32* %clktck, align 4
  %div3 = sdiv i32 %2, %3
  %4 = load i32, i32* %clktck, align 4
  %rem = srem i32 %div3, %4
  %tms_utime4 = getelementptr inbounds %struct.tms, %struct.tms* %buf, i32 0, i32 0
  %5 = load i32, i32* %tms_utime4, align 4
  %mul5 = mul nsw i32 %5, 100
  %6 = load i32, i32* %clktck, align 4
  %div6 = sdiv i32 %mul5, %6
  %rem7 = srem i32 %div6, 100
  %call8 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.150, i32 0, i32 0), i32 %div, i32 %rem, i32 %rem7)
  %call9 = call i32 @putchar(i32 32)
  %tms_stime = getelementptr inbounds %struct.tms, %struct.tms* %buf, i32 0, i32 1
  %7 = load i32, i32* %tms_stime, align 4
  %8 = load i32, i32* %clktck, align 4
  %mul10 = mul nsw i32 60, %8
  %div11 = sdiv i32 %7, %mul10
  %tms_stime12 = getelementptr inbounds %struct.tms, %struct.tms* %buf, i32 0, i32 1
  %9 = load i32, i32* %tms_stime12, align 4
  %10 = load i32, i32* %clktck, align 4
  %div13 = sdiv i32 %9, %10
  %11 = load i32, i32* %clktck, align 4
  %rem14 = srem i32 %div13, %11
  %tms_stime15 = getelementptr inbounds %struct.tms, %struct.tms* %buf, i32 0, i32 1
  %12 = load i32, i32* %tms_stime15, align 4
  %mul16 = mul nsw i32 %12, 100
  %13 = load i32, i32* %clktck, align 4
  %div17 = sdiv i32 %mul16, %13
  %rem18 = srem i32 %div17, 100
  %call19 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.150, i32 0, i32 0), i32 %div11, i32 %rem14, i32 %rem18)
  %call20 = call i32 @putchar(i32 10)
  %tms_cutime = getelementptr inbounds %struct.tms, %struct.tms* %buf, i32 0, i32 2
  %14 = load i32, i32* %tms_cutime, align 4
  %15 = load i32, i32* %clktck, align 4
  %mul21 = mul nsw i32 60, %15
  %div22 = sdiv i32 %14, %mul21
  %tms_cutime23 = getelementptr inbounds %struct.tms, %struct.tms* %buf, i32 0, i32 2
  %16 = load i32, i32* %tms_cutime23, align 4
  %17 = load i32, i32* %clktck, align 4
  %div24 = sdiv i32 %16, %17
  %18 = load i32, i32* %clktck, align 4
  %rem25 = srem i32 %div24, %18
  %tms_cutime26 = getelementptr inbounds %struct.tms, %struct.tms* %buf, i32 0, i32 2
  %19 = load i32, i32* %tms_cutime26, align 4
  %mul27 = mul nsw i32 %19, 100
  %20 = load i32, i32* %clktck, align 4
  %div28 = sdiv i32 %mul27, %20
  %rem29 = srem i32 %div28, 100
  %call30 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.150, i32 0, i32 0), i32 %div22, i32 %rem25, i32 %rem29)
  %call31 = call i32 @putchar(i32 32)
  %tms_cstime = getelementptr inbounds %struct.tms, %struct.tms* %buf, i32 0, i32 3
  %21 = load i32, i32* %tms_cstime, align 4
  %22 = load i32, i32* %clktck, align 4
  %mul32 = mul nsw i32 60, %22
  %div33 = sdiv i32 %21, %mul32
  %tms_cstime34 = getelementptr inbounds %struct.tms, %struct.tms* %buf, i32 0, i32 3
  %23 = load i32, i32* %tms_cstime34, align 4
  %24 = load i32, i32* %clktck, align 4
  %div35 = sdiv i32 %23, %24
  %25 = load i32, i32* %clktck, align 4
  %rem36 = srem i32 %div35, %25
  %tms_cstime37 = getelementptr inbounds %struct.tms, %struct.tms* %buf, i32 0, i32 3
  %26 = load i32, i32* %tms_cstime37, align 4
  %mul38 = mul nsw i32 %26, 100
  %27 = load i32, i32* %clktck, align 4
  %div39 = sdiv i32 %mul38, %27
  %rem40 = srem i32 %div39, 100
  %call41 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.150, i32 0, i32 0), i32 %div33, i32 %rem36, i32 %rem40)
  %call42 = call i32 @putchar(i32 10)
  store i32 0, i32* %retval, align 4
  br label %return

return:                                           ; preds = %if.end, %if.then
  %28 = load i32, i32* %retval, align 4
  ret i32 %28
}

declare i32 @get_clktck() #1

declare i32 @times(%struct.tms*) #1

; Function Attrs: noinline nounwind
define i32 @bin_trap(i8* %name, i8** %argv, %struct.options* %ops, i32 %func) #0 {
entry:
  %retval = alloca i32, align 4
  %name.addr = alloca i8*, align 4
  %argv.addr = alloca i8**, align 4
  %ops.addr = alloca %struct.options*, align 4
  %func.addr = alloca i32, align 4
  %prog = alloca %struct.eprog*, align 4
  %arg = alloca i8*, align 4
  %s = alloca i8*, align 4
  %sig = alloca i32, align 4
  %hn = alloca %struct.hashnode*, align 4
  %name13 = alloca i8*, align 4
  %oset = alloca %struct.__sigset_t, align 4
  %tmp = alloca %struct.__sigset_t, align 4
  %tmp35 = alloca %struct.__sigset_t, align 4
  %t = alloca %struct.eprog*, align 4
  %flags = alloca i32, align 4
  store i8* %name, i8** %name.addr, align 4
  store i8** %argv, i8*** %argv.addr, align 4
  store %struct.options* %ops, %struct.options** %ops.addr, align 4
  store i32 %func, i32* %func.addr, align 4
  %0 = load i8**, i8*** %argv.addr, align 4
  %1 = load i8*, i8** %0, align 4
  %tobool = icmp ne i8* %1, null
  br i1 %tobool, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %entry
  %2 = load i8**, i8*** %argv.addr, align 4
  %3 = load i8*, i8** %2, align 4
  %call = call i32 @strcmp(i8* %3, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i32 0, i32 0))
  %tobool1 = icmp ne i32 %call, 0
  br i1 %tobool1, label %if.end, label %if.then

if.then:                                          ; preds = %land.lhs.true
  %4 = load i8**, i8*** %argv.addr, align 4
  %incdec.ptr = getelementptr inbounds i8*, i8** %4, i32 1
  store i8** %incdec.ptr, i8*** %argv.addr, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %5 = load i8**, i8*** %argv.addr, align 4
  %6 = load i8*, i8** %5, align 4
  %tobool2 = icmp ne i8* %6, null
  br i1 %tobool2, label %if.end38, label %if.then3

if.then3:                                         ; preds = %if.end
  %7 = load i32, i32* @queueing_enabled, align 4
  %inc = add nsw i32 %7, 1
  store i32 %inc, i32* @queueing_enabled, align 4
  store i32 0, i32* %sig, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then3
  %8 = load i32, i32* %sig, align 4
  %cmp = icmp slt i32 %8, 34
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %9 = load i32, i32* %sig, align 4
  %arrayidx = getelementptr inbounds [34 x i32], [34 x i32]* @sigtrapped, i32 0, i32 %9
  %10 = load i32, i32* %arrayidx, align 4
  %and = and i32 %10, 4
  %tobool4 = icmp ne i32 %and, 0
  br i1 %tobool4, label %if.then5, label %if.else

if.then5:                                         ; preds = %for.body
  %11 = load i32, i32* %sig, align 4
  %call6 = call %struct.hashnode* @gettrapnode(i32 %11, i32 0)
  store %struct.hashnode* %call6, %struct.hashnode** %hn, align 4
  %tobool7 = icmp ne %struct.hashnode* %call6, null
  br i1 %tobool7, label %if.then8, label %if.end9

if.then8:                                         ; preds = %if.then5
  %12 = load %struct.hashtable*, %struct.hashtable** @shfunctab, align 4
  %printnode = getelementptr inbounds %struct.hashtable, %struct.hashtable* %12, i32 0, i32 15
  %13 = load void (%struct.hashnode*, i32)*, void (%struct.hashnode*, i32)** %printnode, align 4
  %14 = load %struct.hashnode*, %struct.hashnode** %hn, align 4
  call void %13(%struct.hashnode* %14, i32 0)
  br label %if.end9

if.end9:                                          ; preds = %if.then8, %if.then5
  br label %if.end27

if.else:                                          ; preds = %for.body
  %15 = load i32, i32* %sig, align 4
  %arrayidx10 = getelementptr inbounds [34 x i32], [34 x i32]* @sigtrapped, i32 0, i32 %15
  %16 = load i32, i32* %arrayidx10, align 4
  %tobool11 = icmp ne i32 %16, 0
  br i1 %tobool11, label %if.then12, label %if.end26

if.then12:                                        ; preds = %if.else
  %17 = load i32, i32* %sig, align 4
  %call14 = call i8* @getsigname(i32 %17)
  store i8* %call14, i8** %name13, align 4
  %18 = load i32, i32* %sig, align 4
  %arrayidx15 = getelementptr inbounds [34 x %struct.eprog*], [34 x %struct.eprog*]* @siglists, i32 0, i32 %18
  %19 = load %struct.eprog*, %struct.eprog** %arrayidx15, align 4
  %tobool16 = icmp ne %struct.eprog* %19, null
  br i1 %tobool16, label %if.else19, label %if.then17

if.then17:                                        ; preds = %if.then12
  %20 = load i8*, i8** %name13, align 4
  %call18 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.151, i32 0, i32 0), i8* %20)
  br label %if.end25

if.else19:                                        ; preds = %if.then12
  %21 = load i32, i32* %sig, align 4
  %arrayidx20 = getelementptr inbounds [34 x %struct.eprog*], [34 x %struct.eprog*]* @siglists, i32 0, i32 %21
  %22 = load %struct.eprog*, %struct.eprog** %arrayidx20, align 4
  %call21 = call i8* @getpermtext(%struct.eprog* %22, i32* null, i32 0)
  store i8* %call21, i8** %s, align 4
  %call22 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.152, i32 0, i32 0))
  %23 = load i8*, i8** %s, align 4
  %24 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 4
  %call23 = call i8* @quotedzputs(i8* %23, %struct._IO_FILE* %24)
  %25 = load i8*, i8** %name13, align 4
  %call24 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.153, i32 0, i32 0), i8* %25)
  %26 = load i8*, i8** %s, align 4
  call void @zsfree(i8* %26)
  br label %if.end25

if.end25:                                         ; preds = %if.else19, %if.then17
  br label %if.end26

if.end26:                                         ; preds = %if.end25, %if.else
  br label %if.end27

if.end27:                                         ; preds = %if.end26, %if.end9
  br label %for.inc

for.inc:                                          ; preds = %if.end27
  %27 = load i32, i32* %sig, align 4
  %inc28 = add nsw i32 %27, 1
  store i32 %inc28, i32* %sig, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  br label %do.body

do.body:                                          ; preds = %for.end
  %28 = load i32, i32* @queueing_enabled, align 4
  %dec = add nsw i32 %28, -1
  store i32 %dec, i32* @queueing_enabled, align 4
  %tobool29 = icmp ne i32 %dec, 0
  br i1 %tobool29, label %if.end36, label %if.then30

if.then30:                                        ; preds = %do.body
  br label %do.body31

do.body31:                                        ; preds = %if.then30
  br label %while.cond

while.cond:                                       ; preds = %while.body, %do.body31
  %29 = load i32, i32* @queue_front, align 4
  %30 = load i32, i32* @queue_rear, align 4
  %cmp32 = icmp ne i32 %29, %30
  br i1 %cmp32, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %31 = load i32, i32* @queue_front, align 4
  %add = add nsw i32 %31, 1
  %rem = srem i32 %add, 128
  store i32 %rem, i32* @queue_front, align 4
  %32 = load i32, i32* @queue_front, align 4
  %arrayidx33 = getelementptr inbounds [128 x %struct.__sigset_t], [128 x %struct.__sigset_t]* @signal_mask_queue, i32 0, i32 %32
  call void @signal_setmask(%struct.__sigset_t* sret %tmp, %struct.__sigset_t* byval align 4 %arrayidx33)
  %33 = bitcast %struct.__sigset_t* %oset to i8*
  %34 = bitcast %struct.__sigset_t* %tmp to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %33, i8* %34, i32 128, i32 4, i1 false)
  %35 = load i32, i32* @queue_front, align 4
  %arrayidx34 = getelementptr inbounds [128 x i32], [128 x i32]* @signal_queue, i32 0, i32 %35
  %36 = load i32, i32* %arrayidx34, align 4
  call void @zhandler(i32 %36)
  call void @signal_setmask(%struct.__sigset_t* sret %tmp35, %struct.__sigset_t* byval align 4 %oset)
  br label %while.cond

while.end:                                        ; preds = %while.cond
  br label %do.end

do.end:                                           ; preds = %while.end
  br label %if.end36

if.end36:                                         ; preds = %do.end, %do.body
  br label %do.end37

do.end37:                                         ; preds = %if.end36
  store i32 0, i32* %retval, align 4
  br label %return

if.end38:                                         ; preds = %if.end
  %37 = load i8**, i8*** %argv.addr, align 4
  %38 = load i8*, i8** %37, align 4
  %call39 = call i32 @getsignum(i8* %38)
  %cmp40 = icmp ne i32 %call39, -1
  br i1 %cmp40, label %if.then46, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end38
  %39 = load i8**, i8*** %argv.addr, align 4
  %40 = load i8*, i8** %39, align 4
  %call41 = call i32 @strcmp(i8* %40, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.44, i32 0, i32 0))
  %tobool42 = icmp ne i32 %call41, 0
  br i1 %tobool42, label %if.end68, label %land.lhs.true43

land.lhs.true43:                                  ; preds = %lor.lhs.false
  %41 = load i8**, i8*** %argv.addr, align 4
  %incdec.ptr44 = getelementptr inbounds i8*, i8** %41, i32 1
  store i8** %incdec.ptr44, i8*** %argv.addr, align 4
  %tobool45 = icmp ne i8** %41, null
  br i1 %tobool45, label %if.then46, label %if.end68

if.then46:                                        ; preds = %land.lhs.true43, %if.end38
  %42 = load i8**, i8*** %argv.addr, align 4
  %43 = load i8*, i8** %42, align 4
  %tobool47 = icmp ne i8* %43, null
  br i1 %tobool47, label %if.else55, label %if.then48

if.then48:                                        ; preds = %if.then46
  store i32 0, i32* %sig, align 4
  br label %for.cond49

for.cond49:                                       ; preds = %for.inc52, %if.then48
  %44 = load i32, i32* %sig, align 4
  %cmp50 = icmp slt i32 %44, 34
  br i1 %cmp50, label %for.body51, label %for.end54

for.body51:                                       ; preds = %for.cond49
  %45 = load i32, i32* %sig, align 4
  call void @unsettrap(i32 %45)
  br label %for.inc52

for.inc52:                                        ; preds = %for.body51
  %46 = load i32, i32* %sig, align 4
  %inc53 = add nsw i32 %46, 1
  store i32 %inc53, i32* %sig, align 4
  br label %for.cond49

for.end54:                                        ; preds = %for.cond49
  br label %if.end66

if.else55:                                        ; preds = %if.then46
  br label %for.cond56

for.cond56:                                       ; preds = %for.inc63, %if.else55
  %47 = load i8**, i8*** %argv.addr, align 4
  %48 = load i8*, i8** %47, align 4
  %tobool57 = icmp ne i8* %48, null
  br i1 %tobool57, label %for.body58, label %for.end65

for.body58:                                       ; preds = %for.cond56
  %49 = load i8**, i8*** %argv.addr, align 4
  %50 = load i8*, i8** %49, align 4
  %call59 = call i32 @getsignum(i8* %50)
  store i32 %call59, i32* %sig, align 4
  %51 = load i32, i32* %sig, align 4
  %cmp60 = icmp eq i32 %51, -1
  br i1 %cmp60, label %if.then61, label %if.end62

if.then61:                                        ; preds = %for.body58
  %52 = load i8*, i8** %name.addr, align 4
  %53 = load i8**, i8*** %argv.addr, align 4
  %54 = load i8*, i8** %53, align 4
  call void (i8*, i8*, ...) @zwarnnam(i8* %52, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.154, i32 0, i32 0), i8* %54)
  br label %for.end65

if.end62:                                         ; preds = %for.body58
  %55 = load i32, i32* %sig, align 4
  call void @unsettrap(i32 %55)
  br label %for.inc63

for.inc63:                                        ; preds = %if.end62
  %56 = load i8**, i8*** %argv.addr, align 4
  %incdec.ptr64 = getelementptr inbounds i8*, i8** %56, i32 1
  store i8** %incdec.ptr64, i8*** %argv.addr, align 4
  br label %for.cond56

for.end65:                                        ; preds = %if.then61, %for.cond56
  br label %if.end66

if.end66:                                         ; preds = %for.end65, %for.end54
  %57 = load i8**, i8*** %argv.addr, align 4
  %58 = load i8*, i8** %57, align 4
  %cmp67 = icmp ne i8* %58, null
  %conv = zext i1 %cmp67 to i32
  store i32 %conv, i32* %retval, align 4
  br label %return

if.end68:                                         ; preds = %land.lhs.true43, %lor.lhs.false
  %59 = load i8**, i8*** %argv.addr, align 4
  %incdec.ptr69 = getelementptr inbounds i8*, i8** %59, i32 1
  store i8** %incdec.ptr69, i8*** %argv.addr, align 4
  %60 = load i8*, i8** %59, align 4
  store i8* %60, i8** %arg, align 4
  %61 = load i8*, i8** %arg, align 4
  %62 = load i8, i8* %61, align 1
  %tobool70 = icmp ne i8 %62, 0
  br i1 %tobool70, label %if.else72, label %if.then71

if.then71:                                        ; preds = %if.end68
  store %struct.eprog* @dummy_eprog, %struct.eprog** %prog, align 4
  br label %if.end77

if.else72:                                        ; preds = %if.end68
  %63 = load i8*, i8** %arg, align 4
  %call73 = call %struct.eprog* @parse_string(i8* %63, i32 1)
  store %struct.eprog* %call73, %struct.eprog** %prog, align 4
  %tobool74 = icmp ne %struct.eprog* %call73, null
  br i1 %tobool74, label %if.end76, label %if.then75

if.then75:                                        ; preds = %if.else72
  %64 = load i8*, i8** %name.addr, align 4
  call void (i8*, i8*, ...) @zwarnnam(i8* %64, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.155, i32 0, i32 0))
  store i32 1, i32* %retval, align 4
  br label %return

if.end76:                                         ; preds = %if.else72
  br label %if.end77

if.end77:                                         ; preds = %if.end76, %if.then71
  br label %for.cond78

for.cond78:                                       ; preds = %for.inc111, %if.end77
  %65 = load i8**, i8*** %argv.addr, align 4
  %66 = load i8*, i8** %65, align 4
  %tobool79 = icmp ne i8* %66, null
  br i1 %tobool79, label %for.body80, label %for.end113

for.body80:                                       ; preds = %for.cond78
  %67 = load i8**, i8*** %argv.addr, align 4
  %68 = load i8*, i8** %67, align 4
  %call83 = call i32 @getsignum(i8* %68)
  store i32 %call83, i32* %sig, align 4
  %69 = load i32, i32* %sig, align 4
  %cmp84 = icmp eq i32 %69, -1
  br i1 %cmp84, label %if.then86, label %if.end87

if.then86:                                        ; preds = %for.body80
  %70 = load i8*, i8** %name.addr, align 4
  %71 = load i8**, i8*** %argv.addr, align 4
  %72 = load i8*, i8** %71, align 4
  call void (i8*, i8*, ...) @zwarnnam(i8* %70, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.154, i32 0, i32 0), i8* %72)
  br label %for.end113

if.end87:                                         ; preds = %for.body80
  %73 = load i8**, i8*** %argv.addr, align 4
  %74 = load i8*, i8** %73, align 4
  %75 = load i8, i8* %74, align 1
  %idxprom = zext i8 %75 to i32
  %arrayidx88 = getelementptr inbounds [256 x i16], [256 x i16]* @typtab, i32 0, i32 %idxprom
  %76 = load i16, i16* %arrayidx88, align 2
  %conv89 = sext i16 %76 to i32
  %and90 = and i32 %conv89, 1
  %tobool91 = icmp ne i32 %and90, 0
  br i1 %tobool91, label %if.then103, label %lor.lhs.false92

lor.lhs.false92:                                  ; preds = %if.end87
  %77 = load i32, i32* %sig, align 4
  %arrayidx93 = getelementptr inbounds [35 x i8*], [35 x i8*]* @sigs, i32 0, i32 %77
  %78 = load i8*, i8** %arrayidx93, align 4
  %79 = load i8**, i8*** %argv.addr, align 4
  %80 = load i8*, i8** %79, align 4
  %call94 = call i32 @strcmp(i8* %78, i8* %80)
  %tobool95 = icmp ne i32 %call94, 0
  br i1 %tobool95, label %lor.lhs.false96, label %if.then103

lor.lhs.false96:                                  ; preds = %lor.lhs.false92
  %81 = load i8**, i8*** %argv.addr, align 4
  %82 = load i8*, i8** %81, align 4
  %call97 = call i32 @strncmp(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.156, i32 0, i32 0), i8* %82, i32 3)
  %tobool98 = icmp ne i32 %call97, 0
  br i1 %tobool98, label %if.else104, label %land.lhs.true99

land.lhs.true99:                                  ; preds = %lor.lhs.false96
  %83 = load i32, i32* %sig, align 4
  %arrayidx100 = getelementptr inbounds [35 x i8*], [35 x i8*]* @sigs, i32 0, i32 %83
  %84 = load i8*, i8** %arrayidx100, align 4
  %85 = load i8**, i8*** %argv.addr, align 4
  %86 = load i8*, i8** %85, align 4
  %add.ptr = getelementptr inbounds i8, i8* %86, i32 3
  %call101 = call i32 @strcmp(i8* %84, i8* %add.ptr)
  %tobool102 = icmp ne i32 %call101, 0
  br i1 %tobool102, label %if.else104, label %if.then103

if.then103:                                       ; preds = %land.lhs.true99, %lor.lhs.false92, %if.end87
  store i32 0, i32* %flags, align 4
  br label %if.end105

if.else104:                                       ; preds = %land.lhs.true99, %lor.lhs.false96
  store i32 8, i32* %flags, align 4
  br label %if.end105

if.end105:                                        ; preds = %if.else104, %if.then103
  %87 = load %struct.eprog*, %struct.eprog** %prog, align 4
  %call106 = call %struct.eprog* @dupeprog(%struct.eprog* %87, i32 0)
  store %struct.eprog* %call106, %struct.eprog** %t, align 4
  %88 = load i32, i32* %sig, align 4
  %89 = load %struct.eprog*, %struct.eprog** %t, align 4
  %90 = load i32, i32* %flags, align 4
  %call107 = call i32 @settrap(i32 %88, %struct.eprog* %89, i32 %90)
  %tobool108 = icmp ne i32 %call107, 0
  br i1 %tobool108, label %if.then109, label %if.end110

if.then109:                                       ; preds = %if.end105
  %91 = load %struct.eprog*, %struct.eprog** %t, align 4
  call void @freeeprog(%struct.eprog* %91)
  br label %if.end110

if.end110:                                        ; preds = %if.then109, %if.end105
  br label %for.inc111

for.inc111:                                       ; preds = %if.end110
  %92 = load i8**, i8*** %argv.addr, align 4
  %incdec.ptr112 = getelementptr inbounds i8*, i8** %92, i32 1
  store i8** %incdec.ptr112, i8*** %argv.addr, align 4
  br label %for.cond78

for.end113:                                       ; preds = %if.then86, %for.cond78
  %93 = load i8**, i8*** %argv.addr, align 4
  %94 = load i8*, i8** %93, align 4
  %cmp114 = icmp ne i8* %94, null
  %conv115 = zext i1 %cmp114 to i32
  store i32 %conv115, i32* %retval, align 4
  br label %return

return:                                           ; preds = %for.end113, %if.then75, %if.end66, %do.end37
  %95 = load i32, i32* %retval, align 4
  ret i32 %95
}

declare %struct.hashnode* @gettrapnode(i32, i32) #1

declare i8* @getsigname(i32) #1

declare i8* @getpermtext(%struct.eprog*, i32*, i32) #1

declare void @unsettrap(i32) #1

declare %struct.eprog* @parse_string(i8*, i32) #1

declare %struct.eprog* @dupeprog(%struct.eprog*, i32) #1

; Function Attrs: noinline nounwind
define i32 @bin_ttyctl(i8* %name, i8** %argv, %struct.options* %ops, i32 %func) #0 {
entry:
  %name.addr = alloca i8*, align 4
  %argv.addr = alloca i8**, align 4
  %ops.addr = alloca %struct.options*, align 4
  %func.addr = alloca i32, align 4
  store i8* %name, i8** %name.addr, align 4
  store i8** %argv, i8*** %argv.addr, align 4
  store %struct.options* %ops, %struct.options** %ops.addr, align 4
  store i32 %func, i32* %func.addr, align 4
  %0 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind = getelementptr inbounds %struct.options, %struct.options* %0, i32 0, i32 0
  %arrayidx = getelementptr inbounds [128 x i8], [128 x i8]* %ind, i32 0, i32 102
  %1 = load i8, i8* %arrayidx, align 2
  %conv = zext i8 %1 to i32
  %cmp = icmp ne i32 %conv, 0
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  store i32 1, i32* @ttyfrozen, align 4
  br label %if.end9

if.else:                                          ; preds = %entry
  %2 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind2 = getelementptr inbounds %struct.options, %struct.options* %2, i32 0, i32 0
  %arrayidx3 = getelementptr inbounds [128 x i8], [128 x i8]* %ind2, i32 0, i32 117
  %3 = load i8, i8* %arrayidx3, align 1
  %conv4 = zext i8 %3 to i32
  %cmp5 = icmp ne i32 %conv4, 0
  br i1 %cmp5, label %if.then7, label %if.else8

if.then7:                                         ; preds = %if.else
  store i32 0, i32* @ttyfrozen, align 4
  br label %if.end

if.else8:                                         ; preds = %if.else
  %4 = load i32, i32* @ttyfrozen, align 4
  %tobool = icmp ne i32 %4, 0
  %cond = select i1 %tobool, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.34, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.158, i32 0, i32 0)
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.157, i32 0, i32 0), i8* %cond)
  br label %if.end

if.end:                                           ; preds = %if.else8, %if.then7
  br label %if.end9

if.end9:                                          ; preds = %if.end, %if.then
  ret i32 0
}

; Function Attrs: noinline nounwind
define i32 @bin_let(i8* %name, i8** %argv, %struct.options* %ops, i32 %func) #0 {
entry:
  %name.addr = alloca i8*, align 4
  %argv.addr = alloca i8**, align 4
  %ops.addr = alloca %struct.options*, align 4
  %func.addr = alloca i32, align 4
  %val = alloca %struct.mnumber, align 8
  %tmp = alloca %struct.mnumber, align 8
  store i8* %name, i8** %name.addr, align 4
  store i8** %argv, i8*** %argv.addr, align 4
  store %struct.options* %ops, %struct.options** %ops.addr, align 4
  store i32 %func, i32* %func.addr, align 4
  %0 = bitcast %struct.mnumber* %val to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %0, i8* bitcast (%struct.mnumber* @zero_mnumber to i8*), i32 16, i32 8, i1 false)
  br label %while.cond

while.cond:                                       ; preds = %while.body, %entry
  %1 = load i8**, i8*** %argv.addr, align 4
  %2 = load i8*, i8** %1, align 4
  %tobool = icmp ne i8* %2, null
  br i1 %tobool, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %3 = load i8**, i8*** %argv.addr, align 4
  %incdec.ptr = getelementptr inbounds i8*, i8** %3, i32 1
  store i8** %incdec.ptr, i8*** %argv.addr, align 4
  %4 = load i8*, i8** %3, align 4
  call void @matheval(%struct.mnumber* sret %tmp, i8* %4)
  %5 = bitcast %struct.mnumber* %val to i8*
  %6 = bitcast %struct.mnumber* %tmp to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %5, i8* %6, i32 16, i32 8, i1 false)
  br label %while.cond

while.end:                                        ; preds = %while.cond
  %7 = load i32, i32* @errflag, align 4
  %and = and i32 %7, -2
  store i32 %and, i32* @errflag, align 4
  %type = getelementptr inbounds %struct.mnumber, %struct.mnumber* %val, i32 0, i32 1
  %8 = load i32, i32* %type, align 8
  %cmp = icmp eq i32 %8, 1
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %while.end
  %u = getelementptr inbounds %struct.mnumber, %struct.mnumber* %val, i32 0, i32 0
  %l = bitcast %union.anon.2* %u to i32*
  %9 = load i32, i32* %l, align 8
  %cmp1 = icmp eq i32 %9, 0
  %conv = zext i1 %cmp1 to i32
  br label %cond.end

cond.false:                                       ; preds = %while.end
  %u2 = getelementptr inbounds %struct.mnumber, %struct.mnumber* %val, i32 0, i32 0
  %d = bitcast %union.anon.2* %u2 to double*
  %10 = load double, double* %d, align 8
  %cmp3 = fcmp oeq double %10, 0.000000e+00
  %conv4 = zext i1 %cmp3 to i32
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv, %cond.true ], [ %conv4, %cond.false ]
  ret i32 %cond
}

; Function Attrs: noinline nounwind
define i32 @bin_umask(i8* %nam, i8** %args, %struct.options* %ops, i32 %func) #0 {
entry:
  %retval = alloca i32, align 4
  %nam.addr = alloca i8*, align 4
  %args.addr = alloca i8**, align 4
  %ops.addr = alloca %struct.options*, align 4
  %func.addr = alloca i32, align 4
  %um = alloca i32, align 4
  %s = alloca i8*, align 4
  %who = alloca i8*, align 4
  %what = alloca i8*, align 4
  %whomask = alloca i32, align 4
  %umaskop = alloca i32, align 4
  %mask = alloca i32, align 4
  store i8* %nam, i8** %nam.addr, align 4
  store i8** %args, i8*** %args.addr, align 4
  store %struct.options* %ops, %struct.options** %ops.addr, align 4
  store i32 %func, i32* %func.addr, align 4
  %0 = load i8**, i8*** %args.addr, align 4
  %1 = load i8*, i8** %0, align 4
  store i8* %1, i8** %s, align 4
  %call = call i32 @umask(i32 0)
  store i32 %call, i32* %um, align 4
  %2 = load i32, i32* %um, align 4
  %call1 = call i32 @umask(i32 %2)
  %3 = load i8*, i8** %s, align 4
  %tobool = icmp ne i8* %3, null
  br i1 %tobool, label %if.end26, label %if.then

if.then:                                          ; preds = %entry
  %4 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind = getelementptr inbounds %struct.options, %struct.options* %4, i32 0, i32 0
  %arrayidx = getelementptr inbounds [128 x i8], [128 x i8]* %ind, i32 0, i32 83
  %5 = load i8, i8* %arrayidx, align 1
  %conv = zext i8 %5 to i32
  %cmp = icmp ne i32 %conv, 0
  br i1 %cmp, label %if.then3, label %if.else

if.then3:                                         ; preds = %if.then
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.159, i32 0, i32 0), i8** %who, align 4
  br label %while.cond

while.cond:                                       ; preds = %while.end, %if.then3
  %6 = load i8*, i8** %who, align 4
  %7 = load i8, i8* %6, align 1
  %tobool4 = icmp ne i8 %7, 0
  br i1 %tobool4, label %while.body, label %while.end18

while.body:                                       ; preds = %while.cond
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.160, i32 0, i32 0), i8** %what, align 4
  %8 = load i8*, i8** %who, align 4
  %incdec.ptr = getelementptr inbounds i8, i8* %8, i32 1
  store i8* %incdec.ptr, i8** %who, align 4
  %9 = load i8, i8* %8, align 1
  %conv5 = sext i8 %9 to i32
  %call6 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.161, i32 0, i32 0), i32 %conv5)
  br label %while.cond7

while.cond7:                                      ; preds = %if.end, %while.body
  %10 = load i8*, i8** %what, align 4
  %11 = load i8, i8* %10, align 1
  %tobool8 = icmp ne i8 %11, 0
  br i1 %tobool8, label %while.body9, label %while.end

while.body9:                                      ; preds = %while.cond7
  %12 = load i32, i32* %um, align 4
  %and = and i32 %12, 256
  %tobool10 = icmp ne i32 %and, 0
  br i1 %tobool10, label %if.end, label %if.then11

if.then11:                                        ; preds = %while.body9
  %13 = load i8*, i8** %what, align 4
  %14 = load i8, i8* %13, align 1
  %conv12 = sext i8 %14 to i32
  %call13 = call i32 @putchar(i32 %conv12)
  br label %if.end

if.end:                                           ; preds = %if.then11, %while.body9
  %15 = load i32, i32* %um, align 4
  %shl = shl i32 %15, 1
  store i32 %shl, i32* %um, align 4
  %16 = load i8*, i8** %what, align 4
  %incdec.ptr14 = getelementptr inbounds i8, i8* %16, i32 1
  store i8* %incdec.ptr14, i8** %what, align 4
  br label %while.cond7

while.end:                                        ; preds = %while.cond7
  %17 = load i8*, i8** %who, align 4
  %18 = load i8, i8* %17, align 1
  %conv15 = sext i8 %18 to i32
  %tobool16 = icmp ne i32 %conv15, 0
  %cond = select i1 %tobool16, i32 44, i32 10
  %call17 = call i32 @putchar(i32 %cond)
  br label %while.cond

while.end18:                                      ; preds = %while.cond
  br label %if.end25

if.else:                                          ; preds = %if.then
  %19 = load i32, i32* %um, align 4
  %and19 = and i32 %19, 448
  %tobool20 = icmp ne i32 %and19, 0
  br i1 %tobool20, label %if.then21, label %if.end23

if.then21:                                        ; preds = %if.else
  %call22 = call i32 @putchar(i32 48)
  br label %if.end23

if.end23:                                         ; preds = %if.then21, %if.else
  %20 = load i32, i32* %um, align 4
  %call24 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.162, i32 0, i32 0), i32 %20)
  br label %if.end25

if.end25:                                         ; preds = %if.end23, %while.end18
  store i32 0, i32* %retval, align 4
  br label %return

if.end26:                                         ; preds = %entry
  %21 = load i8*, i8** %s, align 4
  %22 = load i8, i8* %21, align 1
  %idxprom = zext i8 %22 to i32
  %arrayidx27 = getelementptr inbounds [256 x i16], [256 x i16]* @typtab, i32 0, i32 %idxprom
  %23 = load i16, i16* %arrayidx27, align 2
  %conv28 = sext i16 %23 to i32
  %and29 = and i32 %conv28, 1
  %tobool30 = icmp ne i32 %and29, 0
  br i1 %tobool30, label %if.then31, label %if.else36

if.then31:                                        ; preds = %if.end26
  %24 = load i8*, i8** %s, align 4
  %call32 = call i32 @zstrtol(i8* %24, i8** %s, i32 8)
  store i32 %call32, i32* %um, align 4
  %25 = load i8*, i8** %s, align 4
  %26 = load i8, i8* %25, align 1
  %tobool33 = icmp ne i8 %26, 0
  br i1 %tobool33, label %if.then34, label %if.end35

if.then34:                                        ; preds = %if.then31
  %27 = load i8*, i8** %nam.addr, align 4
  call void (i8*, i8*, ...) @zwarnnam(i8* %27, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.163, i32 0, i32 0))
  store i32 1, i32* %retval, align 4
  br label %return

if.end35:                                         ; preds = %if.then31
  br label %if.end161

if.else36:                                        ; preds = %if.end26
  br label %for.cond

for.cond:                                         ; preds = %if.end156, %if.else36
  store i32 0, i32* %whomask, align 4
  br label %while.cond37

while.cond37:                                     ; preds = %if.end81, %for.cond
  %28 = load i8*, i8** %s, align 4
  %29 = load i8, i8* %28, align 1
  %conv38 = sext i8 %29 to i32
  %cmp39 = icmp eq i32 %conv38, 117
  br i1 %cmp39, label %lor.end, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %while.cond37
  %30 = load i8*, i8** %s, align 4
  %31 = load i8, i8* %30, align 1
  %conv41 = sext i8 %31 to i32
  %cmp42 = icmp eq i32 %conv41, 103
  br i1 %cmp42, label %lor.end, label %lor.lhs.false44

lor.lhs.false44:                                  ; preds = %lor.lhs.false
  %32 = load i8*, i8** %s, align 4
  %33 = load i8, i8* %32, align 1
  %conv45 = sext i8 %33 to i32
  %cmp46 = icmp eq i32 %conv45, 111
  br i1 %cmp46, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %lor.lhs.false44
  %34 = load i8*, i8** %s, align 4
  %35 = load i8, i8* %34, align 1
  %conv48 = sext i8 %35 to i32
  %cmp49 = icmp eq i32 %conv48, 97
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false44, %lor.lhs.false, %while.cond37
  %36 = phi i1 [ true, %lor.lhs.false44 ], [ true, %lor.lhs.false ], [ true, %while.cond37 ], [ %cmp49, %lor.rhs ]
  br i1 %36, label %while.body51, label %while.end82

while.body51:                                     ; preds = %lor.end
  %37 = load i8*, i8** %s, align 4
  %38 = load i8, i8* %37, align 1
  %conv52 = sext i8 %38 to i32
  %cmp53 = icmp eq i32 %conv52, 117
  br i1 %cmp53, label %if.then55, label %if.else57

if.then55:                                        ; preds = %while.body51
  %39 = load i8*, i8** %s, align 4
  %incdec.ptr56 = getelementptr inbounds i8, i8* %39, i32 1
  store i8* %incdec.ptr56, i8** %s, align 4
  %40 = load i32, i32* %whomask, align 4
  %or = or i32 %40, 448
  store i32 %or, i32* %whomask, align 4
  br label %if.end81

if.else57:                                        ; preds = %while.body51
  %41 = load i8*, i8** %s, align 4
  %42 = load i8, i8* %41, align 1
  %conv58 = sext i8 %42 to i32
  %cmp59 = icmp eq i32 %conv58, 103
  br i1 %cmp59, label %if.then61, label %if.else64

if.then61:                                        ; preds = %if.else57
  %43 = load i8*, i8** %s, align 4
  %incdec.ptr62 = getelementptr inbounds i8, i8* %43, i32 1
  store i8* %incdec.ptr62, i8** %s, align 4
  %44 = load i32, i32* %whomask, align 4
  %or63 = or i32 %44, 56
  store i32 %or63, i32* %whomask, align 4
  br label %if.end80

if.else64:                                        ; preds = %if.else57
  %45 = load i8*, i8** %s, align 4
  %46 = load i8, i8* %45, align 1
  %conv65 = sext i8 %46 to i32
  %cmp66 = icmp eq i32 %conv65, 111
  br i1 %cmp66, label %if.then68, label %if.else71

if.then68:                                        ; preds = %if.else64
  %47 = load i8*, i8** %s, align 4
  %incdec.ptr69 = getelementptr inbounds i8, i8* %47, i32 1
  store i8* %incdec.ptr69, i8** %s, align 4
  %48 = load i32, i32* %whomask, align 4
  %or70 = or i32 %48, 7
  store i32 %or70, i32* %whomask, align 4
  br label %if.end79

if.else71:                                        ; preds = %if.else64
  %49 = load i8*, i8** %s, align 4
  %50 = load i8, i8* %49, align 1
  %conv72 = sext i8 %50 to i32
  %cmp73 = icmp eq i32 %conv72, 97
  br i1 %cmp73, label %if.then75, label %if.end78

if.then75:                                        ; preds = %if.else71
  %51 = load i8*, i8** %s, align 4
  %incdec.ptr76 = getelementptr inbounds i8, i8* %51, i32 1
  store i8* %incdec.ptr76, i8** %s, align 4
  %52 = load i32, i32* %whomask, align 4
  %or77 = or i32 %52, 511
  store i32 %or77, i32* %whomask, align 4
  br label %if.end78

if.end78:                                         ; preds = %if.then75, %if.else71
  br label %if.end79

if.end79:                                         ; preds = %if.end78, %if.then68
  br label %if.end80

if.end80:                                         ; preds = %if.end79, %if.then61
  br label %if.end81

if.end81:                                         ; preds = %if.end80, %if.then55
  br label %while.cond37

while.end82:                                      ; preds = %lor.end
  %53 = load i32, i32* %whomask, align 4
  %tobool83 = icmp ne i32 %53, 0
  br i1 %tobool83, label %if.end85, label %if.then84

if.then84:                                        ; preds = %while.end82
  store i32 511, i32* %whomask, align 4
  br label %if.end85

if.end85:                                         ; preds = %if.then84, %while.end82
  %54 = load i8*, i8** %s, align 4
  %55 = load i8, i8* %54, align 1
  %conv86 = sext i8 %55 to i32
  store i32 %conv86, i32* %umaskop, align 4
  %56 = load i32, i32* %umaskop, align 4
  %cmp87 = icmp eq i32 %56, 43
  br i1 %cmp87, label %if.end100, label %lor.lhs.false89

lor.lhs.false89:                                  ; preds = %if.end85
  %57 = load i32, i32* %umaskop, align 4
  %cmp90 = icmp eq i32 %57, 45
  br i1 %cmp90, label %if.end100, label %lor.lhs.false92

lor.lhs.false92:                                  ; preds = %lor.lhs.false89
  %58 = load i32, i32* %umaskop, align 4
  %cmp93 = icmp eq i32 %58, 61
  br i1 %cmp93, label %if.end100, label %if.then95

if.then95:                                        ; preds = %lor.lhs.false92
  %59 = load i32, i32* %umaskop, align 4
  %tobool96 = icmp ne i32 %59, 0
  br i1 %tobool96, label %if.then97, label %if.else98

if.then97:                                        ; preds = %if.then95
  %60 = load i8*, i8** %nam.addr, align 4
  %61 = load i32, i32* %umaskop, align 4
  call void (i8*, i8*, ...) @zwarnnam(i8* %60, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.164, i32 0, i32 0), i32 %61)
  br label %if.end99

if.else98:                                        ; preds = %if.then95
  %62 = load i8*, i8** %nam.addr, align 4
  call void (i8*, i8*, ...) @zwarnnam(i8* %62, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.163, i32 0, i32 0))
  br label %if.end99

if.end99:                                         ; preds = %if.else98, %if.then97
  store i32 1, i32* %retval, align 4
  br label %return

if.end100:                                        ; preds = %lor.lhs.false92, %lor.lhs.false89, %if.end85
  store i32 0, i32* %mask, align 4
  br label %while.cond101

while.cond101:                                    ; preds = %if.end133, %if.end100
  %63 = load i8*, i8** %s, align 4
  %incdec.ptr102 = getelementptr inbounds i8, i8* %63, i32 1
  store i8* %incdec.ptr102, i8** %s, align 4
  %64 = load i8, i8* %incdec.ptr102, align 1
  %conv103 = sext i8 %64 to i32
  %tobool104 = icmp ne i32 %conv103, 0
  br i1 %tobool104, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %while.cond101
  %65 = load i8*, i8** %s, align 4
  %66 = load i8, i8* %65, align 1
  %conv105 = sext i8 %66 to i32
  %cmp106 = icmp ne i32 %conv105, 44
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond101
  %67 = phi i1 [ false, %while.cond101 ], [ %cmp106, %land.rhs ]
  br i1 %67, label %while.body108, label %while.end134

while.body108:                                    ; preds = %land.end
  %68 = load i8*, i8** %s, align 4
  %69 = load i8, i8* %68, align 1
  %conv109 = sext i8 %69 to i32
  %cmp110 = icmp eq i32 %conv109, 114
  br i1 %cmp110, label %if.then112, label %if.else115

if.then112:                                       ; preds = %while.body108
  %70 = load i32, i32* %whomask, align 4
  %and113 = and i32 292, %70
  %71 = load i32, i32* %mask, align 4
  %or114 = or i32 %71, %and113
  store i32 %or114, i32* %mask, align 4
  br label %if.end133

if.else115:                                       ; preds = %while.body108
  %72 = load i8*, i8** %s, align 4
  %73 = load i8, i8* %72, align 1
  %conv116 = sext i8 %73 to i32
  %cmp117 = icmp eq i32 %conv116, 119
  br i1 %cmp117, label %if.then119, label %if.else122

if.then119:                                       ; preds = %if.else115
  %74 = load i32, i32* %whomask, align 4
  %and120 = and i32 146, %74
  %75 = load i32, i32* %mask, align 4
  %or121 = or i32 %75, %and120
  store i32 %or121, i32* %mask, align 4
  br label %if.end132

if.else122:                                       ; preds = %if.else115
  %76 = load i8*, i8** %s, align 4
  %77 = load i8, i8* %76, align 1
  %conv123 = sext i8 %77 to i32
  %cmp124 = icmp eq i32 %conv123, 120
  br i1 %cmp124, label %if.then126, label %if.else129

if.then126:                                       ; preds = %if.else122
  %78 = load i32, i32* %whomask, align 4
  %and127 = and i32 73, %78
  %79 = load i32, i32* %mask, align 4
  %or128 = or i32 %79, %and127
  store i32 %or128, i32* %mask, align 4
  br label %if.end131

if.else129:                                       ; preds = %if.else122
  %80 = load i8*, i8** %nam.addr, align 4
  %81 = load i8*, i8** %s, align 4
  %82 = load i8, i8* %81, align 1
  %conv130 = sext i8 %82 to i32
  call void (i8*, i8*, ...) @zwarnnam(i8* %80, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.165, i32 0, i32 0), i32 %conv130)
  store i32 1, i32* %retval, align 4
  br label %return

if.end131:                                        ; preds = %if.then126
  br label %if.end132

if.end132:                                        ; preds = %if.end131, %if.then119
  br label %if.end133

if.end133:                                        ; preds = %if.end132, %if.then112
  br label %while.cond101

while.end134:                                     ; preds = %land.end
  %83 = load i32, i32* %umaskop, align 4
  %cmp135 = icmp eq i32 %83, 43
  br i1 %cmp135, label %if.then137, label %if.else139

if.then137:                                       ; preds = %while.end134
  %84 = load i32, i32* %mask, align 4
  %neg = xor i32 %84, -1
  %85 = load i32, i32* %um, align 4
  %and138 = and i32 %85, %neg
  store i32 %and138, i32* %um, align 4
  br label %if.end149

if.else139:                                       ; preds = %while.end134
  %86 = load i32, i32* %umaskop, align 4
  %cmp140 = icmp eq i32 %86, 45
  br i1 %cmp140, label %if.then142, label %if.else144

if.then142:                                       ; preds = %if.else139
  %87 = load i32, i32* %mask, align 4
  %88 = load i32, i32* %um, align 4
  %or143 = or i32 %88, %87
  store i32 %or143, i32* %um, align 4
  br label %if.end148

if.else144:                                       ; preds = %if.else139
  %89 = load i32, i32* %um, align 4
  %90 = load i32, i32* %whomask, align 4
  %or145 = or i32 %89, %90
  %91 = load i32, i32* %mask, align 4
  %neg146 = xor i32 %91, -1
  %and147 = and i32 %or145, %neg146
  store i32 %and147, i32* %um, align 4
  br label %if.end148

if.end148:                                        ; preds = %if.else144, %if.then142
  br label %if.end149

if.end149:                                        ; preds = %if.end148, %if.then137
  %92 = load i8*, i8** %s, align 4
  %93 = load i8, i8* %92, align 1
  %conv150 = sext i8 %93 to i32
  %cmp151 = icmp eq i32 %conv150, 44
  br i1 %cmp151, label %if.then153, label %if.else155

if.then153:                                       ; preds = %if.end149
  %94 = load i8*, i8** %s, align 4
  %incdec.ptr154 = getelementptr inbounds i8, i8* %94, i32 1
  store i8* %incdec.ptr154, i8** %s, align 4
  br label %if.end156

if.else155:                                       ; preds = %if.end149
  br label %for.end

if.end156:                                        ; preds = %if.then153
  br label %for.cond

for.end:                                          ; preds = %if.else155
  %95 = load i8*, i8** %s, align 4
  %96 = load i8, i8* %95, align 1
  %tobool157 = icmp ne i8 %96, 0
  br i1 %tobool157, label %if.then158, label %if.end160

if.then158:                                       ; preds = %for.end
  %97 = load i8*, i8** %nam.addr, align 4
  %98 = load i8*, i8** %s, align 4
  %99 = load i8, i8* %98, align 1
  %conv159 = sext i8 %99 to i32
  call void (i8*, i8*, ...) @zwarnnam(i8* %97, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.166, i32 0, i32 0), i32 %conv159)
  store i32 1, i32* %retval, align 4
  br label %return

if.end160:                                        ; preds = %for.end
  br label %if.end161

if.end161:                                        ; preds = %if.end160, %if.end35
  %100 = load i32, i32* %um, align 4
  %call162 = call i32 @umask(i32 %100)
  store i32 0, i32* %retval, align 4
  br label %return

return:                                           ; preds = %if.end161, %if.then158, %if.else129, %if.end99, %if.then34, %if.end25
  %101 = load i32, i32* %retval, align 4
  ret i32 %101
}

declare i32 @umask(i32) #1

; Function Attrs: noinline nounwind
define i32 @bin_notavail(i8* %nam, i8** %argv, %struct.options* %ops, i32 %func) #0 {
entry:
  %nam.addr = alloca i8*, align 4
  %argv.addr = alloca i8**, align 4
  %ops.addr = alloca %struct.options*, align 4
  %func.addr = alloca i32, align 4
  store i8* %nam, i8** %nam.addr, align 4
  store i8** %argv, i8*** %argv.addr, align 4
  store %struct.options* %ops, %struct.options** %ops.addr, align 4
  store i32 %func, i32* %func.addr, align 4
  %0 = load i8*, i8** %nam.addr, align 4
  call void (i8*, i8*, ...) @zwarnnam(i8* %0, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.167, i32 0, i32 0))
  ret i32 1
}

declare i32 @bin_fg(i8*, i8**, %struct.options*, i32) #1

declare i32 @bin_kill(i8*, i8**, %struct.options*, i32) #1

declare i32 @bin_log(i8*, i8**, %struct.options*, i32) #1

declare i32 @bin_setopt(i8*, i8**, %struct.options*, i32) #1

declare i32 @bin_suspend(i8*, i8**, %struct.options*, i32) #1

declare i32 @bin_zmodload(i8*, i8**, %struct.options*, i32) #1

declare i32 @bin_zcompile(i8*, i8**, %struct.options*, i32) #1

declare i32 @strspn(i8*, i8*) #1

declare i8* @strstr(i8*, i8*) #1

declare i8* @strncpy(i8*, i8*, i32) #1

declare i8* @strcpy(i8*, i8*) #1

declare i8* @strcat(i8*, i8*) #1

; Function Attrs: noinline nounwind
define internal i8* @cd_do_chdir(i8* %cnam, i8* %dest, i32 %hard) #0 {
entry:
  %retval = alloca i8*, align 4
  %cnam.addr = alloca i8*, align 4
  %dest.addr = alloca i8*, align 4
  %hard.addr = alloca i32, align 4
  %pp = alloca i8**, align 4
  %ret = alloca i8*, align 4
  %hasdot = alloca i32, align 4
  %eno = alloca i32, align 4
  %nocdpath = alloca i32, align 4
  store i8* %cnam, i8** %cnam.addr, align 4
  store i8* %dest, i8** %dest.addr, align 4
  store i32 %hard, i32* %hard.addr, align 4
  store i32 0, i32* %hasdot, align 4
  store i32 2, i32* %eno, align 4
  %0 = load i8*, i8** %dest.addr, align 4
  %arrayidx = getelementptr inbounds i8, i8* %0, i32 0
  %1 = load i8, i8* %arrayidx, align 1
  %conv = sext i8 %1 to i32
  %cmp = icmp eq i32 %conv, 46
  br i1 %cmp, label %land.rhs, label %land.end20

land.rhs:                                         ; preds = %entry
  %2 = load i8*, i8** %dest.addr, align 4
  %arrayidx2 = getelementptr inbounds i8, i8* %2, i32 1
  %3 = load i8, i8* %arrayidx2, align 1
  %conv3 = sext i8 %3 to i32
  %cmp4 = icmp eq i32 %conv3, 47
  br i1 %cmp4, label %lor.end19, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.rhs
  %4 = load i8*, i8** %dest.addr, align 4
  %arrayidx6 = getelementptr inbounds i8, i8* %4, i32 1
  %5 = load i8, i8* %arrayidx6, align 1
  %tobool = icmp ne i8 %5, 0
  br i1 %tobool, label %lor.rhs, label %lor.end19

lor.rhs:                                          ; preds = %lor.lhs.false
  %6 = load i8*, i8** %dest.addr, align 4
  %arrayidx7 = getelementptr inbounds i8, i8* %6, i32 1
  %7 = load i8, i8* %arrayidx7, align 1
  %conv8 = sext i8 %7 to i32
  %cmp9 = icmp eq i32 %conv8, 46
  br i1 %cmp9, label %land.rhs11, label %land.end

land.rhs11:                                       ; preds = %lor.rhs
  %8 = load i8*, i8** %dest.addr, align 4
  %arrayidx12 = getelementptr inbounds i8, i8* %8, i32 2
  %9 = load i8, i8* %arrayidx12, align 1
  %conv13 = sext i8 %9 to i32
  %cmp14 = icmp eq i32 %conv13, 47
  br i1 %cmp14, label %lor.end, label %lor.rhs16

lor.rhs16:                                        ; preds = %land.rhs11
  %10 = load i8*, i8** %dest.addr, align 4
  %arrayidx17 = getelementptr inbounds i8, i8* %10, i32 2
  %11 = load i8, i8* %arrayidx17, align 1
  %tobool18 = icmp ne i8 %11, 0
  %lnot = xor i1 %tobool18, true
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs16, %land.rhs11
  %12 = phi i1 [ true, %land.rhs11 ], [ %lnot, %lor.rhs16 ]
  br label %land.end

land.end:                                         ; preds = %lor.end, %lor.rhs
  %13 = phi i1 [ false, %lor.rhs ], [ %12, %lor.end ]
  br label %lor.end19

lor.end19:                                        ; preds = %land.end, %lor.lhs.false, %land.rhs
  %14 = phi i1 [ true, %lor.lhs.false ], [ true, %land.rhs ], [ %13, %land.end ]
  br label %land.end20

land.end20:                                       ; preds = %lor.end19, %entry
  %15 = phi i1 [ false, %entry ], [ %14, %lor.end19 ]
  %land.ext = zext i1 %15 to i32
  store i32 %land.ext, i32* %nocdpath, align 4
  %16 = load i8*, i8** %dest.addr, align 4
  %17 = load i8, i8* %16, align 1
  %conv21 = sext i8 %17 to i32
  %cmp22 = icmp eq i32 %conv21, 47
  br i1 %cmp22, label %if.then, label %if.end27

if.then:                                          ; preds = %land.end20
  %18 = load i8*, i8** %dest.addr, align 4
  %19 = load i32, i32* %hard.addr, align 4
  %call = call i8* @cd_try_chdir(i8* null, i8* %18, i32 %19)
  store i8* %call, i8** %ret, align 4
  %tobool24 = icmp ne i8* %call, null
  br i1 %tobool24, label %if.then25, label %if.end

if.then25:                                        ; preds = %if.then
  %20 = load i8*, i8** %ret, align 4
  store i8* %20, i8** %retval, align 4
  br label %return

if.end:                                           ; preds = %if.then
  %21 = load i8*, i8** %cnam.addr, align 4
  %call26 = call i32* @__errno_location()
  %22 = load i32, i32* %call26, align 4
  %23 = load i8*, i8** %dest.addr, align 4
  call void (i8*, i8*, ...) @zwarnnam(i8* %21, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.48, i32 0, i32 0), i32 %22, i8* %23)
  store i8* null, i8** %retval, align 4
  br label %return

if.end27:                                         ; preds = %land.end20
  %24 = load i32, i32* %nocdpath, align 4
  %tobool28 = icmp ne i32 %24, 0
  br i1 %tobool28, label %if.end46, label %land.lhs.true

land.lhs.true:                                    ; preds = %if.end27
  %25 = load i8, i8* getelementptr inbounds ([181 x i8], [181 x i8]* @opts, i32 0, i32 133), align 1
  %tobool29 = icmp ne i8 %25, 0
  br i1 %tobool29, label %if.end46, label %if.then30

if.then30:                                        ; preds = %land.lhs.true
  %26 = load i8**, i8*** @cdpath, align 4
  store i8** %26, i8*** %pp, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then30
  %27 = load i8**, i8*** %pp, align 4
  %28 = load i8*, i8** %27, align 4
  %tobool31 = icmp ne i8* %28, null
  br i1 %tobool31, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %29 = load i8**, i8*** %pp, align 4
  %30 = load i8*, i8** %29, align 4
  %arrayidx32 = getelementptr inbounds i8, i8* %30, i32 0
  %31 = load i8, i8* %arrayidx32, align 1
  %tobool33 = icmp ne i8 %31, 0
  br i1 %tobool33, label %lor.lhs.false34, label %if.then44

lor.lhs.false34:                                  ; preds = %for.body
  %32 = load i8**, i8*** %pp, align 4
  %33 = load i8*, i8** %32, align 4
  %arrayidx35 = getelementptr inbounds i8, i8* %33, i32 0
  %34 = load i8, i8* %arrayidx35, align 1
  %conv36 = sext i8 %34 to i32
  %cmp37 = icmp eq i32 %conv36, 46
  br i1 %cmp37, label %land.lhs.true39, label %if.end45

land.lhs.true39:                                  ; preds = %lor.lhs.false34
  %35 = load i8**, i8*** %pp, align 4
  %36 = load i8*, i8** %35, align 4
  %arrayidx40 = getelementptr inbounds i8, i8* %36, i32 1
  %37 = load i8, i8* %arrayidx40, align 1
  %conv41 = sext i8 %37 to i32
  %cmp42 = icmp eq i32 %conv41, 0
  br i1 %cmp42, label %if.then44, label %if.end45

if.then44:                                        ; preds = %land.lhs.true39, %for.body
  store i32 1, i32* %hasdot, align 4
  br label %if.end45

if.end45:                                         ; preds = %if.then44, %land.lhs.true39, %lor.lhs.false34
  br label %for.inc

for.inc:                                          ; preds = %if.end45
  %38 = load i8**, i8*** %pp, align 4
  %incdec.ptr = getelementptr inbounds i8*, i8** %38, i32 1
  store i8** %incdec.ptr, i8*** %pp, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  br label %if.end46

if.end46:                                         ; preds = %for.end, %land.lhs.true, %if.end27
  %39 = load i32, i32* %hasdot, align 4
  %tobool47 = icmp ne i32 %39, 0
  br i1 %tobool47, label %if.end61, label %land.lhs.true48

land.lhs.true48:                                  ; preds = %if.end46
  %40 = load i8, i8* getelementptr inbounds ([181 x i8], [181 x i8]* @opts, i32 0, i32 133), align 1
  %tobool49 = icmp ne i8 %40, 0
  br i1 %tobool49, label %if.end61, label %if.then50

if.then50:                                        ; preds = %land.lhs.true48
  %41 = load i8*, i8** %dest.addr, align 4
  %42 = load i32, i32* %hard.addr, align 4
  %call51 = call i8* @cd_try_chdir(i8* null, i8* %41, i32 %42)
  store i8* %call51, i8** %ret, align 4
  %tobool52 = icmp ne i8* %call51, null
  br i1 %tobool52, label %if.then53, label %if.end54

if.then53:                                        ; preds = %if.then50
  %43 = load i8*, i8** %ret, align 4
  store i8* %43, i8** %retval, align 4
  br label %return

if.end54:                                         ; preds = %if.then50
  %call55 = call i32* @__errno_location()
  %44 = load i32, i32* %call55, align 4
  %cmp56 = icmp ne i32 %44, 2
  br i1 %cmp56, label %if.then58, label %if.end60

if.then58:                                        ; preds = %if.end54
  %call59 = call i32* @__errno_location()
  %45 = load i32, i32* %call59, align 4
  store i32 %45, i32* %eno, align 4
  br label %if.end60

if.end60:                                         ; preds = %if.then58, %if.end54
  br label %if.end61

if.end61:                                         ; preds = %if.end60, %land.lhs.true48, %if.end46
  %46 = load i32, i32* %nocdpath, align 4
  %tobool62 = icmp ne i32 %46, 0
  br i1 %tobool62, label %if.end91, label %if.then63

if.then63:                                        ; preds = %if.end61
  %47 = load i8**, i8*** @cdpath, align 4
  store i8** %47, i8*** %pp, align 4
  br label %for.cond64

for.cond64:                                       ; preds = %for.inc88, %if.then63
  %48 = load i8**, i8*** %pp, align 4
  %49 = load i8*, i8** %48, align 4
  %tobool65 = icmp ne i8* %49, null
  br i1 %tobool65, label %for.body66, label %for.end90

for.body66:                                       ; preds = %for.cond64
  %50 = load i8**, i8*** %pp, align 4
  %51 = load i8*, i8** %50, align 4
  %52 = load i8*, i8** %dest.addr, align 4
  %53 = load i32, i32* %hard.addr, align 4
  %call67 = call i8* @cd_try_chdir(i8* %51, i8* %52, i32 %53)
  store i8* %call67, i8** %ret, align 4
  %tobool68 = icmp ne i8* %call67, null
  br i1 %tobool68, label %if.then69, label %if.end81

if.then69:                                        ; preds = %for.body66
  %54 = load i8, i8* getelementptr inbounds ([181 x i8], [181 x i8]* @opts, i32 0, i32 133), align 1
  %tobool70 = icmp ne i8 %54, 0
  br i1 %tobool70, label %if.then71, label %if.else

if.then71:                                        ; preds = %if.then69
  %55 = load i8**, i8*** %pp, align 4
  %56 = load i8*, i8** %55, align 4
  %57 = load i8, i8* %56, align 1
  %tobool72 = icmp ne i8 %57, 0
  br i1 %tobool72, label %if.then73, label %if.end74

if.then73:                                        ; preds = %if.then71
  %58 = load i32, i32* @doprintdir, align 4
  %inc = add nsw i32 %58, 1
  store i32 %inc, i32* @doprintdir, align 4
  br label %if.end74

if.end74:                                         ; preds = %if.then73, %if.then71
  br label %if.end80

if.else:                                          ; preds = %if.then69
  %59 = load i8**, i8*** %pp, align 4
  %60 = load i8*, i8** %59, align 4
  %call75 = call i32 @strcmp(i8* %60, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.29, i32 0, i32 0))
  %tobool76 = icmp ne i32 %call75, 0
  br i1 %tobool76, label %if.then77, label %if.end79

if.then77:                                        ; preds = %if.else
  %61 = load i32, i32* @doprintdir, align 4
  %inc78 = add nsw i32 %61, 1
  store i32 %inc78, i32* @doprintdir, align 4
  br label %if.end79

if.end79:                                         ; preds = %if.then77, %if.else
  br label %if.end80

if.end80:                                         ; preds = %if.end79, %if.end74
  %62 = load i8*, i8** %ret, align 4
  store i8* %62, i8** %retval, align 4
  br label %return

if.end81:                                         ; preds = %for.body66
  %call82 = call i32* @__errno_location()
  %63 = load i32, i32* %call82, align 4
  %cmp83 = icmp ne i32 %63, 2
  br i1 %cmp83, label %if.then85, label %if.end87

if.then85:                                        ; preds = %if.end81
  %call86 = call i32* @__errno_location()
  %64 = load i32, i32* %call86, align 4
  store i32 %64, i32* %eno, align 4
  br label %if.end87

if.end87:                                         ; preds = %if.then85, %if.end81
  br label %for.inc88

for.inc88:                                        ; preds = %if.end87
  %65 = load i8**, i8*** %pp, align 4
  %incdec.ptr89 = getelementptr inbounds i8*, i8** %65, i32 1
  store i8** %incdec.ptr89, i8*** %pp, align 4
  br label %for.cond64

for.end90:                                        ; preds = %for.cond64
  br label %if.end91

if.end91:                                         ; preds = %for.end90, %if.end61
  %66 = load i8, i8* getelementptr inbounds ([181 x i8], [181 x i8]* @opts, i32 0, i32 133), align 1
  %tobool92 = icmp ne i8 %66, 0
  br i1 %tobool92, label %if.then93, label %if.end104

if.then93:                                        ; preds = %if.end91
  %67 = load i8*, i8** %dest.addr, align 4
  %68 = load i32, i32* %hard.addr, align 4
  %call94 = call i8* @cd_try_chdir(i8* null, i8* %67, i32 %68)
  store i8* %call94, i8** %ret, align 4
  %tobool95 = icmp ne i8* %call94, null
  br i1 %tobool95, label %if.then96, label %if.end97

if.then96:                                        ; preds = %if.then93
  %69 = load i8*, i8** %ret, align 4
  store i8* %69, i8** %retval, align 4
  br label %return

if.end97:                                         ; preds = %if.then93
  %call98 = call i32* @__errno_location()
  %70 = load i32, i32* %call98, align 4
  %cmp99 = icmp ne i32 %70, 2
  br i1 %cmp99, label %if.then101, label %if.end103

if.then101:                                       ; preds = %if.end97
  %call102 = call i32* @__errno_location()
  %71 = load i32, i32* %call102, align 4
  store i32 %71, i32* %eno, align 4
  br label %if.end103

if.end103:                                        ; preds = %if.then101, %if.end97
  br label %if.end104

if.end104:                                        ; preds = %if.end103, %if.end91
  %72 = load i8*, i8** %dest.addr, align 4
  %call105 = call i8* @cd_able_vars(i8* %72)
  store i8* %call105, i8** %ret, align 4
  %tobool106 = icmp ne i8* %call105, null
  br i1 %tobool106, label %if.then107, label %if.end119

if.then107:                                       ; preds = %if.end104
  %73 = load i8*, i8** %ret, align 4
  %74 = load i32, i32* %hard.addr, align 4
  %call108 = call i8* @cd_try_chdir(i8* null, i8* %73, i32 %74)
  store i8* %call108, i8** %ret, align 4
  %tobool109 = icmp ne i8* %call108, null
  br i1 %tobool109, label %if.then110, label %if.end112

if.then110:                                       ; preds = %if.then107
  %75 = load i32, i32* @doprintdir, align 4
  %inc111 = add nsw i32 %75, 1
  store i32 %inc111, i32* @doprintdir, align 4
  %76 = load i8*, i8** %ret, align 4
  store i8* %76, i8** %retval, align 4
  br label %return

if.end112:                                        ; preds = %if.then107
  %call113 = call i32* @__errno_location()
  %77 = load i32, i32* %call113, align 4
  %cmp114 = icmp ne i32 %77, 2
  br i1 %cmp114, label %if.then116, label %if.end118

if.then116:                                       ; preds = %if.end112
  %call117 = call i32* @__errno_location()
  %78 = load i32, i32* %call117, align 4
  store i32 %78, i32* %eno, align 4
  br label %if.end118

if.end118:                                        ; preds = %if.then116, %if.end112
  br label %if.end119

if.end119:                                        ; preds = %if.end118, %if.end104
  %79 = load i8*, i8** %cnam.addr, align 4
  %80 = load i32, i32* %eno, align 4
  %81 = load i8*, i8** %dest.addr, align 4
  call void (i8*, i8*, ...) @zwarnnam(i8* %79, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.48, i32 0, i32 0), i32 %80, i8* %81)
  store i8* null, i8** %retval, align 4
  br label %return

return:                                           ; preds = %if.end119, %if.then110, %if.then96, %if.end80, %if.then53, %if.end, %if.then25
  %82 = load i8*, i8** %retval, align 4
  ret i8* %82
}

declare i8* @remnode(%union.linkroot*, %struct.linknode*) #1

; Function Attrs: noinline nounwind
define internal i8* @cd_try_chdir(i8* %pfix, i8* %dest, i32 %hard) #0 {
entry:
  %retval = alloca i8*, align 4
  %pfix.addr = alloca i8*, align 4
  %dest.addr = alloca i8*, align 4
  %hard.addr = alloca i32, align 4
  %buf = alloca i8*, align 4
  %dlen = alloca i32, align 4
  %dochaselinks = alloca i32, align 4
  %pfl = alloca i32, align 4
  store i8* %pfix, i8** %pfix.addr, align 4
  store i8* %dest, i8** %dest.addr, align 4
  store i32 %hard, i32* %hard.addr, align 4
  store i32 0, i32* %dochaselinks, align 4
  %0 = load i8*, i8** %pfix.addr, align 4
  %tobool = icmp ne i8* %0, null
  br i1 %tobool, label %land.lhs.true, label %if.else32

land.lhs.true:                                    ; preds = %entry
  %1 = load i8*, i8** %pfix.addr, align 4
  %2 = load i8, i8* %1, align 1
  %conv = sext i8 %2 to i32
  %tobool1 = icmp ne i32 %conv, 0
  br i1 %tobool1, label %if.then, label %if.else32

if.then:                                          ; preds = %land.lhs.true
  %3 = load i8*, i8** %pfix.addr, align 4
  %4 = load i8, i8* %3, align 1
  %conv2 = sext i8 %4 to i32
  %cmp = icmp eq i32 %conv2, 47
  br i1 %cmp, label %if.then4, label %if.else

if.then4:                                         ; preds = %if.then
  %5 = load i8*, i8** %pfix.addr, align 4
  %6 = load i8*, i8** %dest.addr, align 4
  %call = call i8* @tricat(i8* %5, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.76, i32 0, i32 0), i8* %6)
  store i8* %call, i8** %buf, align 4
  br label %if.end31

if.else:                                          ; preds = %if.then
  %7 = load i8*, i8** %pfix.addr, align 4
  %call5 = call i32 @strlen(i8* %7)
  store i32 %call5, i32* %pfl, align 4
  %8 = load i8*, i8** @pwd, align 4
  %call6 = call i32 @strlen(i8* %8)
  store i32 %call6, i32* %dlen, align 4
  %9 = load i32, i32* %dlen, align 4
  %cmp7 = icmp eq i32 %9, 1
  br i1 %cmp7, label %land.lhs.true9, label %if.end

land.lhs.true9:                                   ; preds = %if.else
  %10 = load i8*, i8** @pwd, align 4
  %11 = load i8, i8* %10, align 1
  %conv10 = sext i8 %11 to i32
  %cmp11 = icmp eq i32 %conv10, 47
  br i1 %cmp11, label %if.then13, label %if.end

if.then13:                                        ; preds = %land.lhs.true9
  store i32 0, i32* %dlen, align 4
  br label %if.end

if.end:                                           ; preds = %if.then13, %land.lhs.true9, %if.else
  %12 = load i32, i32* %dlen, align 4
  %13 = load i32, i32* %pfl, align 4
  %add = add nsw i32 %12, %13
  %14 = load i8*, i8** %dest.addr, align 4
  %call14 = call i32 @strlen(i8* %14)
  %add15 = add i32 %add, %call14
  %add16 = add i32 %add15, 3
  %call17 = call i8* @zalloc(i32 %add16)
  store i8* %call17, i8** %buf, align 4
  %15 = load i32, i32* %dlen, align 4
  %tobool18 = icmp ne i32 %15, 0
  br i1 %tobool18, label %if.then19, label %if.end21

if.then19:                                        ; preds = %if.end
  %16 = load i8*, i8** %buf, align 4
  %17 = load i8*, i8** @pwd, align 4
  %call20 = call i8* @strcpy(i8* %16, i8* %17)
  br label %if.end21

if.end21:                                         ; preds = %if.then19, %if.end
  %18 = load i8*, i8** %buf, align 4
  %19 = load i32, i32* %dlen, align 4
  %arrayidx = getelementptr inbounds i8, i8* %18, i32 %19
  store i8 47, i8* %arrayidx, align 1
  %20 = load i8*, i8** %buf, align 4
  %21 = load i32, i32* %dlen, align 4
  %add.ptr = getelementptr inbounds i8, i8* %20, i32 %21
  %add.ptr22 = getelementptr inbounds i8, i8* %add.ptr, i32 1
  %22 = load i8*, i8** %pfix.addr, align 4
  %call23 = call i8* @strcpy(i8* %add.ptr22, i8* %22)
  %23 = load i8*, i8** %buf, align 4
  %24 = load i32, i32* %dlen, align 4
  %add24 = add nsw i32 %24, 1
  %25 = load i32, i32* %pfl, align 4
  %add25 = add nsw i32 %add24, %25
  %arrayidx26 = getelementptr inbounds i8, i8* %23, i32 %add25
  store i8 47, i8* %arrayidx26, align 1
  %26 = load i8*, i8** %buf, align 4
  %27 = load i32, i32* %dlen, align 4
  %add.ptr27 = getelementptr inbounds i8, i8* %26, i32 %27
  %28 = load i32, i32* %pfl, align 4
  %add.ptr28 = getelementptr inbounds i8, i8* %add.ptr27, i32 %28
  %add.ptr29 = getelementptr inbounds i8, i8* %add.ptr28, i32 2
  %29 = load i8*, i8** %dest.addr, align 4
  %call30 = call i8* @strcpy(i8* %add.ptr29, i8* %29)
  br label %if.end31

if.end31:                                         ; preds = %if.end21, %if.then4
  br label %if.end56

if.else32:                                        ; preds = %land.lhs.true, %entry
  %30 = load i8*, i8** %dest.addr, align 4
  %31 = load i8, i8* %30, align 1
  %conv33 = sext i8 %31 to i32
  %cmp34 = icmp eq i32 %conv33, 47
  br i1 %cmp34, label %if.then36, label %if.else38

if.then36:                                        ; preds = %if.else32
  %32 = load i8*, i8** %dest.addr, align 4
  %call37 = call i8* @ztrdup(i8* %32)
  store i8* %call37, i8** %buf, align 4
  br label %if.end55

if.else38:                                        ; preds = %if.else32
  %33 = load i8*, i8** @pwd, align 4
  %call39 = call i32 @strlen(i8* %33)
  store i32 %call39, i32* %dlen, align 4
  %34 = load i8*, i8** @pwd, align 4
  %35 = load i32, i32* %dlen, align 4
  %sub = sub nsw i32 %35, 1
  %arrayidx40 = getelementptr inbounds i8, i8* %34, i32 %sub
  %36 = load i8, i8* %arrayidx40, align 1
  %conv41 = sext i8 %36 to i32
  %cmp42 = icmp eq i32 %conv41, 47
  br i1 %cmp42, label %if.then44, label %if.end45

if.then44:                                        ; preds = %if.else38
  %37 = load i32, i32* %dlen, align 4
  %dec = add nsw i32 %37, -1
  store i32 %dec, i32* %dlen, align 4
  br label %if.end45

if.end45:                                         ; preds = %if.then44, %if.else38
  %38 = load i32, i32* %dlen, align 4
  %39 = load i8*, i8** %dest.addr, align 4
  %call46 = call i32 @strlen(i8* %39)
  %add47 = add i32 %38, %call46
  %add48 = add i32 %add47, 2
  %call49 = call i8* @zalloc(i32 %add48)
  store i8* %call49, i8** %buf, align 4
  %40 = load i8*, i8** %buf, align 4
  %41 = load i8*, i8** @pwd, align 4
  %call50 = call i8* @strcpy(i8* %40, i8* %41)
  %42 = load i8*, i8** %buf, align 4
  %43 = load i32, i32* %dlen, align 4
  %arrayidx51 = getelementptr inbounds i8, i8* %42, i32 %43
  store i8 47, i8* %arrayidx51, align 1
  %44 = load i8*, i8** %buf, align 4
  %45 = load i32, i32* %dlen, align 4
  %add.ptr52 = getelementptr inbounds i8, i8* %44, i32 %45
  %add.ptr53 = getelementptr inbounds i8, i8* %add.ptr52, i32 1
  %46 = load i8*, i8** %dest.addr, align 4
  %call54 = call i8* @strcpy(i8* %add.ptr53, i8* %46)
  br label %if.end55

if.end55:                                         ; preds = %if.end45, %if.then36
  br label %if.end56

if.end56:                                         ; preds = %if.end55, %if.end31
  %47 = load i32, i32* @chasinglinks, align 4
  %tobool57 = icmp ne i32 %47, 0
  br i1 %tobool57, label %if.else60, label %if.then58

if.then58:                                        ; preds = %if.end56
  %48 = load i8*, i8** %buf, align 4
  %call59 = call i32 @fixdir(i8* %48)
  store i32 %call59, i32* %dochaselinks, align 4
  br label %if.end62

if.else60:                                        ; preds = %if.end56
  %49 = load i8*, i8** %buf, align 4
  %call61 = call i8* @unmetafy(i8* %49, i32* %dlen)
  br label %if.end62

if.end62:                                         ; preds = %if.else60, %if.then58
  %50 = load i8*, i8** %buf, align 4
  %51 = load i32, i32* %hard.addr, align 4
  %call63 = call i32 @lchdir(i8* %50, %struct.dirsav* null, i32 %51)
  %tobool64 = icmp ne i32 %call63, 0
  br i1 %tobool64, label %land.lhs.true65, label %if.end75

land.lhs.true65:                                  ; preds = %if.end62
  %52 = load i8*, i8** %pfix.addr, align 4
  %tobool66 = icmp ne i8* %52, null
  br i1 %tobool66, label %if.then74, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true65
  %53 = load i8*, i8** %dest.addr, align 4
  %54 = load i8, i8* %53, align 1
  %conv67 = sext i8 %54 to i32
  %cmp68 = icmp eq i32 %conv67, 47
  br i1 %cmp68, label %if.then74, label %lor.lhs.false70

lor.lhs.false70:                                  ; preds = %lor.lhs.false
  %55 = load i8*, i8** %dest.addr, align 4
  %call71 = call i8* @unmeta(i8* %55)
  %56 = load i32, i32* %hard.addr, align 4
  %call72 = call i32 @lchdir(i8* %call71, %struct.dirsav* null, i32 %56)
  %tobool73 = icmp ne i32 %call72, 0
  br i1 %tobool73, label %if.then74, label %if.end75

if.then74:                                        ; preds = %lor.lhs.false70, %lor.lhs.false, %land.lhs.true65
  %57 = load i8*, i8** %buf, align 4
  call void @free(i8* %57)
  store i8* null, i8** %retval, align 4
  br label %return

if.end75:                                         ; preds = %lor.lhs.false70, %if.end62
  %58 = load i32, i32* %dochaselinks, align 4
  %tobool76 = icmp ne i32 %58, 0
  br i1 %tobool76, label %if.then77, label %if.end78

if.then77:                                        ; preds = %if.end75
  store i32 1, i32* @chasinglinks, align 4
  br label %if.end78

if.end78:                                         ; preds = %if.then77, %if.end75
  %59 = load i8*, i8** %buf, align 4
  %call79 = call i8* @metafy(i8* %59, i32 -1, i32 5)
  store i8* %call79, i8** %retval, align 4
  br label %return

return:                                           ; preds = %if.end78, %if.then74
  %60 = load i8*, i8** %retval, align 4
  ret i8* %60
}

declare i8* @tricat(i8*, i8*, i8*) #1

declare i32 @lchdir(i8*, %struct.dirsav*, i32) #1

declare void @rolllist(%union.linkroot*, %struct.linknode*) #1

declare i8* @findpwd(i8*) #1

; Function Attrs: noinline nounwind
define internal void @printdirstack() #0 {
entry:
  %node = alloca %struct.linknode*, align 4
  %0 = load i8*, i8** @pwd, align 4
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 4
  call void @fprintdir(i8* %0, %struct._IO_FILE* %1)
  %2 = load %union.linkroot*, %union.linkroot** @dirstack, align 4
  %list = bitcast %union.linkroot* %2 to %struct.linklist*
  %first = getelementptr inbounds %struct.linklist, %struct.linklist* %list, i32 0, i32 0
  %3 = load %struct.linknode*, %struct.linknode** %first, align 4
  store %struct.linknode* %3, %struct.linknode** %node, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %4 = load %struct.linknode*, %struct.linknode** %node, align 4
  %tobool = icmp ne %struct.linknode* %4, null
  br i1 %tobool, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %call = call i32 @putchar(i32 32)
  %5 = load %struct.linknode*, %struct.linknode** %node, align 4
  %dat = getelementptr inbounds %struct.linknode, %struct.linknode* %5, i32 0, i32 2
  %6 = load i8*, i8** %dat, align 4
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 4
  call void @fprintdir(i8* %6, %struct._IO_FILE* %7)
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %8 = load %struct.linknode*, %struct.linknode** %node, align 4
  %next = getelementptr inbounds %struct.linknode, %struct.linknode* %8, i32 0, i32 0
  %9 = load %struct.linknode*, %struct.linknode** %next, align 4
  store %struct.linknode* %9, %struct.linknode** %node, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call1 = call i32 @putchar(i32 10)
  ret void
}

declare i32 @getiparam(i8*) #1

declare i32 @atoi(i8*) #1

declare i32 @hcomsearch(i8*) #1

declare %struct.histent* @gethistent(i32, i32) #1

declare void @convbase(i8*, i32, i32) #1

; Function Attrs: noinline nounwind
define internal i32 @fcsubs(i8** %sp, %struct.asgment* %sub) #0 {
entry:
  %sp.addr = alloca i8**, align 4
  %sub.addr = alloca %struct.asgment*, align 4
  %oldstr = alloca i8*, align 4
  %newstr = alloca i8*, align 4
  %oldpos = alloca i8*, align 4
  %newpos = alloca i8*, align 4
  %newmem = alloca i8*, align 4
  %s = alloca i8*, align 4
  %subbed = alloca i32, align 4
  store i8** %sp, i8*** %sp.addr, align 4
  store %struct.asgment* %sub, %struct.asgment** %sub.addr, align 4
  %0 = load i8**, i8*** %sp.addr, align 4
  %1 = load i8*, i8** %0, align 4
  store i8* %1, i8** %s, align 4
  store i32 0, i32* %subbed, align 4
  br label %while.cond

while.cond:                                       ; preds = %while.end, %entry
  %2 = load %struct.asgment*, %struct.asgment** %sub.addr, align 4
  %tobool = icmp ne %struct.asgment* %2, null
  br i1 %tobool, label %while.body, label %while.end19

while.body:                                       ; preds = %while.cond
  %3 = load %struct.asgment*, %struct.asgment** %sub.addr, align 4
  %name = getelementptr inbounds %struct.asgment, %struct.asgment* %3, i32 0, i32 1
  %4 = load i8*, i8** %name, align 4
  store i8* %4, i8** %oldstr, align 4
  %5 = load %struct.asgment*, %struct.asgment** %sub.addr, align 4
  %value = getelementptr inbounds %struct.asgment, %struct.asgment* %5, i32 0, i32 3
  %scalar = bitcast %union.anon* %value to i8**
  %6 = load i8*, i8** %scalar, align 4
  store i8* %6, i8** %newstr, align 4
  %7 = load %struct.asgment*, %struct.asgment** %sub.addr, align 4
  %node = getelementptr inbounds %struct.asgment, %struct.asgment* %7, i32 0, i32 0
  %next = getelementptr inbounds %struct.linknode, %struct.linknode* %node, i32 0, i32 0
  %8 = load %struct.linknode*, %struct.linknode** %next, align 4
  %9 = bitcast %struct.linknode* %8 to %struct.asgment*
  store %struct.asgment* %9, %struct.asgment** %sub.addr, align 4
  %10 = load i8*, i8** %s, align 4
  store i8* %10, i8** %oldpos, align 4
  br label %while.cond1

while.cond1:                                      ; preds = %while.body3, %while.body
  %11 = load i8*, i8** %oldpos, align 4
  %12 = load i8*, i8** %oldstr, align 4
  %call = call i8* @strstr(i8* %11, i8* %12)
  store i8* %call, i8** %newpos, align 4
  %tobool2 = icmp ne i8* %call, null
  br i1 %tobool2, label %while.body3, label %while.end

while.body3:                                      ; preds = %while.cond1
  %13 = load i8*, i8** %newpos, align 4
  %14 = load i8*, i8** %s, align 4
  %sub.ptr.lhs.cast = ptrtoint i8* %13 to i32
  %sub.ptr.rhs.cast = ptrtoint i8* %14 to i32
  %sub.ptr.sub = sub i32 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %add = add nsw i32 1, %sub.ptr.sub
  %15 = load i8*, i8** %newstr, align 4
  %call4 = call i32 @strlen(i8* %15)
  %add5 = add i32 %add, %call4
  %16 = load i8*, i8** %newpos, align 4
  %17 = load i8*, i8** %oldstr, align 4
  %call6 = call i32 @strlen(i8* %17)
  %add.ptr = getelementptr inbounds i8, i8* %16, i32 %call6
  %call7 = call i32 @strlen(i8* %add.ptr)
  %add8 = add i32 %add5, %call7
  %call9 = call i8* @zhalloc(i32 %add8)
  store i8* %call9, i8** %newmem, align 4
  %18 = load i8*, i8** %newmem, align 4
  %19 = load i8*, i8** %s, align 4
  %20 = load i8*, i8** %newpos, align 4
  %21 = load i8*, i8** %s, align 4
  %sub.ptr.lhs.cast10 = ptrtoint i8* %20 to i32
  %sub.ptr.rhs.cast11 = ptrtoint i8* %21 to i32
  %sub.ptr.sub12 = sub i32 %sub.ptr.lhs.cast10, %sub.ptr.rhs.cast11
  call void @ztrncpy(i8* %18, i8* %19, i32 %sub.ptr.sub12)
  %22 = load i8*, i8** %newmem, align 4
  %23 = load i8*, i8** %newstr, align 4
  %call13 = call i8* @strcat(i8* %22, i8* %23)
  %24 = load i8*, i8** %newmem, align 4
  %25 = load i8*, i8** %newmem, align 4
  %call14 = call i32 @strlen(i8* %25)
  %add.ptr15 = getelementptr inbounds i8, i8* %24, i32 %call14
  store i8* %add.ptr15, i8** %oldpos, align 4
  %26 = load i8*, i8** %newmem, align 4
  %27 = load i8*, i8** %newpos, align 4
  %28 = load i8*, i8** %oldstr, align 4
  %call16 = call i32 @strlen(i8* %28)
  %add.ptr17 = getelementptr inbounds i8, i8* %27, i32 %call16
  %call18 = call i8* @strcat(i8* %26, i8* %add.ptr17)
  %29 = load i8*, i8** %newmem, align 4
  store i8* %29, i8** %s, align 4
  store i32 1, i32* %subbed, align 4
  br label %while.cond1

while.end:                                        ; preds = %while.cond1
  br label %while.cond

while.end19:                                      ; preds = %while.cond
  %30 = load i8*, i8** %s, align 4
  %31 = load i8**, i8*** %sp.addr, align 4
  store i8* %30, i8** %31, align 4
  %32 = load i32, i32* %subbed, align 4
  ret i32 %32
}

declare %struct.tm* @localtime(i32*) #1

declare i32 @ztrftime(i8*, i32, i8*, %struct.tm*, i32) #1

declare i32 @mb_niceformat(i8*, %struct._IO_FILE*, i8**, i32) #1

declare %struct.histent* @down_histent(%struct.histent*) #1

declare %struct.histent* @up_histent(%struct.histent*) #1

declare void @ztrncpy(i8*, i8*, i32) #1

declare void @execstring(i8*, i32, i32, i8*) #1

declare i8* @uremnode(%union.linkroot*, %struct.linknode*) #1

declare void @zerr(i8*, ...) #1

declare i32 @setsecondstype(%struct.param*, i32, i32) #1

declare void @uniqarray(i8**) #1

declare i8* @zheapptr(i8*) #1

declare void @arrfixenv(i8*, i8**) #1

; Function Attrs: noinline nounwind
define internal i32 @typeset_setwidth(i8* %name, %struct.param* %pm, %struct.options* %ops, i32 %on, i32 %always) #0 {
entry:
  %retval = alloca i32, align 4
  %name.addr = alloca i8*, align 4
  %pm.addr = alloca %struct.param*, align 4
  %ops.addr = alloca %struct.options*, align 4
  %on.addr = alloca i32, align 4
  %always.addr = alloca i32, align 4
  %arg = alloca i8*, align 4
  %eptr = alloca i8*, align 4
  store i8* %name, i8** %name.addr, align 4
  store %struct.param* %pm, %struct.param** %pm.addr, align 4
  store %struct.options* %ops, %struct.options** %ops.addr, align 4
  store i32 %on, i32* %on.addr, align 4
  store i32 %always, i32* %always.addr, align 4
  store i8* null, i8** %arg, align 4
  %0 = load i32, i32* %on.addr, align 4
  %and = and i32 %0, 32
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %land.lhs.true, label %if.else

land.lhs.true:                                    ; preds = %entry
  %1 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind = getelementptr inbounds %struct.options, %struct.options* %1, i32 0, i32 0
  %arrayidx = getelementptr inbounds [128 x i8], [128 x i8]* %ind, i32 0, i32 76
  %2 = load i8, i8* %arrayidx, align 4
  %conv = zext i8 %2 to i32
  %cmp = icmp sgt i32 %conv, 3
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %land.lhs.true
  %3 = load %struct.options*, %struct.options** %ops.addr, align 4
  %args = getelementptr inbounds %struct.options, %struct.options* %3, i32 0, i32 1
  %4 = load i8**, i8*** %args, align 4
  %5 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind2 = getelementptr inbounds %struct.options, %struct.options* %5, i32 0, i32 0
  %arrayidx3 = getelementptr inbounds [128 x i8], [128 x i8]* %ind2, i32 0, i32 76
  %6 = load i8, i8* %arrayidx3, align 4
  %conv4 = zext i8 %6 to i32
  %shr = ashr i32 %conv4, 2
  %sub = sub nsw i32 %shr, 1
  %arrayidx5 = getelementptr inbounds i8*, i8** %4, i32 %sub
  %7 = load i8*, i8** %arrayidx5, align 4
  store i8* %7, i8** %arg, align 4
  br label %if.end40

if.else:                                          ; preds = %land.lhs.true, %entry
  %8 = load i32, i32* %on.addr, align 4
  %and6 = and i32 %8, 64
  %tobool7 = icmp ne i32 %and6, 0
  br i1 %tobool7, label %land.lhs.true8, label %if.else22

land.lhs.true8:                                   ; preds = %if.else
  %9 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind9 = getelementptr inbounds %struct.options, %struct.options* %9, i32 0, i32 0
  %arrayidx10 = getelementptr inbounds [128 x i8], [128 x i8]* %ind9, i32 0, i32 82
  %10 = load i8, i8* %arrayidx10, align 2
  %conv11 = zext i8 %10 to i32
  %cmp12 = icmp sgt i32 %conv11, 3
  br i1 %cmp12, label %if.then14, label %if.else22

if.then14:                                        ; preds = %land.lhs.true8
  %11 = load %struct.options*, %struct.options** %ops.addr, align 4
  %args15 = getelementptr inbounds %struct.options, %struct.options* %11, i32 0, i32 1
  %12 = load i8**, i8*** %args15, align 4
  %13 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind16 = getelementptr inbounds %struct.options, %struct.options* %13, i32 0, i32 0
  %arrayidx17 = getelementptr inbounds [128 x i8], [128 x i8]* %ind16, i32 0, i32 82
  %14 = load i8, i8* %arrayidx17, align 2
  %conv18 = zext i8 %14 to i32
  %shr19 = ashr i32 %conv18, 2
  %sub20 = sub nsw i32 %shr19, 1
  %arrayidx21 = getelementptr inbounds i8*, i8** %12, i32 %sub20
  %15 = load i8*, i8** %arrayidx21, align 4
  store i8* %15, i8** %arg, align 4
  br label %if.end39

if.else22:                                        ; preds = %land.lhs.true8, %if.else
  %16 = load i32, i32* %on.addr, align 4
  %and23 = and i32 %16, 128
  %tobool24 = icmp ne i32 %and23, 0
  br i1 %tobool24, label %land.lhs.true25, label %if.end

land.lhs.true25:                                  ; preds = %if.else22
  %17 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind26 = getelementptr inbounds %struct.options, %struct.options* %17, i32 0, i32 0
  %arrayidx27 = getelementptr inbounds [128 x i8], [128 x i8]* %ind26, i32 0, i32 90
  %18 = load i8, i8* %arrayidx27, align 2
  %conv28 = zext i8 %18 to i32
  %cmp29 = icmp sgt i32 %conv28, 3
  br i1 %cmp29, label %if.then31, label %if.end

if.then31:                                        ; preds = %land.lhs.true25
  %19 = load %struct.options*, %struct.options** %ops.addr, align 4
  %args32 = getelementptr inbounds %struct.options, %struct.options* %19, i32 0, i32 1
  %20 = load i8**, i8*** %args32, align 4
  %21 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind33 = getelementptr inbounds %struct.options, %struct.options* %21, i32 0, i32 0
  %arrayidx34 = getelementptr inbounds [128 x i8], [128 x i8]* %ind33, i32 0, i32 90
  %22 = load i8, i8* %arrayidx34, align 2
  %conv35 = zext i8 %22 to i32
  %shr36 = ashr i32 %conv35, 2
  %sub37 = sub nsw i32 %shr36, 1
  %arrayidx38 = getelementptr inbounds i8*, i8** %20, i32 %sub37
  %23 = load i8*, i8** %arrayidx38, align 4
  store i8* %23, i8** %arg, align 4
  br label %if.end

if.end:                                           ; preds = %if.then31, %land.lhs.true25, %if.else22
  br label %if.end39

if.end39:                                         ; preds = %if.end, %if.then14
  br label %if.end40

if.end40:                                         ; preds = %if.end39, %if.then
  %24 = load i8*, i8** %arg, align 4
  %tobool41 = icmp ne i8* %24, null
  br i1 %tobool41, label %if.then42, label %if.else46

if.then42:                                        ; preds = %if.end40
  %25 = load i8*, i8** %arg, align 4
  %call = call i32 @zstrtol(i8* %25, i8** %eptr, i32 10)
  %26 = load %struct.param*, %struct.param** %pm.addr, align 4
  %width = getelementptr inbounds %struct.param, %struct.param* %26, i32 0, i32 4
  store i32 %call, i32* %width, align 8
  %27 = load i8*, i8** %eptr, align 4
  %28 = load i8, i8* %27, align 1
  %tobool43 = icmp ne i8 %28, 0
  br i1 %tobool43, label %if.then44, label %if.end45

if.then44:                                        ; preds = %if.then42
  %29 = load i8*, i8** %name.addr, align 4
  %30 = load i8*, i8** %arg, align 4
  call void (i8*, i8*, ...) @zwarnnam(i8* %29, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.328, i32 0, i32 0), i8* %30)
  store i32 1, i32* %retval, align 4
  br label %return

if.end45:                                         ; preds = %if.then42
  br label %if.end51

if.else46:                                        ; preds = %if.end40
  %31 = load i32, i32* %always.addr, align 4
  %tobool47 = icmp ne i32 %31, 0
  br i1 %tobool47, label %if.then48, label %if.end50

if.then48:                                        ; preds = %if.else46
  %32 = load %struct.param*, %struct.param** %pm.addr, align 4
  %width49 = getelementptr inbounds %struct.param, %struct.param* %32, i32 0, i32 4
  store i32 0, i32* %width49, align 8
  br label %if.end50

if.end50:                                         ; preds = %if.then48, %if.else46
  br label %if.end51

if.end51:                                         ; preds = %if.end50, %if.end45
  store i32 0, i32* %retval, align 4
  br label %return

return:                                           ; preds = %if.end51, %if.then44
  %33 = load i32, i32* %retval, align 4
  ret i32 %33
}

; Function Attrs: noinline nounwind
define internal i32 @typeset_setbase(i8* %name, %struct.param* %pm, %struct.options* %ops, i32 %on, i32 %always) #0 {
entry:
  %retval = alloca i32, align 4
  %name.addr = alloca i8*, align 4
  %pm.addr = alloca %struct.param*, align 4
  %ops.addr = alloca %struct.options*, align 4
  %on.addr = alloca i32, align 4
  %always.addr = alloca i32, align 4
  %arg = alloca i8*, align 4
  %eptr = alloca i8*, align 4
  %base = alloca i32, align 4
  store i8* %name, i8** %name.addr, align 4
  store %struct.param* %pm, %struct.param** %pm.addr, align 4
  store %struct.options* %ops, %struct.options** %ops.addr, align 4
  store i32 %on, i32* %on.addr, align 4
  store i32 %always, i32* %always.addr, align 4
  store i8* null, i8** %arg, align 4
  %0 = load i32, i32* %on.addr, align 4
  %and = and i32 %0, 2
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %land.lhs.true, label %if.else

land.lhs.true:                                    ; preds = %entry
  %1 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind = getelementptr inbounds %struct.options, %struct.options* %1, i32 0, i32 0
  %arrayidx = getelementptr inbounds [128 x i8], [128 x i8]* %ind, i32 0, i32 105
  %2 = load i8, i8* %arrayidx, align 1
  %conv = zext i8 %2 to i32
  %cmp = icmp sgt i32 %conv, 3
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %land.lhs.true
  %3 = load %struct.options*, %struct.options** %ops.addr, align 4
  %args = getelementptr inbounds %struct.options, %struct.options* %3, i32 0, i32 1
  %4 = load i8**, i8*** %args, align 4
  %5 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind2 = getelementptr inbounds %struct.options, %struct.options* %5, i32 0, i32 0
  %arrayidx3 = getelementptr inbounds [128 x i8], [128 x i8]* %ind2, i32 0, i32 105
  %6 = load i8, i8* %arrayidx3, align 1
  %conv4 = zext i8 %6 to i32
  %shr = ashr i32 %conv4, 2
  %sub = sub nsw i32 %shr, 1
  %arrayidx5 = getelementptr inbounds i8*, i8** %4, i32 %sub
  %7 = load i8*, i8** %arrayidx5, align 4
  store i8* %7, i8** %arg, align 4
  br label %if.end40

if.else:                                          ; preds = %land.lhs.true, %entry
  %8 = load i32, i32* %on.addr, align 4
  %and6 = and i32 %8, 4
  %tobool7 = icmp ne i32 %and6, 0
  br i1 %tobool7, label %land.lhs.true8, label %if.else22

land.lhs.true8:                                   ; preds = %if.else
  %9 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind9 = getelementptr inbounds %struct.options, %struct.options* %9, i32 0, i32 0
  %arrayidx10 = getelementptr inbounds [128 x i8], [128 x i8]* %ind9, i32 0, i32 69
  %10 = load i8, i8* %arrayidx10, align 1
  %conv11 = zext i8 %10 to i32
  %cmp12 = icmp sgt i32 %conv11, 3
  br i1 %cmp12, label %if.then14, label %if.else22

if.then14:                                        ; preds = %land.lhs.true8
  %11 = load %struct.options*, %struct.options** %ops.addr, align 4
  %args15 = getelementptr inbounds %struct.options, %struct.options* %11, i32 0, i32 1
  %12 = load i8**, i8*** %args15, align 4
  %13 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind16 = getelementptr inbounds %struct.options, %struct.options* %13, i32 0, i32 0
  %arrayidx17 = getelementptr inbounds [128 x i8], [128 x i8]* %ind16, i32 0, i32 69
  %14 = load i8, i8* %arrayidx17, align 1
  %conv18 = zext i8 %14 to i32
  %shr19 = ashr i32 %conv18, 2
  %sub20 = sub nsw i32 %shr19, 1
  %arrayidx21 = getelementptr inbounds i8*, i8** %12, i32 %sub20
  %15 = load i8*, i8** %arrayidx21, align 4
  store i8* %15, i8** %arg, align 4
  br label %if.end39

if.else22:                                        ; preds = %land.lhs.true8, %if.else
  %16 = load i32, i32* %on.addr, align 4
  %and23 = and i32 %16, 8
  %tobool24 = icmp ne i32 %and23, 0
  br i1 %tobool24, label %land.lhs.true25, label %if.end

land.lhs.true25:                                  ; preds = %if.else22
  %17 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind26 = getelementptr inbounds %struct.options, %struct.options* %17, i32 0, i32 0
  %arrayidx27 = getelementptr inbounds [128 x i8], [128 x i8]* %ind26, i32 0, i32 70
  %18 = load i8, i8* %arrayidx27, align 2
  %conv28 = zext i8 %18 to i32
  %cmp29 = icmp sgt i32 %conv28, 3
  br i1 %cmp29, label %if.then31, label %if.end

if.then31:                                        ; preds = %land.lhs.true25
  %19 = load %struct.options*, %struct.options** %ops.addr, align 4
  %args32 = getelementptr inbounds %struct.options, %struct.options* %19, i32 0, i32 1
  %20 = load i8**, i8*** %args32, align 4
  %21 = load %struct.options*, %struct.options** %ops.addr, align 4
  %ind33 = getelementptr inbounds %struct.options, %struct.options* %21, i32 0, i32 0
  %arrayidx34 = getelementptr inbounds [128 x i8], [128 x i8]* %ind33, i32 0, i32 70
  %22 = load i8, i8* %arrayidx34, align 2
  %conv35 = zext i8 %22 to i32
  %shr36 = ashr i32 %conv35, 2
  %sub37 = sub nsw i32 %shr36, 1
  %arrayidx38 = getelementptr inbounds i8*, i8** %20, i32 %sub37
  %23 = load i8*, i8** %arrayidx38, align 4
  store i8* %23, i8** %arg, align 4
  br label %if.end

if.end:                                           ; preds = %if.then31, %land.lhs.true25, %if.else22
  br label %if.end39

if.end39:                                         ; preds = %if.end, %if.then14
  br label %if.end40

if.end40:                                         ; preds = %if.end39, %if.then
  %24 = load i8*, i8** %arg, align 4
  %tobool41 = icmp ne i8* %24, null
  br i1 %tobool41, label %if.then42, label %if.else61

if.then42:                                        ; preds = %if.end40
  %25 = load i8*, i8** %arg, align 4
  %call = call i32 @zstrtol(i8* %25, i8** %eptr, i32 10)
  store i32 %call, i32* %base, align 4
  %26 = load i8*, i8** %eptr, align 4
  %27 = load i8, i8* %26, align 1
  %tobool43 = icmp ne i8 %27, 0
  br i1 %tobool43, label %if.then44, label %if.end50

if.then44:                                        ; preds = %if.then42
  %28 = load i32, i32* %on.addr, align 4
  %and45 = and i32 %28, 2
  %tobool46 = icmp ne i32 %and45, 0
  br i1 %tobool46, label %if.then47, label %if.else48

if.then47:                                        ; preds = %if.then44
  %29 = load i8*, i8** %name.addr, align 4
  %30 = load i8*, i8** %arg, align 4
  call void (i8*, i8*, ...) @zwarnnam(i8* %29, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.329, i32 0, i32 0), i8* %30)
  br label %if.end49

if.else48:                                        ; preds = %if.then44
  %31 = load i8*, i8** %name.addr, align 4
  %32 = load i8*, i8** %arg, align 4
  call void (i8*, i8*, ...) @zwarnnam(i8* %31, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.330, i32 0, i32 0), i8* %32)
  br label %if.end49

if.end49:                                         ; preds = %if.else48, %if.then47
  store i32 1, i32* %retval, align 4
  br label %return

if.end50:                                         ; preds = %if.then42
  %33 = load i32, i32* %on.addr, align 4
  %and51 = and i32 %33, 2
  %tobool52 = icmp ne i32 %and51, 0
  br i1 %tobool52, label %land.lhs.true53, label %if.end59

land.lhs.true53:                                  ; preds = %if.end50
  %34 = load i32, i32* %base, align 4
  %cmp54 = icmp slt i32 %34, 2
  br i1 %cmp54, label %if.then58, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true53
  %35 = load i32, i32* %base, align 4
  %cmp56 = icmp sgt i32 %35, 36
  br i1 %cmp56, label %if.then58, label %if.end59

if.then58:                                        ; preds = %lor.lhs.false, %land.lhs.true53
  %36 = load i8*, i8** %name.addr, align 4
  %37 = load i32, i32* %base, align 4
  call void (i8*, i8*, ...) @zwarnnam(i8* %36, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.331, i32 0, i32 0), i32 %37)
  store i32 1, i32* %retval, align 4
  br label %return

if.end59:                                         ; preds = %lor.lhs.false, %if.end50
  %38 = load i32, i32* %base, align 4
  %39 = load %struct.param*, %struct.param** %pm.addr, align 4
  %base60 = getelementptr inbounds %struct.param, %struct.param* %39, i32 0, i32 3
  store i32 %38, i32* %base60, align 4
  br label %if.end66

if.else61:                                        ; preds = %if.end40
  %40 = load i32, i32* %always.addr, align 4
  %tobool62 = icmp ne i32 %40, 0
  br i1 %tobool62, label %if.then63, label %if.end65

if.then63:                                        ; preds = %if.else61
  %41 = load %struct.param*, %struct.param** %pm.addr, align 4
  %base64 = getelementptr inbounds %struct.param, %struct.param* %41, i32 0, i32 3
  store i32 0, i32* %base64, align 4
  br label %if.end65

if.end65:                                         ; preds = %if.then63, %if.else61
  br label %if.end66

if.end66:                                         ; preds = %if.end65, %if.end59
  store i32 0, i32* %retval, align 4
  br label %return

return:                                           ; preds = %if.end66, %if.then58, %if.end49
  %42 = load i32, i32* %retval, align 4
  ret i32 %42
}

declare void @delenv(%struct.param*) #1

declare i8** @mkarray(i8*) #1

declare void @copyparam(%struct.param*, %struct.param*, i32) #1

declare double @getrawseconds() #1

declare %struct.param* @createparam(i8*, i32) #1

declare %struct.hashtable* @newparamtable(i32, i8*) #1

declare i8* @tiedarrgetfn(%struct.param*) #1

declare void @tiedarrsetfn(%struct.param*, i8*) #1

declare void @tiedarrunsetfn(%struct.param*, i32) #1

declare %struct.eprog* @getfpfunc(i8*, i32*, i8**, i8**, i32) #1

declare i8* @xsymlink(i8*, i32) #1

declare void @execode(%struct.eprog*, i32, i32, i8*) #1

declare i32 @setblock_stdin() #1

attributes #0 = { noinline nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readonly }
attributes #6 = { noreturn }

!llvm.ident = !{!0}

!0 = !{!"clang version 4.0.0  (emscripten 1.37.22 : 1.37.22)"}
