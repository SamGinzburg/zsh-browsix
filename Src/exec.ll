; ModuleID = 'exec.c'
source_filename = "exec.c"
target datalayout = "e-p:32:32-i64:64-v128:32:128-n32-S128"
target triple = "asmjs-unknown-emscripten"

%struct.rlimit = type { i64, i64 }
%struct.hashtable = type { i32, i32, %struct.hashnode**, i8*, i32 (i8*)*, void (%struct.hashtable*)*, void (%struct.hashtable*)*, i32 (i8*, i8*)*, void (%struct.hashtable*, i8*, i8*)*, %struct.hashnode* (%struct.hashtable*, i8*)*, %struct.hashnode* (%struct.hashtable*, i8*)*, %struct.hashnode* (%struct.hashtable*, i8*)*, void (%struct.hashnode*, i32)*, void (%struct.hashnode*, i32)*, void (%struct.hashnode*)*, void (%struct.hashnode*, i32)*, void (%struct.hashtable*, void (%struct.hashnode*, i32)*, i32)* }
%struct.hashnode = type { %struct.hashnode*, i8*, i32 }
%struct._IO_FILE = type opaque
%struct.__sigset_t = type { [32 x i32] }
%struct.job = type { i32, i32, i32, i8*, %struct.process*, %struct.process*, %union.linkroot*, i32, %struct.ttyinfo* }
%struct.process = type { %struct.process*, i32, [80 x i8], i32, %struct.rusage, %struct.timeval, %struct.timeval }
%struct.rusage = type { %struct.timeval, %struct.timeval, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [16 x i32] }
%struct.timeval = type { i32, i32 }
%union.linkroot = type { %struct.linklist }
%struct.linklist = type { %struct.linknode*, %struct.linknode*, i32 }
%struct.linknode = type { %struct.linknode*, %struct.linknode*, i8* }
%struct.ttyinfo = type { %struct.termios, %struct.winsize }
%struct.termios = type { i32, i32, i32, i32, i8, [32 x i8], i32, i32 }
%struct.winsize = type { i16, i16, i16, i16 }
%struct.emulation_options = type { i32, i32, i32, i8*, i8* }
%struct.eprog = type { i32, i32, i32, i32, %struct.patprog**, i32*, i8*, %struct.shfunc*, %struct.funcdump* }
%struct.patprog = type { i32, i32, i32, i32, i32, i32, i32, i32, i8 }
%struct.shfunc = type { %struct.hashnode, i8*, i32, %struct.eprog*, %struct.eprog*, %struct.emulation_options* }
%struct.funcdump = type { %struct.funcdump*, i32, i32, i32, i32*, i32*, i32, i32, i8* }
%struct.funcstack = type { %struct.funcstack*, i8*, i8*, i8*, i32, i32, i32 }
%struct.funcwrap = type { %struct.funcwrap*, i32, i32 (%struct.eprog*, %struct.funcwrap*, i8*)*, %struct.module* }
%struct.module = type { %struct.hashnode, %union.anon.2, %union.linkroot*, %union.linkroot*, i32 }
%union.anon.2 = type { i8* }
%struct.execstack = type { %struct.execstack*, i32, i32, i32, i32, i32, [80 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8* }
%struct.estate = type { %struct.eprog*, i32*, i8* }
%struct.mnumber = type { %union.anon.3, i32 }
%union.anon.3 = type { double }
%struct.builtin = type { %struct.hashnode, i32 (i8*, i8**, %struct.options*, i32)*, i32, i32, i32, i8*, i8* }
%struct.options = type { [128 x i8], i8**, i32, i32 }
%struct.alias = type { %struct.hashnode, i8*, i32 }
%struct.cmdnam = type { %struct.hashnode, %union.anon }
%union.anon = type { i8** }
%struct.stat = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.timespec = type { i32, i32 }
%struct.param = type { %struct.hashnode, %union.anon.0, %union.anon.1, i32, i32, i8*, i8*, %struct.param*, i32 }
%union.anon.0 = type { double }
%union.anon.1 = type { %struct.gsu_scalar* }
%struct.gsu_scalar = type { i8* (%struct.param*)*, void (%struct.param*, i8*)*, void (%struct.param*, i32)* }
%struct.timezone = type { i32, i32 }
%struct.heap = type { %struct.heap*, i32, i32, %struct.heapstack* }
%struct.heapstack = type { %struct.heapstack*, i32 }
%struct.funcsave = type { [181 x i8], i8*, i32, i32, i32, i32, i32*, i8*, i32, i32, i32, i32, i32, i32, i32, %struct.emulation_options*, %struct.funcstack }
%struct.execcmd_params = type { %union.linkroot*, %union.linkroot*, i32*, i32*, i32*, i32, i32, i32 }
%struct.redir = type { i32, i32, i32, i32, i8*, i8*, i8*, i8* }
%struct.multio = type { i32, i32, i32, [8 x i32] }
%struct.value = type { i32, %struct.param*, i32, i32, i32, i8** }
%struct.asgment = type { %struct.linknode, i8*, i32, %union.anon.4 }
%union.anon.4 = type { i8* }
%struct.gsu_integer = type { i32 (%struct.param*)*, void (%struct.param*, i32)*, void (%struct.param*, i32)* }
%struct.gsu_float = type { double (%struct.param*)*, void (%struct.param*, double)*, void (%struct.param*, i32)* }
%struct.gsu_array = type { i8** (%struct.param*)*, void (%struct.param*, i8**)*, void (%struct.param*, i32)* }
%struct.gsu_hash = type { %struct.hashtable* (%struct.param*)*, void (%struct.param*, %struct.hashtable*)*, void (%struct.param*, i32)* }

@lineno = external global i32, align 4
@tok = external global i32, align 4
@lastval = external global i32, align 4
@limits = common global [15 x %struct.rlimit] zeroinitializer, align 8
@current_limits = common global [15 x %struct.rlimit] zeroinitializer, align 8
@.str = private unnamed_addr constant [21 x i8] c"setrlimit failed: %e\00", align 1
@list_pipe = global i32 0, align 4
@simple_pline = global i32 0, align 4
@cmdnamtab = external global %struct.hashtable*, align 4
@opts = external global [181 x i8], align 1
@path = external global i8**, align 4
@.str.1 = private unnamed_addr constant [3 x i8] c"./\00", align 1
@.str.2 = private unnamed_addr constant [4 x i8] c"../\00", align 1
@.str.3 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.4 = private unnamed_addr constant [2 x i8] c"/\00", align 1
@pathchecked = external global i8**, align 4
@stderr = external constant %struct._IO_FILE*, align 4
@execode.zsh_eval_context_len = internal global i32 0, align 4
@zsh_eval_context = external global i8**, align 4
@execlist.donetrap = internal global i32 0, align 4
@noerrexit = common global i32 0, align 4
@queueing_enabled = external global i32, align 4
@thisjob = external global i32, align 4
@pline_level = internal global i32 0, align 4
@list_pipe_job = internal global i32 0, align 4
@list_pipe_text = internal global [80 x i8] zeroinitializer, align 1
@sourcelevel = external global i32, align 4
@breaks = external global i32, align 4
@retflag = common global i32 0, align 4
@errflag = common global i32 0, align 4
@this_noerrexit = common global i32 0, align 4
@cmdsp = external global i32, align 4
@intrap = external global i32, align 4
@trapisfunc = external global i32, align 4
@traplocallevel = external global i32, align 4
@locallevel = external global i32, align 4
@ineval = external global i32, align 4
@sigtrapped = external global [34 x i32], align 4
@.str.5 = private unnamed_addr constant [14 x i8] c"ZSH_DEBUG_CMD\00", align 1
@mypid = external global i32, align 4
@loops = external global i32, align 4
@queue_front = external global i32, align 4
@queue_rear = external global i32, align 4
@signal_mask_queue = external global [128 x %struct.__sigset_t], align 4
@signal_queue = external global [128 x i32], align 4
@typtab = external global [256 x i16], align 2
@ztokens = external global [0 x i8], align 1
@.str.6 = private unnamed_addr constant [6 x i8] c"$'\5Ct'\00", align 1
@.str.7 = private unnamed_addr constant [6 x i8] c"$'\5Cn'\00", align 1
@.str.8 = private unnamed_addr constant [6 x i8] c"$'\5Cr'\00", align 1
@underscorelen = external global i32, align 4
@zunderscore = external global i8*, align 4
@underscoreused = external global i32, align 4
@esprefork = internal global i32 0, align 4
@esglob = internal global i32 1, align 4
@max_zsh_fd = common global i32 0, align 4
@fdtable = common global i8* null, align 4
@SHTTY = external global i32, align 4
@hgetc = external global i32 ()*, align 4
@lexstop = external global i32, align 4
@nocomments = external global i32, align 4
@.str.9 = private unnamed_addr constant [7 x i8] c"%e: %s\00", align 1
@cmdoutval = common global i32 0, align 4
@.str.10 = private unnamed_addr constant [26 x i8] c"error when reading %s: %e\00", align 1
@cmdoutpid = common global i32 0, align 4
@sigchld_mask = external global %struct.__sigset_t, align 4
@.str.11 = private unnamed_addr constant [9 x i8] c"cmdsubst\00", align 1
@.str.12 = private unnamed_addr constant [2 x i8] c"r\00", align 1
@.str.13 = private unnamed_addr constant [44 x i8] c"process substitution %s cannot be used here\00", align 1
@.str.14 = private unnamed_addr constant [32 x i8] c"process substitution failed: %e\00", align 1
@.str.15 = private unnamed_addr constant [10 x i8] c"TMPSUFFIX\00", align 1
@jobtab = external global %struct.job*, align 4
@.str.16 = private unnamed_addr constant [11 x i8] c"equalsubst\00", align 1
@.str.17 = private unnamed_addr constant [6 x i8] c"%s/%d\00", align 1
@.str.18 = private unnamed_addr constant [14 x i8] c"/proc/self/fd\00", align 1
@.str.19 = private unnamed_addr constant [9 x i8] c"outsubst\00", align 1
@.str.20 = private unnamed_addr constant [8 x i8] c"insubst\00", align 1
@sticky = external global %struct.emulation_options*, align 4
@noaliases = external global i32, align 4
@dummy_eprog = external global %struct.eprog, align 4
@.str.21 = private unnamed_addr constant [39 x i8] c"%s: function definition file not found\00", align 1
@.str.22 = private unnamed_addr constant [13 x i8] c"evalautofunc\00", align 1
@shfunctab = external global %struct.hashtable*, align 4
@.str.23 = private unnamed_addr constant [33 x i8] c"%s: function not defined by file\00", align 1
@doshfunc.oflags = internal global i32 0, align 4
@doshfunc.funcdepth = internal global i32 0, align 4
@scriptname = external global i8*, align 4
@contflag = external global i32, align 4
@numpipestats = external global i32, align 4
@trap_state = common global i32 0, align 4
@trap_return = common global i32 0, align 4
@pipestats = external global [256 x i32], align 4
@pparams = external global i8**, align 4
@zoptind = external global i32, align 4
@optcind = external global i32, align 4
@emulation = external global i32, align 4
@.str.24 = private unnamed_addr constant [7 x i8] c"(anon)\00", align 1
@argzero = external global i8*, align 4
@zsh_funcnest = external global i32, align 4
@.str.25 = private unnamed_addr constant [58 x i8] c"maximum nested function level reached; increase FUNCNEST?\00", align 1
@funcstack = common global %struct.funcstack* null, align 4
@wrappers = external global %struct.funcwrap*, align 4
@.str.26 = private unnamed_addr constant [43 x i8] c"`continue' active at end of function scope\00", align 1
@.str.27 = private unnamed_addr constant [40 x i8] c"`break' active at end of function scope\00", align 1
@exit_pending = external global i32, align 4
@exit_level = external global i32, align 4
@in_exit_trap = external global i32, align 4
@forklevel = common global i32 0, align 4
@stopmsg = external global i32, align 4
@.str.28 = private unnamed_addr constant [7 x i8] c"shfunc\00", align 1
@fpath = external global i8**, align 4
@.str.29 = private unnamed_addr constant [6 x i8] c"%s/%s\00", align 1
@list_pipe_pid = internal global i32 0, align 4
@nowait = internal global i32 0, align 4
@list_pipe_child = internal global i32 0, align 4
@noeval = external global i32, align 4
@badcshglob = external global i32, align 4
@use_cmdoutval = common global i32 0, align 4
@noerrs = common global i32 0, align 4
@exstack = common global %struct.execstack* null, align 4
@nohistsave = common global i32 0, align 4
@subsh = common global i32 0, align 4
@lastval2 = common global i32 0, align 4
@fdtable_size = common global i32 0, align 4
@coprocin = common global i32 0, align 4
@coprocout = common global i32 0, align 4
@fdtable_flocks = common global i32 0, align 4
@zleactive = common global i32 0, align 4
@sfcontext = common global i32 0, align 4
@.str.30 = private unnamed_addr constant [9 x i8] c"/usr/bin\00", align 1
@xtrerr = external global %struct._IO_FILE*, align 4
@execfuncs = internal global [13 x i32 (%struct.estate*, i32)*] [i32 (%struct.estate*, i32)* @execcursh, i32 (%struct.estate*, i32)* @exectime, i32 (%struct.estate*, i32)* null, i32 (%struct.estate*, i32)* @execfor, i32 (%struct.estate*, i32)* @execselect, i32 (%struct.estate*, i32)* @execwhile, i32 (%struct.estate*, i32)* @execrepeat, i32 (%struct.estate*, i32)* @execcase, i32 (%struct.estate*, i32)* @execif, i32 (%struct.estate*, i32)* @execcond, i32 (%struct.estate*, i32)* @execarith, i32 (%struct.estate*, i32)* @execautofn, i32 (%struct.estate*, i32)* @exectry], align 4
@doneps4 = internal global i32 0, align 4
@.str.31 = private unnamed_addr constant [5 x i8] c"%s+=\00", align 1
@.str.32 = private unnamed_addr constant [4 x i8] c"%s=\00", align 1
@paramtab = external global %struct.hashtable*, align 4
@.str.33 = private unnamed_addr constant [15 x i8] c"%s: restricted\00", align 1
@.str.34 = private unnamed_addr constant [5 x i8] c"STTY\00", align 1
@STTYval = internal global i8* null, align 4
@.str.35 = private unnamed_addr constant [3 x i8] c"( \00", align 1
@.str.36 = private unnamed_addr constant [3 x i8] c") \00", align 1
@scriptfilename = external global i8*, align 4
@.str.37 = private unnamed_addr constant [15 x i8] c"zsh: exit %ld\0A\00", align 1
@.str.38 = private unnamed_addr constant [5 x i8] c"TRAP\00", align 1
@cmdstack = external global i8*, align 4
@.str.39 = private unnamed_addr constant [3 x i8] c"[[\00", align 1
@tracingcond = external global i32, align 4
@.str.40 = private unnamed_addr constant [5 x i8] c" ]]\0A\00", align 1
@zero_mnumber = external global %struct.mnumber, align 8
@.str.41 = private unnamed_addr constant [3 x i8] c"((\00", align 1
@.str.42 = private unnamed_addr constant [4 x i8] c" %s\00", align 1
@.str.43 = private unnamed_addr constant [5 x i8] c" ))\0A\00", align 1
@.str.44 = private unnamed_addr constant [13 x i8] c"loadautofunc\00", align 1
@execpline.lastwj = internal global i32 0, align 4
@execpline.lpforked = internal global i32 0, align 4
@curjob = external global i32, align 4
@list_pipe_start = internal global %struct.timeval zeroinitializer, align 4
@maxjob = external global i32, align 4
@errbrk_saved = external global i32, align 4
@mypgrp = external global i32, align 4
@.str.45 = private unnamed_addr constant [16 x i8] c"pipe failed: %e\00", align 1
@.str.46 = private unnamed_addr constant [29 x i8] c"zsh: job can't be suspended\0A\00", align 1
@prev_errflag = external global i32, align 4
@prev_breaks = external global i32, align 4
@.str.47 = private unnamed_addr constant [7 x i8] c"disown\00", align 1
@.str.48 = private unnamed_addr constant [3 x i8] c"bg\00", align 1
@.str.49 = private unnamed_addr constant [3 x i8] c"fg\00", align 1
@builtintab = external global %struct.hashtable*, align 4
@.str.50 = private unnamed_addr constant [8 x i8] c"command\00", align 1
@commandbn = internal global %struct.builtin { %struct.hashnode { %struct.hashnode* null, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.50, i32 0, i32 0), i32 0 }, i32 (i8*, i8**, %struct.options*, i32)* @bin_whence, i32 0, i32 -1, i32 27, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.79, i32 0, i32 0), i8* null }, align 4
@.str.51 = private unnamed_addr constant [35 x i8] c"exec requires a command to execute\00", align 1
@.str.52 = private unnamed_addr constant [34 x i8] c"exec flag -a requires a parameter\00", align 1
@.str.53 = private unnamed_addr constant [22 x i8] c"unknown exec flag -%c\00", align 1
@.str.54 = private unnamed_addr constant [7 x i8] c"ARGV0=\00", align 1
@nullcmd = external global i8*, align 4
@.str.55 = private unnamed_addr constant [28 x i8] c"redirection with no command\00", align 1
@.str.56 = private unnamed_addr constant [2 x i8] c":\00", align 1
@readnullcmd = external global i8*, align 4
@.str.57 = private unnamed_addr constant [9 x i8] c"no match\00", align 1
@.str.58 = private unnamed_addr constant [5 x i8] c"exec\00", align 1
@.str.59 = private unnamed_addr constant [20 x i8] c"no such builtin: %s\00", align 1
@.str.60 = private unnamed_addr constant [3 x i8] c"rm\00", align 1
@pwd = external global i8*, align 4
@.str.61 = private unnamed_addr constant [3 x i8] c"..\00", align 1
@.str.62 = private unnamed_addr constant [3 x i8] c"--\00", align 1
@.str.63 = private unnamed_addr constant [3 x i8] c"cd\00", align 1
@nsigtrapped = external global i32, align 4
@.str.64 = private unnamed_addr constant [2 x i8] c"w\00", align 1
@.str.65 = private unnamed_addr constant [51 x i8] c"writing redirection not allowed in restricted mode\00", align 1
@.str.66 = private unnamed_addr constant [45 x i8] c"can't create temp file for here document: %e\00", align 1
@.str.67 = private unnamed_addr constant [48 x i8] c"parameter %s does not contain a file descriptor\00", align 1
@.str.68 = private unnamed_addr constant [55 x i8] c"can't close file descriptor from readonly parameter %s\00", align 1
@.str.69 = private unnamed_addr constant [45 x i8] c"file descriptor %d used by shell, not closed\00", align 1
@execcmd_exec.bad_msg = private unnamed_addr constant [3 x i8*] [i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.67, i32 0, i32 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.68, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.69, i32 0, i32 0)], align 4
@.str.70 = private unnamed_addr constant [39 x i8] c"failed to close file descriptor %d: %e\00", align 1
@.str.71 = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@.str.72 = private unnamed_addr constant [7 x i8] c"%s: %e\00", align 1
@.str.73 = private unnamed_addr constant [10 x i8] c"coprocess\00", align 1
@stdout = external constant %struct._IO_FILE*, align 4
@.str.74 = private unnamed_addr constant [16 x i8] c"write error: %e\00", align 1
@.str.75 = private unnamed_addr constant [6 x i8] c"SHLVL\00", align 1
@shlvl = external global i32, align 4
@zsh_subshell = external global i32, align 4
@lastpid = external global i32, align 4
@.str.76 = private unnamed_addr constant [19 x i8] c"nice(5) failed: %e\00", align 1
@.str.77 = private unnamed_addr constant [3 x i8] c"b:\00", align 1
@.str.78 = private unnamed_addr constant [51 x i8] c"autoloading module %s failed to define builtin: %s\00", align 1
@.str.79 = private unnamed_addr constant [4 x i8] c"pvV\00", align 1
@cdpath = external global i8**, align 4
@doprintdir = external global i32, align 4
@.str.80 = private unnamed_addr constant [23 x i8] c"cannot moved fd %d: %e\00", align 1
@.str.81 = private unnamed_addr constant [27 x i8] c"cannot duplicate fd %d: %e\00", align 1
@.str.82 = private unnamed_addr constant [28 x i8] c"file mode mismatch on fd %d\00", align 1
@.str.83 = private unnamed_addr constant [28 x i8] c"multio failed for fd %d: %e\00", align 1
@.str.84 = private unnamed_addr constant [55 x i8] c"invalid syntax for process substitution in redirection\00", align 1
@.str.85 = private unnamed_addr constant [56 x i8] c"can't allocate file descriptor to readonly parameter %s\00", align 1
@.str.86 = private unnamed_addr constant [57 x i8] c"can't clobber parameter %s containing file descriptor %d\00", align 1
@.str.87 = private unnamed_addr constant [5 x i8] c"stty\00", align 1
@.str.88 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.89 = private unnamed_addr constant [6 x i8] c"ARGV0\00", align 1
@.str.90 = private unnamed_addr constant [4 x i8] c"-%s\00", align 1
@blank_env = internal global [1 x i8*] zeroinitializer, align 4
@.str.91 = private unnamed_addr constant [21 x i8] c"command too long: %s\00", align 1
@.str.92 = private unnamed_addr constant [22 x i8] c"command not found: %s\00", align 1
@zexecve.buf = internal global [8193 x i8] zeroinitializer, align 1
@environ = external global i8**, align 4
@.str.93 = private unnamed_addr constant [28 x i8] c"%s: bad interpreter: %s: %e\00", align 1
@.str.94 = private unnamed_addr constant [3 x i8] c"sh\00", align 1
@.str.95 = private unnamed_addr constant [8 x i8] c"/bin/sh\00", align 1
@.str.96 = private unnamed_addr constant [26 x i8] c"command_not_found_handler\00", align 1
@jobtabsize = external global i32, align 4
@.str.97 = private unnamed_addr constant [15 x i8] c"job table full\00", align 1
@.str.98 = private unnamed_addr constant [16 x i8] c"fork failed: %e\00", align 1
@.str.99 = private unnamed_addr constant [10 x i8] c"/dev/null\00", align 1
@.str.100 = private unnamed_addr constant [25 x i8] c"can't open /dev/null: %e\00", align 1
@shout = external global %struct._IO_FILE*, align 4
@.str.101 = private unnamed_addr constant [22 x i8] c"unterminated `%s...)'\00", align 1
@.str.102 = private unnamed_addr constant [36 x i8] c"parse error in process substitution\00", align 1

; Function Attrs: noinline nounwind
define %struct.eprog* @parse_string(i8* %s, i32 %reset_lineno) #0 {
entry:
  %s.addr = alloca i8*, align 4
  %reset_lineno.addr = alloca i32, align 4
  %p = alloca %struct.eprog*, align 4
  %oldlineno = alloca i32, align 4
  store i8* %s, i8** %s.addr, align 4
  store i32 %reset_lineno, i32* %reset_lineno.addr, align 4
  call void @zcontext_save()
  %0 = load i8*, i8** %s.addr, align 4
  call void @inpush(i8* %0, i32 64, %struct.alias* null)
  call void @strinbeg(i32 0)
  %1 = load i32, i32* @lineno, align 4
  store i32 %1, i32* %oldlineno, align 4
  %2 = load i32, i32* %reset_lineno.addr, align 4
  %tobool = icmp ne i32 %2, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 1, i32* @lineno, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %call = call %struct.eprog* @parse_list()
  store %struct.eprog* %call, %struct.eprog** %p, align 4
  %3 = load i32, i32* %oldlineno, align 4
  store i32 %3, i32* @lineno, align 4
  %4 = load i32, i32* @tok, align 4
  %cmp = icmp eq i32 %4, 38
  br i1 %cmp, label %land.lhs.true, label %if.end3

land.lhs.true:                                    ; preds = %if.end
  %5 = load i32, i32* @lastval, align 4
  %tobool1 = icmp ne i32 %5, 0
  br i1 %tobool1, label %if.end3, label %if.then2

if.then2:                                         ; preds = %land.lhs.true
  store i32 1, i32* @lastval, align 4
  br label %if.end3

if.end3:                                          ; preds = %if.then2, %land.lhs.true, %if.end
  call void @strinend()
  call void @inpop()
  call void @zcontext_restore()
  %6 = load %struct.eprog*, %struct.eprog** %p, align 4
  ret %struct.eprog* %6
}

declare void @zcontext_save() #1

declare void @inpush(i8*, i32, %struct.alias*) #1

declare void @strinbeg(i32) #1

declare %struct.eprog* @parse_list() #1

declare void @strinend() #1

declare void @inpop() #1

declare void @zcontext_restore() #1

; Function Attrs: noinline nounwind
define i32 @zsetlimit(i32 %limnum, i8* %nam) #0 {
entry:
  %retval = alloca i32, align 4
  %limnum.addr = alloca i32, align 4
  %nam.addr = alloca i8*, align 4
  store i32 %limnum, i32* %limnum.addr, align 4
  store i8* %nam, i8** %nam.addr, align 4
  %0 = load i32, i32* %limnum.addr, align 4
  %arrayidx = getelementptr inbounds [15 x %struct.rlimit], [15 x %struct.rlimit]* @limits, i32 0, i32 %0
  %rlim_max = getelementptr inbounds %struct.rlimit, %struct.rlimit* %arrayidx, i32 0, i32 1
  %1 = load i64, i64* %rlim_max, align 8
  %2 = load i32, i32* %limnum.addr, align 4
  %arrayidx1 = getelementptr inbounds [15 x %struct.rlimit], [15 x %struct.rlimit]* @current_limits, i32 0, i32 %2
  %rlim_max2 = getelementptr inbounds %struct.rlimit, %struct.rlimit* %arrayidx1, i32 0, i32 1
  %3 = load i64, i64* %rlim_max2, align 8
  %cmp = icmp ne i64 %1, %3
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %4 = load i32, i32* %limnum.addr, align 4
  %arrayidx3 = getelementptr inbounds [15 x %struct.rlimit], [15 x %struct.rlimit]* @limits, i32 0, i32 %4
  %rlim_cur = getelementptr inbounds %struct.rlimit, %struct.rlimit* %arrayidx3, i32 0, i32 0
  %5 = load i64, i64* %rlim_cur, align 8
  %6 = load i32, i32* %limnum.addr, align 4
  %arrayidx4 = getelementptr inbounds [15 x %struct.rlimit], [15 x %struct.rlimit]* @current_limits, i32 0, i32 %6
  %rlim_cur5 = getelementptr inbounds %struct.rlimit, %struct.rlimit* %arrayidx4, i32 0, i32 0
  %7 = load i64, i64* %rlim_cur5, align 8
  %cmp6 = icmp ne i64 %5, %7
  br i1 %cmp6, label %if.then, label %if.end16

if.then:                                          ; preds = %lor.lhs.false, %entry
  %8 = load i32, i32* %limnum.addr, align 4
  %9 = load i32, i32* %limnum.addr, align 4
  %add.ptr = getelementptr inbounds %struct.rlimit, %struct.rlimit* getelementptr inbounds ([15 x %struct.rlimit], [15 x %struct.rlimit]* @limits, i32 0, i32 0), i32 %9
  %call = call i32 @setrlimit(i32 %8, %struct.rlimit* %add.ptr)
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.then7, label %if.end13

if.then7:                                         ; preds = %if.then
  %10 = load i8*, i8** %nam.addr, align 4
  %tobool8 = icmp ne i8* %10, null
  br i1 %tobool8, label %if.then9, label %if.end

if.then9:                                         ; preds = %if.then7
  %11 = load i8*, i8** %nam.addr, align 4
  %call10 = call i32* @__errno_location()
  %12 = load i32, i32* %call10, align 4
  call void (i8*, i8*, ...) @zwarnnam(i8* %11, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i32 0, i32 0), i32 %12)
  br label %if.end

if.end:                                           ; preds = %if.then9, %if.then7
  %13 = load i32, i32* %limnum.addr, align 4
  %arrayidx11 = getelementptr inbounds [15 x %struct.rlimit], [15 x %struct.rlimit]* @limits, i32 0, i32 %13
  %14 = load i32, i32* %limnum.addr, align 4
  %arrayidx12 = getelementptr inbounds [15 x %struct.rlimit], [15 x %struct.rlimit]* @current_limits, i32 0, i32 %14
  %15 = bitcast %struct.rlimit* %arrayidx11 to i8*
  %16 = bitcast %struct.rlimit* %arrayidx12 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %15, i8* %16, i32 16, i32 8, i1 false)
  store i32 -1, i32* %retval, align 4
  br label %return

if.end13:                                         ; preds = %if.then
  %17 = load i32, i32* %limnum.addr, align 4
  %arrayidx14 = getelementptr inbounds [15 x %struct.rlimit], [15 x %struct.rlimit]* @current_limits, i32 0, i32 %17
  %18 = load i32, i32* %limnum.addr, align 4
  %arrayidx15 = getelementptr inbounds [15 x %struct.rlimit], [15 x %struct.rlimit]* @limits, i32 0, i32 %18
  %19 = bitcast %struct.rlimit* %arrayidx14 to i8*
  %20 = bitcast %struct.rlimit* %arrayidx15 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %19, i8* %20, i32 16, i32 8, i1 false)
  br label %if.end16

if.end16:                                         ; preds = %if.end13, %lor.lhs.false
  store i32 0, i32* %retval, align 4
  br label %return

return:                                           ; preds = %if.end16, %if.end
  %21 = load i32, i32* %retval, align 4
  ret i32 %21
}

declare i32 @setrlimit(i32, %struct.rlimit*) #1

declare void @zwarnnam(i8*, i8*, ...) #1

declare i32* @__errno_location() #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i32(i8* nocapture writeonly, i8* nocapture readonly, i32, i32, i1) #2

; Function Attrs: noinline nounwind
define i32 @setlimits(i8* %nam) #0 {
entry:
  %nam.addr = alloca i8*, align 4
  %limnum = alloca i32, align 4
  %ret = alloca i32, align 4
  store i8* %nam, i8** %nam.addr, align 4
  store i32 0, i32* %ret, align 4
  store i32 0, i32* %limnum, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %limnum, align 4
  %cmp = icmp slt i32 %0, 15
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %1 = load i32, i32* %limnum, align 4
  %2 = load i8*, i8** %nam.addr, align 4
  %call = call i32 @zsetlimit(i32 %1, i8* %2)
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  %3 = load i32, i32* %ret, align 4
  %inc = add nsw i32 %3, 1
  store i32 %inc, i32* %ret, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %4 = load i32, i32* %limnum, align 4
  %inc1 = add nsw i32 %4, 1
  store i32 %inc1, i32* %limnum, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %5 = load i32, i32* %ret, align 4
  ret i32 %5
}

; Function Attrs: noinline nounwind
define i8* @findcmd(i8* %arg0, i32 %docopy, i32 %default_path) #0 {
entry:
  %retval = alloca i8*, align 4
  %arg0.addr = alloca i8*, align 4
  %docopy.addr = alloca i32, align 4
  %default_path.addr = alloca i32, align 4
  %pp = alloca i8**, align 4
  %z = alloca i8*, align 4
  %s = alloca i8*, align 4
  %buf = alloca [16384 x i8], align 1
  %cn = alloca %struct.cmdnam*, align 4
  %nn = alloca [4097 x i8], align 1
  store i8* %arg0, i8** %arg0.addr, align 4
  store i32 %docopy, i32* %docopy.addr, align 4
  store i32 %default_path, i32* %default_path.addr, align 4
  %0 = load i32, i32* %default_path.addr, align 4
  %tobool = icmp ne i32 %0, 0
  br i1 %tobool, label %if.then, label %if.end6

if.then:                                          ; preds = %entry
  %1 = load i8*, i8** %arg0.addr, align 4
  %arraydecay = getelementptr inbounds [16384 x i8], [16384 x i8]* %buf, i32 0, i32 0
  %call = call i8* @search_defpath(i8* %1, i8* %arraydecay, i32 16384)
  %tobool1 = icmp ne i8* %call, null
  br i1 %tobool1, label %if.then2, label %if.end

if.then2:                                         ; preds = %if.then
  %2 = load i32, i32* %docopy.addr, align 4
  %tobool3 = icmp ne i32 %2, 0
  br i1 %tobool3, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.then2
  %arraydecay4 = getelementptr inbounds [16384 x i8], [16384 x i8]* %buf, i32 0, i32 0
  %call5 = call i8* @dupstring(i8* %arraydecay4)
  br label %cond.end

cond.false:                                       ; preds = %if.then2
  %3 = load i8*, i8** %arg0.addr, align 4
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %call5, %cond.true ], [ %3, %cond.false ]
  store i8* %cond, i8** %retval, align 4
  br label %return

if.end:                                           ; preds = %if.then
  store i8* null, i8** %retval, align 4
  br label %return

if.end6:                                          ; preds = %entry
  %4 = load %struct.hashtable*, %struct.hashtable** @cmdnamtab, align 4
  %getnode = getelementptr inbounds %struct.hashtable, %struct.hashtable* %4, i32 0, i32 9
  %5 = load %struct.hashnode* (%struct.hashtable*, i8*)*, %struct.hashnode* (%struct.hashtable*, i8*)** %getnode, align 4
  %6 = load %struct.hashtable*, %struct.hashtable** @cmdnamtab, align 4
  %7 = load i8*, i8** %arg0.addr, align 4
  %call7 = call %struct.hashnode* %5(%struct.hashtable* %6, i8* %7)
  %8 = bitcast %struct.hashnode* %call7 to %struct.cmdnam*
  store %struct.cmdnam* %8, %struct.cmdnam** %cn, align 4
  %9 = load %struct.cmdnam*, %struct.cmdnam** %cn, align 4
  %tobool8 = icmp ne %struct.cmdnam* %9, null
  br i1 %tobool8, label %if.end15, label %land.lhs.true

land.lhs.true:                                    ; preds = %if.end6
  %10 = load i8, i8* getelementptr inbounds ([181 x i8], [181 x i8]* @opts, i32 0, i32 68), align 1
  %conv = sext i8 %10 to i32
  %tobool9 = icmp ne i32 %conv, 0
  br i1 %tobool9, label %land.lhs.true10, label %if.end15

land.lhs.true10:                                  ; preds = %land.lhs.true
  %11 = load i8*, i8** %arg0.addr, align 4
  %call11 = call i32 @isrelative(i8* %11)
  %tobool12 = icmp ne i32 %call11, 0
  br i1 %tobool12, label %if.end15, label %if.then13

if.then13:                                        ; preds = %land.lhs.true10
  %12 = load i8*, i8** %arg0.addr, align 4
  %13 = load i8**, i8*** @path, align 4
  %call14 = call %struct.cmdnam* @hashcmd(i8* %12, i8** %13)
  store %struct.cmdnam* %call14, %struct.cmdnam** %cn, align 4
  br label %if.end15

if.end15:                                         ; preds = %if.then13, %land.lhs.true10, %land.lhs.true, %if.end6
  %14 = load i8*, i8** %arg0.addr, align 4
  %call16 = call i32 @strlen(i8* %14)
  %cmp = icmp sgt i32 %call16, 4096
  br i1 %cmp, label %if.then18, label %if.end19

if.then18:                                        ; preds = %if.end15
  store i8* null, i8** %retval, align 4
  br label %return

if.end19:                                         ; preds = %if.end15
  %15 = load i8*, i8** %arg0.addr, align 4
  %call20 = call i8* @strchr(i8* %15, i32 47)
  store i8* %call20, i8** %s, align 4
  %tobool21 = icmp ne i8* %call20, null
  br i1 %tobool21, label %if.then22, label %if.end44

if.then22:                                        ; preds = %if.end19
  %16 = load i8*, i8** %arg0.addr, align 4
  %call23 = call i32 @iscom(i8* %16)
  %tobool24 = icmp ne i32 %call23, 0
  br i1 %tobool24, label %if.then25, label %if.end32

if.then25:                                        ; preds = %if.then22
  %17 = load i32, i32* %docopy.addr, align 4
  %tobool26 = icmp ne i32 %17, 0
  br i1 %tobool26, label %cond.true27, label %cond.false29

cond.true27:                                      ; preds = %if.then25
  %18 = load i8*, i8** %arg0.addr, align 4
  %call28 = call i8* @dupstring(i8* %18)
  br label %cond.end30

cond.false29:                                     ; preds = %if.then25
  %19 = load i8*, i8** %arg0.addr, align 4
  br label %cond.end30

cond.end30:                                       ; preds = %cond.false29, %cond.true27
  %cond31 = phi i8* [ %call28, %cond.true27 ], [ %19, %cond.false29 ]
  store i8* %cond31, i8** %retval, align 4
  br label %return

if.end32:                                         ; preds = %if.then22
  %20 = load i8*, i8** %arg0.addr, align 4
  %21 = load i8*, i8** %s, align 4
  %cmp33 = icmp eq i8* %20, %21
  br i1 %cmp33, label %if.then42, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end32
  %22 = load i8, i8* getelementptr inbounds ([181 x i8], [181 x i8]* @opts, i32 0, i32 127), align 1
  %tobool35 = icmp ne i8 %22, 0
  br i1 %tobool35, label %lor.lhs.false36, label %if.then42

lor.lhs.false36:                                  ; preds = %lor.lhs.false
  %23 = load i8*, i8** %arg0.addr, align 4
  %call37 = call i32 @strncmp(i8* %23, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 2)
  %tobool38 = icmp ne i32 %call37, 0
  br i1 %tobool38, label %lor.lhs.false39, label %if.then42

lor.lhs.false39:                                  ; preds = %lor.lhs.false36
  %24 = load i8*, i8** %arg0.addr, align 4
  %call40 = call i32 @strncmp(i8* %24, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2, i32 0, i32 0), i32 3)
  %tobool41 = icmp ne i32 %call40, 0
  br i1 %tobool41, label %if.end43, label %if.then42

if.then42:                                        ; preds = %lor.lhs.false39, %lor.lhs.false36, %lor.lhs.false, %if.end32
  store i8* null, i8** %retval, align 4
  br label %return

if.end43:                                         ; preds = %lor.lhs.false39
  br label %if.end44

if.end44:                                         ; preds = %if.end43, %if.end19
  %25 = load %struct.cmdnam*, %struct.cmdnam** %cn, align 4
  %tobool45 = icmp ne %struct.cmdnam* %25, null
  br i1 %tobool45, label %if.then46, label %if.end106

if.then46:                                        ; preds = %if.end44
  %26 = load %struct.cmdnam*, %struct.cmdnam** %cn, align 4
  %node = getelementptr inbounds %struct.cmdnam, %struct.cmdnam* %26, i32 0, i32 0
  %flags = getelementptr inbounds %struct.hashnode, %struct.hashnode* %node, i32 0, i32 2
  %27 = load i32, i32* %flags, align 4
  %and = and i32 %27, 2
  %tobool47 = icmp ne i32 %and, 0
  br i1 %tobool47, label %if.then48, label %if.else

if.then48:                                        ; preds = %if.then46
  %arraydecay49 = getelementptr inbounds [4097 x i8], [4097 x i8]* %nn, i32 0, i32 0
  %28 = load %struct.cmdnam*, %struct.cmdnam** %cn, align 4
  %u = getelementptr inbounds %struct.cmdnam, %struct.cmdnam* %28, i32 0, i32 1
  %cmd = bitcast %union.anon* %u to i8**
  %29 = load i8*, i8** %cmd, align 4
  %call50 = call i8* @strcpy(i8* %arraydecay49, i8* %29)
  br label %if.end93

if.else:                                          ; preds = %if.then46
  %30 = load i8**, i8*** @path, align 4
  store i8** %30, i8*** %pp, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.else
  %31 = load i8**, i8*** %pp, align 4
  %32 = load %struct.cmdnam*, %struct.cmdnam** %cn, align 4
  %u51 = getelementptr inbounds %struct.cmdnam, %struct.cmdnam* %32, i32 0, i32 1
  %name = bitcast %union.anon* %u51 to i8***
  %33 = load i8**, i8*** %name, align 4
  %cmp52 = icmp ult i8** %31, %33
  br i1 %cmp52, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %34 = load i8**, i8*** %pp, align 4
  %35 = load i8*, i8** %34, align 4
  %36 = load i8, i8* %35, align 1
  %conv54 = sext i8 %36 to i32
  %cmp55 = icmp ne i32 %conv54, 47
  br i1 %cmp55, label %if.then57, label %if.end75

if.then57:                                        ; preds = %for.body
  %arraydecay58 = getelementptr inbounds [16384 x i8], [16384 x i8]* %buf, i32 0, i32 0
  store i8* %arraydecay58, i8** %z, align 4
  %37 = load i8**, i8*** %pp, align 4
  %38 = load i8*, i8** %37, align 4
  %39 = load i8, i8* %38, align 1
  %tobool59 = icmp ne i8 %39, 0
  br i1 %tobool59, label %if.then60, label %if.end61

if.then60:                                        ; preds = %if.then57
  %40 = load i8**, i8*** %pp, align 4
  %41 = load i8*, i8** %40, align 4
  call void @strucpy(i8** %z, i8* %41)
  %42 = load i8*, i8** %z, align 4
  %incdec.ptr = getelementptr inbounds i8, i8* %42, i32 1
  store i8* %incdec.ptr, i8** %z, align 4
  store i8 47, i8* %42, align 1
  br label %if.end61

if.end61:                                         ; preds = %if.then60, %if.then57
  %43 = load i8*, i8** %z, align 4
  %44 = load i8*, i8** %arg0.addr, align 4
  %call62 = call i8* @strcpy(i8* %43, i8* %44)
  %arraydecay63 = getelementptr inbounds [16384 x i8], [16384 x i8]* %buf, i32 0, i32 0
  %call64 = call i32 @iscom(i8* %arraydecay63)
  %tobool65 = icmp ne i32 %call64, 0
  br i1 %tobool65, label %if.then66, label %if.end74

if.then66:                                        ; preds = %if.end61
  %45 = load i32, i32* %docopy.addr, align 4
  %tobool67 = icmp ne i32 %45, 0
  br i1 %tobool67, label %cond.true68, label %cond.false71

cond.true68:                                      ; preds = %if.then66
  %arraydecay69 = getelementptr inbounds [16384 x i8], [16384 x i8]* %buf, i32 0, i32 0
  %call70 = call i8* @dupstring(i8* %arraydecay69)
  br label %cond.end72

cond.false71:                                     ; preds = %if.then66
  %46 = load i8*, i8** %arg0.addr, align 4
  br label %cond.end72

cond.end72:                                       ; preds = %cond.false71, %cond.true68
  %cond73 = phi i8* [ %call70, %cond.true68 ], [ %46, %cond.false71 ]
  store i8* %cond73, i8** %retval, align 4
  br label %return

if.end74:                                         ; preds = %if.end61
  br label %if.end75

if.end75:                                         ; preds = %if.end74, %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end75
  %47 = load i8**, i8*** %pp, align 4
  %incdec.ptr76 = getelementptr inbounds i8*, i8** %47, i32 1
  store i8** %incdec.ptr76, i8*** %pp, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %arraydecay77 = getelementptr inbounds [4097 x i8], [4097 x i8]* %nn, i32 0, i32 0
  %48 = load %struct.cmdnam*, %struct.cmdnam** %cn, align 4
  %u78 = getelementptr inbounds %struct.cmdnam, %struct.cmdnam* %48, i32 0, i32 1
  %name79 = bitcast %union.anon* %u78 to i8***
  %49 = load i8**, i8*** %name79, align 4
  %tobool80 = icmp ne i8** %49, null
  br i1 %tobool80, label %cond.true81, label %cond.false84

cond.true81:                                      ; preds = %for.end
  %50 = load %struct.cmdnam*, %struct.cmdnam** %cn, align 4
  %u82 = getelementptr inbounds %struct.cmdnam, %struct.cmdnam* %50, i32 0, i32 1
  %name83 = bitcast %union.anon* %u82 to i8***
  %51 = load i8**, i8*** %name83, align 4
  %52 = load i8*, i8** %51, align 4
  br label %cond.end85

cond.false84:                                     ; preds = %for.end
  br label %cond.end85

cond.end85:                                       ; preds = %cond.false84, %cond.true81
  %cond86 = phi i8* [ %52, %cond.true81 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i32 0, i32 0), %cond.false84 ]
  %call87 = call i8* @strcpy(i8* %arraydecay77, i8* %cond86)
  %arraydecay88 = getelementptr inbounds [4097 x i8], [4097 x i8]* %nn, i32 0, i32 0
  %call89 = call i8* @strcat(i8* %arraydecay88, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i32 0, i32 0))
  %arraydecay90 = getelementptr inbounds [4097 x i8], [4097 x i8]* %nn, i32 0, i32 0
  %53 = load %struct.cmdnam*, %struct.cmdnam** %cn, align 4
  %node91 = getelementptr inbounds %struct.cmdnam, %struct.cmdnam* %53, i32 0, i32 0
  %nam = getelementptr inbounds %struct.hashnode, %struct.hashnode* %node91, i32 0, i32 1
  %54 = load i8*, i8** %nam, align 4
  %call92 = call i8* @strcat(i8* %arraydecay90, i8* %54)
  br label %if.end93

if.end93:                                         ; preds = %cond.end85, %if.then48
  %arraydecay94 = getelementptr inbounds [4097 x i8], [4097 x i8]* %nn, i32 0, i32 0
  %call95 = call i32 @iscom(i8* %arraydecay94)
  %tobool96 = icmp ne i32 %call95, 0
  br i1 %tobool96, label %if.then97, label %if.end105

if.then97:                                        ; preds = %if.end93
  %55 = load i32, i32* %docopy.addr, align 4
  %tobool98 = icmp ne i32 %55, 0
  br i1 %tobool98, label %cond.true99, label %cond.false102

cond.true99:                                      ; preds = %if.then97
  %arraydecay100 = getelementptr inbounds [4097 x i8], [4097 x i8]* %nn, i32 0, i32 0
  %call101 = call i8* @dupstring(i8* %arraydecay100)
  br label %cond.end103

cond.false102:                                    ; preds = %if.then97
  %56 = load i8*, i8** %arg0.addr, align 4
  br label %cond.end103

cond.end103:                                      ; preds = %cond.false102, %cond.true99
  %cond104 = phi i8* [ %call101, %cond.true99 ], [ %56, %cond.false102 ]
  store i8* %cond104, i8** %retval, align 4
  br label %return

if.end105:                                        ; preds = %if.end93
  br label %if.end106

if.end106:                                        ; preds = %if.end105, %if.end44
  %57 = load i8**, i8*** @path, align 4
  store i8** %57, i8*** %pp, align 4
  br label %for.cond107

for.cond107:                                      ; preds = %for.inc128, %if.end106
  %58 = load i8**, i8*** %pp, align 4
  %59 = load i8*, i8** %58, align 4
  %tobool108 = icmp ne i8* %59, null
  br i1 %tobool108, label %for.body109, label %for.end130

for.body109:                                      ; preds = %for.cond107
  %arraydecay110 = getelementptr inbounds [16384 x i8], [16384 x i8]* %buf, i32 0, i32 0
  store i8* %arraydecay110, i8** %z, align 4
  %60 = load i8**, i8*** %pp, align 4
  %61 = load i8*, i8** %60, align 4
  %62 = load i8, i8* %61, align 1
  %tobool111 = icmp ne i8 %62, 0
  br i1 %tobool111, label %if.then112, label %if.end114

if.then112:                                       ; preds = %for.body109
  %63 = load i8**, i8*** %pp, align 4
  %64 = load i8*, i8** %63, align 4
  call void @strucpy(i8** %z, i8* %64)
  %65 = load i8*, i8** %z, align 4
  %incdec.ptr113 = getelementptr inbounds i8, i8* %65, i32 1
  store i8* %incdec.ptr113, i8** %z, align 4
  store i8 47, i8* %65, align 1
  br label %if.end114

if.end114:                                        ; preds = %if.then112, %for.body109
  %66 = load i8*, i8** %z, align 4
  %67 = load i8*, i8** %arg0.addr, align 4
  %call115 = call i8* @strcpy(i8* %66, i8* %67)
  %arraydecay116 = getelementptr inbounds [16384 x i8], [16384 x i8]* %buf, i32 0, i32 0
  %call117 = call i32 @iscom(i8* %arraydecay116)
  %tobool118 = icmp ne i32 %call117, 0
  br i1 %tobool118, label %if.then119, label %if.end127

if.then119:                                       ; preds = %if.end114
  %68 = load i32, i32* %docopy.addr, align 4
  %tobool120 = icmp ne i32 %68, 0
  br i1 %tobool120, label %cond.true121, label %cond.false124

cond.true121:                                     ; preds = %if.then119
  %arraydecay122 = getelementptr inbounds [16384 x i8], [16384 x i8]* %buf, i32 0, i32 0
  %call123 = call i8* @dupstring(i8* %arraydecay122)
  br label %cond.end125

cond.false124:                                    ; preds = %if.then119
  %69 = load i8*, i8** %arg0.addr, align 4
  br label %cond.end125

cond.end125:                                      ; preds = %cond.false124, %cond.true121
  %cond126 = phi i8* [ %call123, %cond.true121 ], [ %69, %cond.false124 ]
  store i8* %cond126, i8** %retval, align 4
  br label %return

if.end127:                                        ; preds = %if.end114
  br label %for.inc128

for.inc128:                                       ; preds = %if.end127
  %70 = load i8**, i8*** %pp, align 4
  %incdec.ptr129 = getelementptr inbounds i8*, i8** %70, i32 1
  store i8** %incdec.ptr129, i8*** %pp, align 4
  br label %for.cond107

for.end130:                                       ; preds = %for.cond107
  store i8* null, i8** %retval, align 4
  br label %return

return:                                           ; preds = %for.end130, %cond.end125, %cond.end103, %cond.end72, %if.then42, %cond.end30, %if.then18, %if.end, %cond.end
  %71 = load i8*, i8** %retval, align 4
  ret i8* %71
}

; Function Attrs: noinline nounwind
define internal i8* @search_defpath(i8* %cmd, i8* %pbuf, i32 %plen) #0 {
entry:
  %retval = alloca i8*, align 4
  %cmd.addr = alloca i8*, align 4
  %pbuf.addr = alloca i8*, align 4
  %plen.addr = alloca i32, align 4
  %ps = alloca i8*, align 4
  %pe = alloca i8*, align 4
  %s = alloca i8*, align 4
  store i8* %cmd, i8** %cmd.addr, align 4
  store i8* %pbuf, i8** %pbuf.addr, align 4
  store i32 %plen, i32* %plen.addr, align 4
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.30, i32 0, i32 0), i8** %ps, align 4
  store i8* null, i8** %pe, align 4
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.30, i32 0, i32 0), i8** %ps, align 4
  br label %for.cond

for.cond:                                         ; preds = %cond.end, %entry
  %0 = load i8*, i8** %ps, align 4
  %tobool = icmp ne i8* %0, null
  br i1 %tobool, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %1 = load i8*, i8** %ps, align 4
  %call = call i8* @strchr(i8* %1, i32 58)
  store i8* %call, i8** %pe, align 4
  %2 = load i8*, i8** %ps, align 4
  %3 = load i8, i8* %2, align 1
  %conv = sext i8 %3 to i32
  %cmp = icmp eq i32 %conv, 47
  br i1 %cmp, label %if.then, label %if.end28

if.then:                                          ; preds = %for.body
  %4 = load i8*, i8** %pbuf.addr, align 4
  store i8* %4, i8** %s, align 4
  %5 = load i8*, i8** %pe, align 4
  %tobool2 = icmp ne i8* %5, null
  br i1 %tobool2, label %if.then3, label %if.else

if.then3:                                         ; preds = %if.then
  %6 = load i8*, i8** %pe, align 4
  %7 = load i8*, i8** %ps, align 4
  %sub.ptr.lhs.cast = ptrtoint i8* %6 to i32
  %sub.ptr.rhs.cast = ptrtoint i8* %7 to i32
  %sub.ptr.sub = sub i32 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %8 = load i32, i32* %plen.addr, align 4
  %cmp4 = icmp sge i32 %sub.ptr.sub, %8
  br i1 %cmp4, label %if.then6, label %if.end

if.then6:                                         ; preds = %if.then3
  br label %for.inc

if.end:                                           ; preds = %if.then3
  %9 = load i8*, i8** %ps, align 4
  %10 = load i8*, i8** %pe, align 4
  %11 = load i8*, i8** %ps, align 4
  %sub.ptr.lhs.cast7 = ptrtoint i8* %10 to i32
  %sub.ptr.rhs.cast8 = ptrtoint i8* %11 to i32
  %sub.ptr.sub9 = sub i32 %sub.ptr.lhs.cast7, %sub.ptr.rhs.cast8
  call void @struncpy(i8** %s, i8* %9, i32 %sub.ptr.sub9)
  br label %if.end15

if.else:                                          ; preds = %if.then
  %12 = load i8*, i8** %ps, align 4
  %call10 = call i32 @strlen(i8* %12)
  %13 = load i32, i32* %plen.addr, align 4
  %cmp11 = icmp uge i32 %call10, %13
  br i1 %cmp11, label %if.then13, label %if.end14

if.then13:                                        ; preds = %if.else
  br label %for.inc

if.end14:                                         ; preds = %if.else
  %14 = load i8*, i8** %ps, align 4
  call void @strucpy(i8** %s, i8* %14)
  br label %if.end15

if.end15:                                         ; preds = %if.end14, %if.end
  %15 = load i8*, i8** %s, align 4
  %incdec.ptr = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr, i8** %s, align 4
  store i8 47, i8* %15, align 1
  %16 = load i8*, i8** %s, align 4
  %17 = load i8*, i8** %pbuf.addr, align 4
  %sub.ptr.lhs.cast16 = ptrtoint i8* %16 to i32
  %sub.ptr.rhs.cast17 = ptrtoint i8* %17 to i32
  %sub.ptr.sub18 = sub i32 %sub.ptr.lhs.cast16, %sub.ptr.rhs.cast17
  %18 = load i8*, i8** %cmd.addr, align 4
  %call19 = call i32 @strlen(i8* %18)
  %add = add i32 %sub.ptr.sub18, %call19
  %19 = load i32, i32* %plen.addr, align 4
  %cmp20 = icmp uge i32 %add, %19
  br i1 %cmp20, label %if.then22, label %if.end23

if.then22:                                        ; preds = %if.end15
  br label %for.inc

if.end23:                                         ; preds = %if.end15
  %20 = load i8*, i8** %cmd.addr, align 4
  call void @strucpy(i8** %s, i8* %20)
  %21 = load i8*, i8** %pbuf.addr, align 4
  %call24 = call i32 @iscom(i8* %21)
  %tobool25 = icmp ne i32 %call24, 0
  br i1 %tobool25, label %if.then26, label %if.end27

if.then26:                                        ; preds = %if.end23
  %22 = load i8*, i8** %pbuf.addr, align 4
  store i8* %22, i8** %retval, align 4
  br label %return

if.end27:                                         ; preds = %if.end23
  br label %if.end28

if.end28:                                         ; preds = %if.end27, %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end28, %if.then22, %if.then13, %if.then6
  %23 = load i8*, i8** %pe, align 4
  %tobool29 = icmp ne i8* %23, null
  br i1 %tobool29, label %cond.true, label %cond.false

cond.true:                                        ; preds = %for.inc
  %24 = load i8*, i8** %pe, align 4
  %add.ptr = getelementptr inbounds i8, i8* %24, i32 1
  br label %cond.end

cond.false:                                       ; preds = %for.inc
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %add.ptr, %cond.true ], [ null, %cond.false ]
  store i8* %cond, i8** %ps, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store i8* null, i8** %retval, align 4
  br label %return

return:                                           ; preds = %for.end, %if.then26
  %25 = load i8*, i8** %retval, align 4
  ret i8* %25
}

declare i8* @dupstring(i8*) #1

; Function Attrs: noinline nounwind
define i32 @isrelative(i8* %s) #0 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca i8*, align 4
  store i8* %s, i8** %s.addr, align 4
  %0 = load i8*, i8** %s.addr, align 4
  %1 = load i8, i8* %0, align 1
  %conv = sext i8 %1 to i32
  %cmp = icmp ne i32 %conv, 47
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 1, i32* %retval, align 4
  br label %return

if.end:                                           ; preds = %entry
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end
  %2 = load i8*, i8** %s.addr, align 4
  %3 = load i8, i8* %2, align 1
  %tobool = icmp ne i8 %3, 0
  br i1 %tobool, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %4 = load i8*, i8** %s.addr, align 4
  %5 = load i8, i8* %4, align 1
  %conv2 = sext i8 %5 to i32
  %cmp3 = icmp eq i32 %conv2, 46
  br i1 %cmp3, label %land.lhs.true, label %if.end33

land.lhs.true:                                    ; preds = %for.body
  %6 = load i8*, i8** %s.addr, align 4
  %arrayidx = getelementptr inbounds i8, i8* %6, i32 -1
  %7 = load i8, i8* %arrayidx, align 1
  %conv5 = sext i8 %7 to i32
  %cmp6 = icmp eq i32 %conv5, 47
  br i1 %cmp6, label %land.lhs.true8, label %if.end33

land.lhs.true8:                                   ; preds = %land.lhs.true
  %8 = load i8*, i8** %s.addr, align 4
  %arrayidx9 = getelementptr inbounds i8, i8* %8, i32 1
  %9 = load i8, i8* %arrayidx9, align 1
  %conv10 = sext i8 %9 to i32
  %cmp11 = icmp eq i32 %conv10, 47
  br i1 %cmp11, label %if.then32, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true8
  %10 = load i8*, i8** %s.addr, align 4
  %arrayidx13 = getelementptr inbounds i8, i8* %10, i32 1
  %11 = load i8, i8* %arrayidx13, align 1
  %conv14 = sext i8 %11 to i32
  %cmp15 = icmp eq i32 %conv14, 0
  br i1 %cmp15, label %if.then32, label %lor.lhs.false17

lor.lhs.false17:                                  ; preds = %lor.lhs.false
  %12 = load i8*, i8** %s.addr, align 4
  %arrayidx18 = getelementptr inbounds i8, i8* %12, i32 1
  %13 = load i8, i8* %arrayidx18, align 1
  %conv19 = sext i8 %13 to i32
  %cmp20 = icmp eq i32 %conv19, 46
  br i1 %cmp20, label %land.lhs.true22, label %if.end33

land.lhs.true22:                                  ; preds = %lor.lhs.false17
  %14 = load i8*, i8** %s.addr, align 4
  %arrayidx23 = getelementptr inbounds i8, i8* %14, i32 2
  %15 = load i8, i8* %arrayidx23, align 1
  %conv24 = sext i8 %15 to i32
  %cmp25 = icmp eq i32 %conv24, 47
  br i1 %cmp25, label %if.then32, label %lor.lhs.false27

lor.lhs.false27:                                  ; preds = %land.lhs.true22
  %16 = load i8*, i8** %s.addr, align 4
  %arrayidx28 = getelementptr inbounds i8, i8* %16, i32 2
  %17 = load i8, i8* %arrayidx28, align 1
  %conv29 = sext i8 %17 to i32
  %cmp30 = icmp eq i32 %conv29, 0
  br i1 %cmp30, label %if.then32, label %if.end33

if.then32:                                        ; preds = %lor.lhs.false27, %land.lhs.true22, %lor.lhs.false, %land.lhs.true8
  store i32 1, i32* %retval, align 4
  br label %return

if.end33:                                         ; preds = %lor.lhs.false27, %lor.lhs.false17, %land.lhs.true, %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end33
  %18 = load i8*, i8** %s.addr, align 4
  %incdec.ptr = getelementptr inbounds i8, i8* %18, i32 1
  store i8* %incdec.ptr, i8** %s.addr, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %retval, align 4
  br label %return

return:                                           ; preds = %for.end, %if.then32, %if.then
  %19 = load i32, i32* %retval, align 4
  ret i32 %19
}

; Function Attrs: noinline nounwind
define %struct.cmdnam* @hashcmd(i8* %arg0, i8** %pp) #0 {
entry:
  %retval = alloca %struct.cmdnam*, align 4
  %arg0.addr = alloca i8*, align 4
  %pp.addr = alloca i8**, align 4
  %cn = alloca %struct.cmdnam*, align 4
  %s = alloca i8*, align 4
  %buf = alloca [4097 x i8], align 1
  %pq = alloca i8**, align 4
  store i8* %arg0, i8** %arg0.addr, align 4
  store i8** %pp, i8*** %pp.addr, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i8**, i8*** %pp.addr, align 4
  %1 = load i8*, i8** %0, align 4
  %tobool = icmp ne i8* %1, null
  br i1 %tobool, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %2 = load i8**, i8*** %pp.addr, align 4
  %3 = load i8*, i8** %2, align 4
  %4 = load i8, i8* %3, align 1
  %conv = sext i8 %4 to i32
  %cmp = icmp eq i32 %conv, 47
  br i1 %cmp, label %if.then, label %if.end12

if.then:                                          ; preds = %for.body
  %arraydecay = getelementptr inbounds [4097 x i8], [4097 x i8]* %buf, i32 0, i32 0
  store i8* %arraydecay, i8** %s, align 4
  %5 = load i8**, i8*** %pp.addr, align 4
  %6 = load i8*, i8** %5, align 4
  call void @struncpy(i8** %s, i8* %6, i32 4096)
  %7 = load i8*, i8** %s, align 4
  %incdec.ptr = getelementptr inbounds i8, i8* %7, i32 1
  store i8* %incdec.ptr, i8** %s, align 4
  store i8 47, i8* %7, align 1
  %8 = load i8*, i8** %s, align 4
  %arraydecay2 = getelementptr inbounds [4097 x i8], [4097 x i8]* %buf, i32 0, i32 0
  %sub.ptr.lhs.cast = ptrtoint i8* %8 to i32
  %sub.ptr.rhs.cast = ptrtoint i8* %arraydecay2 to i32
  %sub.ptr.sub = sub i32 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %9 = load i8*, i8** %arg0.addr, align 4
  %call = call i32 @strlen(i8* %9)
  %add = add i32 %sub.ptr.sub, %call
  %cmp3 = icmp uge i32 %add, 4096
  br i1 %cmp3, label %if.then5, label %if.end

if.then5:                                         ; preds = %if.then
  br label %for.inc

if.end:                                           ; preds = %if.then
  %10 = load i8*, i8** %s, align 4
  %11 = load i8*, i8** %arg0.addr, align 4
  %call6 = call i8* @strcpy(i8* %10, i8* %11)
  %arraydecay7 = getelementptr inbounds [4097 x i8], [4097 x i8]* %buf, i32 0, i32 0
  %call8 = call i32 @iscom(i8* %arraydecay7)
  %tobool9 = icmp ne i32 %call8, 0
  br i1 %tobool9, label %if.then10, label %if.end11

if.then10:                                        ; preds = %if.end
  br label %for.end

if.end11:                                         ; preds = %if.end
  br label %if.end12

if.end12:                                         ; preds = %if.end11, %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end12, %if.then5
  %12 = load i8**, i8*** %pp.addr, align 4
  %incdec.ptr13 = getelementptr inbounds i8*, i8** %12, i32 1
  store i8** %incdec.ptr13, i8*** %pp.addr, align 4
  br label %for.cond

for.end:                                          ; preds = %if.then10, %for.cond
  %13 = load i8**, i8*** %pp.addr, align 4
  %14 = load i8*, i8** %13, align 4
  %tobool14 = icmp ne i8* %14, null
  br i1 %tobool14, label %if.end16, label %if.then15

if.then15:                                        ; preds = %for.end
  store %struct.cmdnam* null, %struct.cmdnam** %retval, align 4
  br label %return

if.end16:                                         ; preds = %for.end
  %call17 = call i8* @zshcalloc(i32 16)
  %15 = bitcast i8* %call17 to %struct.cmdnam*
  store %struct.cmdnam* %15, %struct.cmdnam** %cn, align 4
  %16 = load %struct.cmdnam*, %struct.cmdnam** %cn, align 4
  %node = getelementptr inbounds %struct.cmdnam, %struct.cmdnam* %16, i32 0, i32 0
  %flags = getelementptr inbounds %struct.hashnode, %struct.hashnode* %node, i32 0, i32 2
  store i32 0, i32* %flags, align 4
  %17 = load i8**, i8*** %pp.addr, align 4
  %18 = load %struct.cmdnam*, %struct.cmdnam** %cn, align 4
  %u = getelementptr inbounds %struct.cmdnam, %struct.cmdnam* %18, i32 0, i32 1
  %name = bitcast %union.anon* %u to i8***
  store i8** %17, i8*** %name, align 4
  %19 = load %struct.hashtable*, %struct.hashtable** @cmdnamtab, align 4
  %addnode = getelementptr inbounds %struct.hashtable, %struct.hashtable* %19, i32 0, i32 8
  %20 = load void (%struct.hashtable*, i8*, i8*)*, void (%struct.hashtable*, i8*, i8*)** %addnode, align 4
  %21 = load %struct.hashtable*, %struct.hashtable** @cmdnamtab, align 4
  %22 = load i8*, i8** %arg0.addr, align 4
  %call18 = call i8* @ztrdup(i8* %22)
  %23 = load %struct.cmdnam*, %struct.cmdnam** %cn, align 4
  %24 = bitcast %struct.cmdnam* %23 to i8*
  call void %20(%struct.hashtable* %21, i8* %call18, i8* %24)
  %25 = load i8, i8* getelementptr inbounds ([181 x i8], [181 x i8]* @opts, i32 0, i32 69), align 1
  %tobool19 = icmp ne i8 %25, 0
  br i1 %tobool19, label %if.then20, label %if.end28

if.then20:                                        ; preds = %if.end16
  %26 = load i8**, i8*** @pathchecked, align 4
  store i8** %26, i8*** %pq, align 4
  br label %for.cond21

for.cond21:                                       ; preds = %for.inc25, %if.then20
  %27 = load i8**, i8*** %pq, align 4
  %28 = load i8**, i8*** %pp.addr, align 4
  %cmp22 = icmp ule i8** %27, %28
  br i1 %cmp22, label %for.body24, label %for.end27

for.body24:                                       ; preds = %for.cond21
  %29 = load i8**, i8*** %pq, align 4
  call void @hashdir(i8** %29)
  br label %for.inc25

for.inc25:                                        ; preds = %for.body24
  %30 = load i8**, i8*** %pq, align 4
  %incdec.ptr26 = getelementptr inbounds i8*, i8** %30, i32 1
  store i8** %incdec.ptr26, i8*** %pq, align 4
  br label %for.cond21

for.end27:                                        ; preds = %for.cond21
  %31 = load i8**, i8*** %pp.addr, align 4
  %add.ptr = getelementptr inbounds i8*, i8** %31, i32 1
  store i8** %add.ptr, i8*** @pathchecked, align 4
  br label %if.end28

if.end28:                                         ; preds = %for.end27, %if.end16
  %32 = load %struct.cmdnam*, %struct.cmdnam** %cn, align 4
  store %struct.cmdnam* %32, %struct.cmdnam** %retval, align 4
  br label %return

return:                                           ; preds = %if.end28, %if.then15
  %33 = load %struct.cmdnam*, %struct.cmdnam** %retval, align 4
  ret %struct.cmdnam* %33
}

declare i32 @strlen(i8*) #1

declare i8* @strchr(i8*, i32) #1

; Function Attrs: noinline nounwind
define i32 @iscom(i8* %s) #0 {
entry:
  %s.addr = alloca i8*, align 4
  %statbuf = alloca %struct.stat, align 8
  %us = alloca i8*, align 4
  store i8* %s, i8** %s.addr, align 4
  %0 = load i8*, i8** %s.addr, align 4
  %call = call i8* @unmeta(i8* %0)
  store i8* %call, i8** %us, align 4
  %1 = load i8*, i8** %us, align 4
  %call1 = call i32 @access(i8* %1, i32 1)
  %cmp = icmp eq i32 %call1, 0
  br i1 %cmp, label %land.lhs.true, label %land.end

land.lhs.true:                                    ; preds = %entry
  %2 = load i8*, i8** %us, align 4
  %call2 = call i32 @stat(i8* %2, %struct.stat* %statbuf)
  %cmp3 = icmp sge i32 %call2, 0
  br i1 %cmp3, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %land.lhs.true
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %statbuf, i32 0, i32 6
  %3 = load i32, i32* %st_mode, align 8
  %and = and i32 %3, 61440
  %cmp4 = icmp eq i32 %and, 32768
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true, %entry
  %4 = phi i1 [ false, %land.lhs.true ], [ false, %entry ], [ %cmp4, %land.rhs ]
  %land.ext = zext i1 %4 to i32
  ret i32 %land.ext
}

declare i32 @strncmp(i8*, i8*, i32) #1

declare i8* @strcpy(i8*, i8*) #1

declare void @strucpy(i8**, i8*) #1

declare i8* @strcat(i8*, i8*) #1

declare i8* @unmeta(i8*) #1

declare i32 @access(i8*, i32) #1

declare i32 @stat(i8*, %struct.stat*) #1

; Function Attrs: noinline nounwind
define i32 @isreallycom(%struct.cmdnam* %cn) #0 {
entry:
  %retval = alloca i32, align 4
  %cn.addr = alloca %struct.cmdnam*, align 4
  %fullnam = alloca [16384 x i8], align 1
  store %struct.cmdnam* %cn, %struct.cmdnam** %cn.addr, align 4
  %0 = load %struct.cmdnam*, %struct.cmdnam** %cn.addr, align 4
  %node = getelementptr inbounds %struct.cmdnam, %struct.cmdnam* %0, i32 0, i32 0
  %flags = getelementptr inbounds %struct.hashnode, %struct.hashnode* %node, i32 0, i32 2
  %1 = load i32, i32* %flags, align 4
  %and = and i32 %1, 2
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %arraydecay = getelementptr inbounds [16384 x i8], [16384 x i8]* %fullnam, i32 0, i32 0
  %2 = load %struct.cmdnam*, %struct.cmdnam** %cn.addr, align 4
  %u = getelementptr inbounds %struct.cmdnam, %struct.cmdnam* %2, i32 0, i32 1
  %cmd = bitcast %union.anon* %u to i8**
  %3 = load i8*, i8** %cmd, align 4
  %call = call i8* @strcpy(i8* %arraydecay, i8* %3)
  br label %if.end14

if.else:                                          ; preds = %entry
  %4 = load %struct.cmdnam*, %struct.cmdnam** %cn.addr, align 4
  %u1 = getelementptr inbounds %struct.cmdnam, %struct.cmdnam* %4, i32 0, i32 1
  %name = bitcast %union.anon* %u1 to i8***
  %5 = load i8**, i8*** %name, align 4
  %tobool2 = icmp ne i8** %5, null
  br i1 %tobool2, label %if.else4, label %if.then3

if.then3:                                         ; preds = %if.else
  store i32 0, i32* %retval, align 4
  br label %return

if.else4:                                         ; preds = %if.else
  %arraydecay5 = getelementptr inbounds [16384 x i8], [16384 x i8]* %fullnam, i32 0, i32 0
  %6 = load %struct.cmdnam*, %struct.cmdnam** %cn.addr, align 4
  %u6 = getelementptr inbounds %struct.cmdnam, %struct.cmdnam* %6, i32 0, i32 1
  %name7 = bitcast %union.anon* %u6 to i8***
  %7 = load i8**, i8*** %name7, align 4
  %8 = load i8*, i8** %7, align 4
  %call8 = call i8* @strcpy(i8* %arraydecay5, i8* %8)
  %arraydecay9 = getelementptr inbounds [16384 x i8], [16384 x i8]* %fullnam, i32 0, i32 0
  %call10 = call i8* @strcat(i8* %arraydecay9, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i32 0, i32 0))
  %arraydecay11 = getelementptr inbounds [16384 x i8], [16384 x i8]* %fullnam, i32 0, i32 0
  %9 = load %struct.cmdnam*, %struct.cmdnam** %cn.addr, align 4
  %node12 = getelementptr inbounds %struct.cmdnam, %struct.cmdnam* %9, i32 0, i32 0
  %nam = getelementptr inbounds %struct.hashnode, %struct.hashnode* %node12, i32 0, i32 1
  %10 = load i8*, i8** %nam, align 4
  %call13 = call i8* @strcat(i8* %arraydecay11, i8* %10)
  br label %if.end

if.end:                                           ; preds = %if.else4
  br label %if.end14

if.end14:                                         ; preds = %if.end, %if.then
  %arraydecay15 = getelementptr inbounds [16384 x i8], [16384 x i8]* %fullnam, i32 0, i32 0
  %call16 = call i32 @iscom(i8* %arraydecay15)
  store i32 %call16, i32* %retval, align 4
  br label %return

return:                                           ; preds = %if.end14, %if.then3
  %11 = load i32, i32* %retval, align 4
  ret i32 %11
}

declare void @struncpy(i8**, i8*, i32) #1

declare i8* @zshcalloc(i32) #1

declare i8* @ztrdup(i8*) #1

declare void @hashdir(i8**) #1

; Function Attrs: noinline nounwind
define void @execstring(i8* %s, i32 %dont_change_job, i32 %exiting, i8* %context) #0 {
entry:
  %s.addr = alloca i8*, align 4
  %dont_change_job.addr = alloca i32, align 4
  %exiting.addr = alloca i32, align 4
  %context.addr = alloca i8*, align 4
  %prog = alloca %struct.eprog*, align 4
  store i8* %s, i8** %s.addr, align 4
  store i32 %dont_change_job, i32* %dont_change_job.addr, align 4
  store i32 %exiting, i32* %exiting.addr, align 4
  store i8* %context, i8** %context.addr, align 4
  call void @pushheap()
  %0 = load i8, i8* getelementptr inbounds ([181 x i8], [181 x i8]* @opts, i32 0, i32 174), align 1
  %tobool = icmp ne i8 %0, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %1 = load i8*, i8** %s.addr, align 4
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 4
  %call = call i32 @zputs(i8* %1, %struct._IO_FILE* %2)
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 4
  %call1 = call i32 @fputc(i32 10, %struct._IO_FILE* %3)
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 4
  %call2 = call i32 @fflush(%struct._IO_FILE* %4)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %5 = load i8*, i8** %s.addr, align 4
  %call3 = call %struct.eprog* @parse_string(i8* %5, i32 0)
  store %struct.eprog* %call3, %struct.eprog** %prog, align 4
  %tobool4 = icmp ne %struct.eprog* %call3, null
  br i1 %tobool4, label %if.then5, label %if.end6

if.then5:                                         ; preds = %if.end
  %6 = load %struct.eprog*, %struct.eprog** %prog, align 4
  %7 = load i32, i32* %dont_change_job.addr, align 4
  %8 = load i32, i32* %exiting.addr, align 4
  %9 = load i8*, i8** %context.addr, align 4
  call void @execode(%struct.eprog* %6, i32 %7, i32 %8, i8* %9)
  br label %if.end6

if.end6:                                          ; preds = %if.then5, %if.end
  call void @popheap()
  ret void
}

declare void @pushheap() #1

declare i32 @zputs(i8*, %struct._IO_FILE*) #1

declare i32 @fputc(i32, %struct._IO_FILE*) #1

declare i32 @fflush(%struct._IO_FILE*) #1

; Function Attrs: noinline nounwind
define void @execode(%struct.eprog* %p, i32 %dont_change_job, i32 %exiting, i8* %context) #0 {
entry:
  %p.addr = alloca %struct.eprog*, align 4
  %dont_change_job.addr = alloca i32, align 4
  %exiting.addr = alloca i32, align 4
  %context.addr = alloca i8*, align 4
  %s = alloca %struct.estate, align 4
  %alen = alloca i32, align 4
  store %struct.eprog* %p, %struct.eprog** %p.addr, align 4
  store i32 %dont_change_job, i32* %dont_change_job.addr, align 4
  store i32 %exiting, i32* %exiting.addr, align 4
  store i8* %context, i8** %context.addr, align 4
  %0 = load i32, i32* @execode.zsh_eval_context_len, align 4
  %tobool = icmp ne i32 %0, 0
  br i1 %tobool, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  store i32 16, i32* @execode.zsh_eval_context_len, align 4
  store i32 0, i32* %alen, align 4
  %1 = load i32, i32* @execode.zsh_eval_context_len, align 4
  %mul = mul i32 %1, 4
  %call = call i8* @zalloc(i32 %mul)
  %2 = bitcast i8* %call to i8**
  store i8** %2, i8*** @zsh_eval_context, align 4
  br label %if.end6

if.else:                                          ; preds = %entry
  %3 = load i8**, i8*** @zsh_eval_context, align 4
  %call1 = call i32 @arrlen(i8** %3)
  store i32 %call1, i32* %alen, align 4
  %4 = load i32, i32* @execode.zsh_eval_context_len, align 4
  %5 = load i32, i32* %alen, align 4
  %add = add nsw i32 %5, 1
  %cmp = icmp eq i32 %4, %add
  br i1 %cmp, label %if.then2, label %if.end

if.then2:                                         ; preds = %if.else
  %6 = load i32, i32* @execode.zsh_eval_context_len, align 4
  %mul3 = mul nsw i32 %6, 2
  store i32 %mul3, i32* @execode.zsh_eval_context_len, align 4
  %7 = load i8**, i8*** @zsh_eval_context, align 4
  %8 = bitcast i8** %7 to i8*
  %9 = load i32, i32* @execode.zsh_eval_context_len, align 4
  %mul4 = mul i32 %9, 4
  %call5 = call i8* @zrealloc(i8* %8, i32 %mul4)
  %10 = bitcast i8* %call5 to i8**
  store i8** %10, i8*** @zsh_eval_context, align 4
  br label %if.end

if.end:                                           ; preds = %if.then2, %if.else
  br label %if.end6

if.end6:                                          ; preds = %if.end, %if.then
  %11 = load i8*, i8** %context.addr, align 4
  %12 = load i8**, i8*** @zsh_eval_context, align 4
  %13 = load i32, i32* %alen, align 4
  %arrayidx = getelementptr inbounds i8*, i8** %12, i32 %13
  store i8* %11, i8** %arrayidx, align 4
  %14 = load i8**, i8*** @zsh_eval_context, align 4
  %15 = load i32, i32* %alen, align 4
  %add7 = add nsw i32 %15, 1
  %arrayidx8 = getelementptr inbounds i8*, i8** %14, i32 %add7
  store i8* null, i8** %arrayidx8, align 4
  %16 = load %struct.eprog*, %struct.eprog** %p.addr, align 4
  %prog = getelementptr inbounds %struct.estate, %struct.estate* %s, i32 0, i32 0
  store %struct.eprog* %16, %struct.eprog** %prog, align 4
  %17 = load %struct.eprog*, %struct.eprog** %p.addr, align 4
  %prog9 = getelementptr inbounds %struct.eprog, %struct.eprog* %17, i32 0, i32 5
  %18 = load i32*, i32** %prog9, align 4
  %pc = getelementptr inbounds %struct.estate, %struct.estate* %s, i32 0, i32 1
  store i32* %18, i32** %pc, align 4
  %19 = load %struct.eprog*, %struct.eprog** %p.addr, align 4
  %strs = getelementptr inbounds %struct.eprog, %struct.eprog* %19, i32 0, i32 6
  %20 = load i8*, i8** %strs, align 4
  %strs10 = getelementptr inbounds %struct.estate, %struct.estate* %s, i32 0, i32 2
  store i8* %20, i8** %strs10, align 4
  %21 = load %struct.eprog*, %struct.eprog** %p.addr, align 4
  call void @useeprog(%struct.eprog* %21)
  %22 = load i32, i32* %dont_change_job.addr, align 4
  %23 = load i32, i32* %exiting.addr, align 4
  call void @execlist(%struct.estate* %s, i32 %22, i32 %23)
  %24 = load %struct.eprog*, %struct.eprog** %p.addr, align 4
  call void @freeeprog(%struct.eprog* %24)
  %25 = load i8**, i8*** @zsh_eval_context, align 4
  %26 = load i32, i32* %alen, align 4
  %arrayidx11 = getelementptr inbounds i8*, i8** %25, i32 %26
  store i8* null, i8** %arrayidx11, align 4
  ret void
}

declare void @popheap() #1

declare i8* @zalloc(i32) #1

declare i32 @arrlen(i8**) #1

declare i8* @zrealloc(i8*, i32) #1

declare void @useeprog(%struct.eprog*) #1

; Function Attrs: noinline nounwind
define void @execlist(%struct.estate* %state, i32 %dont_change_job, i32 %exiting) #0 {
entry:
  %state.addr = alloca %struct.estate*, align 4
  %dont_change_job.addr = alloca i32, align 4
  %exiting.addr = alloca i32, align 4
  %next = alloca i32*, align 4
  %code = alloca i32, align 4
  %ret = alloca i32, align 4
  %cj = alloca i32, align 4
  %csp = alloca i32, align 4
  %ltype = alloca i32, align 4
  %old_pline_level = alloca i32, align 4
  %old_list_pipe = alloca i32, align 4
  %old_list_pipe_job = alloca i32, align 4
  %old_list_pipe_text = alloca i8*, align 4
  %oldlineno = alloca i32, align 4
  %oldnoerrexit = alloca i32, align 4
  %donedebug = alloca i32, align 4
  %this_donetrap = alloca i32, align 4
  %code2 = alloca i32, align 4
  %lnp1 = alloca i32, align 4
  %pc2 = alloca i32*, align 4
  %oerrexit_opt = alloca i32, align 4
  %pm = alloca %struct.param*, align 4
  %isend = alloca i32, align 4
  %oerrexit_opt278 = alloca i32, align 4
  %errreturn = alloca i32, align 4
  %errexit = alloca i32, align 4
  %oset = alloca %struct.__sigset_t, align 4
  %tmp = alloca %struct.__sigset_t, align 4
  %tmp373 = alloca %struct.__sigset_t, align 4
  store %struct.estate* %state, %struct.estate** %state.addr, align 4
  store i32 %dont_change_job, i32* %dont_change_job.addr, align 4
  store i32 %exiting, i32* %exiting.addr, align 4
  %0 = load i32, i32* @noerrexit, align 4
  store i32 %0, i32* %oldnoerrexit, align 4
  %1 = load i32, i32* @queueing_enabled, align 4
  %inc = add nsw i32 %1, 1
  store i32 %inc, i32* @queueing_enabled, align 4
  %2 = load i32, i32* @thisjob, align 4
  store i32 %2, i32* %cj, align 4
  %3 = load i32, i32* @pline_level, align 4
  store i32 %3, i32* %old_pline_level, align 4
  %4 = load i32, i32* @list_pipe, align 4
  store i32 %4, i32* %old_list_pipe, align 4
  %5 = load i32, i32* @list_pipe_job, align 4
  store i32 %5, i32* %old_list_pipe_job, align 4
  %6 = load i8, i8* getelementptr inbounds ([80 x i8], [80 x i8]* @list_pipe_text, i32 0, i32 0), align 1
  %tobool = icmp ne i8 %6, 0
  br i1 %tobool, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %call = call i8* @ztrdup(i8* getelementptr inbounds ([80 x i8], [80 x i8]* @list_pipe_text, i32 0, i32 0))
  store i8* %call, i8** %old_list_pipe_text, align 4
  br label %if.end

if.else:                                          ; preds = %entry
  store i8* null, i8** %old_list_pipe_text, align 4
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %7 = load i32, i32* @lineno, align 4
  store i32 %7, i32* %oldlineno, align 4
  %8 = load i32, i32* @sourcelevel, align 4
  %tobool1 = icmp ne i32 %8, 0
  br i1 %tobool1, label %land.lhs.true, label %if.end4

land.lhs.true:                                    ; preds = %if.end
  %9 = load i8, i8* getelementptr inbounds ([181 x i8], [181 x i8]* @opts, i32 0, i32 161), align 1
  %tobool2 = icmp ne i8 %9, 0
  br i1 %tobool2, label %if.end4, label %if.then3

if.then3:                                         ; preds = %land.lhs.true
  store i32 0, i32* @list_pipe_job, align 4
  store i32 0, i32* @list_pipe, align 4
  store i32 0, i32* @pline_level, align 4
  store i8 0, i8* getelementptr inbounds ([80 x i8], [80 x i8]* @list_pipe_text, i32 0, i32 0), align 1
  br label %if.end4

if.end4:                                          ; preds = %if.then3, %land.lhs.true, %if.end
  %10 = load %struct.estate*, %struct.estate** %state.addr, align 4
  %pc = getelementptr inbounds %struct.estate, %struct.estate* %10, i32 0, i32 1
  %11 = load i32*, i32** %pc, align 4
  %incdec.ptr = getelementptr inbounds i32, i32* %11, i32 1
  store i32* %incdec.ptr, i32** %pc, align 4
  %12 = load i32, i32* %11, align 4
  store i32 %12, i32* %code, align 4
  %13 = load i32, i32* %code, align 4
  %and = and i32 %13, 31
  %cmp = icmp ne i32 %and, 1
  br i1 %cmp, label %if.then5, label %if.end6

if.then5:                                         ; preds = %if.end4
  store i32 0, i32* @lastval, align 4
  br label %if.end6

if.end6:                                          ; preds = %if.then5, %if.end4
  br label %while.cond

while.cond:                                       ; preds = %if.end347, %if.end6
  %14 = load i32, i32* %code, align 4
  %and7 = and i32 %14, 31
  %cmp8 = icmp eq i32 %and7, 1
  br i1 %cmp8, label %land.lhs.true9, label %land.end

land.lhs.true9:                                   ; preds = %while.cond
  %15 = load i32, i32* @breaks, align 4
  %tobool10 = icmp ne i32 %15, 0
  br i1 %tobool10, label %land.end, label %land.lhs.true11

land.lhs.true11:                                  ; preds = %land.lhs.true9
  %16 = load i32, i32* @retflag, align 4
  %tobool12 = icmp ne i32 %16, 0
  br i1 %tobool12, label %land.end, label %land.rhs

land.rhs:                                         ; preds = %land.lhs.true11
  %17 = load i32, i32* @errflag, align 4
  %tobool13 = icmp ne i32 %17, 0
  %lnot = xor i1 %tobool13, true
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true11, %land.lhs.true9, %while.cond
  %18 = phi i1 [ false, %land.lhs.true11 ], [ false, %land.lhs.true9 ], [ false, %while.cond ], [ %lnot, %land.rhs ]
  br i1 %18, label %while.body, label %while.end350

while.body:                                       ; preds = %land.end
  store i32 0, i32* %this_donetrap, align 4
  store i32 0, i32* @this_noerrexit, align 4
  %19 = load i32, i32* %code, align 4
  %shr = lshr i32 %19, 5
  store i32 %shr, i32* %ltype, align 4
  %20 = load i32, i32* @cmdsp, align 4
  store i32 %20, i32* %csp, align 4
  %21 = load i32, i32* @intrap, align 4
  %tobool14 = icmp ne i32 %21, 0
  br i1 %tobool14, label %land.lhs.true15, label %land.lhs.true19

land.lhs.true15:                                  ; preds = %while.body
  %22 = load i32, i32* @trapisfunc, align 4
  %tobool16 = icmp ne i32 %22, 0
  br i1 %tobool16, label %land.lhs.true19, label %land.lhs.true17

land.lhs.true17:                                  ; preds = %land.lhs.true15
  %23 = load i32, i32* @traplocallevel, align 4
  %24 = load i32, i32* @locallevel, align 4
  %cmp18 = icmp eq i32 %23, %24
  br i1 %cmp18, label %if.end46, label %land.lhs.true19

land.lhs.true19:                                  ; preds = %land.lhs.true17, %land.lhs.true15, %while.body
  %25 = load i32, i32* @ineval, align 4
  %tobool20 = icmp ne i32 %25, 0
  br i1 %tobool20, label %if.end46, label %if.then21

if.then21:                                        ; preds = %land.lhs.true19
  %26 = load %struct.estate*, %struct.estate** %state.addr, align 4
  %pc22 = getelementptr inbounds %struct.estate, %struct.estate* %26, i32 0, i32 1
  %27 = load i32*, i32** %pc22, align 4
  %28 = load i32, i32* %27, align 4
  store i32 %28, i32* %code2, align 4
  store i32 0, i32* %lnp1, align 4
  %29 = load i32, i32* %ltype, align 4
  %and23 = and i32 %29, 32
  %tobool24 = icmp ne i32 %and23, 0
  br i1 %tobool24, label %if.then25, label %if.else26

if.then25:                                        ; preds = %if.then21
  %30 = load i32, i32* %code2, align 4
  store i32 %30, i32* %lnp1, align 4
  br label %if.end42

if.else26:                                        ; preds = %if.then21
  %31 = load i32, i32* %code2, align 4
  %and27 = and i32 %31, 31
  %cmp28 = icmp eq i32 %and27, 2
  br i1 %cmp28, label %if.then29, label %if.end41

if.then29:                                        ; preds = %if.else26
  %32 = load i32, i32* %code2, align 4
  %shr30 = lshr i32 %32, 5
  %and31 = and i32 %shr30, 28
  %cmp32 = icmp eq i32 %and31, 16
  br i1 %cmp32, label %if.then33, label %if.else35

if.then33:                                        ; preds = %if.then29
  %33 = load %struct.estate*, %struct.estate** %state.addr, align 4
  %pc34 = getelementptr inbounds %struct.estate, %struct.estate* %33, i32 0, i32 1
  %34 = load i32*, i32** %pc34, align 4
  %arrayidx = getelementptr inbounds i32, i32* %34, i32 1
  %35 = load i32, i32* %arrayidx, align 4
  store i32 %35, i32* %lnp1, align 4
  br label %if.end40

if.else35:                                        ; preds = %if.then29
  %36 = load %struct.estate*, %struct.estate** %state.addr, align 4
  %pc36 = getelementptr inbounds %struct.estate, %struct.estate* %36, i32 0, i32 1
  %37 = load i32*, i32** %pc36, align 4
  %arrayidx37 = getelementptr inbounds i32, i32* %37, i32 1
  %38 = load i32, i32* %arrayidx37, align 4
  %shr38 = lshr i32 %38, 5
  %shr39 = lshr i32 %shr38, 1
  store i32 %shr39, i32* %lnp1, align 4
  br label %if.end40

if.end40:                                         ; preds = %if.else35, %if.then33
  br label %if.end41

if.end41:                                         ; preds = %if.end40, %if.else26
  br label %if.end42

if.end42:                                         ; preds = %if.end41, %if.then25
  %39 = load i32, i32* %lnp1, align 4
  %tobool43 = icmp ne i32 %39, 0
  br i1 %tobool43, label %if.then44, label %if.end45

if.then44:                                        ; preds = %if.end42
  %40 = load i32, i32* %lnp1, align 4
  %sub = sub i32 %40, 1
  store i32 %sub, i32* @lineno, align 4
  br label %if.end45

if.end45:                                         ; preds = %if.then44, %if.end42
  br label %if.end46

if.end46:                                         ; preds = %if.end45, %land.lhs.true19, %land.lhs.true17
  %41 = load i32, i32* getelementptr inbounds ([34 x i32], [34 x i32]* @sigtrapped, i32 0, i32 33), align 4
  %tobool47 = icmp ne i32 %41, 0
  br i1 %tobool47, label %land.lhs.true48, label %if.else72

land.lhs.true48:                                  ; preds = %if.end46
  %42 = load i8, i8* getelementptr inbounds ([181 x i8], [181 x i8]* @opts, i32 0, i32 48), align 1
  %conv = sext i8 %42 to i32
  %tobool49 = icmp ne i32 %conv, 0
  br i1 %tobool49, label %land.lhs.true50, label %if.else72

land.lhs.true50:                                  ; preds = %land.lhs.true48
  %43 = load i32, i32* @intrap, align 4
  %tobool51 = icmp ne i32 %43, 0
  br i1 %tobool51, label %if.else72, label %if.then52

if.then52:                                        ; preds = %land.lhs.true50
  %44 = load %struct.estate*, %struct.estate** %state.addr, align 4
  %pc53 = getelementptr inbounds %struct.estate, %struct.estate* %44, i32 0, i32 1
  %45 = load i32*, i32** %pc53, align 4
  store i32* %45, i32** %pc2, align 4
  %46 = load i8, i8* getelementptr inbounds ([181 x i8], [181 x i8]* @opts, i32 0, i32 51), align 1
  %conv54 = sext i8 %46 to i32
  store i32 %conv54, i32* %oerrexit_opt, align 4
  store i8 0, i8* getelementptr inbounds ([181 x i8], [181 x i8]* @opts, i32 0, i32 51), align 1
  store i32 3, i32* @noerrexit, align 4
  %47 = load i32, i32* %ltype, align 4
  %and55 = and i32 %47, 32
  %tobool56 = icmp ne i32 %and55, 0
  br i1 %tobool56, label %if.then57, label %if.end59

if.then57:                                        ; preds = %if.then52
  %48 = load i32*, i32** %pc2, align 4
  %incdec.ptr58 = getelementptr inbounds i32, i32* %48, i32 1
  store i32* %incdec.ptr58, i32** %pc2, align 4
  br label %if.end59

if.end59:                                         ; preds = %if.then57, %if.then52
  %49 = load %struct.estate*, %struct.estate** %state.addr, align 4
  %prog = getelementptr inbounds %struct.estate, %struct.estate* %49, i32 0, i32 0
  %50 = load %struct.eprog*, %struct.eprog** %prog, align 4
  %51 = load i32*, i32** %pc2, align 4
  %call60 = call i8* @getpermtext(%struct.eprog* %50, i32* %51, i32 0)
  %call61 = call %struct.param* @assignsparam(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.5, i32 0, i32 0), i8* %call60, i32 0)
  store %struct.param* %call61, %struct.param** %pm, align 4
  %52 = load i32, i32* @execlist.donetrap, align 4
  store i32 %52, i32* %exiting.addr, align 4
  %53 = load i32, i32* @lastval, align 4
  store i32 %53, i32* %ret, align 4
  call void @dotrap(i32 33)
  %54 = load i32, i32* @retflag, align 4
  %tobool62 = icmp ne i32 %54, 0
  br i1 %tobool62, label %if.end64, label %if.then63

if.then63:                                        ; preds = %if.end59
  %55 = load i32, i32* %ret, align 4
  store i32 %55, i32* @lastval, align 4
  br label %if.end64

if.end64:                                         ; preds = %if.then63, %if.end59
  %56 = load i32, i32* %exiting.addr, align 4
  store i32 %56, i32* @execlist.donetrap, align 4
  %57 = load i32, i32* %oldnoerrexit, align 4
  store i32 %57, i32* @noerrexit, align 4
  %58 = load i8, i8* getelementptr inbounds ([181 x i8], [181 x i8]* @opts, i32 0, i32 51), align 1
  %conv65 = sext i8 %58 to i32
  %tobool66 = icmp ne i32 %conv65, 0
  %cond = select i1 %tobool66, i32 2, i32 1
  store i32 %cond, i32* %donedebug, align 4
  %59 = load i32, i32* %oerrexit_opt, align 4
  %conv67 = trunc i32 %59 to i8
  store i8 %conv67, i8* getelementptr inbounds ([181 x i8], [181 x i8]* @opts, i32 0, i32 51), align 1
  %60 = load %struct.param*, %struct.param** %pm, align 4
  %tobool68 = icmp ne %struct.param* %60, null
  br i1 %tobool68, label %if.then69, label %if.end71

if.then69:                                        ; preds = %if.end64
  %61 = load %struct.param*, %struct.param** %pm, align 4
  %call70 = call i32 @unsetparam_pm(%struct.param* %61, i32 0, i32 1)
  br label %if.end71

if.end71:                                         ; preds = %if.then69, %if.end64
  br label %if.end75

if.else72:                                        ; preds = %land.lhs.true50, %land.lhs.true48, %if.end46
  %62 = load i32, i32* @intrap, align 4
  %tobool73 = icmp ne i32 %62, 0
  %cond74 = select i1 %tobool73, i32 1, i32 0
  store i32 %cond74, i32* %donedebug, align 4
  br label %if.end75

if.end75:                                         ; preds = %if.else72, %if.end71
  store i32 0, i32* @execlist.donetrap, align 4
  %63 = load i32, i32* %ltype, align 4
  %and76 = and i32 %63, 32
  %tobool77 = icmp ne i32 %and76, 0
  br i1 %tobool77, label %if.then78, label %if.end88

if.then78:                                        ; preds = %if.end75
  %64 = load %struct.estate*, %struct.estate** %state.addr, align 4
  %pc79 = getelementptr inbounds %struct.estate, %struct.estate* %64, i32 0, i32 1
  %65 = load i32*, i32** %pc79, align 4
  %66 = load i32, i32* %code, align 4
  %shr80 = lshr i32 %66, 5
  %shr81 = lshr i32 %shr80, 6
  %add.ptr = getelementptr inbounds i32, i32* %65, i32 %shr81
  store i32* %add.ptr, i32** %next, align 4
  %67 = load i32, i32* %donedebug, align 4
  %cmp82 = icmp ne i32 %67, 2
  br i1 %cmp82, label %if.then84, label %if.end86

if.then84:                                        ; preds = %if.then78
  %68 = load %struct.estate*, %struct.estate** %state.addr, align 4
  %call85 = call i32 @execsimple(%struct.estate* %68)
  br label %if.end86

if.end86:                                         ; preds = %if.then84, %if.then78
  %69 = load i32*, i32** %next, align 4
  %70 = load %struct.estate*, %struct.estate** %state.addr, align 4
  %pc87 = getelementptr inbounds %struct.estate, %struct.estate* %70, i32 0, i32 1
  store i32* %69, i32** %pc87, align 4
  br label %sublist_done

if.end88:                                         ; preds = %if.end75
  %71 = load %struct.estate*, %struct.estate** %state.addr, align 4
  %pc89 = getelementptr inbounds %struct.estate, %struct.estate* %71, i32 0, i32 1
  %72 = load i32*, i32** %pc89, align 4
  %incdec.ptr90 = getelementptr inbounds i32, i32* %72, i32 1
  store i32* %incdec.ptr90, i32** %pc89, align 4
  %73 = load i32, i32* %72, align 4
  store i32 %73, i32* %code, align 4
  %74 = load i32, i32* %donedebug, align 4
  %cmp91 = icmp eq i32 %74, 2
  br i1 %cmp91, label %if.then93, label %if.end112

if.then93:                                        ; preds = %if.end88
  br label %while.cond94

while.cond94:                                     ; preds = %if.end109, %if.then93
  %75 = load i32, i32* %code, align 4
  %and95 = and i32 %75, 31
  %cmp96 = icmp eq i32 %and95, 2
  br i1 %cmp96, label %while.body98, label %while.end

while.body98:                                     ; preds = %while.cond94
  %76 = load %struct.estate*, %struct.estate** %state.addr, align 4
  %pc99 = getelementptr inbounds %struct.estate, %struct.estate* %76, i32 0, i32 1
  %77 = load i32*, i32** %pc99, align 4
  %78 = load i32, i32* %code, align 4
  %shr100 = lshr i32 %78, 5
  %shr101 = lshr i32 %shr100, 5
  %add.ptr102 = getelementptr inbounds i32, i32* %77, i32 %shr101
  %79 = load %struct.estate*, %struct.estate** %state.addr, align 4
  %pc103 = getelementptr inbounds %struct.estate, %struct.estate* %79, i32 0, i32 1
  store i32* %add.ptr102, i32** %pc103, align 4
  %80 = load i32, i32* %code, align 4
  %shr104 = lshr i32 %80, 5
  %and105 = and i32 %shr104, 3
  %cmp106 = icmp eq i32 %and105, 0
  br i1 %cmp106, label %if.then108, label %if.end109

if.then108:                                       ; preds = %while.body98
  br label %while.end

if.end109:                                        ; preds = %while.body98
  %81 = load %struct.estate*, %struct.estate** %state.addr, align 4
  %pc110 = getelementptr inbounds %struct.estate, %struct.estate* %81, i32 0, i32 1
  %82 = load i32*, i32** %pc110, align 4
  %incdec.ptr111 = getelementptr inbounds i32, i32* %82, i32 1
  store i32* %incdec.ptr111, i32** %pc110, align 4
  %83 = load i32, i32* %82, align 4
  store i32 %83, i32* %code, align 4
  br label %while.cond94

while.end:                                        ; preds = %if.then108, %while.cond94
  store i32 1, i32* @execlist.donetrap, align 4
  br label %sublist_done

if.end112:                                        ; preds = %if.end88
  br label %while.cond113

while.cond113:                                    ; preds = %sw.epilog, %if.end112
  %84 = load i32, i32* %code, align 4
  %and114 = and i32 %84, 31
  %cmp115 = icmp eq i32 %and114, 2
  br i1 %cmp115, label %while.body117, label %while.end265

while.body117:                                    ; preds = %while.cond113
  %85 = load i32, i32* %code, align 4
  %shr118 = lshr i32 %85, 5
  %and119 = and i32 %shr118, 3
  %cmp120 = icmp eq i32 %and119, 0
  %conv121 = zext i1 %cmp120 to i32
  store i32 %conv121, i32* %isend, align 4
  %86 = load %struct.estate*, %struct.estate** %state.addr, align 4
  %pc122 = getelementptr inbounds %struct.estate, %struct.estate* %86, i32 0, i32 1
  %87 = load i32*, i32** %pc122, align 4
  %88 = load i32, i32* %code, align 4
  %shr123 = lshr i32 %88, 5
  %shr124 = lshr i32 %shr123, 5
  %add.ptr125 = getelementptr inbounds i32, i32* %87, i32 %shr124
  store i32* %add.ptr125, i32** %next, align 4
  %89 = load i32, i32* %oldnoerrexit, align 4
  %tobool126 = icmp ne i32 %89, 0
  br i1 %tobool126, label %if.end130, label %if.then127

if.then127:                                       ; preds = %while.body117
  %90 = load i32, i32* %isend, align 4
  %tobool128 = icmp ne i32 %90, 0
  %cond129 = select i1 %tobool128, i32 0, i32 3
  store i32 %cond129, i32* @noerrexit, align 4
  br label %if.end130

if.end130:                                        ; preds = %if.then127, %while.body117
  %91 = load i32, i32* %code, align 4
  %shr131 = lshr i32 %91, 5
  %and132 = and i32 %shr131, 28
  %and133 = and i32 %and132, 8
  %tobool134 = icmp ne i32 %and133, 0
  br i1 %tobool134, label %if.then135, label %if.end139

if.then135:                                       ; preds = %if.end130
  %92 = load i32, i32* %isend, align 4
  %tobool136 = icmp ne i32 %92, 0
  br i1 %tobool136, label %if.then137, label %if.end138

if.then137:                                       ; preds = %if.then135
  store i32 1, i32* @this_noerrexit, align 4
  br label %if.end138

if.end138:                                        ; preds = %if.then137, %if.then135
  store i32 3, i32* @noerrexit, align 4
  br label %if.end139

if.end139:                                        ; preds = %if.end138, %if.end130
  %93 = load i32, i32* %code, align 4
  %shr140 = lshr i32 %93, 5
  %and141 = and i32 %shr140, 3
  switch i32 %and141, label %sw.epilog [
    i32 0, label %sw.bb
    i32 1, label %sw.bb157
    i32 2, label %sw.bb208
  ]

sw.bb:                                            ; preds = %if.end139
  %94 = load i32, i32* %code, align 4
  %shr142 = lshr i32 %94, 5
  %and143 = and i32 %shr142, 28
  %and144 = and i32 %and143, 16
  %tobool145 = icmp ne i32 %and144, 0
  br i1 %tobool145, label %if.then146, label %if.else148

if.then146:                                       ; preds = %sw.bb
  %95 = load %struct.estate*, %struct.estate** %state.addr, align 4
  %call147 = call i32 @execsimple(%struct.estate* %95)
  br label %if.end155

if.else148:                                       ; preds = %sw.bb
  %96 = load %struct.estate*, %struct.estate** %state.addr, align 4
  %97 = load i32, i32* %code, align 4
  %98 = load i32, i32* %ltype, align 4
  %99 = load i32, i32* %ltype, align 4
  %and149 = and i32 %99, 16
  %tobool150 = icmp ne i32 %and149, 0
  br i1 %tobool150, label %land.rhs151, label %land.end153

land.rhs151:                                      ; preds = %if.else148
  %100 = load i32, i32* %exiting.addr, align 4
  %tobool152 = icmp ne i32 %100, 0
  br label %land.end153

land.end153:                                      ; preds = %land.rhs151, %if.else148
  %101 = phi i1 [ false, %if.else148 ], [ %tobool152, %land.rhs151 ]
  %land.ext = zext i1 %101 to i32
  %call154 = call i32 @execpline(%struct.estate* %96, i32 %97, i32 %98, i32 %land.ext)
  br label %if.end155

if.end155:                                        ; preds = %land.end153, %if.then146
  %102 = load i32*, i32** %next, align 4
  %103 = load %struct.estate*, %struct.estate** %state.addr, align 4
  %pc156 = getelementptr inbounds %struct.estate, %struct.estate* %103, i32 0, i32 1
  store i32* %102, i32** %pc156, align 4
  br label %sublist_done

sw.bb157:                                         ; preds = %if.end139
  %104 = load i32, i32* %code, align 4
  %shr158 = lshr i32 %104, 5
  %and159 = and i32 %shr158, 28
  %and160 = and i32 %and159, 16
  %tobool161 = icmp ne i32 %and160, 0
  br i1 %tobool161, label %cond.true, label %cond.false

cond.true:                                        ; preds = %sw.bb157
  %105 = load %struct.estate*, %struct.estate** %state.addr, align 4
  %call162 = call i32 @execsimple(%struct.estate* %105)
  br label %cond.end

cond.false:                                       ; preds = %sw.bb157
  %106 = load %struct.estate*, %struct.estate** %state.addr, align 4
  %107 = load i32, i32* %code, align 4
  %call163 = call i32 @execpline(%struct.estate* %106, i32 %107, i32 2, i32 0)
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond164 = phi i32 [ %call162, %cond.true ], [ %call163, %cond.false ]
  store i32 %cond164, i32* %ret, align 4
  %tobool165 = icmp ne i32 %cond164, 0
  br i1 %tobool165, label %if.then166, label %if.end207

if.then166:                                       ; preds = %cond.end
  %108 = load i32*, i32** %next, align 4
  %109 = load %struct.estate*, %struct.estate** %state.addr, align 4
  %pc167 = getelementptr inbounds %struct.estate, %struct.estate* %109, i32 0, i32 1
  store i32* %108, i32** %pc167, align 4
  %110 = load %struct.estate*, %struct.estate** %state.addr, align 4
  %pc168 = getelementptr inbounds %struct.estate, %struct.estate* %110, i32 0, i32 1
  %111 = load i32*, i32** %pc168, align 4
  %incdec.ptr169 = getelementptr inbounds i32, i32* %111, i32 1
  store i32* %incdec.ptr169, i32** %pc168, align 4
  %112 = load i32, i32* %111, align 4
  store i32 %112, i32* %code, align 4
  %113 = load %struct.estate*, %struct.estate** %state.addr, align 4
  %pc170 = getelementptr inbounds %struct.estate, %struct.estate* %113, i32 0, i32 1
  %114 = load i32*, i32** %pc170, align 4
  %115 = load i32, i32* %code, align 4
  %shr171 = lshr i32 %115, 5
  %shr172 = lshr i32 %shr171, 5
  %add.ptr173 = getelementptr inbounds i32, i32* %114, i32 %shr172
  store i32* %add.ptr173, i32** %next, align 4
  br label %while.cond174

while.cond174:                                    ; preds = %while.body185, %if.then166
  %116 = load i32, i32* %code, align 4
  %and175 = and i32 %116, 31
  %cmp176 = icmp eq i32 %and175, 2
  br i1 %cmp176, label %land.rhs178, label %land.end183

land.rhs178:                                      ; preds = %while.cond174
  %117 = load i32, i32* %code, align 4
  %shr179 = lshr i32 %117, 5
  %and180 = and i32 %shr179, 3
  %cmp181 = icmp eq i32 %and180, 1
  br label %land.end183

land.end183:                                      ; preds = %land.rhs178, %while.cond174
  %118 = phi i1 [ false, %while.cond174 ], [ %cmp181, %land.rhs178 ]
  br i1 %118, label %while.body185, label %while.end193

while.body185:                                    ; preds = %land.end183
  %119 = load i32*, i32** %next, align 4
  %120 = load %struct.estate*, %struct.estate** %state.addr, align 4
  %pc186 = getelementptr inbounds %struct.estate, %struct.estate* %120, i32 0, i32 1
  store i32* %119, i32** %pc186, align 4
  %121 = load %struct.estate*, %struct.estate** %state.addr, align 4
  %pc187 = getelementptr inbounds %struct.estate, %struct.estate* %121, i32 0, i32 1
  %122 = load i32*, i32** %pc187, align 4
  %incdec.ptr188 = getelementptr inbounds i32, i32* %122, i32 1
  store i32* %incdec.ptr188, i32** %pc187, align 4
  %123 = load i32, i32* %122, align 4
  store i32 %123, i32* %code, align 4
  %124 = load %struct.estate*, %struct.estate** %state.addr, align 4
  %pc189 = getelementptr inbounds %struct.estate, %struct.estate* %124, i32 0, i32 1
  %125 = load i32*, i32** %pc189, align 4
  %126 = load i32, i32* %code, align 4
  %shr190 = lshr i32 %126, 5
  %shr191 = lshr i32 %shr190, 5
  %add.ptr192 = getelementptr inbounds i32, i32* %125, i32 %shr191
  store i32* %add.ptr192, i32** %next, align 4
  br label %while.cond174

while.end193:                                     ; preds = %land.end183
  %127 = load i32, i32* %code, align 4
  %and194 = and i32 %127, 31
  %cmp195 = icmp ne i32 %and194, 2
  br i1 %cmp195, label %if.then197, label %if.else198

if.then197:                                       ; preds = %while.end193
  store i32 1, i32* %this_donetrap, align 4
  br label %sublist_done

if.else198:                                       ; preds = %while.end193
  %128 = load i32, i32* %code, align 4
  %shr199 = lshr i32 %128, 5
  %and200 = and i32 %shr199, 3
  %cmp201 = icmp eq i32 %and200, 0
  br i1 %cmp201, label %if.then203, label %if.end205

if.then203:                                       ; preds = %if.else198
  store i32 1, i32* %this_donetrap, align 4
  %129 = load i32*, i32** %next, align 4
  %130 = load %struct.estate*, %struct.estate** %state.addr, align 4
  %pc204 = getelementptr inbounds %struct.estate, %struct.estate* %130, i32 0, i32 1
  store i32* %129, i32** %pc204, align 4
  br label %sublist_done

if.end205:                                        ; preds = %if.else198
  br label %if.end206

if.end206:                                        ; preds = %if.end205
  br label %if.end207

if.end207:                                        ; preds = %if.end206, %cond.end
  call void @cmdpush(i32 12)
  br label %sw.epilog

sw.bb208:                                         ; preds = %if.end139
  %131 = load i32, i32* %code, align 4
  %shr209 = lshr i32 %131, 5
  %and210 = and i32 %shr209, 28
  %and211 = and i32 %and210, 16
  %tobool212 = icmp ne i32 %and211, 0
  br i1 %tobool212, label %cond.true213, label %cond.false215

cond.true213:                                     ; preds = %sw.bb208
  %132 = load %struct.estate*, %struct.estate** %state.addr, align 4
  %call214 = call i32 @execsimple(%struct.estate* %132)
  br label %cond.end217

cond.false215:                                    ; preds = %sw.bb208
  %133 = load %struct.estate*, %struct.estate** %state.addr, align 4
  %134 = load i32, i32* %code, align 4
  %call216 = call i32 @execpline(%struct.estate* %133, i32 %134, i32 2, i32 0)
  br label %cond.end217

cond.end217:                                      ; preds = %cond.false215, %cond.true213
  %cond218 = phi i32 [ %call214, %cond.true213 ], [ %call216, %cond.false215 ]
  store i32 %cond218, i32* %ret, align 4
  %tobool219 = icmp ne i32 %cond218, 0
  br i1 %tobool219, label %if.end261, label %if.then220

if.then220:                                       ; preds = %cond.end217
  %135 = load i32*, i32** %next, align 4
  %136 = load %struct.estate*, %struct.estate** %state.addr, align 4
  %pc221 = getelementptr inbounds %struct.estate, %struct.estate* %136, i32 0, i32 1
  store i32* %135, i32** %pc221, align 4
  %137 = load %struct.estate*, %struct.estate** %state.addr, align 4
  %pc222 = getelementptr inbounds %struct.estate, %struct.estate* %137, i32 0, i32 1
  %138 = load i32*, i32** %pc222, align 4
  %incdec.ptr223 = getelementptr inbounds i32, i32* %138, i32 1
  store i32* %incdec.ptr223, i32** %pc222, align 4
  %139 = load i32, i32* %138, align 4
  store i32 %139, i32* %code, align 4
  %140 = load %struct.estate*, %struct.estate** %state.addr, align 4
  %pc224 = getelementptr inbounds %struct.estate, %struct.estate* %140, i32 0, i32 1
  %141 = load i32*, i32** %pc224, align 4
  %142 = load i32, i32* %code, align 4
  %shr225 = lshr i32 %142, 5
  %shr226 = lshr i32 %shr225, 5
  %add.ptr227 = getelementptr inbounds i32, i32* %141, i32 %shr226
  store i32* %add.ptr227, i32** %next, align 4
  br label %while.cond228

while.cond228:                                    ; preds = %while.body239, %if.then220
  %143 = load i32, i32* %code, align 4
  %and229 = and i32 %143, 31
  %cmp230 = icmp eq i32 %and229, 2
  br i1 %cmp230, label %land.rhs232, label %land.end237

land.rhs232:                                      ; preds = %while.cond228
  %144 = load i32, i32* %code, align 4
  %shr233 = lshr i32 %144, 5
  %and234 = and i32 %shr233, 3
  %cmp235 = icmp eq i32 %and234, 2
  br label %land.end237

land.end237:                                      ; preds = %land.rhs232, %while.cond228
  %145 = phi i1 [ false, %while.cond228 ], [ %cmp235, %land.rhs232 ]
  br i1 %145, label %while.body239, label %while.end247

while.body239:                                    ; preds = %land.end237
  %146 = load i32*, i32** %next, align 4
  %147 = load %struct.estate*, %struct.estate** %state.addr, align 4
  %pc240 = getelementptr inbounds %struct.estate, %struct.estate* %147, i32 0, i32 1
  store i32* %146, i32** %pc240, align 4
  %148 = load %struct.estate*, %struct.estate** %state.addr, align 4
  %pc241 = getelementptr inbounds %struct.estate, %struct.estate* %148, i32 0, i32 1
  %149 = load i32*, i32** %pc241, align 4
  %incdec.ptr242 = getelementptr inbounds i32, i32* %149, i32 1
  store i32* %incdec.ptr242, i32** %pc241, align 4
  %150 = load i32, i32* %149, align 4
  store i32 %150, i32* %code, align 4
  %151 = load %struct.estate*, %struct.estate** %state.addr, align 4
  %pc243 = getelementptr inbounds %struct.estate, %struct.estate* %151, i32 0, i32 1
  %152 = load i32*, i32** %pc243, align 4
  %153 = load i32, i32* %code, align 4
  %shr244 = lshr i32 %153, 5
  %shr245 = lshr i32 %shr244, 5
  %add.ptr246 = getelementptr inbounds i32, i32* %152, i32 %shr245
  store i32* %add.ptr246, i32** %next, align 4
  br label %while.cond228

while.end247:                                     ; preds = %land.end237
  %154 = load i32, i32* %code, align 4
  %and248 = and i32 %154, 31
  %cmp249 = icmp ne i32 %and248, 2
  br i1 %cmp249, label %if.then251, label %if.else252

if.then251:                                       ; preds = %while.end247
  store i32 1, i32* %this_donetrap, align 4
  br label %sublist_done

if.else252:                                       ; preds = %while.end247
  %155 = load i32, i32* %code, align 4
  %shr253 = lshr i32 %155, 5
  %and254 = and i32 %shr253, 3
  %cmp255 = icmp eq i32 %and254, 0
  br i1 %cmp255, label %if.then257, label %if.end259

if.then257:                                       ; preds = %if.else252
  store i32 1, i32* %this_donetrap, align 4
  %156 = load i32*, i32** %next, align 4
  %157 = load %struct.estate*, %struct.estate** %state.addr, align 4
  %pc258 = getelementptr inbounds %struct.estate, %struct.estate* %157, i32 0, i32 1
  store i32* %156, i32** %pc258, align 4
  br label %sublist_done

if.end259:                                        ; preds = %if.else252
  br label %if.end260

if.end260:                                        ; preds = %if.end259
  br label %if.end261

if.end261:                                        ; preds = %if.end260, %cond.end217
  call void @cmdpush(i32 11)
  br label %sw.epilog

sw.epilog:                                        ; preds = %if.end139, %if.end261, %if.end207
  %158 = load i32*, i32** %next, align 4
  %159 = load %struct.estate*, %struct.estate** %state.addr, align 4
  %pc262 = getelementptr inbounds %struct.estate, %struct.estate* %159, i32 0, i32 1
  store i32* %158, i32** %pc262, align 4
  %160 = load %struct.estate*, %struct.estate** %state.addr, align 4
  %pc263 = getelementptr inbounds %struct.estate, %struct.estate* %160, i32 0, i32 1
  %161 = load i32*, i32** %pc263, align 4
  %incdec.ptr264 = getelementptr inbounds i32, i32* %161, i32 1
  store i32* %incdec.ptr264, i32** %pc263, align 4
  %162 = load i32, i32* %161, align 4
  store i32 %162, i32* %code, align 4
  br label %while.cond113

while.end265:                                     ; preds = %while.cond113
  %163 = load %struct.estate*, %struct.estate** %state.addr, align 4
  %pc266 = getelementptr inbounds %struct.estate, %struct.estate* %163, i32 0, i32 1
  %164 = load i32*, i32** %pc266, align 4
  %incdec.ptr267 = getelementptr inbounds i32, i32* %164, i32 -1
  store i32* %incdec.ptr267, i32** %pc266, align 4
  br label %sublist_done

sublist_done:                                     ; preds = %while.end265, %if.then257, %if.then251, %if.then203, %if.then197, %if.end155, %while.end, %if.end86
  %165 = load i32, i32* %oldnoerrexit, align 4
  %and268 = and i32 %165, 4
  %tobool269 = icmp ne i32 %and268, 0
  br i1 %tobool269, label %if.end271, label %if.then270

if.then270:                                       ; preds = %sublist_done
  %166 = load i32, i32* %oldnoerrexit, align 4
  store i32 %166, i32* @noerrexit, align 4
  br label %if.end271

if.end271:                                        ; preds = %if.then270, %sublist_done
  %167 = load i32, i32* getelementptr inbounds ([34 x i32], [34 x i32]* @sigtrapped, i32 0, i32 33), align 4
  %tobool272 = icmp ne i32 %167, 0
  br i1 %tobool272, label %land.lhs.true273, label %if.end284

land.lhs.true273:                                 ; preds = %if.end271
  %168 = load i8, i8* getelementptr inbounds ([181 x i8], [181 x i8]* @opts, i32 0, i32 48), align 1
  %tobool274 = icmp ne i8 %168, 0
  br i1 %tobool274, label %if.end284, label %land.lhs.true275

land.lhs.true275:                                 ; preds = %land.lhs.true273
  %169 = load i32, i32* %donedebug, align 4
  %tobool276 = icmp ne i32 %169, 0
  br i1 %tobool276, label %if.end284, label %if.then277

if.then277:                                       ; preds = %land.lhs.true275
  %170 = load i8, i8* getelementptr inbounds ([181 x i8], [181 x i8]* @opts, i32 0, i32 51), align 1
  %conv279 = sext i8 %170 to i32
  store i32 %conv279, i32* %oerrexit_opt278, align 4
  store i8 0, i8* getelementptr inbounds ([181 x i8], [181 x i8]* @opts, i32 0, i32 51), align 1
  store i32 3, i32* @noerrexit, align 4
  %171 = load i32, i32* @execlist.donetrap, align 4
  store i32 %171, i32* %exiting.addr, align 4
  %172 = load i32, i32* @lastval, align 4
  store i32 %172, i32* %ret, align 4
  call void @dotrap(i32 33)
  %173 = load i32, i32* @retflag, align 4
  %tobool280 = icmp ne i32 %173, 0
  br i1 %tobool280, label %if.end282, label %if.then281

if.then281:                                       ; preds = %if.then277
  %174 = load i32, i32* %ret, align 4
  store i32 %174, i32* @lastval, align 4
  br label %if.end282

if.end282:                                        ; preds = %if.then281, %if.then277
  %175 = load i32, i32* %exiting.addr, align 4
  store i32 %175, i32* @execlist.donetrap, align 4
  %176 = load i32, i32* %oldnoerrexit, align 4
  store i32 %176, i32* @noerrexit, align 4
  %177 = load i32, i32* %oerrexit_opt278, align 4
  %conv283 = trunc i32 %177 to i8
  store i8 %conv283, i8* getelementptr inbounds ([181 x i8], [181 x i8]* @opts, i32 0, i32 51), align 1
  br label %if.end284

if.end284:                                        ; preds = %if.end282, %land.lhs.true275, %land.lhs.true273, %if.end271
  %178 = load i32, i32* %csp, align 4
  store i32 %178, i32* @cmdsp, align 4
  %179 = load i32, i32* @this_noerrexit, align 4
  %tobool285 = icmp ne i32 %179, 0
  br i1 %tobool285, label %if.end343, label %land.lhs.true286

land.lhs.true286:                                 ; preds = %if.end284
  %180 = load i32, i32* @execlist.donetrap, align 4
  %tobool287 = icmp ne i32 %180, 0
  br i1 %tobool287, label %if.end343, label %land.lhs.true288

land.lhs.true288:                                 ; preds = %land.lhs.true286
  %181 = load i32, i32* %this_donetrap, align 4
  %tobool289 = icmp ne i32 %181, 0
  br i1 %tobool289, label %if.end343, label %if.then290

if.then290:                                       ; preds = %land.lhs.true288
  %182 = load i32, i32* getelementptr inbounds ([34 x i32], [34 x i32]* @sigtrapped, i32 0, i32 32), align 4
  %tobool291 = icmp ne i32 %182, 0
  br i1 %tobool291, label %land.lhs.true292, label %if.end298

land.lhs.true292:                                 ; preds = %if.then290
  %183 = load i32, i32* @lastval, align 4
  %tobool293 = icmp ne i32 %183, 0
  br i1 %tobool293, label %land.lhs.true294, label %if.end298

land.lhs.true294:                                 ; preds = %land.lhs.true292
  %184 = load i32, i32* @noerrexit, align 4
  %and295 = and i32 %184, 1
  %tobool296 = icmp ne i32 %and295, 0
  br i1 %tobool296, label %if.end298, label %if.then297

if.then297:                                       ; preds = %land.lhs.true294
  call void @dotrap(i32 32)
  store i32 1, i32* @execlist.donetrap, align 4
  br label %if.end298

if.end298:                                        ; preds = %if.then297, %land.lhs.true294, %land.lhs.true292, %if.then290
  %185 = load i32, i32* @lastval, align 4
  %tobool299 = icmp ne i32 %185, 0
  br i1 %tobool299, label %if.then300, label %if.end342

if.then300:                                       ; preds = %if.end298
  %186 = load i8, i8* getelementptr inbounds ([181 x i8], [181 x i8]* @opts, i32 0, i32 52), align 1
  %conv301 = sext i8 %186 to i32
  %tobool302 = icmp ne i32 %conv301, 0
  br i1 %tobool302, label %land.lhs.true303, label %land.end313

land.lhs.true303:                                 ; preds = %if.then300
  %187 = load i8, i8* getelementptr inbounds ([181 x i8], [181 x i8]* @opts, i32 0, i32 94), align 1
  %conv304 = sext i8 %187 to i32
  %tobool305 = icmp ne i32 %conv304, 0
  br i1 %tobool305, label %land.rhs309, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true303
  %188 = load i32, i32* @locallevel, align 4
  %tobool306 = icmp ne i32 %188, 0
  br i1 %tobool306, label %land.rhs309, label %lor.lhs.false307

lor.lhs.false307:                                 ; preds = %lor.lhs.false
  %189 = load i32, i32* @sourcelevel, align 4
  %tobool308 = icmp ne i32 %189, 0
  br i1 %tobool308, label %land.rhs309, label %land.end313

land.rhs309:                                      ; preds = %lor.lhs.false307, %lor.lhs.false, %land.lhs.true303
  %190 = load i32, i32* @noerrexit, align 4
  %and310 = and i32 %190, 2
  %tobool311 = icmp ne i32 %and310, 0
  %lnot312 = xor i1 %tobool311, true
  br label %land.end313

land.end313:                                      ; preds = %land.rhs309, %lor.lhs.false307, %if.then300
  %191 = phi i1 [ false, %lor.lhs.false307 ], [ false, %if.then300 ], [ %lnot312, %land.rhs309 ]
  %land.ext314 = zext i1 %191 to i32
  store i32 %land.ext314, i32* %errreturn, align 4
  %192 = load i8, i8* getelementptr inbounds ([181 x i8], [181 x i8]* @opts, i32 0, i32 51), align 1
  %conv315 = sext i8 %192 to i32
  %tobool316 = icmp ne i32 %conv315, 0
  br i1 %tobool316, label %land.rhs322, label %lor.lhs.false317

lor.lhs.false317:                                 ; preds = %land.end313
  %193 = load i8, i8* getelementptr inbounds ([181 x i8], [181 x i8]* @opts, i32 0, i32 52), align 1
  %conv318 = sext i8 %193 to i32
  %tobool319 = icmp ne i32 %conv318, 0
  br i1 %tobool319, label %land.lhs.true320, label %land.end326

land.lhs.true320:                                 ; preds = %lor.lhs.false317
  %194 = load i32, i32* %errreturn, align 4
  %tobool321 = icmp ne i32 %194, 0
  br i1 %tobool321, label %land.end326, label %land.rhs322

land.rhs322:                                      ; preds = %land.lhs.true320, %land.end313
  %195 = load i32, i32* @noerrexit, align 4
  %and323 = and i32 %195, 1
  %tobool324 = icmp ne i32 %and323, 0
  %lnot325 = xor i1 %tobool324, true
  br label %land.end326

land.end326:                                      ; preds = %land.rhs322, %land.lhs.true320, %lor.lhs.false317
  %196 = phi i1 [ false, %land.lhs.true320 ], [ false, %lor.lhs.false317 ], [ %lnot325, %land.rhs322 ]
  %land.ext327 = zext i1 %196 to i32
  store i32 %land.ext327, i32* %errexit, align 4
  %197 = load i32, i32* %errexit, align 4
  %tobool328 = icmp ne i32 %197, 0
  br i1 %tobool328, label %if.then329, label %if.end338

if.then329:                                       ; preds = %land.end326
  %198 = load i32, i32* getelementptr inbounds ([34 x i32], [34 x i32]* @sigtrapped, i32 0, i32 0), align 4
  %tobool330 = icmp ne i32 %198, 0
  br i1 %tobool330, label %if.then331, label %if.end332

if.then331:                                       ; preds = %if.then329
  call void @dotrap(i32 0)
  br label %if.end332

if.end332:                                        ; preds = %if.then331, %if.then329
  %199 = load i32, i32* @mypid, align 4
  %call333 = call i32 @getpid()
  %cmp334 = icmp ne i32 %199, %call333
  br i1 %cmp334, label %if.then336, label %if.else337

if.then336:                                       ; preds = %if.end332
  %200 = load i32, i32* @lastval, align 4
  call void @_exit(i32 %200) #4
  unreachable

if.else337:                                       ; preds = %if.end332
  %201 = load i32, i32* @lastval, align 4
  call void @exit(i32 %201) #4
  unreachable

if.end338:                                        ; preds = %land.end326
  %202 = load i32, i32* %errreturn, align 4
  %tobool339 = icmp ne i32 %202, 0
  br i1 %tobool339, label %if.then340, label %if.end341

if.then340:                                       ; preds = %if.end338
  store i32 1, i32* @retflag, align 4
  %203 = load i32, i32* @loops, align 4
  store i32 %203, i32* @breaks, align 4
  br label %if.end341

if.end341:                                        ; preds = %if.then340, %if.end338
  br label %if.end342

if.end342:                                        ; preds = %if.end341, %if.end298
  br label %if.end343

if.end343:                                        ; preds = %if.end342, %land.lhs.true288, %land.lhs.true286, %if.end284
  %204 = load i32, i32* %ltype, align 4
  %and344 = and i32 %204, 16
  %tobool345 = icmp ne i32 %and344, 0
  br i1 %tobool345, label %if.then346, label %if.end347

if.then346:                                       ; preds = %if.end343
  br label %while.end350

if.end347:                                        ; preds = %if.end343
  %205 = load %struct.estate*, %struct.estate** %state.addr, align 4
  %pc348 = getelementptr inbounds %struct.estate, %struct.estate* %205, i32 0, i32 1
  %206 = load i32*, i32** %pc348, align 4
  %incdec.ptr349 = getelementptr inbounds i32, i32* %206, i32 1
  store i32* %incdec.ptr349, i32** %pc348, align 4
  %207 = load i32, i32* %206, align 4
  store i32 %207, i32* %code, align 4
  br label %while.cond

while.end350:                                     ; preds = %if.then346, %land.end
  %208 = load i32, i32* %old_pline_level, align 4
  store i32 %208, i32* @pline_level, align 4
  %209 = load i32, i32* %old_list_pipe, align 4
  store i32 %209, i32* @list_pipe, align 4
  %210 = load i32, i32* %old_list_pipe_job, align 4
  store i32 %210, i32* @list_pipe_job, align 4
  %211 = load i8*, i8** %old_list_pipe_text, align 4
  %tobool351 = icmp ne i8* %211, null
  br i1 %tobool351, label %if.then352, label %if.else354

if.then352:                                       ; preds = %while.end350
  %212 = load i8*, i8** %old_list_pipe_text, align 4
  %call353 = call i8* @strcpy(i8* getelementptr inbounds ([80 x i8], [80 x i8]* @list_pipe_text, i32 0, i32 0), i8* %212)
  %213 = load i8*, i8** %old_list_pipe_text, align 4
  call void @zsfree(i8* %213)
  br label %if.end355

if.else354:                                       ; preds = %while.end350
  store i8 0, i8* getelementptr inbounds ([80 x i8], [80 x i8]* @list_pipe_text, i32 0, i32 0), align 1
  br label %if.end355

if.end355:                                        ; preds = %if.else354, %if.then352
  %214 = load i32, i32* %oldlineno, align 4
  store i32 %214, i32* @lineno, align 4
  %215 = load i32, i32* %dont_change_job.addr, align 4
  %tobool356 = icmp ne i32 %215, 0
  br i1 %tobool356, label %if.then357, label %if.end358

if.then357:                                       ; preds = %if.end355
  %216 = load i32, i32* %cj, align 4
  store i32 %216, i32* @thisjob, align 4
  br label %if.end358

if.end358:                                        ; preds = %if.then357, %if.end355
  %217 = load i32, i32* %exiting.addr, align 4
  %tobool359 = icmp ne i32 %217, 0
  br i1 %tobool359, label %land.lhs.true360, label %if.end363

land.lhs.true360:                                 ; preds = %if.end358
  %218 = load i32, i32* getelementptr inbounds ([34 x i32], [34 x i32]* @sigtrapped, i32 0, i32 0), align 4
  %tobool361 = icmp ne i32 %218, 0
  br i1 %tobool361, label %if.then362, label %if.end363

if.then362:                                       ; preds = %land.lhs.true360
  call void @dotrap(i32 0)
  store i32 0, i32* getelementptr inbounds ([34 x i32], [34 x i32]* @sigtrapped, i32 0, i32 0), align 4
  br label %if.end363

if.end363:                                        ; preds = %if.then362, %land.lhs.true360, %if.end358
  br label %do.body

do.body:                                          ; preds = %if.end363
  %219 = load i32, i32* @queueing_enabled, align 4
  %dec = add nsw i32 %219, -1
  store i32 %dec, i32* @queueing_enabled, align 4
  %tobool364 = icmp ne i32 %dec, 0
  br i1 %tobool364, label %if.end375, label %if.then365

if.then365:                                       ; preds = %do.body
  br label %do.body366

do.body366:                                       ; preds = %if.then365
  br label %while.cond367

while.cond367:                                    ; preds = %while.body370, %do.body366
  %220 = load i32, i32* @queue_front, align 4
  %221 = load i32, i32* @queue_rear, align 4
  %cmp368 = icmp ne i32 %220, %221
  br i1 %cmp368, label %while.body370, label %while.end374

while.body370:                                    ; preds = %while.cond367
  %222 = load i32, i32* @queue_front, align 4
  %add = add nsw i32 %222, 1
  %rem = srem i32 %add, 128
  store i32 %rem, i32* @queue_front, align 4
  %223 = load i32, i32* @queue_front, align 4
  %arrayidx371 = getelementptr inbounds [128 x %struct.__sigset_t], [128 x %struct.__sigset_t]* @signal_mask_queue, i32 0, i32 %223
  call void @signal_setmask(%struct.__sigset_t* sret %tmp, %struct.__sigset_t* byval align 4 %arrayidx371)
  %224 = bitcast %struct.__sigset_t* %oset to i8*
  %225 = bitcast %struct.__sigset_t* %tmp to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %224, i8* %225, i32 128, i32 4, i1 false)
  %226 = load i32, i32* @queue_front, align 4
  %arrayidx372 = getelementptr inbounds [128 x i32], [128 x i32]* @signal_queue, i32 0, i32 %226
  %227 = load i32, i32* %arrayidx372, align 4
  call void @zhandler(i32 %227)
  call void @signal_setmask(%struct.__sigset_t* sret %tmp373, %struct.__sigset_t* byval align 4 %oset)
  br label %while.cond367

while.end374:                                     ; preds = %while.cond367
  br label %do.end

do.end:                                           ; preds = %while.end374
  br label %if.end375

if.end375:                                        ; preds = %do.end, %do.body
  br label %do.end376

do.end376:                                        ; preds = %if.end375
  ret void
}

declare void @freeeprog(%struct.eprog*) #1

declare %struct.param* @assignsparam(i8*, i8*, i32) #1

declare i8* @getpermtext(%struct.eprog*, i32*, i32) #1

declare void @dotrap(i32) #1

declare i32 @unsetparam_pm(%struct.param*, i32, i32) #1

; Function Attrs: noinline nounwind
define internal i32 @execsimple(%struct.estate* %state) #0 {
entry:
  %retval = alloca i32, align 4
  %state.addr = alloca %struct.estate*, align 4
  %code = alloca i32, align 4
  %lv = alloca i32, align 4
  %otj = alloca i32, align 4
  %q = alloca i32, align 4
  %oset = alloca %struct.__sigset_t, align 4
  %tmp = alloca %struct.__sigset_t, align 4
  %tmp26 = alloca %struct.__sigset_t, align 4
  store %struct.estate* %state, %struct.estate** %state.addr, align 4
  %0 = load %struct.estate*, %struct.estate** %state.addr, align 4
  %pc = getelementptr inbounds %struct.estate, %struct.estate* %0, i32 0, i32 1
  %1 = load i32*, i32** %pc, align 4
  %incdec.ptr = getelementptr inbounds i32, i32* %1, i32 1
  store i32* %incdec.ptr, i32** %pc, align 4
  %2 = load i32, i32* %1, align 4
  store i32 %2, i32* %code, align 4
  %3 = load i32, i32* @errflag, align 4
  %tobool = icmp ne i32 %3, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 1, i32* @lastval, align 4
  store i32 1, i32* %retval, align 4
  br label %return

if.end:                                           ; preds = %entry
  %4 = load i8, i8* getelementptr inbounds ([181 x i8], [181 x i8]* @opts, i32 0, i32 53), align 1
  %tobool1 = icmp ne i8 %4, 0
  br i1 %tobool1, label %if.end3, label %if.then2

if.then2:                                         ; preds = %if.end
  store i32 0, i32* @lastval, align 4
  store i32 0, i32* %retval, align 4
  br label %return

if.end3:                                          ; preds = %if.end
  %5 = load i32, i32* @intrap, align 4
  %tobool4 = icmp ne i32 %5, 0
  br i1 %tobool4, label %land.lhs.true, label %land.lhs.true7

land.lhs.true:                                    ; preds = %if.end3
  %6 = load i32, i32* @trapisfunc, align 4
  %tobool5 = icmp ne i32 %6, 0
  br i1 %tobool5, label %land.lhs.true7, label %land.lhs.true6

land.lhs.true6:                                   ; preds = %land.lhs.true
  %7 = load i32, i32* @traplocallevel, align 4
  %8 = load i32, i32* @locallevel, align 4
  %cmp = icmp eq i32 %7, %8
  br i1 %cmp, label %if.end12, label %land.lhs.true7

land.lhs.true7:                                   ; preds = %land.lhs.true6, %land.lhs.true, %if.end3
  %9 = load i32, i32* @ineval, align 4
  %tobool8 = icmp ne i32 %9, 0
  br i1 %tobool8, label %if.end12, label %land.lhs.true9

land.lhs.true9:                                   ; preds = %land.lhs.true7
  %10 = load i32, i32* %code, align 4
  %tobool10 = icmp ne i32 %10, 0
  br i1 %tobool10, label %if.then11, label %if.end12

if.then11:                                        ; preds = %land.lhs.true9
  %11 = load i32, i32* %code, align 4
  %sub = sub i32 %11, 1
  store i32 %sub, i32* @lineno, align 4
  br label %if.end12

if.end12:                                         ; preds = %if.then11, %land.lhs.true9, %land.lhs.true7, %land.lhs.true6
  %12 = load %struct.estate*, %struct.estate** %state.addr, align 4
  %pc13 = getelementptr inbounds %struct.estate, %struct.estate* %12, i32 0, i32 1
  %13 = load i32*, i32** %pc13, align 4
  %incdec.ptr14 = getelementptr inbounds i32, i32* %13, i32 1
  store i32* %incdec.ptr14, i32** %pc13, align 4
  %14 = load i32, i32* %13, align 4
  %and = and i32 %14, 31
  store i32 %and, i32* %code, align 4
  %15 = load i32, i32* @thisjob, align 4
  store i32 %15, i32* %otj, align 4
  store i32 -1, i32* @thisjob, align 4
  %16 = load i32, i32* %code, align 4
  %cmp15 = icmp eq i32 %16, 5
  br i1 %cmp15, label %if.then16, label %if.else

if.then16:                                        ; preds = %if.end12
  store i32 0, i32* @cmdoutval, align 4
  %17 = load %struct.estate*, %struct.estate** %state.addr, align 4
  %18 = load %struct.estate*, %struct.estate** %state.addr, align 4
  %pc17 = getelementptr inbounds %struct.estate, %struct.estate* %18, i32 0, i32 1
  %19 = load i32*, i32** %pc17, align 4
  %add.ptr = getelementptr inbounds i32, i32* %19, i32 -1
  call void @addvars(%struct.estate* %17, i32* %add.ptr, i32 0)
  call void @setunderscore(i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i32 0, i32 0))
  %20 = load i8, i8* getelementptr inbounds ([181 x i8], [181 x i8]* @opts, i32 0, i32 178), align 1
  %tobool18 = icmp ne i8 %20, 0
  br i1 %tobool18, label %if.then19, label %if.end21

if.then19:                                        ; preds = %if.then16
  %21 = load %struct._IO_FILE*, %struct._IO_FILE** @xtrerr, align 4
  %call = call i32 @fputc(i32 10, %struct._IO_FILE* %21)
  %22 = load %struct._IO_FILE*, %struct._IO_FILE** @xtrerr, align 4
  %call20 = call i32 @fflush(%struct._IO_FILE* %22)
  br label %if.end21

if.end21:                                         ; preds = %if.then19, %if.then16
  %23 = load i32, i32* @errflag, align 4
  %tobool22 = icmp ne i32 %23, 0
  br i1 %tobool22, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end21
  %24 = load i32, i32* @errflag, align 4
  br label %cond.end

cond.false:                                       ; preds = %if.end21
  %25 = load i32, i32* @cmdoutval, align 4
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %24, %cond.true ], [ %25, %cond.false ]
  store i32 %cond, i32* %lv, align 4
  br label %if.end36

if.else:                                          ; preds = %if.end12
  %26 = load i32, i32* @queueing_enabled, align 4
  store i32 %26, i32* %q, align 4
  br label %do.body

do.body:                                          ; preds = %if.else
  store i32 0, i32* @queueing_enabled, align 4
  br label %do.body23

do.body23:                                        ; preds = %do.body
  br label %while.cond

while.cond:                                       ; preds = %while.body, %do.body23
  %27 = load i32, i32* @queue_front, align 4
  %28 = load i32, i32* @queue_rear, align 4
  %cmp24 = icmp ne i32 %27, %28
  br i1 %cmp24, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %29 = load i32, i32* @queue_front, align 4
  %add = add nsw i32 %29, 1
  %rem = srem i32 %add, 128
  store i32 %rem, i32* @queue_front, align 4
  %30 = load i32, i32* @queue_front, align 4
  %arrayidx = getelementptr inbounds [128 x %struct.__sigset_t], [128 x %struct.__sigset_t]* @signal_mask_queue, i32 0, i32 %30
  call void @signal_setmask(%struct.__sigset_t* sret %tmp, %struct.__sigset_t* byval align 4 %arrayidx)
  %31 = bitcast %struct.__sigset_t* %oset to i8*
  %32 = bitcast %struct.__sigset_t* %tmp to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %31, i8* %32, i32 128, i32 4, i1 false)
  %33 = load i32, i32* @queue_front, align 4
  %arrayidx25 = getelementptr inbounds [128 x i32], [128 x i32]* @signal_queue, i32 0, i32 %33
  %34 = load i32, i32* %arrayidx25, align 4
  call void @zhandler(i32 %34)
  call void @signal_setmask(%struct.__sigset_t* sret %tmp26, %struct.__sigset_t* byval align 4 %oset)
  br label %while.cond

while.end:                                        ; preds = %while.cond
  br label %do.end

do.end:                                           ; preds = %while.end
  br label %do.end27

do.end27:                                         ; preds = %do.end
  %35 = load i32, i32* %code, align 4
  %cmp28 = icmp eq i32 %35, 11
  br i1 %cmp28, label %if.then29, label %if.else31

if.then29:                                        ; preds = %do.end27
  %36 = load %struct.estate*, %struct.estate** %state.addr, align 4
  %call30 = call i32 @execfuncdef(%struct.estate* %36, %struct.eprog* null)
  store i32 %call30, i32* %lv, align 4
  br label %if.end35

if.else31:                                        ; preds = %do.end27
  %37 = load i32, i32* %code, align 4
  %sub32 = sub i32 %37, 9
  %arrayidx33 = getelementptr inbounds [13 x i32 (%struct.estate*, i32)*], [13 x i32 (%struct.estate*, i32)*]* @execfuncs, i32 0, i32 %sub32
  %38 = load i32 (%struct.estate*, i32)*, i32 (%struct.estate*, i32)** %arrayidx33, align 4
  %39 = load %struct.estate*, %struct.estate** %state.addr, align 4
  %call34 = call i32 %38(%struct.estate* %39, i32 0)
  store i32 %call34, i32* %lv, align 4
  br label %if.end35

if.end35:                                         ; preds = %if.else31, %if.then29
  %40 = load i32, i32* %q, align 4
  store i32 %40, i32* @queueing_enabled, align 4
  br label %if.end36

if.end36:                                         ; preds = %if.end35, %cond.end
  %41 = load i32, i32* %otj, align 4
  store i32 %41, i32* @thisjob, align 4
  %42 = load i32, i32* %lv, align 4
  store i32 %42, i32* @lastval, align 4
  store i32 %42, i32* %retval, align 4
  br label %return

return:                                           ; preds = %if.end36, %if.then2, %if.then
  %43 = load i32, i32* %retval, align 4
  ret i32 %43
}

; Function Attrs: noinline nounwind
define internal i32 @execpline(%struct.estate* %state, i32 %slcode, i32 %how, i32 %last1) #0 {
entry:
  %retval = alloca i32, align 4
  %state.addr = alloca %struct.estate*, align 4
  %slcode.addr = alloca i32, align 4
  %how.addr = alloca i32, align 4
  %last1.addr = alloca i32, align 4
  %ipipe = alloca [2 x i32], align 4
  %opipe = alloca [2 x i32], align 4
  %pj = alloca i32, align 4
  %newjob = alloca i32, align 4
  %old_simple_pline = alloca i32, align 4
  %slflags = alloca i32, align 4
  %code = alloca i32, align 4
  %tmp = alloca %struct.__sigset_t, align 4
  %tmp13 = alloca %struct.__sigset_t, align 4
  %oset = alloca %struct.__sigset_t, align 4
  %tmp21 = alloca %struct.__sigset_t, align 4
  %tmp23 = alloca %struct.__sigset_t, align 4
  %tmp100 = alloca %struct.__sigset_t, align 4
  %oset111 = alloca %struct.__sigset_t, align 4
  %tmp115 = alloca %struct.__sigset_t, align 4
  %tmp117 = alloca %struct.__sigset_t, align 4
  %jn = alloca %struct.job*, align 4
  %updated = alloca i32, align 4
  %jobsub = alloca i32, align 4
  %pn = alloca %struct.process*, align 4
  %qn = alloca %struct.process*, align 4
  %jnsub = alloca %struct.job*, align 4
  %tmp233 = alloca %struct.__sigset_t, align 4
  %q = alloca i32, align 4
  %tmp249 = alloca %struct.__sigset_t, align 4
  %tmp250 = alloca %struct.__sigset_t, align 4
  %oset258 = alloca %struct.__sigset_t, align 4
  %tmp262 = alloca %struct.__sigset_t, align 4
  %tmp264 = alloca %struct.__sigset_t, align 4
  %pid = alloca i32, align 4
  %synch = alloca [2 x i32], align 4
  %bgtime = alloca %struct.timeval, align 4
  %dummy = alloca i8, align 1
  %tmp408 = alloca %struct.__sigset_t, align 4
  %oset419 = alloca %struct.__sigset_t, align 4
  %tmp423 = alloca %struct.__sigset_t, align 4
  %tmp425 = alloca %struct.__sigset_t, align 4
  %oset480 = alloca %struct.__sigset_t, align 4
  %tmp484 = alloca %struct.__sigset_t, align 4
  %tmp486 = alloca %struct.__sigset_t, align 4
  store %struct.estate* %state, %struct.estate** %state.addr, align 4
  store i32 %slcode, i32* %slcode.addr, align 4
  store i32 %how, i32* %how.addr, align 4
  store i32 %last1, i32* %last1.addr, align 4
  %0 = load i32, i32* @simple_pline, align 4
  store i32 %0, i32* %old_simple_pline, align 4
  %1 = load i32, i32* %slcode.addr, align 4
  %shr = lshr i32 %1, 5
  %and = and i32 %shr, 28
  store i32 %and, i32* %slflags, align 4
  %2 = load %struct.estate*, %struct.estate** %state.addr, align 4
  %pc = getelementptr inbounds %struct.estate, %struct.estate* %2, i32 0, i32 1
  %3 = load i32*, i32** %pc, align 4
  %incdec.ptr = getelementptr inbounds i32, i32* %3, i32 1
  store i32* %incdec.ptr, i32** %pc, align 4
  %4 = load i32, i32* %3, align 4
  store i32 %4, i32* %code, align 4
  %5 = load i32, i32* %code, align 4
  %and1 = and i32 %5, 31
  %cmp = icmp ne i32 %and1, 3
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %6 = load i32, i32* %slflags, align 4
  %and2 = and i32 %6, 8
  %cmp3 = icmp ne i32 %and2, 0
  %conv = zext i1 %cmp3 to i32
  store i32 %conv, i32* @lastval, align 4
  store i32 %conv, i32* %retval, align 4
  br label %return

if.else:                                          ; preds = %entry
  %7 = load i32, i32* %slflags, align 4
  %and4 = and i32 %7, 8
  %tobool = icmp ne i32 %and4, 0
  br i1 %tobool, label %if.then5, label %if.end

if.then5:                                         ; preds = %if.else
  store i32 0, i32* %last1.addr, align 4
  br label %if.end

if.end:                                           ; preds = %if.then5, %if.else
  br label %if.end6

if.end6:                                          ; preds = %if.end
  %8 = load i32, i32* @queueing_enabled, align 4
  %inc = add nsw i32 %8, 1
  store i32 %inc, i32* @queueing_enabled, align 4
  %9 = load i32, i32* @thisjob, align 4
  store i32 %9, i32* %pj, align 4
  %arrayidx = getelementptr inbounds [2 x i32], [2 x i32]* %opipe, i32 0, i32 1
  store i32 0, i32* %arrayidx, align 4
  %arrayidx7 = getelementptr inbounds [2 x i32], [2 x i32]* %opipe, i32 0, i32 0
  store i32 0, i32* %arrayidx7, align 4
  %arrayidx8 = getelementptr inbounds [2 x i32], [2 x i32]* %ipipe, i32 0, i32 1
  store i32 0, i32* %arrayidx8, align 4
  %arrayidx9 = getelementptr inbounds [2 x i32], [2 x i32]* %ipipe, i32 0, i32 0
  store i32 0, i32* %arrayidx9, align 4
  call void @signal_block(%struct.__sigset_t* sret %tmp, %struct.__sigset_t* byval align 4 @sigchld_mask)
  %call = call i32 @initjob()
  store i32 %call, i32* %newjob, align 4
  store i32 %call, i32* @thisjob, align 4
  %cmp10 = icmp eq i32 %call, -1
  br i1 %cmp10, label %if.then12, label %if.end26

if.then12:                                        ; preds = %if.end6
  call void @signal_unblock(%struct.__sigset_t* sret %tmp13, %struct.__sigset_t* byval align 4 @sigchld_mask)
  br label %do.body

do.body:                                          ; preds = %if.then12
  %10 = load i32, i32* @queueing_enabled, align 4
  %dec = add nsw i32 %10, -1
  store i32 %dec, i32* @queueing_enabled, align 4
  %tobool14 = icmp ne i32 %dec, 0
  br i1 %tobool14, label %if.end24, label %if.then15

if.then15:                                        ; preds = %do.body
  br label %do.body16

do.body16:                                        ; preds = %if.then15
  br label %while.cond

while.cond:                                       ; preds = %while.body, %do.body16
  %11 = load i32, i32* @queue_front, align 4
  %12 = load i32, i32* @queue_rear, align 4
  %cmp17 = icmp ne i32 %11, %12
  br i1 %cmp17, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %13 = load i32, i32* @queue_front, align 4
  %add = add nsw i32 %13, 1
  %rem = srem i32 %add, 128
  store i32 %rem, i32* @queue_front, align 4
  %14 = load i32, i32* @queue_front, align 4
  %arrayidx20 = getelementptr inbounds [128 x %struct.__sigset_t], [128 x %struct.__sigset_t]* @signal_mask_queue, i32 0, i32 %14
  call void @signal_setmask(%struct.__sigset_t* sret %tmp21, %struct.__sigset_t* byval align 4 %arrayidx20)
  %15 = bitcast %struct.__sigset_t* %oset to i8*
  %16 = bitcast %struct.__sigset_t* %tmp21 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %15, i8* %16, i32 128, i32 4, i1 false)
  %17 = load i32, i32* @queue_front, align 4
  %arrayidx22 = getelementptr inbounds [128 x i32], [128 x i32]* @signal_queue, i32 0, i32 %17
  %18 = load i32, i32* %arrayidx22, align 4
  call void @zhandler(i32 %18)
  call void @signal_setmask(%struct.__sigset_t* sret %tmp23, %struct.__sigset_t* byval align 4 %oset)
  br label %while.cond

while.end:                                        ; preds = %while.cond
  br label %do.end

do.end:                                           ; preds = %while.end
  br label %if.end24

if.end24:                                         ; preds = %do.end, %do.body
  br label %do.end25

do.end25:                                         ; preds = %if.end24
  store i32 1, i32* %retval, align 4
  br label %return

if.end26:                                         ; preds = %if.end6
  %19 = load i32, i32* %how.addr, align 4
  %and27 = and i32 %19, 1
  %tobool28 = icmp ne i32 %and27, 0
  br i1 %tobool28, label %if.then29, label %if.end31

if.then29:                                        ; preds = %if.end26
  %20 = load %struct.job*, %struct.job** @jobtab, align 4
  %21 = load i32, i32* @thisjob, align 4
  %arrayidx30 = getelementptr inbounds %struct.job, %struct.job* %20, i32 %21
  %stat = getelementptr inbounds %struct.job, %struct.job* %arrayidx30, i32 0, i32 2
  %22 = load i32, i32* %stat, align 4
  %or = or i32 %22, 4
  store i32 %or, i32* %stat, align 4
  br label %if.end31

if.end31:                                         ; preds = %if.then29, %if.end26
  %23 = load i32, i32* %slflags, align 4
  %and32 = and i32 %23, 4
  %tobool33 = icmp ne i32 %and32, 0
  br i1 %tobool33, label %if.then34, label %if.end64

if.then34:                                        ; preds = %if.end31
  store i32 4, i32* %how.addr, align 4
  %24 = load i32, i32* @coprocin, align 4
  %cmp35 = icmp sge i32 %24, 0
  br i1 %cmp35, label %if.then37, label %if.end40

if.then37:                                        ; preds = %if.then34
  %25 = load i32, i32* @coprocin, align 4
  %call38 = call i32 @zclose(i32 %25)
  %26 = load i32, i32* @coprocout, align 4
  %call39 = call i32 @zclose(i32 %26)
  br label %if.end40

if.end40:                                         ; preds = %if.then37, %if.then34
  %arraydecay = getelementptr inbounds [2 x i32], [2 x i32]* %ipipe, i32 0, i32 0
  %call41 = call i32 @mpipe(i32* %arraydecay)
  %cmp42 = icmp slt i32 %call41, 0
  br i1 %cmp42, label %if.then44, label %if.else46

if.then44:                                        ; preds = %if.end40
  store i32 -1, i32* @coprocout, align 4
  store i32 -1, i32* @coprocin, align 4
  %27 = load i32, i32* %slflags, align 4
  %and45 = and i32 %27, -5
  store i32 %and45, i32* %slflags, align 4
  br label %if.end63

if.else46:                                        ; preds = %if.end40
  %arraydecay47 = getelementptr inbounds [2 x i32], [2 x i32]* %opipe, i32 0, i32 0
  %call48 = call i32 @mpipe(i32* %arraydecay47)
  %cmp49 = icmp slt i32 %call48, 0
  br i1 %cmp49, label %if.then51, label %if.else57

if.then51:                                        ; preds = %if.else46
  %arrayidx52 = getelementptr inbounds [2 x i32], [2 x i32]* %ipipe, i32 0, i32 0
  %28 = load i32, i32* %arrayidx52, align 4
  %call53 = call i32 @close(i32 %28)
  %arrayidx54 = getelementptr inbounds [2 x i32], [2 x i32]* %ipipe, i32 0, i32 1
  %29 = load i32, i32* %arrayidx54, align 4
  %call55 = call i32 @close(i32 %29)
  store i32 -1, i32* @coprocout, align 4
  store i32 -1, i32* @coprocin, align 4
  %30 = load i32, i32* %slflags, align 4
  %and56 = and i32 %30, -5
  store i32 %and56, i32* %slflags, align 4
  br label %if.end62

if.else57:                                        ; preds = %if.else46
  %arrayidx58 = getelementptr inbounds [2 x i32], [2 x i32]* %ipipe, i32 0, i32 0
  %31 = load i32, i32* %arrayidx58, align 4
  store i32 %31, i32* @coprocin, align 4
  %arrayidx59 = getelementptr inbounds [2 x i32], [2 x i32]* %opipe, i32 0, i32 1
  %32 = load i32, i32* %arrayidx59, align 4
  store i32 %32, i32* @coprocout, align 4
  %33 = load i8*, i8** @fdtable, align 4
  %34 = load i32, i32* @coprocout, align 4
  %arrayidx60 = getelementptr inbounds i8, i8* %33, i32 %34
  store i8 0, i8* %arrayidx60, align 1
  %35 = load i8*, i8** @fdtable, align 4
  %36 = load i32, i32* @coprocin, align 4
  %arrayidx61 = getelementptr inbounds i8, i8* %35, i32 %36
  store i8 0, i8* %arrayidx61, align 1
  br label %if.end62

if.end62:                                         ; preds = %if.else57, %if.then51
  br label %if.end63

if.end63:                                         ; preds = %if.end62, %if.then44
  br label %if.end64

if.end64:                                         ; preds = %if.end63, %if.end31
  %37 = load i32, i32* @pline_level, align 4
  %inc65 = add nsw i32 %37, 1
  store i32 %inc65, i32* @pline_level, align 4
  %tobool66 = icmp ne i32 %37, 0
  br i1 %tobool66, label %if.end72, label %if.then67

if.then67:                                        ; preds = %if.end64
  store i32 0, i32* @list_pipe_pid, align 4
  store i32 0, i32* @nowait, align 4
  %38 = load i32, i32* %code, align 4
  %shr68 = lshr i32 %38, 5
  %and69 = and i32 %shr68, 1
  %cmp70 = icmp eq i32 %and69, 0
  %conv71 = zext i1 %cmp70 to i32
  store i32 %conv71, i32* @simple_pline, align 4
  %39 = load i32, i32* %newjob, align 4
  store i32 %39, i32* @list_pipe_job, align 4
  br label %if.end72

if.end72:                                         ; preds = %if.then67, %if.end64
  store i32 0, i32* @execpline.lpforked, align 4
  store i32 0, i32* @execpline.lastwj, align 4
  %40 = load %struct.estate*, %struct.estate** %state.addr, align 4
  %41 = load i32, i32* %code, align 4
  %42 = load i32, i32* %how.addr, align 4
  %arrayidx73 = getelementptr inbounds [2 x i32], [2 x i32]* %opipe, i32 0, i32 0
  %43 = load i32, i32* %arrayidx73, align 4
  %arrayidx74 = getelementptr inbounds [2 x i32], [2 x i32]* %ipipe, i32 0, i32 1
  %44 = load i32, i32* %arrayidx74, align 4
  %45 = load i32, i32* %last1.addr, align 4
  call void @execpline2(%struct.estate* %40, i32 %41, i32 %42, i32 %43, i32 %44, i32 %45)
  %46 = load i32, i32* @pline_level, align 4
  %dec75 = add nsw i32 %46, -1
  store i32 %dec75, i32* @pline_level, align 4
  %47 = load i32, i32* %how.addr, align 4
  %and76 = and i32 %47, 4
  %tobool77 = icmp ne i32 %and76, 0
  br i1 %tobool77, label %if.then78, label %if.else122

if.then78:                                        ; preds = %if.end72
  %48 = load i32, i32* %newjob, align 4
  store i32 %48, i32* @execpline.lastwj, align 4
  %49 = load i32, i32* @thisjob, align 4
  %50 = load i32, i32* @list_pipe_job, align 4
  %cmp79 = icmp eq i32 %49, %50
  br i1 %cmp79, label %if.then81, label %if.end82

if.then81:                                        ; preds = %if.then78
  store i32 0, i32* @list_pipe_job, align 4
  br label %if.end82

if.end82:                                         ; preds = %if.then81, %if.then78
  %51 = load %struct.job*, %struct.job** @jobtab, align 4
  %52 = load i32, i32* @thisjob, align 4
  %arrayidx83 = getelementptr inbounds %struct.job, %struct.job* %51, i32 %52
  %stat84 = getelementptr inbounds %struct.job, %struct.job* %arrayidx83, i32 0, i32 2
  %53 = load i32, i32* %stat84, align 4
  %or85 = or i32 %53, 2048
  store i32 %or85, i32* %stat84, align 4
  %54 = load i32, i32* %slflags, align 4
  %and86 = and i32 %54, 4
  %tobool87 = icmp ne i32 %and86, 0
  br i1 %tobool87, label %if.then88, label %if.end93

if.then88:                                        ; preds = %if.end82
  %arrayidx89 = getelementptr inbounds [2 x i32], [2 x i32]* %ipipe, i32 0, i32 1
  %55 = load i32, i32* %arrayidx89, align 4
  %call90 = call i32 @zclose(i32 %55)
  %arrayidx91 = getelementptr inbounds [2 x i32], [2 x i32]* %opipe, i32 0, i32 0
  %56 = load i32, i32* %arrayidx91, align 4
  %call92 = call i32 @zclose(i32 %56)
  br label %if.end93

if.end93:                                         ; preds = %if.then88, %if.end82
  %57 = load i32, i32* %how.addr, align 4
  %and94 = and i32 %57, 8
  %tobool95 = icmp ne i32 %and94, 0
  br i1 %tobool95, label %if.then96, label %if.else98

if.then96:                                        ; preds = %if.end93
  %58 = load %struct.job*, %struct.job** @jobtab, align 4
  %59 = load i32, i32* @thisjob, align 4
  %arrayidx97 = getelementptr inbounds %struct.job, %struct.job* %58, i32 %59
  %filelist = getelementptr inbounds %struct.job, %struct.job* %arrayidx97, i32 0, i32 6
  %60 = load %union.linkroot*, %union.linkroot** %filelist, align 4
  call void @pipecleanfilelist(%union.linkroot* %60, i32 0)
  %61 = load %struct.job*, %struct.job** @jobtab, align 4
  %62 = load i32, i32* @thisjob, align 4
  %add.ptr = getelementptr inbounds %struct.job, %struct.job* %61, i32 %62
  call void @deletejob(%struct.job* %add.ptr, i32 1)
  store i32 -1, i32* @thisjob, align 4
  br label %if.end99

if.else98:                                        ; preds = %if.end93
  call void @spawnjob()
  br label %if.end99

if.end99:                                         ; preds = %if.else98, %if.then96
  call void @signal_unblock(%struct.__sigset_t* sret %tmp100, %struct.__sigset_t* byval align 4 @sigchld_mask)
  br label %do.body101

do.body101:                                       ; preds = %if.end99
  %63 = load i32, i32* @queueing_enabled, align 4
  %dec102 = add nsw i32 %63, -1
  store i32 %dec102, i32* @queueing_enabled, align 4
  %tobool103 = icmp ne i32 %dec102, 0
  br i1 %tobool103, label %if.end120, label %if.then104

if.then104:                                       ; preds = %do.body101
  br label %do.body105

do.body105:                                       ; preds = %if.then104
  br label %while.cond106

while.cond106:                                    ; preds = %while.body109, %do.body105
  %64 = load i32, i32* @queue_front, align 4
  %65 = load i32, i32* @queue_rear, align 4
  %cmp107 = icmp ne i32 %64, %65
  br i1 %cmp107, label %while.body109, label %while.end118

while.body109:                                    ; preds = %while.cond106
  %66 = load i32, i32* @queue_front, align 4
  %add112 = add nsw i32 %66, 1
  %rem113 = srem i32 %add112, 128
  store i32 %rem113, i32* @queue_front, align 4
  %67 = load i32, i32* @queue_front, align 4
  %arrayidx114 = getelementptr inbounds [128 x %struct.__sigset_t], [128 x %struct.__sigset_t]* @signal_mask_queue, i32 0, i32 %67
  call void @signal_setmask(%struct.__sigset_t* sret %tmp115, %struct.__sigset_t* byval align 4 %arrayidx114)
  %68 = bitcast %struct.__sigset_t* %oset111 to i8*
  %69 = bitcast %struct.__sigset_t* %tmp115 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %68, i8* %69, i32 128, i32 4, i1 false)
  %70 = load i32, i32* @queue_front, align 4
  %arrayidx116 = getelementptr inbounds [128 x i32], [128 x i32]* @signal_queue, i32 0, i32 %70
  %71 = load i32, i32* %arrayidx116, align 4
  call void @zhandler(i32 %71)
  call void @signal_setmask(%struct.__sigset_t* sret %tmp117, %struct.__sigset_t* byval align 4 %oset111)
  br label %while.cond106

while.end118:                                     ; preds = %while.cond106
  br label %do.end119

do.end119:                                        ; preds = %while.end118
  br label %if.end120

if.end120:                                        ; preds = %do.end119, %do.body101
  br label %do.end121

do.end121:                                        ; preds = %if.end120
  store i32 0, i32* @lastval, align 4
  store i32 0, i32* %retval, align 4
  br label %return

if.else122:                                       ; preds = %if.end72
  %72 = load i32, i32* %newjob, align 4
  %73 = load i32, i32* @execpline.lastwj, align 4
  %cmp123 = icmp ne i32 %72, %73
  br i1 %cmp123, label %if.then125, label %if.else469

if.then125:                                       ; preds = %if.else122
  %74 = load %struct.job*, %struct.job** @jobtab, align 4
  %75 = load i32, i32* %newjob, align 4
  %add.ptr127 = getelementptr inbounds %struct.job, %struct.job* %74, i32 %75
  store %struct.job* %add.ptr127, %struct.job** %jn, align 4
  %76 = load i32, i32* %newjob, align 4
  %77 = load i32, i32* @list_pipe_job, align 4
  %cmp129 = icmp eq i32 %76, %77
  br i1 %cmp129, label %land.lhs.true, label %if.end133

land.lhs.true:                                    ; preds = %if.then125
  %78 = load i32, i32* @list_pipe_child, align 4
  %tobool131 = icmp ne i32 %78, 0
  br i1 %tobool131, label %if.then132, label %if.end133

if.then132:                                       ; preds = %land.lhs.true
  call void @_exit(i32 0) #4
  unreachable

if.end133:                                        ; preds = %land.lhs.true, %if.then125
  %79 = load i32, i32* %newjob, align 4
  store i32 %79, i32* @thisjob, align 4
  store i32 %79, i32* @execpline.lastwj, align 4
  %80 = load i32, i32* @list_pipe, align 4
  %tobool134 = icmp ne i32 %80, 0
  br i1 %tobool134, label %if.then139, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end133
  %81 = load i32, i32* @pline_level, align 4
  %tobool135 = icmp ne i32 %81, 0
  br i1 %tobool135, label %land.lhs.true136, label %if.end142

land.lhs.true136:                                 ; preds = %lor.lhs.false
  %82 = load i32, i32* %how.addr, align 4
  %and137 = and i32 %82, 1
  %tobool138 = icmp ne i32 %and137, 0
  br i1 %tobool138, label %if.end142, label %if.then139

if.then139:                                       ; preds = %land.lhs.true136, %if.end133
  %83 = load %struct.job*, %struct.job** %jn, align 4
  %stat140 = getelementptr inbounds %struct.job, %struct.job* %83, i32 0, i32 2
  %84 = load i32, i32* %stat140, align 4
  %or141 = or i32 %84, 32
  store i32 %or141, i32* %stat140, align 4
  br label %if.end142

if.end142:                                        ; preds = %if.then139, %land.lhs.true136, %lor.lhs.false
  %85 = load i32, i32* @nowait, align 4
  %tobool143 = icmp ne i32 %85, 0
  br i1 %tobool143, label %if.then144, label %if.end217

if.then144:                                       ; preds = %if.end142
  %86 = load i32, i32* @pline_level, align 4
  %tobool145 = icmp ne i32 %86, 0
  br i1 %tobool145, label %if.else210, label %if.then146

if.then146:                                       ; preds = %if.then144
  %87 = load i32, i32* %newjob, align 4
  store i32 %87, i32* @curjob, align 4
  %88 = load i32, i32* @list_pipe_pid, align 4
  call void @addproc(i32 %88, i8* getelementptr inbounds ([80 x i8], [80 x i8]* @list_pipe_text, i32 0, i32 0), i32 0, %struct.timeval* @list_pipe_start)
  %89 = load %struct.job*, %struct.job** %jn, align 4
  %procs = getelementptr inbounds %struct.job, %struct.job* %89, i32 0, i32 4
  %90 = load %struct.process*, %struct.process** %procs, align 4
  %next = getelementptr inbounds %struct.process, %struct.process* %90, i32 0, i32 0
  %91 = load %struct.process*, %struct.process** %next, align 4
  %tobool150 = icmp ne %struct.process* %91, null
  br i1 %tobool150, label %lor.lhs.false151, label %if.then154

lor.lhs.false151:                                 ; preds = %if.then146
  %92 = load i32, i32* @execpline.lpforked, align 4
  %cmp152 = icmp eq i32 %92, 2
  br i1 %cmp152, label %if.then154, label %if.end172

if.then154:                                       ; preds = %lor.lhs.false151, %if.then146
  %93 = load i32, i32* @list_pipe_pid, align 4
  %94 = load %struct.job*, %struct.job** %jn, align 4
  %gleader = getelementptr inbounds %struct.job, %struct.job* %94, i32 0, i32 0
  store i32 %93, i32* %gleader, align 4
  %95 = load %struct.job*, %struct.job** %jn, align 4
  %stat155 = getelementptr inbounds %struct.job, %struct.job* %95, i32 0, i32 2
  %96 = load i32, i32* %stat155, align 4
  %or156 = or i32 %96, 8192
  store i32 %or156, i32* %stat155, align 4
  store i32 1, i32* %jobsub, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then154
  %97 = load i32, i32* %jobsub, align 4
  %98 = load i32, i32* @maxjob, align 4
  %cmp157 = icmp sle i32 %97, %98
  br i1 %cmp157, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %99 = load %struct.job*, %struct.job** @jobtab, align 4
  %100 = load i32, i32* %jobsub, align 4
  %add.ptr160 = getelementptr inbounds %struct.job, %struct.job* %99, i32 %100
  store %struct.job* %add.ptr160, %struct.job** %jnsub, align 4
  %101 = load %struct.job*, %struct.job** %jnsub, align 4
  %stat161 = getelementptr inbounds %struct.job, %struct.job* %101, i32 0, i32 2
  %102 = load i32, i32* %stat161, align 4
  %and162 = and i32 %102, 32768
  %tobool163 = icmp ne i32 %and162, 0
  br i1 %tobool163, label %if.then164, label %if.end170

if.then164:                                       ; preds = %for.body
  %103 = load i32, i32* %jobsub, align 4
  %104 = load %struct.job*, %struct.job** %jn, align 4
  %other = getelementptr inbounds %struct.job, %struct.job* %104, i32 0, i32 1
  store i32 %103, i32* %other, align 4
  %105 = load %struct.job*, %struct.job** %jn, align 4
  %stat165 = getelementptr inbounds %struct.job, %struct.job* %105, i32 0, i32 2
  %106 = load i32, i32* %stat165, align 4
  %or166 = or i32 %106, 128
  store i32 %or166, i32* %stat165, align 4
  %107 = load %struct.job*, %struct.job** %jnsub, align 4
  %stat167 = getelementptr inbounds %struct.job, %struct.job* %107, i32 0, i32 2
  %108 = load i32, i32* %stat167, align 4
  %and168 = and i32 %108, -32769
  store i32 %and168, i32* %stat167, align 4
  %109 = load i32, i32* @list_pipe_pid, align 4
  %110 = load %struct.job*, %struct.job** %jnsub, align 4
  %other169 = getelementptr inbounds %struct.job, %struct.job* %110, i32 0, i32 1
  store i32 %109, i32* %other169, align 4
  br label %if.end170

if.end170:                                        ; preds = %if.then164, %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end170
  %111 = load i32, i32* %jobsub, align 4
  %inc171 = add nsw i32 %111, 1
  store i32 %inc171, i32* %jobsub, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  br label %if.end172

if.end172:                                        ; preds = %for.end, %lor.lhs.false151
  %112 = load %struct.job*, %struct.job** @jobtab, align 4
  %113 = load %struct.job*, %struct.job** %jn, align 4
  %other173 = getelementptr inbounds %struct.job, %struct.job* %113, i32 0, i32 1
  %114 = load i32, i32* %other173, align 4
  %arrayidx174 = getelementptr inbounds %struct.job, %struct.job* %112, i32 %114
  %procs175 = getelementptr inbounds %struct.job, %struct.job* %arrayidx174, i32 0, i32 4
  %115 = load %struct.process*, %struct.process** %procs175, align 4
  store %struct.process* %115, %struct.process** %pn, align 4
  br label %for.cond176

for.cond176:                                      ; preds = %for.inc187, %if.end172
  %116 = load %struct.process*, %struct.process** %pn, align 4
  %tobool177 = icmp ne %struct.process* %116, null
  br i1 %tobool177, label %for.body178, label %for.end189

for.body178:                                      ; preds = %for.cond176
  %117 = load %struct.process*, %struct.process** %pn, align 4
  %status = getelementptr inbounds %struct.process, %struct.process* %117, i32 0, i32 3
  %118 = load i32, i32* %status, align 4
  %and179 = and i32 %118, 65535
  %mul = mul nsw i32 %and179, 65537
  %shr180 = ashr i32 %mul, 8
  %conv181 = trunc i32 %shr180 to i16
  %conv182 = sext i16 %conv181 to i32
  %cmp183 = icmp sgt i32 %conv182, 32512
  br i1 %cmp183, label %if.then185, label %if.end186

if.then185:                                       ; preds = %for.body178
  br label %for.end189

if.end186:                                        ; preds = %for.body178
  br label %for.inc187

for.inc187:                                       ; preds = %if.end186
  %119 = load %struct.process*, %struct.process** %pn, align 4
  %next188 = getelementptr inbounds %struct.process, %struct.process* %119, i32 0, i32 0
  %120 = load %struct.process*, %struct.process** %next188, align 4
  store %struct.process* %120, %struct.process** %pn, align 4
  br label %for.cond176

for.end189:                                       ; preds = %if.then185, %for.cond176
  %121 = load %struct.process*, %struct.process** %pn, align 4
  %tobool190 = icmp ne %struct.process* %121, null
  br i1 %tobool190, label %if.then191, label %if.end202

if.then191:                                       ; preds = %for.end189
  %122 = load %struct.job*, %struct.job** %jn, align 4
  %procs192 = getelementptr inbounds %struct.job, %struct.job* %122, i32 0, i32 4
  %123 = load %struct.process*, %struct.process** %procs192, align 4
  store %struct.process* %123, %struct.process** %qn, align 4
  br label %for.cond193

for.cond193:                                      ; preds = %for.inc197, %if.then191
  %124 = load %struct.process*, %struct.process** %qn, align 4
  %next194 = getelementptr inbounds %struct.process, %struct.process* %124, i32 0, i32 0
  %125 = load %struct.process*, %struct.process** %next194, align 4
  %tobool195 = icmp ne %struct.process* %125, null
  br i1 %tobool195, label %for.body196, label %for.end199

for.body196:                                      ; preds = %for.cond193
  br label %for.inc197

for.inc197:                                       ; preds = %for.body196
  %126 = load %struct.process*, %struct.process** %qn, align 4
  %next198 = getelementptr inbounds %struct.process, %struct.process* %126, i32 0, i32 0
  %127 = load %struct.process*, %struct.process** %next198, align 4
  store %struct.process* %127, %struct.process** %qn, align 4
  br label %for.cond193

for.end199:                                       ; preds = %for.cond193
  %128 = load %struct.process*, %struct.process** %pn, align 4
  %status200 = getelementptr inbounds %struct.process, %struct.process* %128, i32 0, i32 3
  %129 = load i32, i32* %status200, align 4
  %130 = load %struct.process*, %struct.process** %qn, align 4
  %status201 = getelementptr inbounds %struct.process, %struct.process* %130, i32 0, i32 3
  store i32 %129, i32* %status201, align 4
  br label %if.end202

if.end202:                                        ; preds = %for.end199, %for.end189
  %131 = load %struct.job*, %struct.job** %jn, align 4
  %stat203 = getelementptr inbounds %struct.job, %struct.job* %131, i32 0, i32 2
  %132 = load i32, i32* %stat203, align 4
  %and204 = and i32 %132, -41
  store i32 %and204, i32* %stat203, align 4
  %133 = load %struct.job*, %struct.job** %jn, align 4
  %stat205 = getelementptr inbounds %struct.job, %struct.job* %133, i32 0, i32 2
  %134 = load i32, i32* %stat205, align 4
  %or206 = or i32 %134, 83
  store i32 %or206, i32* %stat205, align 4
  %135 = load %struct.job*, %struct.job** %jn, align 4
  %136 = load i8, i8* getelementptr inbounds ([181 x i8], [181 x i8]* @opts, i32 0, i32 112), align 1
  %tobool207 = icmp ne i8 %136, 0
  %lnot = xor i1 %tobool207, true
  %lnot208 = xor i1 %lnot, true
  %lnot.ext = zext i1 %lnot208 to i32
  %call209 = call i32 @printjob(%struct.job* %135, i32 %lnot.ext, i32 1)
  br label %if.end216

if.else210:                                       ; preds = %if.then144
  %137 = load i32, i32* %newjob, align 4
  %138 = load i32, i32* @list_pipe_job, align 4
  %cmp211 = icmp ne i32 %137, %138
  br i1 %cmp211, label %if.then213, label %if.else214

if.then213:                                       ; preds = %if.else210
  %139 = load %struct.job*, %struct.job** %jn, align 4
  call void @deletejob(%struct.job* %139, i32 0)
  br label %if.end215

if.else214:                                       ; preds = %if.else210
  store i32 -1, i32* @execpline.lastwj, align 4
  br label %if.end215

if.end215:                                        ; preds = %if.else214, %if.then213
  br label %if.end216

if.end216:                                        ; preds = %if.end215, %if.end202
  br label %if.end217

if.end217:                                        ; preds = %if.end216, %if.end142
  store i32 0, i32* @errbrk_saved, align 4
  br label %for.cond218

for.cond218:                                      ; preds = %if.end406, %if.end217
  %140 = load i32, i32* @nowait, align 4
  %tobool219 = icmp ne i32 %140, 0
  %lnot220 = xor i1 %tobool219, true
  br i1 %lnot220, label %for.body222, label %for.end407

for.body222:                                      ; preds = %for.cond218
  %141 = load i32, i32* @list_pipe_child, align 4
  %tobool223 = icmp ne i32 %141, 0
  br i1 %tobool223, label %if.then224, label %if.end227

if.then224:                                       ; preds = %for.body222
  %142 = load %struct.job*, %struct.job** %jn, align 4
  %stat225 = getelementptr inbounds %struct.job, %struct.job* %142, i32 0, i32 2
  %143 = load i32, i32* %stat225, align 4
  %or226 = or i32 %143, 32
  store i32 %or226, i32* %stat225, align 4
  %144 = load %struct.job*, %struct.job** %jn, align 4
  call void @makerunning(%struct.job* %144)
  br label %if.end227

if.end227:                                        ; preds = %if.then224, %for.body222
  %145 = load %struct.job*, %struct.job** %jn, align 4
  %stat228 = getelementptr inbounds %struct.job, %struct.job* %145, i32 0, i32 2
  %146 = load i32, i32* %stat228, align 4
  %and229 = and i32 %146, 16
  %tobool230 = icmp ne i32 %and229, 0
  br i1 %tobool230, label %if.else234, label %if.then231

if.then231:                                       ; preds = %if.end227
  %147 = load i32, i32* @thisjob, align 4
  %call232 = call i32 @hasprocs(i32 %147)
  store i32 %call232, i32* %updated, align 4
  call void @waitjobs()
  call void @signal_block(%struct.__sigset_t* sret %tmp233, %struct.__sigset_t* byval align 4 @sigchld_mask)
  br label %if.end235

if.else234:                                       ; preds = %if.end227
  store i32 0, i32* %updated, align 4
  br label %if.end235

if.end235:                                        ; preds = %if.else234, %if.then231
  %148 = load i32, i32* %updated, align 4
  %tobool236 = icmp ne i32 %148, 0
  br i1 %tobool236, label %if.end268, label %land.lhs.true237

land.lhs.true237:                                 ; preds = %if.end235
  %149 = load i32, i32* @list_pipe_job, align 4
  %tobool238 = icmp ne i32 %149, 0
  br i1 %tobool238, label %land.lhs.true239, label %if.end268

land.lhs.true239:                                 ; preds = %land.lhs.true237
  %150 = load i32, i32* @list_pipe_job, align 4
  %call240 = call i32 @hasprocs(i32 %150)
  %tobool241 = icmp ne i32 %call240, 0
  br i1 %tobool241, label %land.lhs.true242, label %if.end268

land.lhs.true242:                                 ; preds = %land.lhs.true239
  %151 = load %struct.job*, %struct.job** @jobtab, align 4
  %152 = load i32, i32* @list_pipe_job, align 4
  %arrayidx243 = getelementptr inbounds %struct.job, %struct.job* %151, i32 %152
  %stat244 = getelementptr inbounds %struct.job, %struct.job* %arrayidx243, i32 0, i32 2
  %153 = load i32, i32* %stat244, align 4
  %and245 = and i32 %153, 2
  %tobool246 = icmp ne i32 %and245, 0
  br i1 %tobool246, label %if.end268, label %if.then247

if.then247:                                       ; preds = %land.lhs.true242
  %154 = load i32, i32* @queueing_enabled, align 4
  store i32 %154, i32* %q, align 4
  call void @signal_unblock(%struct.__sigset_t* sret %tmp249, %struct.__sigset_t* byval align 4 @sigchld_mask)
  call void @signal_block(%struct.__sigset_t* sret %tmp250, %struct.__sigset_t* byval align 4 @sigchld_mask)
  br label %do.body251

do.body251:                                       ; preds = %if.then247
  store i32 0, i32* @queueing_enabled, align 4
  br label %do.body252

do.body252:                                       ; preds = %do.body251
  br label %while.cond253

while.cond253:                                    ; preds = %while.body256, %do.body252
  %155 = load i32, i32* @queue_front, align 4
  %156 = load i32, i32* @queue_rear, align 4
  %cmp254 = icmp ne i32 %155, %156
  br i1 %cmp254, label %while.body256, label %while.end265

while.body256:                                    ; preds = %while.cond253
  %157 = load i32, i32* @queue_front, align 4
  %add259 = add nsw i32 %157, 1
  %rem260 = srem i32 %add259, 128
  store i32 %rem260, i32* @queue_front, align 4
  %158 = load i32, i32* @queue_front, align 4
  %arrayidx261 = getelementptr inbounds [128 x %struct.__sigset_t], [128 x %struct.__sigset_t]* @signal_mask_queue, i32 0, i32 %158
  call void @signal_setmask(%struct.__sigset_t* sret %tmp262, %struct.__sigset_t* byval align 4 %arrayidx261)
  %159 = bitcast %struct.__sigset_t* %oset258 to i8*
  %160 = bitcast %struct.__sigset_t* %tmp262 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %159, i8* %160, i32 128, i32 4, i1 false)
  %161 = load i32, i32* @queue_front, align 4
  %arrayidx263 = getelementptr inbounds [128 x i32], [128 x i32]* @signal_queue, i32 0, i32 %161
  %162 = load i32, i32* %arrayidx263, align 4
  call void @zhandler(i32 %162)
  call void @signal_setmask(%struct.__sigset_t* sret %tmp264, %struct.__sigset_t* byval align 4 %oset258)
  br label %while.cond253

while.end265:                                     ; preds = %while.cond253
  br label %do.end266

do.end266:                                        ; preds = %while.end265
  br label %do.end267

do.end267:                                        ; preds = %do.end266
  %163 = load i32, i32* %q, align 4
  store i32 %163, i32* @queueing_enabled, align 4
  br label %if.end268

if.end268:                                        ; preds = %do.end267, %land.lhs.true242, %land.lhs.true239, %land.lhs.true237, %if.end235
  %164 = load i32, i32* @list_pipe_child, align 4
  %tobool269 = icmp ne i32 %164, 0
  br i1 %tobool269, label %land.lhs.true270, label %if.end280

land.lhs.true270:                                 ; preds = %if.end268
  %165 = load %struct.job*, %struct.job** %jn, align 4
  %stat271 = getelementptr inbounds %struct.job, %struct.job* %165, i32 0, i32 2
  %166 = load i32, i32* %stat271, align 4
  %and272 = and i32 %166, 8
  %tobool273 = icmp ne i32 %and272, 0
  br i1 %tobool273, label %land.lhs.true274, label %if.end280

land.lhs.true274:                                 ; preds = %land.lhs.true270
  %167 = load i32, i32* @lastval2, align 4
  %and275 = and i32 %167, 128
  %tobool276 = icmp ne i32 %and275, 0
  br i1 %tobool276, label %if.then277, label %if.end280

if.then277:                                       ; preds = %land.lhs.true274
  %168 = load i32, i32* @mypgrp, align 4
  %169 = load i32, i32* @lastval2, align 4
  %and278 = and i32 %169, -129
  %call279 = call i32 @killpg(i32 %168, i32 %and278)
  br label %if.end280

if.end280:                                        ; preds = %if.then277, %land.lhs.true274, %land.lhs.true270, %if.end268
  %170 = load i32, i32* @list_pipe_child, align 4
  %tobool281 = icmp ne i32 %170, 0
  br i1 %tobool281, label %if.else397, label %land.lhs.true282

land.lhs.true282:                                 ; preds = %if.end280
  %171 = load i32, i32* @execpline.lpforked, align 4
  %tobool283 = icmp ne i32 %171, 0
  br i1 %tobool283, label %if.else397, label %land.lhs.true284

land.lhs.true284:                                 ; preds = %land.lhs.true282
  %172 = load i32, i32* @subsh, align 4
  %tobool285 = icmp ne i32 %172, 0
  br i1 %tobool285, label %if.else397, label %land.lhs.true286

land.lhs.true286:                                 ; preds = %land.lhs.true284
  %173 = load i8, i8* getelementptr inbounds ([181 x i8], [181 x i8]* @opts, i32 0, i32 117), align 1
  %conv287 = sext i8 %173 to i32
  %tobool288 = icmp ne i32 %conv287, 0
  br i1 %tobool288, label %land.lhs.true289, label %if.else397

land.lhs.true289:                                 ; preds = %land.lhs.true286
  %174 = load i32, i32* @list_pipe, align 4
  %tobool290 = icmp ne i32 %174, 0
  br i1 %tobool290, label %land.lhs.true295, label %lor.lhs.false291

lor.lhs.false291:                                 ; preds = %land.lhs.true289
  %175 = load i32, i32* %last1.addr, align 4
  %tobool292 = icmp ne i32 %175, 0
  br i1 %tobool292, label %land.lhs.true295, label %lor.lhs.false293

lor.lhs.false293:                                 ; preds = %lor.lhs.false291
  %176 = load i32, i32* @pline_level, align 4
  %tobool294 = icmp ne i32 %176, 0
  br i1 %tobool294, label %land.lhs.true295, label %if.else397

land.lhs.true295:                                 ; preds = %lor.lhs.false293, %lor.lhs.false291, %land.lhs.true289
  %177 = load %struct.job*, %struct.job** %jn, align 4
  %stat296 = getelementptr inbounds %struct.job, %struct.job* %177, i32 0, i32 2
  %178 = load i32, i32* %stat296, align 4
  %and297 = and i32 %178, 2
  %tobool298 = icmp ne i32 %and297, 0
  br i1 %tobool298, label %if.then308, label %lor.lhs.false299

lor.lhs.false299:                                 ; preds = %land.lhs.true295
  %179 = load i32, i32* @list_pipe_job, align 4
  %tobool300 = icmp ne i32 %179, 0
  br i1 %tobool300, label %land.lhs.true301, label %if.else397

land.lhs.true301:                                 ; preds = %lor.lhs.false299
  %180 = load i32, i32* @pline_level, align 4
  %tobool302 = icmp ne i32 %180, 0
  br i1 %tobool302, label %land.lhs.true303, label %if.else397

land.lhs.true303:                                 ; preds = %land.lhs.true301
  %181 = load %struct.job*, %struct.job** @jobtab, align 4
  %182 = load i32, i32* @list_pipe_job, align 4
  %arrayidx304 = getelementptr inbounds %struct.job, %struct.job* %181, i32 %182
  %stat305 = getelementptr inbounds %struct.job, %struct.job* %arrayidx304, i32 0, i32 2
  %183 = load i32, i32* %stat305, align 4
  %and306 = and i32 %183, 2
  %tobool307 = icmp ne i32 %and306, 0
  br i1 %tobool307, label %if.then308, label %if.else397

if.then308:                                       ; preds = %land.lhs.true303, %land.lhs.true295
  store i32 0, i32* %pid, align 4
  %arraydecay312 = getelementptr inbounds [2 x i32], [2 x i32]* %synch, i32 0, i32 0
  %call313 = call i32 @pipe(i32* %arraydecay312)
  %cmp314 = icmp slt i32 %call313, 0
  br i1 %cmp314, label %if.then320, label %lor.lhs.false316

lor.lhs.false316:                                 ; preds = %if.then308
  %call317 = call i32 @zfork(%struct.timeval* %bgtime)
  store i32 %call317, i32* %pid, align 4
  %cmp318 = icmp eq i32 %call317, -1
  br i1 %cmp318, label %if.then320, label %if.else335

if.then320:                                       ; preds = %lor.lhs.false316, %if.then308
  %184 = load i32, i32* %pid, align 4
  %cmp321 = icmp slt i32 %184, 0
  br i1 %cmp321, label %if.then323, label %if.else328

if.then323:                                       ; preds = %if.then320
  %arrayidx324 = getelementptr inbounds [2 x i32], [2 x i32]* %synch, i32 0, i32 0
  %185 = load i32, i32* %arrayidx324, align 4
  %call325 = call i32 @close(i32 %185)
  %arrayidx326 = getelementptr inbounds [2 x i32], [2 x i32]* %synch, i32 0, i32 1
  %186 = load i32, i32* %arrayidx326, align 4
  %call327 = call i32 @close(i32 %186)
  br label %if.end330

if.else328:                                       ; preds = %if.then320
  %call329 = call i32* @__errno_location()
  %187 = load i32, i32* %call329, align 4
  call void (i8*, ...) @zerr(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.45, i32 0, i32 0), i32 %187)
  br label %if.end330

if.end330:                                        ; preds = %if.else328, %if.then323
  %call331 = call i8* (i32, ...) @zleentry(i32 3)
  %188 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 4
  %call332 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %188, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.46, i32 0, i32 0))
  %189 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 4
  %call333 = call i32 @fflush(%struct._IO_FILE* %189)
  %190 = load %struct.job*, %struct.job** %jn, align 4
  call void @makerunning(%struct.job* %190)
  %191 = load %struct.job*, %struct.job** %jn, align 4
  %call334 = call i32 @killjb(%struct.job* %191, i32 18)
  %192 = load i32, i32* %newjob, align 4
  store i32 %192, i32* @thisjob, align 4
  br label %if.end396

if.else335:                                       ; preds = %lor.lhs.false316
  %193 = load i32, i32* %pid, align 4
  %tobool336 = icmp ne i32 %193, 0
  br i1 %tobool336, label %if.then337, label %if.else382

if.then337:                                       ; preds = %if.else335
  %194 = load %struct.job*, %struct.job** @jobtab, align 4
  %195 = load i32, i32* @list_pipe_job, align 4
  %arrayidx339 = getelementptr inbounds %struct.job, %struct.job* %194, i32 %195
  %gleader340 = getelementptr inbounds %struct.job, %struct.job* %arrayidx339, i32 0, i32 0
  %196 = load i32, i32* %gleader340, align 4
  %call341 = call i32 @killpg(i32 %196, i32 0)
  %cmp342 = icmp eq i32 %call341, -1
  %cond = select i1 %cmp342, i32 2, i32 1
  store i32 %cond, i32* @execpline.lpforked, align 4
  %197 = load i32, i32* %pid, align 4
  store i32 %197, i32* @list_pipe_pid, align 4
  %198 = bitcast %struct.timeval* %bgtime to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* bitcast (%struct.timeval* @list_pipe_start to i8*), i8* %198, i32 8, i32 4, i1 false)
  store i32 1, i32* @nowait, align 4
  %199 = load i32, i32* @errflag, align 4
  %or344 = or i32 %199, 1
  store i32 %or344, i32* @errflag, align 4
  %200 = load i32, i32* @loops, align 4
  store i32 %200, i32* @breaks, align 4
  %arrayidx345 = getelementptr inbounds [2 x i32], [2 x i32]* %synch, i32 0, i32 1
  %201 = load i32, i32* %arrayidx345, align 4
  %call346 = call i32 @close(i32 %201)
  %arrayidx347 = getelementptr inbounds [2 x i32], [2 x i32]* %synch, i32 0, i32 0
  %202 = load i32, i32* %arrayidx347, align 4
  %call348 = call i32 @read_loop(i32 %202, i8* %dummy, i32 1)
  %arrayidx349 = getelementptr inbounds [2 x i32], [2 x i32]* %synch, i32 0, i32 0
  %203 = load i32, i32* %arrayidx349, align 4
  %call350 = call i32 @close(i32 %203)
  %204 = load %struct.job*, %struct.job** %jn, align 4
  %stat351 = getelementptr inbounds %struct.job, %struct.job* %204, i32 0, i32 2
  %205 = load i32, i32* %stat351, align 4
  %and352 = and i32 %205, 8
  %tobool353 = icmp ne i32 %and352, 0
  br i1 %tobool353, label %if.end370, label %if.then354

if.then354:                                       ; preds = %if.then337
  %206 = load i32, i32* %newjob, align 4
  %207 = load %struct.job*, %struct.job** @jobtab, align 4
  %208 = load i32, i32* @list_pipe_job, align 4
  %arrayidx355 = getelementptr inbounds %struct.job, %struct.job* %207, i32 %208
  %other356 = getelementptr inbounds %struct.job, %struct.job* %arrayidx355, i32 0, i32 1
  store i32 %206, i32* %other356, align 4
  %209 = load %struct.job*, %struct.job** @jobtab, align 4
  %210 = load i32, i32* @list_pipe_job, align 4
  %arrayidx357 = getelementptr inbounds %struct.job, %struct.job* %209, i32 %210
  %stat358 = getelementptr inbounds %struct.job, %struct.job* %arrayidx357, i32 0, i32 2
  %211 = load i32, i32* %stat358, align 4
  %or359 = or i32 %211, 128
  store i32 %or359, i32* %stat358, align 4
  %212 = load %struct.job*, %struct.job** %jn, align 4
  %stat360 = getelementptr inbounds %struct.job, %struct.job* %212, i32 0, i32 2
  %213 = load i32, i32* %stat360, align 4
  %or361 = or i32 %213, 288
  store i32 %or361, i32* %stat360, align 4
  %214 = load i32, i32* @list_pipe_pid, align 4
  %215 = load %struct.job*, %struct.job** %jn, align 4
  %other362 = getelementptr inbounds %struct.job, %struct.job* %215, i32 0, i32 1
  store i32 %214, i32* %other362, align 4
  %216 = load i32, i32* @list_pipe_job, align 4
  %call363 = call i32 @hasprocs(i32 %216)
  %tobool364 = icmp ne i32 %call363, 0
  br i1 %tobool364, label %if.then365, label %if.end369

if.then365:                                       ; preds = %if.then354
  %217 = load %struct.job*, %struct.job** @jobtab, align 4
  %218 = load i32, i32* @list_pipe_job, align 4
  %arrayidx366 = getelementptr inbounds %struct.job, %struct.job* %217, i32 %218
  %gleader367 = getelementptr inbounds %struct.job, %struct.job* %arrayidx366, i32 0, i32 0
  %219 = load i32, i32* %gleader367, align 4
  %220 = load %struct.job*, %struct.job** %jn, align 4
  %gleader368 = getelementptr inbounds %struct.job, %struct.job* %220, i32 0, i32 0
  store i32 %219, i32* %gleader368, align 4
  br label %if.end369

if.end369:                                        ; preds = %if.then365, %if.then354
  br label %if.end370

if.end370:                                        ; preds = %if.end369, %if.then337
  %221 = load i32, i32* @list_pipe, align 4
  %tobool371 = icmp ne i32 %221, 0
  br i1 %tobool371, label %land.lhs.true374, label %lor.lhs.false372

lor.lhs.false372:                                 ; preds = %if.end370
  %222 = load i32, i32* %last1.addr, align 4
  %tobool373 = icmp ne i32 %222, 0
  br i1 %tobool373, label %land.lhs.true374, label %if.end381

land.lhs.true374:                                 ; preds = %lor.lhs.false372, %if.end370
  %223 = load i32, i32* @list_pipe_job, align 4
  %call375 = call i32 @hasprocs(i32 %223)
  %tobool376 = icmp ne i32 %call375, 0
  br i1 %tobool376, label %if.then377, label %if.end381

if.then377:                                       ; preds = %land.lhs.true374
  %224 = load %struct.job*, %struct.job** @jobtab, align 4
  %225 = load i32, i32* @list_pipe_job, align 4
  %arrayidx378 = getelementptr inbounds %struct.job, %struct.job* %224, i32 %225
  %gleader379 = getelementptr inbounds %struct.job, %struct.job* %arrayidx378, i32 0, i32 0
  %226 = load i32, i32* %gleader379, align 4
  %call380 = call i32 @killpg(i32 %226, i32 19)
  br label %if.end381

if.end381:                                        ; preds = %if.then377, %land.lhs.true374, %lor.lhs.false372
  br label %for.end407

if.else382:                                       ; preds = %if.else335
  %arrayidx383 = getelementptr inbounds [2 x i32], [2 x i32]* %synch, i32 0, i32 0
  %227 = load i32, i32* %arrayidx383, align 4
  %call384 = call i32 @close(i32 %227)
  call void @entersubsh(i32 1)
  %call385 = call i32 @getpid()
  store i32 %call385, i32* @mypgrp, align 4
  %call386 = call i32 @setpgid(i32 0, i32 %call385)
  %arrayidx387 = getelementptr inbounds [2 x i32], [2 x i32]* %synch, i32 0, i32 1
  %228 = load i32, i32* %arrayidx387, align 4
  %call388 = call i32 @close(i32 %228)
  %call389 = call i32 @getpid()
  %call390 = call i32 @kill(i32 %call389, i32 19)
  store i32 0, i32* @list_pipe, align 4
  store i32 1, i32* @list_pipe_child, align 4
  store i8 0, i8* getelementptr inbounds ([181 x i8], [181 x i8]* @opts, i32 0, i32 94), align 1
  %229 = load i32, i32* @errbrk_saved, align 4
  %tobool391 = icmp ne i32 %229, 0
  br i1 %tobool391, label %if.then392, label %if.end395

if.then392:                                       ; preds = %if.else382
  %230 = load i32, i32* @prev_errflag, align 4
  %231 = load i32, i32* @errflag, align 4
  %and393 = and i32 %231, 2
  %or394 = or i32 %230, %and393
  store i32 %or394, i32* @errflag, align 4
  %232 = load i32, i32* @prev_breaks, align 4
  store i32 %232, i32* @breaks, align 4
  br label %if.end395

if.end395:                                        ; preds = %if.then392, %if.else382
  br label %for.end407

if.end396:                                        ; preds = %if.end330
  br label %if.end406

if.else397:                                       ; preds = %land.lhs.true303, %land.lhs.true301, %lor.lhs.false299, %lor.lhs.false293, %land.lhs.true286, %land.lhs.true284, %land.lhs.true282, %if.end280
  %233 = load i32, i32* @subsh, align 4
  %tobool398 = icmp ne i32 %233, 0
  br i1 %tobool398, label %land.lhs.true399, label %if.else404

land.lhs.true399:                                 ; preds = %if.else397
  %234 = load %struct.job*, %struct.job** %jn, align 4
  %stat400 = getelementptr inbounds %struct.job, %struct.job* %234, i32 0, i32 2
  %235 = load i32, i32* %stat400, align 4
  %and401 = and i32 %235, 2
  %tobool402 = icmp ne i32 %and401, 0
  br i1 %tobool402, label %if.then403, label %if.else404

if.then403:                                       ; preds = %land.lhs.true399
  %236 = load i32, i32* %newjob, align 4
  store i32 %236, i32* @thisjob, align 4
  br label %if.end405

if.else404:                                       ; preds = %land.lhs.true399, %if.else397
  br label %for.end407

if.end405:                                        ; preds = %if.then403
  br label %if.end406

if.end406:                                        ; preds = %if.end405, %if.end396
  br label %for.cond218

for.end407:                                       ; preds = %if.else404, %if.end395, %if.end381, %for.cond218
  call void @signal_unblock(%struct.__sigset_t* sret %tmp408, %struct.__sigset_t* byval align 4 @sigchld_mask)
  br label %do.body409

do.body409:                                       ; preds = %for.end407
  %237 = load i32, i32* @queueing_enabled, align 4
  %dec410 = add nsw i32 %237, -1
  store i32 %dec410, i32* @queueing_enabled, align 4
  %tobool411 = icmp ne i32 %dec410, 0
  br i1 %tobool411, label %if.end428, label %if.then412

if.then412:                                       ; preds = %do.body409
  br label %do.body413

do.body413:                                       ; preds = %if.then412
  br label %while.cond414

while.cond414:                                    ; preds = %while.body417, %do.body413
  %238 = load i32, i32* @queue_front, align 4
  %239 = load i32, i32* @queue_rear, align 4
  %cmp415 = icmp ne i32 %238, %239
  br i1 %cmp415, label %while.body417, label %while.end426

while.body417:                                    ; preds = %while.cond414
  %240 = load i32, i32* @queue_front, align 4
  %add420 = add nsw i32 %240, 1
  %rem421 = srem i32 %add420, 128
  store i32 %rem421, i32* @queue_front, align 4
  %241 = load i32, i32* @queue_front, align 4
  %arrayidx422 = getelementptr inbounds [128 x %struct.__sigset_t], [128 x %struct.__sigset_t]* @signal_mask_queue, i32 0, i32 %241
  call void @signal_setmask(%struct.__sigset_t* sret %tmp423, %struct.__sigset_t* byval align 4 %arrayidx422)
  %242 = bitcast %struct.__sigset_t* %oset419 to i8*
  %243 = bitcast %struct.__sigset_t* %tmp423 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %242, i8* %243, i32 128, i32 4, i1 false)
  %244 = load i32, i32* @queue_front, align 4
  %arrayidx424 = getelementptr inbounds [128 x i32], [128 x i32]* @signal_queue, i32 0, i32 %244
  %245 = load i32, i32* %arrayidx424, align 4
  call void @zhandler(i32 %245)
  call void @signal_setmask(%struct.__sigset_t* sret %tmp425, %struct.__sigset_t* byval align 4 %oset419)
  br label %while.cond414

while.end426:                                     ; preds = %while.cond414
  br label %do.end427

do.end427:                                        ; preds = %while.end426
  br label %if.end428

if.end428:                                        ; preds = %do.end427, %do.body409
  br label %do.end429

do.end429:                                        ; preds = %if.end428
  %246 = load i32, i32* @list_pipe, align 4
  %tobool430 = icmp ne i32 %246, 0
  br i1 %tobool430, label %land.lhs.true431, label %if.end453

land.lhs.true431:                                 ; preds = %do.end429
  %247 = load i32, i32* @lastval, align 4
  %and432 = and i32 %247, 128
  %tobool433 = icmp ne i32 %and432, 0
  br i1 %tobool433, label %land.lhs.true434, label %if.end453

land.lhs.true434:                                 ; preds = %land.lhs.true431
  %248 = load i32, i32* %pj, align 4
  %cmp435 = icmp sge i32 %248, 0
  br i1 %cmp435, label %land.lhs.true437, label %if.end453

land.lhs.true437:                                 ; preds = %land.lhs.true434
  %249 = load %struct.job*, %struct.job** %jn, align 4
  %stat438 = getelementptr inbounds %struct.job, %struct.job* %249, i32 0, i32 2
  %250 = load i32, i32* %stat438, align 4
  %and439 = and i32 %250, 64
  %tobool440 = icmp ne i32 %and439, 0
  br i1 %tobool440, label %lor.lhs.false441, label %if.then445

lor.lhs.false441:                                 ; preds = %land.lhs.true437
  %251 = load %struct.job*, %struct.job** %jn, align 4
  %stat442 = getelementptr inbounds %struct.job, %struct.job* %251, i32 0, i32 2
  %252 = load i32, i32* %stat442, align 4
  %and443 = and i32 %252, 8
  %tobool444 = icmp ne i32 %and443, 0
  br i1 %tobool444, label %if.then445, label %if.end453

if.then445:                                       ; preds = %lor.lhs.false441, %land.lhs.true437
  %253 = load %struct.job*, %struct.job** %jn, align 4
  call void @deletejob(%struct.job* %253, i32 0)
  %254 = load %struct.job*, %struct.job** @jobtab, align 4
  %255 = load i32, i32* %pj, align 4
  %add.ptr446 = getelementptr inbounds %struct.job, %struct.job* %254, i32 %255
  store %struct.job* %add.ptr446, %struct.job** %jn, align 4
  %256 = load %struct.job*, %struct.job** %jn, align 4
  %gleader447 = getelementptr inbounds %struct.job, %struct.job* %256, i32 0, i32 0
  %257 = load i32, i32* %gleader447, align 4
  %tobool448 = icmp ne i32 %257, 0
  br i1 %tobool448, label %if.then449, label %if.end452

if.then449:                                       ; preds = %if.then445
  %258 = load %struct.job*, %struct.job** %jn, align 4
  %259 = load i32, i32* @lastval, align 4
  %and450 = and i32 %259, -129
  %call451 = call i32 @killjb(%struct.job* %258, i32 %and450)
  br label %if.end452

if.end452:                                        ; preds = %if.then449, %if.then445
  br label %if.end453

if.end453:                                        ; preds = %if.end452, %lor.lhs.false441, %land.lhs.true434, %land.lhs.true431, %do.end429
  %260 = load i32, i32* @list_pipe_child, align 4
  %tobool454 = icmp ne i32 %260, 0
  br i1 %tobool454, label %if.then467, label %lor.lhs.false455

lor.lhs.false455:                                 ; preds = %if.end453
  %261 = load %struct.job*, %struct.job** %jn, align 4
  %stat456 = getelementptr inbounds %struct.job, %struct.job* %261, i32 0, i32 2
  %262 = load i32, i32* %stat456, align 4
  %and457 = and i32 %262, 8
  %tobool458 = icmp ne i32 %and457, 0
  br i1 %tobool458, label %land.lhs.true459, label %if.end468

land.lhs.true459:                                 ; preds = %lor.lhs.false455
  %263 = load i32, i32* @list_pipe, align 4
  %tobool460 = icmp ne i32 %263, 0
  br i1 %tobool460, label %if.then467, label %lor.lhs.false461

lor.lhs.false461:                                 ; preds = %land.lhs.true459
  %264 = load i32, i32* @pline_level, align 4
  %tobool462 = icmp ne i32 %264, 0
  br i1 %tobool462, label %land.lhs.true463, label %if.end468

land.lhs.true463:                                 ; preds = %lor.lhs.false461
  %265 = load %struct.job*, %struct.job** %jn, align 4
  %stat464 = getelementptr inbounds %struct.job, %struct.job* %265, i32 0, i32 2
  %266 = load i32, i32* %stat464, align 4
  %and465 = and i32 %266, 256
  %tobool466 = icmp ne i32 %and465, 0
  br i1 %tobool466, label %if.end468, label %if.then467

if.then467:                                       ; preds = %land.lhs.true463, %land.lhs.true459, %if.end453
  %267 = load %struct.job*, %struct.job** %jn, align 4
  call void @deletejob(%struct.job* %267, i32 0)
  br label %if.end468

if.end468:                                        ; preds = %if.then467, %land.lhs.true463, %lor.lhs.false461, %lor.lhs.false455
  %268 = load i32, i32* %pj, align 4
  store i32 %268, i32* @thisjob, align 4
  br label %if.end491

if.else469:                                       ; preds = %if.else122
  br label %do.body470

do.body470:                                       ; preds = %if.else469
  %269 = load i32, i32* @queueing_enabled, align 4
  %dec471 = add nsw i32 %269, -1
  store i32 %dec471, i32* @queueing_enabled, align 4
  %tobool472 = icmp ne i32 %dec471, 0
  br i1 %tobool472, label %if.end489, label %if.then473

if.then473:                                       ; preds = %do.body470
  br label %do.body474

do.body474:                                       ; preds = %if.then473
  br label %while.cond475

while.cond475:                                    ; preds = %while.body478, %do.body474
  %270 = load i32, i32* @queue_front, align 4
  %271 = load i32, i32* @queue_rear, align 4
  %cmp476 = icmp ne i32 %270, %271
  br i1 %cmp476, label %while.body478, label %while.end487

while.body478:                                    ; preds = %while.cond475
  %272 = load i32, i32* @queue_front, align 4
  %add481 = add nsw i32 %272, 1
  %rem482 = srem i32 %add481, 128
  store i32 %rem482, i32* @queue_front, align 4
  %273 = load i32, i32* @queue_front, align 4
  %arrayidx483 = getelementptr inbounds [128 x %struct.__sigset_t], [128 x %struct.__sigset_t]* @signal_mask_queue, i32 0, i32 %273
  call void @signal_setmask(%struct.__sigset_t* sret %tmp484, %struct.__sigset_t* byval align 4 %arrayidx483)
  %274 = bitcast %struct.__sigset_t* %oset480 to i8*
  %275 = bitcast %struct.__sigset_t* %tmp484 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %274, i8* %275, i32 128, i32 4, i1 false)
  %276 = load i32, i32* @queue_front, align 4
  %arrayidx485 = getelementptr inbounds [128 x i32], [128 x i32]* @signal_queue, i32 0, i32 %276
  %277 = load i32, i32* %arrayidx485, align 4
  call void @zhandler(i32 %277)
  call void @signal_setmask(%struct.__sigset_t* sret %tmp486, %struct.__sigset_t* byval align 4 %oset480)
  br label %while.cond475

while.end487:                                     ; preds = %while.cond475
  br label %do.end488

do.end488:                                        ; preds = %while.end487
  br label %if.end489

if.end489:                                        ; preds = %do.end488, %do.body470
  br label %do.end490

do.end490:                                        ; preds = %if.end489
  br label %if.end491

if.end491:                                        ; preds = %do.end490, %if.end468
  %278 = load i32, i32* %slflags, align 4
  %and492 = and i32 %278, 8
  %tobool493 = icmp ne i32 %and492, 0
  br i1 %tobool493, label %land.lhs.true494, label %if.end500

land.lhs.true494:                                 ; preds = %if.end491
  %279 = load i32, i32* @errflag, align 4
  %tobool495 = icmp ne i32 %279, 0
  br i1 %tobool495, label %if.end500, label %if.then496

if.then496:                                       ; preds = %land.lhs.true494
  %280 = load i32, i32* @lastval, align 4
  %tobool497 = icmp ne i32 %280, 0
  %lnot498 = xor i1 %tobool497, true
  %lnot.ext499 = zext i1 %lnot498 to i32
  store i32 %lnot.ext499, i32* @lastval, align 4
  br label %if.end500

if.end500:                                        ; preds = %if.then496, %land.lhs.true494, %if.end491
  br label %if.end501

if.end501:                                        ; preds = %if.end500
  %281 = load i32, i32* @pline_level, align 4
  %tobool502 = icmp ne i32 %281, 0
  br i1 %tobool502, label %if.end504, label %if.then503

if.then503:                                       ; preds = %if.end501
  %282 = load i32, i32* %old_simple_pline, align 4
  store i32 %282, i32* @simple_pline, align 4
  br label %if.end504

if.end504:                                        ; preds = %if.then503, %if.end501
  %283 = load i32, i32* @lastval, align 4
  store i32 %283, i32* %retval, align 4
  br label %return

return:                                           ; preds = %if.end504, %do.end121, %do.end25, %if.then
  %284 = load i32, i32* %retval, align 4
  ret i32 %284
}

declare void @cmdpush(i32) #1

declare i32 @getpid() #1

; Function Attrs: noreturn
declare void @_exit(i32) #3

; Function Attrs: noreturn
declare void @exit(i32) #3

declare void @zsfree(i8*) #1

declare void @signal_setmask(%struct.__sigset_t* sret, %struct.__sigset_t* byval align 4) #1

declare void @zhandler(i32) #1

; Function Attrs: noinline nounwind
define void @untokenize(i8* %s) #0 {
entry:
  %s.addr = alloca i8*, align 4
  %c = alloca i32, align 4
  %p = alloca i8*, align 4
  store i8* %s, i8** %s.addr, align 4
  %0 = load i8*, i8** %s.addr, align 4
  %1 = load i8, i8* %0, align 1
  %tobool = icmp ne i8 %1, 0
  br i1 %tobool, label %if.then, label %if.end34

if.then:                                          ; preds = %entry
  br label %while.cond

while.cond:                                       ; preds = %if.end32, %if.then
  %2 = load i8*, i8** %s.addr, align 4
  %incdec.ptr = getelementptr inbounds i8, i8* %2, i32 1
  store i8* %incdec.ptr, i8** %s.addr, align 4
  %3 = load i8, i8* %2, align 1
  %conv = sext i8 %3 to i32
  store i32 %conv, i32* %c, align 4
  %tobool1 = icmp ne i32 %conv, 0
  br i1 %tobool1, label %while.body, label %while.end33

while.body:                                       ; preds = %while.cond
  %4 = load i32, i32* %c, align 4
  %conv2 = trunc i32 %4 to i8
  %idxprom = zext i8 %conv2 to i32
  %arrayidx = getelementptr inbounds [256 x i16], [256 x i16]* @typtab, i32 0, i32 %idxprom
  %5 = load i16, i16* %arrayidx, align 2
  %conv3 = sext i16 %5 to i32
  %and = and i32 %conv3, 16
  %tobool4 = icmp ne i32 %and, 0
  br i1 %tobool4, label %if.then5, label %if.end32

if.then5:                                         ; preds = %while.body
  %6 = load i8*, i8** %s.addr, align 4
  %add.ptr = getelementptr inbounds i8, i8* %6, i32 -1
  store i8* %add.ptr, i8** %p, align 4
  %7 = load i32, i32* %c, align 4
  %cmp = icmp ne i32 %7, -95
  br i1 %cmp, label %if.then7, label %if.end

if.then7:                                         ; preds = %if.then5
  %8 = load i32, i32* %c, align 4
  %sub = sub nsw i32 %8, -124
  %arrayidx8 = getelementptr inbounds [0 x i8], [0 x i8]* @ztokens, i32 0, i32 %sub
  %9 = load i8, i8* %arrayidx8, align 1
  %10 = load i8*, i8** %p, align 4
  %incdec.ptr9 = getelementptr inbounds i8, i8* %10, i32 1
  store i8* %incdec.ptr9, i8** %p, align 4
  store i8 %9, i8* %10, align 1
  br label %if.end

if.end:                                           ; preds = %if.then7, %if.then5
  br label %while.cond10

while.cond10:                                     ; preds = %if.end31, %if.end
  %11 = load i8*, i8** %s.addr, align 4
  %incdec.ptr11 = getelementptr inbounds i8, i8* %11, i32 1
  store i8* %incdec.ptr11, i8** %s.addr, align 4
  %12 = load i8, i8* %11, align 1
  %conv12 = sext i8 %12 to i32
  store i32 %conv12, i32* %c, align 4
  %tobool13 = icmp ne i32 %conv12, 0
  br i1 %tobool13, label %while.body14, label %while.end

while.body14:                                     ; preds = %while.cond10
  %13 = load i32, i32* %c, align 4
  %conv15 = trunc i32 %13 to i8
  %idxprom16 = zext i8 %conv15 to i32
  %arrayidx17 = getelementptr inbounds [256 x i16], [256 x i16]* @typtab, i32 0, i32 %idxprom16
  %14 = load i16, i16* %arrayidx17, align 2
  %conv18 = sext i16 %14 to i32
  %and19 = and i32 %conv18, 16
  %tobool20 = icmp ne i32 %and19, 0
  br i1 %tobool20, label %if.then21, label %if.else

if.then21:                                        ; preds = %while.body14
  %15 = load i32, i32* %c, align 4
  %cmp22 = icmp ne i32 %15, -95
  br i1 %cmp22, label %if.then24, label %if.end28

if.then24:                                        ; preds = %if.then21
  %16 = load i32, i32* %c, align 4
  %sub25 = sub nsw i32 %16, -124
  %arrayidx26 = getelementptr inbounds [0 x i8], [0 x i8]* @ztokens, i32 0, i32 %sub25
  %17 = load i8, i8* %arrayidx26, align 1
  %18 = load i8*, i8** %p, align 4
  %incdec.ptr27 = getelementptr inbounds i8, i8* %18, i32 1
  store i8* %incdec.ptr27, i8** %p, align 4
  store i8 %17, i8* %18, align 1
  br label %if.end28

if.end28:                                         ; preds = %if.then24, %if.then21
  br label %if.end31

if.else:                                          ; preds = %while.body14
  %19 = load i32, i32* %c, align 4
  %conv29 = trunc i32 %19 to i8
  %20 = load i8*, i8** %p, align 4
  %incdec.ptr30 = getelementptr inbounds i8, i8* %20, i32 1
  store i8* %incdec.ptr30, i8** %p, align 4
  store i8 %conv29, i8* %20, align 1
  br label %if.end31

if.end31:                                         ; preds = %if.else, %if.end28
  br label %while.cond10

while.end:                                        ; preds = %while.cond10
  %21 = load i8*, i8** %p, align 4
  store i8 0, i8* %21, align 1
  br label %while.end33

if.end32:                                         ; preds = %while.body
  br label %while.cond

while.end33:                                      ; preds = %while.end, %while.cond
  br label %if.end34

if.end34:                                         ; preds = %while.end33, %entry
  ret void
}

; Function Attrs: noinline nounwind
define void @quote_tokenized_output(i8* %str, %struct._IO_FILE* %file) #0 {
entry:
  %str.addr = alloca i8*, align 4
  %file.addr = alloca %struct._IO_FILE*, align 4
  %s = alloca i8*, align 4
  store i8* %str, i8** %str.addr, align 4
  store %struct._IO_FILE* %file, %struct._IO_FILE** %file.addr, align 4
  %0 = load i8*, i8** %str.addr, align 4
  store i8* %0, i8** %s, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i8*, i8** %s, align 4
  %2 = load i8, i8* %1, align 1
  %tobool = icmp ne i8 %2, 0
  br i1 %tobool, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %3 = load i8*, i8** %s, align 4
  %4 = load i8, i8* %3, align 1
  %conv = sext i8 %4 to i32
  switch i32 %conv, label %sw.default [
    i32 -125, label %sw.bb
    i32 -95, label %sw.bb2
    i32 92, label %sw.bb3
    i32 60, label %sw.bb3
    i32 62, label %sw.bb3
    i32 40, label %sw.bb3
    i32 124, label %sw.bb3
    i32 41, label %sw.bb3
    i32 94, label %sw.bb3
    i32 35, label %sw.bb3
    i32 126, label %sw.bb3
    i32 91, label %sw.bb3
    i32 93, label %sw.bb3
    i32 42, label %sw.bb3
    i32 63, label %sw.bb3
    i32 36, label %sw.bb3
    i32 32, label %sw.bb3
    i32 9, label %sw.bb5
    i32 10, label %sw.bb7
    i32 13, label %sw.bb9
    i32 61, label %sw.bb11
  ]

sw.bb:                                            ; preds = %for.body
  %5 = load i8*, i8** %s, align 4
  %incdec.ptr = getelementptr inbounds i8, i8* %5, i32 1
  store i8* %incdec.ptr, i8** %s, align 4
  %6 = load i8, i8* %incdec.ptr, align 1
  %conv1 = sext i8 %6 to i32
  %xor = xor i32 %conv1, 32
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** %file.addr, align 4
  %call = call i32 @putc(i32 %xor, %struct._IO_FILE* %7)
  br label %for.inc

sw.bb2:                                           ; preds = %for.body
  br label %for.inc

sw.bb3:                                           ; preds = %for.body, %for.body, %for.body, %for.body, %for.body, %for.body, %for.body, %for.body, %for.body, %for.body, %for.body, %for.body, %for.body, %for.body, %for.body
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** %file.addr, align 4
  %call4 = call i32 @putc(i32 92, %struct._IO_FILE* %8)
  br label %sw.epilog

sw.bb5:                                           ; preds = %for.body
  %9 = load %struct._IO_FILE*, %struct._IO_FILE** %file.addr, align 4
  %call6 = call i32 @fputs(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.6, i32 0, i32 0), %struct._IO_FILE* %9)
  br label %for.inc

sw.bb7:                                           ; preds = %for.body
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** %file.addr, align 4
  %call8 = call i32 @fputs(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.7, i32 0, i32 0), %struct._IO_FILE* %10)
  br label %for.inc

sw.bb9:                                           ; preds = %for.body
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** %file.addr, align 4
  %call10 = call i32 @fputs(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.8, i32 0, i32 0), %struct._IO_FILE* %11)
  br label %for.inc

sw.bb11:                                          ; preds = %for.body
  %12 = load i8*, i8** %s, align 4
  %13 = load i8*, i8** %str.addr, align 4
  %cmp = icmp eq i8* %12, %13
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %sw.bb11
  %14 = load %struct._IO_FILE*, %struct._IO_FILE** %file.addr, align 4
  %call13 = call i32 @putc(i32 92, %struct._IO_FILE* %14)
  br label %if.end

if.end:                                           ; preds = %if.then, %sw.bb11
  br label %sw.epilog

sw.default:                                       ; preds = %for.body
  %15 = load i8*, i8** %s, align 4
  %16 = load i8, i8* %15, align 1
  %idxprom = zext i8 %16 to i32
  %arrayidx = getelementptr inbounds [256 x i16], [256 x i16]* @typtab, i32 0, i32 %idxprom
  %17 = load i16, i16* %arrayidx, align 2
  %conv14 = sext i16 %17 to i32
  %and = and i32 %conv14, 16
  %tobool15 = icmp ne i32 %and, 0
  br i1 %tobool15, label %if.then16, label %if.end21

if.then16:                                        ; preds = %sw.default
  %18 = load i8*, i8** %s, align 4
  %19 = load i8, i8* %18, align 1
  %conv17 = sext i8 %19 to i32
  %sub = sub nsw i32 %conv17, -124
  %arrayidx18 = getelementptr inbounds [0 x i8], [0 x i8]* @ztokens, i32 0, i32 %sub
  %20 = load i8, i8* %arrayidx18, align 1
  %conv19 = sext i8 %20 to i32
  %21 = load %struct._IO_FILE*, %struct._IO_FILE** %file.addr, align 4
  %call20 = call i32 @putc(i32 %conv19, %struct._IO_FILE* %21)
  br label %for.inc

if.end21:                                         ; preds = %sw.default
  br label %sw.epilog

sw.epilog:                                        ; preds = %if.end21, %if.end, %sw.bb3
  %22 = load i8*, i8** %s, align 4
  %23 = load i8, i8* %22, align 1
  %conv22 = sext i8 %23 to i32
  %24 = load %struct._IO_FILE*, %struct._IO_FILE** %file.addr, align 4
  %call23 = call i32 @putc(i32 %conv22, %struct._IO_FILE* %24)
  br label %for.inc

for.inc:                                          ; preds = %sw.epilog, %if.then16, %sw.bb9, %sw.bb7, %sw.bb5, %sw.bb2, %sw.bb
  %25 = load i8*, i8** %s, align 4
  %incdec.ptr24 = getelementptr inbounds i8, i8* %25, i32 1
  store i8* %incdec.ptr24, i8** %s, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  ret void
}

declare i32 @putc(i32, %struct._IO_FILE*) #1

declare i32 @fputs(i8*, %struct._IO_FILE*) #1

; Function Attrs: noinline nounwind
define void @setunderscore(i8* %str) #0 {
entry:
  %str.addr = alloca i8*, align 4
  %l = alloca i32, align 4
  %nl = alloca i32, align 4
  %oset = alloca %struct.__sigset_t, align 4
  %tmp = alloca %struct.__sigset_t, align 4
  %tmp22 = alloca %struct.__sigset_t, align 4
  store i8* %str, i8** %str.addr, align 4
  %0 = load i32, i32* @queueing_enabled, align 4
  %inc = add nsw i32 %0, 1
  store i32 %inc, i32* @queueing_enabled, align 4
  %1 = load i8*, i8** %str.addr, align 4
  %tobool = icmp ne i8* %1, null
  br i1 %tobool, label %land.lhs.true, label %if.else

land.lhs.true:                                    ; preds = %entry
  %2 = load i8*, i8** %str.addr, align 4
  %3 = load i8, i8* %2, align 1
  %conv = sext i8 %3 to i32
  %tobool1 = icmp ne i32 %conv, 0
  br i1 %tobool1, label %if.then, label %if.else

if.then:                                          ; preds = %land.lhs.true
  %4 = load i8*, i8** %str.addr, align 4
  %call = call i32 @strlen(i8* %4)
  %add = add i32 %call, 1
  store i32 %add, i32* %l, align 4
  %5 = load i32, i32* %l, align 4
  %add2 = add nsw i32 %5, 31
  %and = and i32 %add2, -32
  store i32 %and, i32* %nl, align 4
  %6 = load i32, i32* %nl, align 4
  %7 = load i32, i32* @underscorelen, align 4
  %cmp = icmp sgt i32 %6, %7
  br i1 %cmp, label %if.then6, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.then
  %8 = load i32, i32* @underscorelen, align 4
  %9 = load i32, i32* %nl, align 4
  %sub = sub nsw i32 %8, %9
  %cmp4 = icmp sgt i32 %sub, 64
  br i1 %cmp4, label %if.then6, label %if.end

if.then6:                                         ; preds = %lor.lhs.false, %if.then
  %10 = load i8*, i8** @zunderscore, align 4
  %11 = load i32, i32* @underscorelen, align 4
  call void @zfree(i8* %10, i32 %11)
  %12 = load i32, i32* %nl, align 4
  store i32 %12, i32* @underscorelen, align 4
  %call7 = call i8* @zalloc(i32 %12)
  store i8* %call7, i8** @zunderscore, align 4
  br label %if.end

if.end:                                           ; preds = %if.then6, %lor.lhs.false
  %13 = load i8*, i8** @zunderscore, align 4
  %14 = load i8*, i8** %str.addr, align 4
  %call8 = call i8* @strcpy(i8* %13, i8* %14)
  %15 = load i32, i32* %l, align 4
  store i32 %15, i32* @underscoreused, align 4
  br label %if.end14

if.else:                                          ; preds = %land.lhs.true, %entry
  %16 = load i32, i32* @underscorelen, align 4
  %cmp9 = icmp sgt i32 %16, 128
  br i1 %cmp9, label %if.then11, label %if.end13

if.then11:                                        ; preds = %if.else
  %17 = load i8*, i8** @zunderscore, align 4
  %18 = load i32, i32* @underscorelen, align 4
  call void @zfree(i8* %17, i32 %18)
  store i32 32, i32* @underscorelen, align 4
  %call12 = call i8* @zalloc(i32 32)
  store i8* %call12, i8** @zunderscore, align 4
  br label %if.end13

if.end13:                                         ; preds = %if.then11, %if.else
  %19 = load i8*, i8** @zunderscore, align 4
  store i8 0, i8* %19, align 1
  store i32 1, i32* @underscoreused, align 4
  br label %if.end14

if.end14:                                         ; preds = %if.end13, %if.end
  br label %do.body

do.body:                                          ; preds = %if.end14
  %20 = load i32, i32* @queueing_enabled, align 4
  %dec = add nsw i32 %20, -1
  store i32 %dec, i32* @queueing_enabled, align 4
  %tobool15 = icmp ne i32 %dec, 0
  br i1 %tobool15, label %if.end23, label %if.then16

if.then16:                                        ; preds = %do.body
  br label %do.body17

do.body17:                                        ; preds = %if.then16
  br label %while.cond

while.cond:                                       ; preds = %while.body, %do.body17
  %21 = load i32, i32* @queue_front, align 4
  %22 = load i32, i32* @queue_rear, align 4
  %cmp18 = icmp ne i32 %21, %22
  br i1 %cmp18, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %23 = load i32, i32* @queue_front, align 4
  %add20 = add nsw i32 %23, 1
  %rem = srem i32 %add20, 128
  store i32 %rem, i32* @queue_front, align 4
  %24 = load i32, i32* @queue_front, align 4
  %arrayidx = getelementptr inbounds [128 x %struct.__sigset_t], [128 x %struct.__sigset_t]* @signal_mask_queue, i32 0, i32 %24
  call void @signal_setmask(%struct.__sigset_t* sret %tmp, %struct.__sigset_t* byval align 4 %arrayidx)
  %25 = bitcast %struct.__sigset_t* %oset to i8*
  %26 = bitcast %struct.__sigset_t* %tmp to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %25, i8* %26, i32 128, i32 4, i1 false)
  %27 = load i32, i32* @queue_front, align 4
  %arrayidx21 = getelementptr inbounds [128 x i32], [128 x i32]* @signal_queue, i32 0, i32 %27
  %28 = load i32, i32* %arrayidx21, align 4
  call void @zhandler(i32 %28)
  call void @signal_setmask(%struct.__sigset_t* sret %tmp22, %struct.__sigset_t* byval align 4 %oset)
  br label %while.cond

while.end:                                        ; preds = %while.cond
  br label %do.end

do.end:                                           ; preds = %while.end
  br label %if.end23

if.end23:                                         ; preds = %do.end, %do.body
  br label %do.end24

do.end24:                                         ; preds = %if.end23
  ret void
}

declare void @zfree(i8*, i32) #1

; Function Attrs: noinline nounwind
define void @execsubst(%union.linkroot* %strs) #0 {
entry:
  %strs.addr = alloca %union.linkroot*, align 4
  %ostrs = alloca %union.linkroot*, align 4
  store %union.linkroot* %strs, %union.linkroot** %strs.addr, align 4
  %0 = load %union.linkroot*, %union.linkroot** %strs.addr, align 4
  %tobool = icmp ne %union.linkroot* %0, null
  br i1 %tobool, label %if.then, label %if.end4

if.then:                                          ; preds = %entry
  %1 = load %union.linkroot*, %union.linkroot** %strs.addr, align 4
  %2 = load i32, i32* @esprefork, align 4
  call void @prefork(%union.linkroot* %1, i32 %2, i32* null)
  %3 = load i32, i32* @esglob, align 4
  %tobool1 = icmp ne i32 %3, 0
  br i1 %tobool1, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %if.then
  %4 = load i32, i32* @errflag, align 4
  %tobool2 = icmp ne i32 %4, 0
  br i1 %tobool2, label %if.end, label %if.then3

if.then3:                                         ; preds = %land.lhs.true
  %5 = load %union.linkroot*, %union.linkroot** %strs.addr, align 4
  store %union.linkroot* %5, %union.linkroot** %ostrs, align 4
  %6 = load %union.linkroot*, %union.linkroot** %strs.addr, align 4
  call void @globlist(%union.linkroot* %6, i32 0)
  %7 = load %union.linkroot*, %union.linkroot** %ostrs, align 4
  store %union.linkroot* %7, %union.linkroot** %strs.addr, align 4
  br label %if.end

if.end:                                           ; preds = %if.then3, %land.lhs.true, %if.then
  br label %if.end4

if.end4:                                          ; preds = %if.end, %entry
  ret void
}

declare void @prefork(%union.linkroot*, i32, i32*) #1

declare void @globlist(%union.linkroot*, i32) #1

; Function Attrs: noinline nounwind
define void @closem(i32 %how, i32 %all) #0 {
entry:
  %how.addr = alloca i32, align 4
  %all.addr = alloca i32, align 4
  %i = alloca i32, align 4
  store i32 %how, i32* %how.addr, align 4
  store i32 %all, i32* %all.addr, align 4
  store i32 10, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @max_zsh_fd, align 4
  %cmp = icmp sle i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %2 = load i8*, i8** @fdtable, align 4
  %3 = load i32, i32* %i, align 4
  %arrayidx = getelementptr inbounds i8, i8* %2, i32 %3
  %4 = load i8, i8* %arrayidx, align 1
  %conv = zext i8 %4 to i32
  %cmp1 = icmp ne i32 %conv, 0
  br i1 %cmp1, label %land.lhs.true, label %if.end18

land.lhs.true:                                    ; preds = %for.body
  %5 = load i32, i32* %all.addr, align 4
  %tobool = icmp ne i32 %5, 0
  br i1 %tobool, label %land.lhs.true7, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true
  %6 = load i8*, i8** @fdtable, align 4
  %7 = load i32, i32* %i, align 4
  %arrayidx3 = getelementptr inbounds i8, i8* %6, i32 %7
  %8 = load i8, i8* %arrayidx3, align 1
  %conv4 = zext i8 %8 to i32
  %cmp5 = icmp ne i32 %conv4, 7
  br i1 %cmp5, label %land.lhs.true7, label %if.end18

land.lhs.true7:                                   ; preds = %lor.lhs.false, %land.lhs.true
  %9 = load i32, i32* %how.addr, align 4
  %cmp8 = icmp eq i32 %9, 0
  br i1 %cmp8, label %if.then, label %lor.lhs.false10

lor.lhs.false10:                                  ; preds = %land.lhs.true7
  %10 = load i8*, i8** @fdtable, align 4
  %11 = load i32, i32* %i, align 4
  %arrayidx11 = getelementptr inbounds i8, i8* %10, i32 %11
  %12 = load i8, i8* %arrayidx11, align 1
  %conv12 = zext i8 %12 to i32
  %and = and i32 %conv12, 15
  %13 = load i32, i32* %how.addr, align 4
  %cmp13 = icmp eq i32 %and, %13
  br i1 %cmp13, label %if.then, label %if.end18

if.then:                                          ; preds = %lor.lhs.false10, %land.lhs.true7
  %14 = load i32, i32* %i, align 4
  %15 = load i32, i32* @SHTTY, align 4
  %cmp15 = icmp eq i32 %14, %15
  br i1 %cmp15, label %if.then17, label %if.end

if.then17:                                        ; preds = %if.then
  store i32 -1, i32* @SHTTY, align 4
  br label %if.end

if.end:                                           ; preds = %if.then17, %if.then
  %16 = load i32, i32* %i, align 4
  %call = call i32 @zclose(i32 %16)
  br label %if.end18

if.end18:                                         ; preds = %if.end, %lor.lhs.false10, %lor.lhs.false, %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end18
  %17 = load i32, i32* %i, align 4
  %inc = add nsw i32 %17, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  ret void
}

declare i32 @zclose(i32) #1

; Function Attrs: noinline nounwind
define i8* @gethere(i8** %strp, i32 %typ) #0 {
entry:
  %retval = alloca i8*, align 4
  %strp.addr = alloca i8**, align 4
  %typ.addr = alloca i32, align 4
  %buf = alloca i8*, align 4
  %bsiz = alloca i32, align 4
  %qt = alloca i32, align 4
  %strip = alloca i32, align 4
  %s = alloca i8*, align 4
  %t = alloca i8*, align 4
  %bptr = alloca i8*, align 4
  %c = alloca i8, align 1
  %str = alloca i8*, align 4
  %newbuf = alloca i8*, align 4
  %ef = alloca i32, align 4
  store i8** %strp, i8*** %strp.addr, align 4
  store i32 %typ, i32* %typ.addr, align 4
  store i32 0, i32* %qt, align 4
  store i32 0, i32* %strip, align 4
  %0 = load i8**, i8*** %strp.addr, align 4
  %1 = load i8*, i8** %0, align 4
  store i8* %1, i8** %str, align 4
  %2 = load i8*, i8** %str, align 4
  store i8* %2, i8** %s, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load i8*, i8** %s, align 4
  %4 = load i8, i8* %3, align 1
  %tobool = icmp ne i8 %4, 0
  br i1 %tobool, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %5 = load i8*, i8** %s, align 4
  %6 = load i8, i8* %5, align 1
  %idxprom = zext i8 %6 to i32
  %arrayidx = getelementptr inbounds [256 x i16], [256 x i16]* @typtab, i32 0, i32 %idxprom
  %7 = load i16, i16* %arrayidx, align 2
  %conv = sext i16 %7 to i32
  %and = and i32 %conv, 16384
  %tobool1 = icmp ne i32 %and, 0
  br i1 %tobool1, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  store i32 1, i32* %qt, align 4
  br label %for.end

if.end:                                           ; preds = %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %8 = load i8*, i8** %s, align 4
  %incdec.ptr = getelementptr inbounds i8, i8* %8, i32 1
  store i8* %incdec.ptr, i8** %s, align 4
  br label %for.cond

for.end:                                          ; preds = %if.then, %for.cond
  %9 = load i8*, i8** %str, align 4
  %call = call i8* @quotesubst(i8* %9)
  store i8* %call, i8** %str, align 4
  %10 = load i8*, i8** %str, align 4
  call void @untokenize(i8* %10)
  %11 = load i32, i32* %typ.addr, align 4
  %cmp = icmp eq i32 %11, 11
  br i1 %cmp, label %if.then3, label %if.end8

if.then3:                                         ; preds = %for.end
  store i32 1, i32* %strip, align 4
  br label %while.cond

while.cond:                                       ; preds = %while.body, %if.then3
  %12 = load i8*, i8** %str, align 4
  %13 = load i8, i8* %12, align 1
  %conv4 = sext i8 %13 to i32
  %cmp5 = icmp eq i32 %conv4, 9
  br i1 %cmp5, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %14 = load i8*, i8** %str, align 4
  %incdec.ptr7 = getelementptr inbounds i8, i8* %14, i32 1
  store i8* %incdec.ptr7, i8** %str, align 4
  br label %while.cond

while.end:                                        ; preds = %while.cond
  br label %if.end8

if.end8:                                          ; preds = %while.end, %for.end
  %15 = load i8*, i8** %str, align 4
  %16 = load i8**, i8*** %strp.addr, align 4
  store i8* %15, i8** %16, align 4
  store i32 256, i32* %bsiz, align 4
  %call9 = call i8* @zalloc(i32 256)
  store i8* %call9, i8** %buf, align 4
  store i8* %call9, i8** %bptr, align 4
  br label %for.cond10

for.cond10:                                       ; preds = %if.end66, %if.end8
  %17 = load i8*, i8** %bptr, align 4
  store i8* %17, i8** %t, align 4
  br label %while.cond11

while.cond11:                                     ; preds = %while.body18, %for.cond10
  %18 = load i32 ()*, i32 ()** @hgetc, align 4
  %call12 = call i32 %18()
  %conv13 = trunc i32 %call12 to i8
  store i8 %conv13, i8* %c, align 1
  %conv14 = sext i8 %conv13 to i32
  %cmp15 = icmp eq i32 %conv14, 9
  br i1 %cmp15, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %while.cond11
  %19 = load i32, i32* %strip, align 4
  %tobool17 = icmp ne i32 %19, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond11
  %20 = phi i1 [ false, %while.cond11 ], [ %tobool17, %land.rhs ]
  br i1 %20, label %while.body18, label %while.end19

while.body18:                                     ; preds = %land.end
  br label %while.cond11

while.end19:                                      ; preds = %land.end
  br label %for.cond20

for.cond20:                                       ; preds = %if.end55, %if.then50, %while.end19
  %21 = load i8*, i8** %bptr, align 4
  %22 = load i8*, i8** %buf, align 4
  %23 = load i32, i32* %bsiz, align 4
  %add.ptr = getelementptr inbounds i8, i8* %22, i32 %23
  %cmp21 = icmp eq i8* %21, %add.ptr
  br i1 %cmp21, label %if.then23, label %if.end32

if.then23:                                        ; preds = %for.cond20
  %24 = load i8*, i8** %buf, align 4
  %25 = load i32, i32* %bsiz, align 4
  %mul = mul nsw i32 2, %25
  %call24 = call i8* @realloc(i8* %24, i32 %mul)
  store i8* %call24, i8** %newbuf, align 4
  %26 = load i8*, i8** %newbuf, align 4
  %tobool25 = icmp ne i8* %26, null
  br i1 %tobool25, label %if.end27, label %if.then26

if.then26:                                        ; preds = %if.then23
  %27 = load i8*, i8** %buf, align 4
  %28 = load i32, i32* %bsiz, align 4
  call void @zfree(i8* %27, i32 %28)
  store i8* null, i8** %retval, align 4
  br label %return

if.end27:                                         ; preds = %if.then23
  %29 = load i8*, i8** %newbuf, align 4
  store i8* %29, i8** %buf, align 4
  %30 = load i8*, i8** %buf, align 4
  %31 = load i32, i32* %bsiz, align 4
  %add.ptr28 = getelementptr inbounds i8, i8* %30, i32 %31
  %32 = load i8*, i8** %bptr, align 4
  %33 = load i8*, i8** %t, align 4
  %sub.ptr.lhs.cast = ptrtoint i8* %32 to i32
  %sub.ptr.rhs.cast = ptrtoint i8* %33 to i32
  %sub.ptr.sub = sub i32 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %idx.neg = sub i32 0, %sub.ptr.sub
  %add.ptr29 = getelementptr inbounds i8, i8* %add.ptr28, i32 %idx.neg
  store i8* %add.ptr29, i8** %t, align 4
  %34 = load i8*, i8** %buf, align 4
  %35 = load i32, i32* %bsiz, align 4
  %add.ptr30 = getelementptr inbounds i8, i8* %34, i32 %35
  store i8* %add.ptr30, i8** %bptr, align 4
  %36 = load i32, i32* %bsiz, align 4
  %mul31 = mul nsw i32 %36, 2
  store i32 %mul31, i32* %bsiz, align 4
  br label %if.end32

if.end32:                                         ; preds = %if.end27, %for.cond20
  %37 = load i32, i32* @lexstop, align 4
  %tobool33 = icmp ne i32 %37, 0
  br i1 %tobool33, label %if.then37, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end32
  %38 = load i8, i8* %c, align 1
  %conv34 = sext i8 %38 to i32
  %cmp35 = icmp eq i32 %conv34, 10
  br i1 %cmp35, label %if.then37, label %if.end38

if.then37:                                        ; preds = %lor.lhs.false, %if.end32
  br label %for.end59

if.end38:                                         ; preds = %lor.lhs.false
  %39 = load i32, i32* %qt, align 4
  %tobool39 = icmp ne i32 %39, 0
  br i1 %tobool39, label %if.end55, label %land.lhs.true

land.lhs.true:                                    ; preds = %if.end38
  %40 = load i8, i8* %c, align 1
  %conv40 = sext i8 %40 to i32
  %cmp41 = icmp eq i32 %conv40, 92
  br i1 %cmp41, label %if.then43, label %if.end55

if.then43:                                        ; preds = %land.lhs.true
  %41 = load i8, i8* %c, align 1
  %42 = load i8*, i8** %bptr, align 4
  %incdec.ptr44 = getelementptr inbounds i8, i8* %42, i32 1
  store i8* %incdec.ptr44, i8** %bptr, align 4
  store i8 %41, i8* %42, align 1
  %43 = load i32 ()*, i32 ()** @hgetc, align 4
  %call45 = call i32 %43()
  %conv46 = trunc i32 %call45 to i8
  store i8 %conv46, i8* %c, align 1
  %44 = load i8, i8* %c, align 1
  %conv47 = sext i8 %44 to i32
  %cmp48 = icmp eq i32 %conv47, 10
  br i1 %cmp48, label %if.then50, label %if.end54

if.then50:                                        ; preds = %if.then43
  %45 = load i8*, i8** %bptr, align 4
  %incdec.ptr51 = getelementptr inbounds i8, i8* %45, i32 -1
  store i8* %incdec.ptr51, i8** %bptr, align 4
  %46 = load i32 ()*, i32 ()** @hgetc, align 4
  %call52 = call i32 %46()
  %conv53 = trunc i32 %call52 to i8
  store i8 %conv53, i8* %c, align 1
  br label %for.cond20

if.end54:                                         ; preds = %if.then43
  br label %if.end55

if.end55:                                         ; preds = %if.end54, %land.lhs.true, %if.end38
  %47 = load i8, i8* %c, align 1
  %48 = load i8*, i8** %bptr, align 4
  %incdec.ptr56 = getelementptr inbounds i8, i8* %48, i32 1
  store i8* %incdec.ptr56, i8** %bptr, align 4
  store i8 %47, i8* %48, align 1
  %49 = load i32 ()*, i32 ()** @hgetc, align 4
  %call57 = call i32 %49()
  %conv58 = trunc i32 %call57 to i8
  store i8 %conv58, i8* %c, align 1
  br label %for.cond20

for.end59:                                        ; preds = %if.then37
  %50 = load i8*, i8** %bptr, align 4
  store i8 0, i8* %50, align 1
  %51 = load i8*, i8** %t, align 4
  %52 = load i8*, i8** %str, align 4
  %call60 = call i32 @strcmp(i8* %51, i8* %52)
  %tobool61 = icmp ne i32 %call60, 0
  br i1 %tobool61, label %if.end63, label %if.then62

if.then62:                                        ; preds = %for.end59
  br label %for.end68

if.end63:                                         ; preds = %for.end59
  %53 = load i32, i32* @lexstop, align 4
  %tobool64 = icmp ne i32 %53, 0
  br i1 %tobool64, label %if.then65, label %if.end66

if.then65:                                        ; preds = %if.end63
  %54 = load i8*, i8** %bptr, align 4
  store i8* %54, i8** %t, align 4
  br label %for.end68

if.end66:                                         ; preds = %if.end63
  %55 = load i8*, i8** %bptr, align 4
  %incdec.ptr67 = getelementptr inbounds i8, i8* %55, i32 1
  store i8* %incdec.ptr67, i8** %bptr, align 4
  store i8 10, i8* %55, align 1
  br label %for.cond10

for.end68:                                        ; preds = %if.then65, %if.then62
  %56 = load i8*, i8** %t, align 4
  store i8 0, i8* %56, align 1
  %57 = load i8*, i8** %buf, align 4
  store i8* %57, i8** %s, align 4
  %58 = load i8*, i8** %buf, align 4
  %call69 = call i8* @dupstring(i8* %58)
  store i8* %call69, i8** %buf, align 4
  %59 = load i8*, i8** %s, align 4
  %60 = load i32, i32* %bsiz, align 4
  call void @zfree(i8* %59, i32 %60)
  %61 = load i32, i32* %qt, align 4
  %tobool70 = icmp ne i32 %61, 0
  br i1 %tobool70, label %if.end78, label %if.then71

if.then71:                                        ; preds = %for.end68
  %62 = load i32, i32* @errflag, align 4
  store i32 %62, i32* %ef, align 4
  %call72 = call i32 @parsestr(i8** %buf)
  %63 = load i32, i32* @errflag, align 4
  %and73 = and i32 %63, 1
  %tobool74 = icmp ne i32 %and73, 0
  br i1 %tobool74, label %if.end77, label %if.then75

if.then75:                                        ; preds = %if.then71
  %64 = load i32, i32* %ef, align 4
  %65 = load i32, i32* @errflag, align 4
  %and76 = and i32 %65, 2
  %or = or i32 %64, %and76
  store i32 %or, i32* @errflag, align 4
  br label %if.end77

if.end77:                                         ; preds = %if.then75, %if.then71
  br label %if.end78

if.end78:                                         ; preds = %if.end77, %for.end68
  %66 = load i8*, i8** %buf, align 4
  store i8* %66, i8** %retval, align 4
  br label %return

return:                                           ; preds = %if.end78, %if.then26
  %67 = load i8*, i8** %retval, align 4
  ret i8* %67
}

declare i8* @quotesubst(i8*) #1

declare i8* @realloc(i8*, i32) #1

declare i32 @strcmp(i8*, i8*) #1

declare i32 @parsestr(i8**) #1

; Function Attrs: noinline nounwind
define %union.linkroot* @getoutput(i8* %cmd, i32 %qt) #0 {
entry:
  %retval = alloca %union.linkroot*, align 4
  %cmd.addr = alloca i8*, align 4
  %qt.addr = alloca i32, align 4
  %prog = alloca %struct.eprog*, align 4
  %pipes = alloca [2 x i32], align 4
  %pid = alloca i32, align 4
  %s = alloca i8*, align 4
  %onc = alloca i32, align 4
  %stream = alloca i32, align 4
  %retval6 = alloca %union.linkroot*, align 4
  %readerror = alloca i32, align 4
  %tmp = alloca %struct.__sigset_t, align 4
  %tmp35 = alloca %struct.__sigset_t, align 4
  %retval39 = alloca %union.linkroot*, align 4
  %tmp49 = alloca %struct.__sigset_t, align 4
  store i8* %cmd, i8** %cmd.addr, align 4
  store i32 %qt, i32* %qt.addr, align 4
  %0 = load i32, i32* @nocomments, align 4
  store i32 %0, i32* %onc, align 4
  %1 = load i8, i8* getelementptr inbounds ([181 x i8], [181 x i8]* @opts, i32 0, i32 94), align 1
  %conv = sext i8 %1 to i32
  %tobool = icmp ne i32 %conv, 0
  br i1 %tobool, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %entry
  %2 = load i8, i8* getelementptr inbounds ([181 x i8], [181 x i8]* @opts, i32 0, i32 95), align 1
  %tobool1 = icmp ne i8 %2, 0
  %lnot = xor i1 %tobool1, true
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %3 = phi i1 [ false, %entry ], [ %lnot, %land.rhs ]
  %land.ext = zext i1 %3 to i32
  store i32 %land.ext, i32* @nocomments, align 4
  %4 = load i8*, i8** %cmd.addr, align 4
  %call = call %struct.eprog* @parse_string(i8* %4, i32 0)
  store %struct.eprog* %call, %struct.eprog** %prog, align 4
  %5 = load i32, i32* %onc, align 4
  store i32 %5, i32* @nocomments, align 4
  %6 = load %struct.eprog*, %struct.eprog** %prog, align 4
  %tobool2 = icmp ne %struct.eprog* %6, null
  br i1 %tobool2, label %if.end, label %if.then

if.then:                                          ; preds = %land.end
  store %union.linkroot* null, %union.linkroot** %retval, align 4
  br label %return

if.end:                                           ; preds = %land.end
  %7 = load %struct.eprog*, %struct.eprog** %prog, align 4
  %call3 = call i8* @simple_redir_name(%struct.eprog* %7, i32 9)
  store i8* %call3, i8** %s, align 4
  %tobool4 = icmp ne i8* %call3, null
  br i1 %tobool4, label %if.then5, label %if.end21

if.then5:                                         ; preds = %if.end
  call void @singsub(i8** %s)
  %8 = load i32, i32* @errflag, align 4
  %tobool7 = icmp ne i32 %8, 0
  br i1 %tobool7, label %if.then8, label %if.end9

if.then8:                                         ; preds = %if.then5
  store %union.linkroot* null, %union.linkroot** %retval, align 4
  br label %return

if.end9:                                          ; preds = %if.then5
  %9 = load i8*, i8** %s, align 4
  call void @untokenize(i8* %9)
  %10 = load i8*, i8** %s, align 4
  %call10 = call i8* @unmeta(i8* %10)
  %call11 = call i32 (i8*, i32, ...) @open(i8* %call10, i32 256)
  store i32 %call11, i32* %stream, align 4
  %cmp = icmp eq i32 %call11, -1
  br i1 %cmp, label %if.then13, label %if.end16

if.then13:                                        ; preds = %if.end9
  %call14 = call i32* @__errno_location()
  %11 = load i32, i32* %call14, align 4
  %12 = load i8*, i8** %s, align 4
  call void (i8*, ...) @zwarn(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.9, i32 0, i32 0), i32 %11, i8* %12)
  store i32 1, i32* @cmdoutval, align 4
  store i32 1, i32* @lastval, align 4
  %call15 = call %union.linkroot* @newlinklist()
  store %union.linkroot* %call15, %union.linkroot** %retval, align 4
  br label %return

if.end16:                                         ; preds = %if.end9
  %13 = load i32, i32* %stream, align 4
  %14 = load i32, i32* %qt.addr, align 4
  %call17 = call %union.linkroot* @readoutput(i32 %13, i32 %14, i32* %readerror)
  store %union.linkroot* %call17, %union.linkroot** %retval6, align 4
  %15 = load i32, i32* %readerror, align 4
  %tobool18 = icmp ne i32 %15, 0
  br i1 %tobool18, label %if.then19, label %if.end20

if.then19:                                        ; preds = %if.end16
  %16 = load i8*, i8** %s, align 4
  %17 = load i32, i32* %readerror, align 4
  call void (i8*, ...) @zwarn(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.10, i32 0, i32 0), i8* %16, i32 %17)
  store i32 1, i32* @cmdoutval, align 4
  store i32 1, i32* @lastval, align 4
  br label %if.end20

if.end20:                                         ; preds = %if.then19, %if.end16
  %18 = load %union.linkroot*, %union.linkroot** %retval6, align 4
  store %union.linkroot* %18, %union.linkroot** %retval, align 4
  br label %return

if.end21:                                         ; preds = %if.end
  %arraydecay = getelementptr inbounds [2 x i32], [2 x i32]* %pipes, i32 0, i32 0
  %call22 = call i32 @mpipe(i32* %arraydecay)
  %cmp23 = icmp slt i32 %call22, 0
  br i1 %cmp23, label %if.then25, label %if.end26

if.then25:                                        ; preds = %if.end21
  %19 = load i32, i32* @errflag, align 4
  %or = or i32 %19, 1
  store i32 %or, i32* @errflag, align 4
  store i32 0, i32* @cmdoutpid, align 4
  store %union.linkroot* null, %union.linkroot** %retval, align 4
  br label %return

if.end26:                                         ; preds = %if.end21
  call void @signal_block(%struct.__sigset_t* sret %tmp, %struct.__sigset_t* byval align 4 @sigchld_mask)
  store i32 0, i32* @cmdoutval, align 4
  %call27 = call i32 @zfork(%struct.timeval* null)
  store i32 %call27, i32* %pid, align 4
  store i32 %call27, i32* @cmdoutpid, align 4
  %cmp28 = icmp eq i32 %call27, -1
  br i1 %cmp28, label %if.then30, label %if.else

if.then30:                                        ; preds = %if.end26
  %arrayidx = getelementptr inbounds [2 x i32], [2 x i32]* %pipes, i32 0, i32 0
  %20 = load i32, i32* %arrayidx, align 4
  %call31 = call i32 @zclose(i32 %20)
  %arrayidx32 = getelementptr inbounds [2 x i32], [2 x i32]* %pipes, i32 0, i32 1
  %21 = load i32, i32* %arrayidx32, align 4
  %call33 = call i32 @zclose(i32 %21)
  %22 = load i32, i32* @errflag, align 4
  %or34 = or i32 %22, 1
  store i32 %or34, i32* @errflag, align 4
  store i32 0, i32* @cmdoutpid, align 4
  call void @signal_unblock(%struct.__sigset_t* sret %tmp35, %struct.__sigset_t* byval align 4 @sigchld_mask)
  store %union.linkroot* null, %union.linkroot** %retval, align 4
  br label %return

if.else:                                          ; preds = %if.end26
  %23 = load i32, i32* %pid, align 4
  %tobool36 = icmp ne i32 %23, 0
  br i1 %tobool36, label %if.then37, label %if.end47

if.then37:                                        ; preds = %if.else
  %arrayidx40 = getelementptr inbounds [2 x i32], [2 x i32]* %pipes, i32 0, i32 1
  %24 = load i32, i32* %arrayidx40, align 4
  %call41 = call i32 @zclose(i32 %24)
  %arrayidx42 = getelementptr inbounds [2 x i32], [2 x i32]* %pipes, i32 0, i32 0
  %25 = load i32, i32* %arrayidx42, align 4
  %26 = load i32, i32* %qt.addr, align 4
  %call43 = call %union.linkroot* @readoutput(i32 %25, i32 %26, i32* null)
  store %union.linkroot* %call43, %union.linkroot** %retval39, align 4
  %27 = load i8*, i8** @fdtable, align 4
  %arrayidx44 = getelementptr inbounds [2 x i32], [2 x i32]* %pipes, i32 0, i32 0
  %28 = load i32, i32* %arrayidx44, align 4
  %arrayidx45 = getelementptr inbounds i8, i8* %27, i32 %28
  store i8 0, i8* %arrayidx45, align 1
  %29 = load i32, i32* %pid, align 4
  %call46 = call i32 @waitforpid(i32 %29, i32 0)
  %30 = load i32, i32* @cmdoutval, align 4
  store i32 %30, i32* @lastval, align 4
  %31 = load %union.linkroot*, %union.linkroot** %retval39, align 4
  store %union.linkroot* %31, %union.linkroot** %retval, align 4
  br label %return

if.end47:                                         ; preds = %if.else
  br label %if.end48

if.end48:                                         ; preds = %if.end47
  call void @signal_unblock(%struct.__sigset_t* sret %tmp49, %struct.__sigset_t* byval align 4 @sigchld_mask)
  %arrayidx50 = getelementptr inbounds [2 x i32], [2 x i32]* %pipes, i32 0, i32 0
  %32 = load i32, i32* %arrayidx50, align 4
  %call51 = call i32 @zclose(i32 %32)
  %arrayidx52 = getelementptr inbounds [2 x i32], [2 x i32]* %pipes, i32 0, i32 1
  %33 = load i32, i32* %arrayidx52, align 4
  %call53 = call i32 @redup(i32 %33, i32 1)
  call void @entersubsh(i32 34)
  call void @cmdpush(i32 24)
  %34 = load %struct.eprog*, %struct.eprog** %prog, align 4
  call void @execode(%struct.eprog* %34, i32 0, i32 1, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.11, i32 0, i32 0))
  call void @cmdpop()
  %call54 = call i32 @close(i32 1)
  %35 = load i32, i32* @lastval, align 4
  call void @_exit(i32 %35) #4
  unreachable

return:                                           ; preds = %if.then37, %if.then30, %if.then25, %if.end20, %if.then13, %if.then8, %if.then
  %36 = load %union.linkroot*, %union.linkroot** %retval, align 4
  ret %union.linkroot* %36
}

; Function Attrs: noinline nounwind
define internal i8* @simple_redir_name(%struct.eprog* %prog, i32 %redir_type) #0 {
entry:
  %retval = alloca i8*, align 4
  %prog.addr = alloca %struct.eprog*, align 4
  %redir_type.addr = alloca i32, align 4
  %pc = alloca i32*, align 4
  store %struct.eprog* %prog, %struct.eprog** %prog.addr, align 4
  store i32 %redir_type, i32* %redir_type.addr, align 4
  %0 = load %struct.eprog*, %struct.eprog** %prog.addr, align 4
  %prog1 = getelementptr inbounds %struct.eprog, %struct.eprog* %0, i32 0, i32 5
  %1 = load i32*, i32** %prog1, align 4
  store i32* %1, i32** %pc, align 4
  %2 = load %struct.eprog*, %struct.eprog** %prog.addr, align 4
  %cmp = icmp ne %struct.eprog* %2, @dummy_eprog
  br i1 %cmp, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %entry
  %3 = load i32*, i32** %pc, align 4
  %arrayidx = getelementptr inbounds i32, i32* %3, i32 0
  %4 = load i32, i32* %arrayidx, align 4
  %and = and i32 %4, 31
  %cmp2 = icmp eq i32 %and, 1
  br i1 %cmp2, label %land.lhs.true3, label %if.end

land.lhs.true3:                                   ; preds = %land.lhs.true
  %5 = load i32*, i32** %pc, align 4
  %arrayidx4 = getelementptr inbounds i32, i32* %5, i32 0
  %6 = load i32, i32* %arrayidx4, align 4
  %shr = lshr i32 %6, 5
  %and5 = and i32 %shr, 16
  %tobool = icmp ne i32 %and5, 0
  br i1 %tobool, label %land.lhs.true6, label %if.end

land.lhs.true6:                                   ; preds = %land.lhs.true3
  %7 = load i32*, i32** %pc, align 4
  %arrayidx7 = getelementptr inbounds i32, i32* %7, i32 1
  %8 = load i32, i32* %arrayidx7, align 4
  %and8 = and i32 %8, 31
  %cmp9 = icmp eq i32 %and8, 2
  br i1 %cmp9, label %land.lhs.true10, label %if.end

land.lhs.true10:                                  ; preds = %land.lhs.true6
  %9 = load i32*, i32** %pc, align 4
  %arrayidx11 = getelementptr inbounds i32, i32* %9, i32 1
  %10 = load i32, i32* %arrayidx11, align 4
  %shr12 = lshr i32 %10, 5
  %and13 = and i32 %shr12, 28
  %tobool14 = icmp ne i32 %and13, 0
  br i1 %tobool14, label %if.end, label %land.lhs.true15

land.lhs.true15:                                  ; preds = %land.lhs.true10
  %11 = load i32*, i32** %pc, align 4
  %arrayidx16 = getelementptr inbounds i32, i32* %11, i32 1
  %12 = load i32, i32* %arrayidx16, align 4
  %shr17 = lshr i32 %12, 5
  %and18 = and i32 %shr17, 3
  %cmp19 = icmp eq i32 %and18, 0
  br i1 %cmp19, label %land.lhs.true20, label %if.end

land.lhs.true20:                                  ; preds = %land.lhs.true15
  %13 = load i32*, i32** %pc, align 4
  %arrayidx21 = getelementptr inbounds i32, i32* %13, i32 2
  %14 = load i32, i32* %arrayidx21, align 4
  %and22 = and i32 %14, 31
  %cmp23 = icmp eq i32 %and22, 3
  br i1 %cmp23, label %land.lhs.true24, label %if.end

land.lhs.true24:                                  ; preds = %land.lhs.true20
  %15 = load i32*, i32** %pc, align 4
  %arrayidx25 = getelementptr inbounds i32, i32* %15, i32 2
  %16 = load i32, i32* %arrayidx25, align 4
  %shr26 = lshr i32 %16, 5
  %and27 = and i32 %shr26, 1
  %cmp28 = icmp eq i32 %and27, 0
  br i1 %cmp28, label %land.lhs.true29, label %if.end

land.lhs.true29:                                  ; preds = %land.lhs.true24
  %17 = load i32*, i32** %pc, align 4
  %arrayidx30 = getelementptr inbounds i32, i32* %17, i32 3
  %18 = load i32, i32* %arrayidx30, align 4
  %and31 = and i32 %18, 31
  %cmp32 = icmp eq i32 %and31, 4
  br i1 %cmp32, label %land.lhs.true33, label %if.end

land.lhs.true33:                                  ; preds = %land.lhs.true29
  %19 = load i32*, i32** %pc, align 4
  %arrayidx34 = getelementptr inbounds i32, i32* %19, i32 3
  %20 = load i32, i32* %arrayidx34, align 4
  %shr35 = lshr i32 %20, 5
  %and36 = and i32 %shr35, 31
  %21 = load i32, i32* %redir_type.addr, align 4
  %cmp37 = icmp eq i32 %and36, %21
  br i1 %cmp37, label %land.lhs.true38, label %if.end

land.lhs.true38:                                  ; preds = %land.lhs.true33
  %22 = load i32*, i32** %pc, align 4
  %arrayidx39 = getelementptr inbounds i32, i32* %22, i32 3
  %23 = load i32, i32* %arrayidx39, align 4
  %shr40 = lshr i32 %23, 5
  %and41 = and i32 %shr40, 32
  %tobool42 = icmp ne i32 %and41, 0
  br i1 %tobool42, label %if.end, label %land.lhs.true43

land.lhs.true43:                                  ; preds = %land.lhs.true38
  %24 = load i32*, i32** %pc, align 4
  %arrayidx44 = getelementptr inbounds i32, i32* %24, i32 4
  %25 = load i32, i32* %arrayidx44, align 4
  %tobool45 = icmp ne i32 %25, 0
  br i1 %tobool45, label %if.end, label %land.lhs.true46

land.lhs.true46:                                  ; preds = %land.lhs.true43
  %26 = load i32*, i32** %pc, align 4
  %arrayidx47 = getelementptr inbounds i32, i32* %26, i32 6
  %27 = load i32, i32* %arrayidx47, align 4
  %and48 = and i32 %27, 31
  %cmp49 = icmp eq i32 %and48, 6
  br i1 %cmp49, label %land.lhs.true50, label %if.end

land.lhs.true50:                                  ; preds = %land.lhs.true46
  %28 = load i32*, i32** %pc, align 4
  %arrayidx51 = getelementptr inbounds i32, i32* %28, i32 6
  %29 = load i32, i32* %arrayidx51, align 4
  %shr52 = lshr i32 %29, 5
  %tobool53 = icmp ne i32 %shr52, 0
  br i1 %tobool53, label %if.end, label %if.then

if.then:                                          ; preds = %land.lhs.true50
  %30 = load %struct.eprog*, %struct.eprog** %prog.addr, align 4
  %31 = load i32*, i32** %pc, align 4
  %add.ptr = getelementptr inbounds i32, i32* %31, i32 5
  %call = call i8* @ecrawstr(%struct.eprog* %30, i32* %add.ptr, i32* null)
  %call54 = call i8* @dupstring(i8* %call)
  store i8* %call54, i8** %retval, align 4
  br label %return

if.end:                                           ; preds = %land.lhs.true50, %land.lhs.true46, %land.lhs.true43, %land.lhs.true38, %land.lhs.true33, %land.lhs.true29, %land.lhs.true24, %land.lhs.true20, %land.lhs.true15, %land.lhs.true10, %land.lhs.true6, %land.lhs.true3, %land.lhs.true, %entry
  store i8* null, i8** %retval, align 4
  br label %return

return:                                           ; preds = %if.end, %if.then
  %32 = load i8*, i8** %retval, align 4
  ret i8* %32
}

declare void @singsub(i8**) #1

declare i32 @open(i8*, i32, ...) #1

declare void @zwarn(i8*, ...) #1

declare %union.linkroot* @newlinklist() #1

; Function Attrs: noinline nounwind
define %union.linkroot* @readoutput(i32 %in, i32 %qt, i32* %readerror) #0 {
entry:
  %in.addr = alloca i32, align 4
  %qt.addr = alloca i32, align 4
  %readerror.addr = alloca i32*, align 4
  %ret = alloca %union.linkroot*, align 4
  %buf = alloca i8*, align 4
  %ptr = alloca i8*, align 4
  %bsiz = alloca i32, align 4
  %c = alloca i32, align 4
  %cnt = alloca i32, align 4
  %fin = alloca %struct._IO_FILE*, align 4
  %q = alloca i32, align 4
  %oset = alloca %struct.__sigset_t, align 4
  %tmp = alloca %struct.__sigset_t, align 4
  %tmp5 = alloca %struct.__sigset_t, align 4
  %tmp7 = alloca %struct.__sigset_t, align 4
  %pp = alloca i8*, align 4
  %oset34 = alloca %struct.__sigset_t, align 4
  %tmp38 = alloca %struct.__sigset_t, align 4
  %tmp40 = alloca %struct.__sigset_t, align 4
  %tmp49 = alloca %struct.__sigset_t, align 4
  %words = alloca i8**, align 4
  store i32 %in, i32* %in.addr, align 4
  store i32 %qt, i32* %qt.addr, align 4
  store i32* %readerror, i32** %readerror.addr, align 4
  store i32 0, i32* %cnt, align 4
  %0 = load i32, i32* @queueing_enabled, align 4
  store i32 %0, i32* %q, align 4
  %1 = load i32, i32* %in.addr, align 4
  %call = call %struct._IO_FILE* @fdopen(i32 %1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12, i32 0, i32 0))
  store %struct._IO_FILE* %call, %struct._IO_FILE** %fin, align 4
  %call1 = call %union.linkroot* @newlinklist()
  store %union.linkroot* %call1, %union.linkroot** %ret, align 4
  store i32 64, i32* %bsiz, align 4
  %call2 = call i8* @hcalloc(i32 64)
  store i8* %call2, i8** %buf, align 4
  store i8* %call2, i8** %ptr, align 4
  br label %do.body

do.body:                                          ; preds = %entry
  store i32 0, i32* @queueing_enabled, align 4
  br label %do.body3

do.body3:                                         ; preds = %do.body
  br label %while.cond

while.cond:                                       ; preds = %while.body, %do.body3
  %2 = load i32, i32* @queue_front, align 4
  %3 = load i32, i32* @queue_rear, align 4
  %cmp = icmp ne i32 %2, %3
  br i1 %cmp, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %4 = load i32, i32* @queue_front, align 4
  %add = add nsw i32 %4, 1
  %rem = srem i32 %add, 128
  store i32 %rem, i32* @queue_front, align 4
  %5 = load i32, i32* @queue_front, align 4
  %arrayidx = getelementptr inbounds [128 x %struct.__sigset_t], [128 x %struct.__sigset_t]* @signal_mask_queue, i32 0, i32 %5
  call void @signal_setmask(%struct.__sigset_t* sret %tmp, %struct.__sigset_t* byval align 4 %arrayidx)
  %6 = bitcast %struct.__sigset_t* %oset to i8*
  %7 = bitcast %struct.__sigset_t* %tmp to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %6, i8* %7, i32 128, i32 4, i1 false)
  %8 = load i32, i32* @queue_front, align 4
  %arrayidx4 = getelementptr inbounds [128 x i32], [128 x i32]* @signal_queue, i32 0, i32 %8
  %9 = load i32, i32* %arrayidx4, align 4
  call void @zhandler(i32 %9)
  call void @signal_setmask(%struct.__sigset_t* sret %tmp5, %struct.__sigset_t* byval align 4 %oset)
  br label %while.cond

while.end:                                        ; preds = %while.cond
  br label %do.end

do.end:                                           ; preds = %while.end
  br label %do.end6

do.end6:                                          ; preds = %do.end
  call void @signal_unblock(%struct.__sigset_t* sret %tmp7, %struct.__sigset_t* byval align 4 @sigchld_mask)
  br label %while.cond8

while.cond8:                                      ; preds = %if.end45, %if.then, %do.end6
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** %fin, align 4
  %call9 = call i32 @fgetc(%struct._IO_FILE* %10)
  store i32 %call9, i32* %c, align 4
  %cmp10 = icmp ne i32 %call9, -1
  br i1 %cmp10, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %while.cond8
  %call11 = call i32* @__errno_location()
  %11 = load i32, i32* %call11, align 4
  %cmp12 = icmp eq i32 %11, 4
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %while.cond8
  %12 = phi i1 [ true, %while.cond8 ], [ %cmp12, %lor.rhs ]
  br i1 %12, label %while.body13, label %while.end48

while.body13:                                     ; preds = %lor.end
  %13 = load i32, i32* %c, align 4
  %cmp14 = icmp eq i32 %13, -1
  br i1 %cmp14, label %if.then, label %if.end

if.then:                                          ; preds = %while.body13
  %call15 = call i32* @__errno_location()
  store i32 0, i32* %call15, align 4
  %14 = load %struct._IO_FILE*, %struct._IO_FILE** %fin, align 4
  call void @clearerr(%struct._IO_FILE* %14)
  br label %while.cond8

if.end:                                           ; preds = %while.body13
  %15 = load i32, i32* %c, align 4
  %conv = trunc i32 %15 to i8
  %idxprom = zext i8 %conv to i32
  %arrayidx16 = getelementptr inbounds [256 x i16], [256 x i16]* @typtab, i32 0, i32 %idxprom
  %16 = load i16, i16* %arrayidx16, align 2
  %conv17 = sext i16 %16 to i32
  %and = and i32 %conv17, 4096
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.then18, label %if.end19

if.then18:                                        ; preds = %if.end
  %17 = load i8*, i8** %ptr, align 4
  %incdec.ptr = getelementptr inbounds i8, i8* %17, i32 1
  store i8* %incdec.ptr, i8** %ptr, align 4
  store i8 -125, i8* %17, align 1
  %18 = load i32, i32* %c, align 4
  %xor = xor i32 %18, 32
  store i32 %xor, i32* %c, align 4
  %19 = load i32, i32* %cnt, align 4
  %inc = add nsw i32 %19, 1
  store i32 %inc, i32* %cnt, align 4
  br label %if.end19

if.end19:                                         ; preds = %if.then18, %if.end
  %20 = load i32, i32* %cnt, align 4
  %inc20 = add nsw i32 %20, 1
  store i32 %inc20, i32* %cnt, align 4
  %21 = load i32, i32* %bsiz, align 4
  %cmp21 = icmp sge i32 %inc20, %21
  br i1 %cmp21, label %if.then23, label %if.end45

if.then23:                                        ; preds = %if.end19
  %22 = load i32, i32* @queueing_enabled, align 4
  %inc25 = add nsw i32 %22, 1
  store i32 %inc25, i32* @queueing_enabled, align 4
  %23 = load i32, i32* %bsiz, align 4
  %mul = mul nsw i32 %23, 2
  store i32 %mul, i32* %bsiz, align 4
  %call26 = call i8* @hcalloc(i32 %mul)
  store i8* %call26, i8** %pp, align 4
  br label %do.body27

do.body27:                                        ; preds = %if.then23
  store i32 0, i32* @queueing_enabled, align 4
  br label %do.body28

do.body28:                                        ; preds = %do.body27
  br label %while.cond29

while.cond29:                                     ; preds = %while.body32, %do.body28
  %24 = load i32, i32* @queue_front, align 4
  %25 = load i32, i32* @queue_rear, align 4
  %cmp30 = icmp ne i32 %24, %25
  br i1 %cmp30, label %while.body32, label %while.end41

while.body32:                                     ; preds = %while.cond29
  %26 = load i32, i32* @queue_front, align 4
  %add35 = add nsw i32 %26, 1
  %rem36 = srem i32 %add35, 128
  store i32 %rem36, i32* @queue_front, align 4
  %27 = load i32, i32* @queue_front, align 4
  %arrayidx37 = getelementptr inbounds [128 x %struct.__sigset_t], [128 x %struct.__sigset_t]* @signal_mask_queue, i32 0, i32 %27
  call void @signal_setmask(%struct.__sigset_t* sret %tmp38, %struct.__sigset_t* byval align 4 %arrayidx37)
  %28 = bitcast %struct.__sigset_t* %oset34 to i8*
  %29 = bitcast %struct.__sigset_t* %tmp38 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %28, i8* %29, i32 128, i32 4, i1 false)
  %30 = load i32, i32* @queue_front, align 4
  %arrayidx39 = getelementptr inbounds [128 x i32], [128 x i32]* @signal_queue, i32 0, i32 %30
  %31 = load i32, i32* %arrayidx39, align 4
  call void @zhandler(i32 %31)
  call void @signal_setmask(%struct.__sigset_t* sret %tmp40, %struct.__sigset_t* byval align 4 %oset34)
  br label %while.cond29

while.end41:                                      ; preds = %while.cond29
  br label %do.end42

do.end42:                                         ; preds = %while.end41
  br label %do.end43

do.end43:                                         ; preds = %do.end42
  %32 = load i8*, i8** %pp, align 4
  %33 = load i8*, i8** %buf, align 4
  %34 = load i32, i32* %cnt, align 4
  %sub = sub nsw i32 %34, 1
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %32, i8* %33, i32 %sub, i32 1, i1 false)
  %35 = load i8*, i8** %pp, align 4
  store i8* %35, i8** %buf, align 4
  %36 = load i32, i32* %cnt, align 4
  %add.ptr = getelementptr inbounds i8, i8* %35, i32 %36
  %add.ptr44 = getelementptr inbounds i8, i8* %add.ptr, i32 -1
  store i8* %add.ptr44, i8** %ptr, align 4
  br label %if.end45

if.end45:                                         ; preds = %do.end43, %if.end19
  %37 = load i32, i32* %c, align 4
  %conv46 = trunc i32 %37 to i8
  %38 = load i8*, i8** %ptr, align 4
  %incdec.ptr47 = getelementptr inbounds i8, i8* %38, i32 1
  store i8* %incdec.ptr47, i8** %ptr, align 4
  store i8 %conv46, i8* %38, align 1
  br label %while.cond8

while.end48:                                      ; preds = %lor.end
  call void @signal_block(%struct.__sigset_t* sret %tmp49, %struct.__sigset_t* byval align 4 @sigchld_mask)
  %39 = load i32, i32* %q, align 4
  store i32 %39, i32* @queueing_enabled, align 4
  %40 = load i32*, i32** %readerror.addr, align 4
  %tobool50 = icmp ne i32* %40, null
  br i1 %tobool50, label %if.then51, label %if.end55

if.then51:                                        ; preds = %while.end48
  %41 = load %struct._IO_FILE*, %struct._IO_FILE** %fin, align 4
  %call52 = call i32 @ferror(%struct._IO_FILE* %41)
  %tobool53 = icmp ne i32 %call52, 0
  br i1 %tobool53, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.then51
  %call54 = call i32* @__errno_location()
  %42 = load i32, i32* %call54, align 4
  br label %cond.end

cond.false:                                       ; preds = %if.then51
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %42, %cond.true ], [ 0, %cond.false ]
  %43 = load i32*, i32** %readerror.addr, align 4
  store i32 %cond, i32* %43, align 4
  br label %if.end55

if.end55:                                         ; preds = %cond.end, %while.end48
  %44 = load %struct._IO_FILE*, %struct._IO_FILE** %fin, align 4
  %call56 = call i32 @fclose(%struct._IO_FILE* %44)
  br label %while.cond57

while.cond57:                                     ; preds = %while.body63, %if.end55
  %45 = load i32, i32* %cnt, align 4
  %tobool58 = icmp ne i32 %45, 0
  br i1 %tobool58, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %while.cond57
  %46 = load i8*, i8** %ptr, align 4
  %arrayidx59 = getelementptr inbounds i8, i8* %46, i32 -1
  %47 = load i8, i8* %arrayidx59, align 1
  %conv60 = sext i8 %47 to i32
  %cmp61 = icmp eq i32 %conv60, 10
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond57
  %48 = phi i1 [ false, %while.cond57 ], [ %cmp61, %land.rhs ]
  br i1 %48, label %while.body63, label %while.end65

while.body63:                                     ; preds = %land.end
  %49 = load i8*, i8** %ptr, align 4
  %incdec.ptr64 = getelementptr inbounds i8, i8* %49, i32 -1
  store i8* %incdec.ptr64, i8** %ptr, align 4
  %50 = load i32, i32* %cnt, align 4
  %dec = add nsw i32 %50, -1
  store i32 %dec, i32* %cnt, align 4
  br label %while.cond57

while.end65:                                      ; preds = %land.end
  %51 = load i8*, i8** %ptr, align 4
  store i8 0, i8* %51, align 1
  %52 = load i32, i32* %qt.addr, align 4
  %tobool66 = icmp ne i32 %52, 0
  br i1 %tobool66, label %if.then67, label %if.else

if.then67:                                        ; preds = %while.end65
  %53 = load i32, i32* %cnt, align 4
  %tobool68 = icmp ne i32 %53, 0
  br i1 %tobool68, label %if.end71, label %if.then69

if.then69:                                        ; preds = %if.then67
  %54 = load i8*, i8** %ptr, align 4
  %incdec.ptr70 = getelementptr inbounds i8, i8* %54, i32 1
  store i8* %incdec.ptr70, i8** %ptr, align 4
  store i8 -95, i8* %54, align 1
  %55 = load i8*, i8** %ptr, align 4
  store i8 0, i8* %55, align 1
  br label %if.end71

if.end71:                                         ; preds = %if.then69, %if.then67
  %56 = load %union.linkroot*, %union.linkroot** %ret, align 4
  %57 = load %union.linkroot*, %union.linkroot** %ret, align 4
  %list = bitcast %union.linkroot* %57 to %struct.linklist*
  %last = getelementptr inbounds %struct.linklist, %struct.linklist* %list, i32 0, i32 1
  %58 = load %struct.linknode*, %struct.linknode** %last, align 4
  %59 = load i8*, i8** %buf, align 4
  %call72 = call %struct.linknode* @insertlinknode(%union.linkroot* %56, %struct.linknode* %58, i8* %59)
  br label %if.end86

if.else:                                          ; preds = %while.end65
  %60 = load i8*, i8** %buf, align 4
  %call74 = call i8** @spacesplit(i8* %60, i32 0, i32 1, i32 0)
  store i8** %call74, i8*** %words, align 4
  br label %while.cond75

while.cond75:                                     ; preds = %if.end80, %if.else
  %61 = load i8**, i8*** %words, align 4
  %62 = load i8*, i8** %61, align 4
  %tobool76 = icmp ne i8* %62, null
  br i1 %tobool76, label %while.body77, label %while.end85

while.body77:                                     ; preds = %while.cond75
  %63 = load i8, i8* getelementptr inbounds ([181 x i8], [181 x i8]* @opts, i32 0, i32 67), align 1
  %tobool78 = icmp ne i8 %63, 0
  br i1 %tobool78, label %if.then79, label %if.end80

if.then79:                                        ; preds = %while.body77
  %64 = load i8**, i8*** %words, align 4
  %65 = load i8*, i8** %64, align 4
  call void @shtokenize(i8* %65)
  br label %if.end80

if.end80:                                         ; preds = %if.then79, %while.body77
  %66 = load %union.linkroot*, %union.linkroot** %ret, align 4
  %67 = load %union.linkroot*, %union.linkroot** %ret, align 4
  %list81 = bitcast %union.linkroot* %67 to %struct.linklist*
  %last82 = getelementptr inbounds %struct.linklist, %struct.linklist* %list81, i32 0, i32 1
  %68 = load %struct.linknode*, %struct.linknode** %last82, align 4
  %69 = load i8**, i8*** %words, align 4
  %incdec.ptr83 = getelementptr inbounds i8*, i8** %69, i32 1
  store i8** %incdec.ptr83, i8*** %words, align 4
  %70 = load i8*, i8** %69, align 4
  %call84 = call %struct.linknode* @insertlinknode(%union.linkroot* %66, %struct.linknode* %68, i8* %70)
  br label %while.cond75

while.end85:                                      ; preds = %while.cond75
  br label %if.end86

if.end86:                                         ; preds = %while.end85, %if.end71
  %71 = load %union.linkroot*, %union.linkroot** %ret, align 4
  ret %union.linkroot* %71
}

; Function Attrs: noinline nounwind
define internal i32 @mpipe(i32* %pp) #0 {
entry:
  %retval = alloca i32, align 4
  %pp.addr = alloca i32*, align 4
  store i32* %pp, i32** %pp.addr, align 4
  %0 = load i32*, i32** %pp.addr, align 4
  %call = call i32 @pipe(i32* %0)
  %cmp = icmp slt i32 %call, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %call1 = call i32* @__errno_location()
  %1 = load i32, i32* %call1, align 4
  call void (i8*, ...) @zerr(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.45, i32 0, i32 0), i32 %1)
  store i32 -1, i32* %retval, align 4
  br label %return

if.end:                                           ; preds = %entry
  %2 = load i32*, i32** %pp.addr, align 4
  %arrayidx = getelementptr inbounds i32, i32* %2, i32 0
  %3 = load i32, i32* %arrayidx, align 4
  %call2 = call i32 @movefd(i32 %3)
  %4 = load i32*, i32** %pp.addr, align 4
  %arrayidx3 = getelementptr inbounds i32, i32* %4, i32 0
  store i32 %call2, i32* %arrayidx3, align 4
  %5 = load i32*, i32** %pp.addr, align 4
  %arrayidx4 = getelementptr inbounds i32, i32* %5, i32 1
  %6 = load i32, i32* %arrayidx4, align 4
  %call5 = call i32 @movefd(i32 %6)
  %7 = load i32*, i32** %pp.addr, align 4
  %arrayidx6 = getelementptr inbounds i32, i32* %7, i32 1
  store i32 %call5, i32* %arrayidx6, align 4
  store i32 0, i32* %retval, align 4
  br label %return

return:                                           ; preds = %if.end, %if.then
  %8 = load i32, i32* %retval, align 4
  ret i32 %8
}

declare void @signal_block(%struct.__sigset_t* sret, %struct.__sigset_t* byval align 4) #1

; Function Attrs: noinline nounwind
define internal i32 @zfork(%struct.timeval* %tv) #0 {
entry:
  %retval = alloca i32, align 4
  %tv.addr = alloca %struct.timeval*, align 4
  %pid = alloca i32, align 4
  %dummy_tz = alloca %struct.timezone, align 4
  %oset = alloca %struct.__sigset_t, align 4
  %tmp = alloca %struct.__sigset_t, align 4
  %tmp13 = alloca %struct.__sigset_t, align 4
  store %struct.timeval* %tv, %struct.timeval** %tv.addr, align 4
  %0 = load i32, i32* @thisjob, align 4
  %cmp = icmp ne i32 %0, -1
  br i1 %cmp, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %entry
  %1 = load i32, i32* @thisjob, align 4
  %2 = load i32, i32* @jobtabsize, align 4
  %sub = sub nsw i32 %2, 1
  %cmp1 = icmp sge i32 %1, %sub
  br i1 %cmp1, label %land.lhs.true2, label %if.end

land.lhs.true2:                                   ; preds = %land.lhs.true
  %call = call i32 @expandjobtab()
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %land.lhs.true2
  call void (i8*, ...) @zerr(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.97, i32 0, i32 0))
  store i32 -1, i32* %retval, align 4
  br label %return

if.end:                                           ; preds = %land.lhs.true2, %land.lhs.true, %entry
  %3 = load %struct.timeval*, %struct.timeval** %tv.addr, align 4
  %tobool3 = icmp ne %struct.timeval* %3, null
  br i1 %tobool3, label %if.then4, label %if.end6

if.then4:                                         ; preds = %if.end
  %4 = load %struct.timeval*, %struct.timeval** %tv.addr, align 4
  %5 = bitcast %struct.timezone* %dummy_tz to i8*
  %call5 = call i32 @gettimeofday(%struct.timeval* %4, i8* %5)
  br label %if.end6

if.end6:                                          ; preds = %if.then4, %if.end
  %6 = load i32, i32* @queueing_enabled, align 4
  %inc = add nsw i32 %6, 1
  store i32 %inc, i32* @queueing_enabled, align 4
  %call7 = call i32 @fork()
  store i32 %call7, i32* %pid, align 4
  br label %do.body

do.body:                                          ; preds = %if.end6
  %7 = load i32, i32* @queueing_enabled, align 4
  %dec = add nsw i32 %7, -1
  store i32 %dec, i32* @queueing_enabled, align 4
  %tobool8 = icmp ne i32 %dec, 0
  br i1 %tobool8, label %if.end14, label %if.then9

if.then9:                                         ; preds = %do.body
  br label %do.body10

do.body10:                                        ; preds = %if.then9
  br label %while.cond

while.cond:                                       ; preds = %while.body, %do.body10
  %8 = load i32, i32* @queue_front, align 4
  %9 = load i32, i32* @queue_rear, align 4
  %cmp11 = icmp ne i32 %8, %9
  br i1 %cmp11, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %10 = load i32, i32* @queue_front, align 4
  %add = add nsw i32 %10, 1
  %rem = srem i32 %add, 128
  store i32 %rem, i32* @queue_front, align 4
  %11 = load i32, i32* @queue_front, align 4
  %arrayidx = getelementptr inbounds [128 x %struct.__sigset_t], [128 x %struct.__sigset_t]* @signal_mask_queue, i32 0, i32 %11
  call void @signal_setmask(%struct.__sigset_t* sret %tmp, %struct.__sigset_t* byval align 4 %arrayidx)
  %12 = bitcast %struct.__sigset_t* %oset to i8*
  %13 = bitcast %struct.__sigset_t* %tmp to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %12, i8* %13, i32 128, i32 4, i1 false)
  %14 = load i32, i32* @queue_front, align 4
  %arrayidx12 = getelementptr inbounds [128 x i32], [128 x i32]* @signal_queue, i32 0, i32 %14
  %15 = load i32, i32* %arrayidx12, align 4
  call void @zhandler(i32 %15)
  call void @signal_setmask(%struct.__sigset_t* sret %tmp13, %struct.__sigset_t* byval align 4 %oset)
  br label %while.cond

while.end:                                        ; preds = %while.cond
  br label %do.end

do.end:                                           ; preds = %while.end
  br label %if.end14

if.end14:                                         ; preds = %do.end, %do.body
  br label %do.end15

do.end15:                                         ; preds = %if.end14
  %16 = load i32, i32* %pid, align 4
  %cmp16 = icmp eq i32 %16, -1
  br i1 %cmp16, label %if.then17, label %if.end19

if.then17:                                        ; preds = %do.end15
  %call18 = call i32* @__errno_location()
  %17 = load i32, i32* %call18, align 4
  call void (i8*, ...) @zerr(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.98, i32 0, i32 0), i32 %17)
  store i32 -1, i32* %retval, align 4
  br label %return

if.end19:                                         ; preds = %do.end15
  %18 = load i32, i32* %pid, align 4
  %tobool20 = icmp ne i32 %18, 0
  br i1 %tobool20, label %if.end23, label %if.then21

if.then21:                                        ; preds = %if.end19
  %call22 = call i32 @setlimits(i8* null)
  br label %if.end23

if.end23:                                         ; preds = %if.then21, %if.end19
  %19 = load i32, i32* %pid, align 4
  store i32 %19, i32* %retval, align 4
  br label %return

return:                                           ; preds = %if.end23, %if.then17, %if.then
  %20 = load i32, i32* %retval, align 4
  ret i32 %20
}

declare void @signal_unblock(%struct.__sigset_t* sret, %struct.__sigset_t* byval align 4) #1

declare i32 @waitforpid(i32, i32) #1

declare i32 @redup(i32, i32) #1

; Function Attrs: noinline nounwind
define internal void @entersubsh(i32 %flags) #0 {
entry:
  %flags.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %sig = alloca i32, align 4
  %monitor = alloca i32, align 4
  %job_control_ok = alloca i32, align 4
  %agg.tmp = alloca %struct.__sigset_t, align 4
  %tmp = alloca %struct.__sigset_t, align 4
  store i32 %flags, i32* %flags.addr, align 4
  %0 = load i32, i32* %flags.addr, align 4
  %and = and i32 %0, 4
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.end4, label %if.then

if.then:                                          ; preds = %entry
  store i32 0, i32* %sig, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then
  %1 = load i32, i32* %sig, align 4
  %cmp = icmp slt i32 %1, 31
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %2 = load i32, i32* %sig, align 4
  %arrayidx = getelementptr inbounds [34 x i32], [34 x i32]* @sigtrapped, i32 0, i32 %2
  %3 = load i32, i32* %arrayidx, align 4
  %and1 = and i32 %3, 4
  %tobool2 = icmp ne i32 %and1, 0
  br i1 %tobool2, label %if.end, label %if.then3

if.then3:                                         ; preds = %for.body
  %4 = load i32, i32* %sig, align 4
  call void @unsettrap(i32 %4)
  br label %if.end

if.end:                                           ; preds = %if.then3, %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %5 = load i32, i32* %sig, align 4
  %inc = add nsw i32 %5, 1
  store i32 %inc, i32* %sig, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  br label %if.end4

if.end4:                                          ; preds = %for.end, %entry
  %6 = load i8, i8* getelementptr inbounds ([181 x i8], [181 x i8]* @opts, i32 0, i32 117), align 1
  %conv = sext i8 %6 to i32
  store i32 %conv, i32* %monitor, align 4
  %7 = load i32, i32* %monitor, align 4
  %tobool5 = icmp ne i32 %7, 0
  br i1 %tobool5, label %land.lhs.true, label %land.end

land.lhs.true:                                    ; preds = %if.end4
  %8 = load i32, i32* %flags.addr, align 4
  %and6 = and i32 %8, 64
  %tobool7 = icmp ne i32 %and6, 0
  br i1 %tobool7, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %land.lhs.true
  %9 = load i8, i8* getelementptr inbounds ([181 x i8], [181 x i8]* @opts, i32 0, i32 135), align 1
  %conv8 = sext i8 %9 to i32
  %tobool9 = icmp ne i32 %conv8, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true, %if.end4
  %10 = phi i1 [ false, %land.lhs.true ], [ false, %if.end4 ], [ %tobool9, %land.rhs ]
  %land.ext = zext i1 %10 to i32
  store i32 %land.ext, i32* %job_control_ok, align 4
  %11 = load i32, i32* %flags.addr, align 4
  %and10 = and i32 %11, 32
  %tobool11 = icmp ne i32 %and10, 0
  br i1 %tobool11, label %if.then12, label %if.end13

if.then12:                                        ; preds = %land.end
  store i8 0, i8* getelementptr inbounds ([181 x i8], [181 x i8]* @opts, i32 0, i32 117), align 1
  br label %if.end13

if.end13:                                         ; preds = %if.then12, %land.end
  %12 = load i8, i8* getelementptr inbounds ([181 x i8], [181 x i8]* @opts, i32 0, i32 117), align 1
  %tobool14 = icmp ne i8 %12, 0
  br i1 %tobool14, label %if.else, label %if.then15

if.then15:                                        ; preds = %if.end13
  %13 = load i32, i32* %flags.addr, align 4
  %and16 = and i32 %13, 1
  %tobool17 = icmp ne i32 %and16, 0
  br i1 %tobool17, label %if.then18, label %if.end30

if.then18:                                        ; preds = %if.then15
  %call = call i32 @settrap(i32 2, %struct.eprog* null, i32 0)
  %call19 = call i32 @settrap(i32 3, %struct.eprog* null, i32 0)
  %call20 = call i32 @isatty(i32 0)
  %tobool21 = icmp ne i32 %call20, 0
  br i1 %tobool21, label %if.then22, label %if.end29

if.then22:                                        ; preds = %if.then18
  %call23 = call i32 @close(i32 0)
  %call24 = call i32 (i8*, i32, ...) @open(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.99, i32 0, i32 0), i32 258)
  %tobool25 = icmp ne i32 %call24, 0
  br i1 %tobool25, label %if.then26, label %if.end28

if.then26:                                        ; preds = %if.then22
  %call27 = call i32* @__errno_location()
  %14 = load i32, i32* %call27, align 4
  call void (i8*, ...) @zerr(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.100, i32 0, i32 0), i32 %14)
  call void @_exit(i32 1) #4
  unreachable

if.end28:                                         ; preds = %if.then22
  br label %if.end29

if.end29:                                         ; preds = %if.end28, %if.then18
  br label %if.end30

if.end30:                                         ; preds = %if.end29, %if.then15
  br label %if.end109

if.else:                                          ; preds = %if.end13
  %15 = load i32, i32* @thisjob, align 4
  %cmp31 = icmp ne i32 %15, -1
  br i1 %cmp31, label %land.lhs.true33, label %if.end108

land.lhs.true33:                                  ; preds = %if.else
  %16 = load i32, i32* %flags.addr, align 4
  %and34 = and i32 %16, 2
  %tobool35 = icmp ne i32 %and34, 0
  br i1 %tobool35, label %if.then36, label %if.end108

if.then36:                                        ; preds = %land.lhs.true33
  %17 = load %struct.job*, %struct.job** @jobtab, align 4
  %18 = load i32, i32* @list_pipe_job, align 4
  %arrayidx37 = getelementptr inbounds %struct.job, %struct.job* %17, i32 %18
  %gleader = getelementptr inbounds %struct.job, %struct.job* %arrayidx37, i32 0, i32 0
  %19 = load i32, i32* %gleader, align 4
  %tobool38 = icmp ne i32 %19, 0
  br i1 %tobool38, label %land.lhs.true39, label %if.else71

land.lhs.true39:                                  ; preds = %if.then36
  %20 = load i32, i32* @list_pipe, align 4
  %tobool40 = icmp ne i32 %20, 0
  br i1 %tobool40, label %if.then42, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true39
  %21 = load i32, i32* @list_pipe_child, align 4
  %tobool41 = icmp ne i32 %21, 0
  br i1 %tobool41, label %if.then42, label %if.else71

if.then42:                                        ; preds = %lor.lhs.false, %land.lhs.true39
  %22 = load %struct.job*, %struct.job** @jobtab, align 4
  %23 = load i32, i32* @list_pipe_job, align 4
  %arrayidx43 = getelementptr inbounds %struct.job, %struct.job* %22, i32 %23
  %gleader44 = getelementptr inbounds %struct.job, %struct.job* %arrayidx43, i32 0, i32 0
  %24 = load i32, i32* %gleader44, align 4
  %call45 = call i32 @setpgid(i32 0, i32 %24)
  %cmp46 = icmp eq i32 %call45, -1
  br i1 %cmp46, label %if.then54, label %lor.lhs.false48

lor.lhs.false48:                                  ; preds = %if.then42
  %25 = load %struct.job*, %struct.job** @jobtab, align 4
  %26 = load i32, i32* @list_pipe_job, align 4
  %arrayidx49 = getelementptr inbounds %struct.job, %struct.job* %25, i32 %26
  %gleader50 = getelementptr inbounds %struct.job, %struct.job* %arrayidx49, i32 0, i32 0
  %27 = load i32, i32* %gleader50, align 4
  %call51 = call i32 @killpg(i32 %27, i32 0)
  %cmp52 = icmp eq i32 %call51, -1
  br i1 %cmp52, label %if.then54, label %if.end70

if.then54:                                        ; preds = %lor.lhs.false48, %if.then42
  %28 = load i32, i32* @list_pipe_child, align 4
  %tobool55 = icmp ne i32 %28, 0
  br i1 %tobool55, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.then54
  %29 = load i32, i32* @mypgrp, align 4
  br label %cond.end

cond.false:                                       ; preds = %if.then54
  %call56 = call i32 @getpid()
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %29, %cond.true ], [ %call56, %cond.false ]
  %30 = load %struct.job*, %struct.job** @jobtab, align 4
  %31 = load i32, i32* @thisjob, align 4
  %arrayidx57 = getelementptr inbounds %struct.job, %struct.job* %30, i32 %31
  %gleader58 = getelementptr inbounds %struct.job, %struct.job* %arrayidx57, i32 0, i32 0
  store i32 %cond, i32* %gleader58, align 4
  %32 = load %struct.job*, %struct.job** @jobtab, align 4
  %33 = load i32, i32* @list_pipe_job, align 4
  %arrayidx59 = getelementptr inbounds %struct.job, %struct.job* %32, i32 %33
  %gleader60 = getelementptr inbounds %struct.job, %struct.job* %arrayidx59, i32 0, i32 0
  store i32 %cond, i32* %gleader60, align 4
  %34 = load %struct.job*, %struct.job** @jobtab, align 4
  %35 = load i32, i32* @list_pipe_job, align 4
  %arrayidx61 = getelementptr inbounds %struct.job, %struct.job* %34, i32 %35
  %gleader62 = getelementptr inbounds %struct.job, %struct.job* %arrayidx61, i32 0, i32 0
  %36 = load i32, i32* %gleader62, align 4
  %call63 = call i32 @setpgid(i32 0, i32 %36)
  %37 = load i32, i32* %flags.addr, align 4
  %and64 = and i32 %37, 1
  %tobool65 = icmp ne i32 %and64, 0
  br i1 %tobool65, label %if.end69, label %if.then66

if.then66:                                        ; preds = %cond.end
  %38 = load %struct.job*, %struct.job** @jobtab, align 4
  %39 = load i32, i32* @thisjob, align 4
  %arrayidx67 = getelementptr inbounds %struct.job, %struct.job* %38, i32 %39
  %gleader68 = getelementptr inbounds %struct.job, %struct.job* %arrayidx67, i32 0, i32 0
  %40 = load i32, i32* %gleader68, align 4
  call void @attachtty(i32 %40)
  br label %if.end69

if.end69:                                         ; preds = %if.then66, %cond.end
  br label %if.end70

if.end70:                                         ; preds = %if.end69, %lor.lhs.false48
  br label %if.end107

if.else71:                                        ; preds = %lor.lhs.false, %if.then36
  %41 = load %struct.job*, %struct.job** @jobtab, align 4
  %42 = load i32, i32* @thisjob, align 4
  %arrayidx72 = getelementptr inbounds %struct.job, %struct.job* %41, i32 %42
  %gleader73 = getelementptr inbounds %struct.job, %struct.job* %arrayidx72, i32 0, i32 0
  %43 = load i32, i32* %gleader73, align 4
  %tobool74 = icmp ne i32 %43, 0
  br i1 %tobool74, label %lor.lhs.false75, label %if.then81

lor.lhs.false75:                                  ; preds = %if.else71
  %44 = load %struct.job*, %struct.job** @jobtab, align 4
  %45 = load i32, i32* @thisjob, align 4
  %arrayidx76 = getelementptr inbounds %struct.job, %struct.job* %44, i32 %45
  %gleader77 = getelementptr inbounds %struct.job, %struct.job* %arrayidx76, i32 0, i32 0
  %46 = load i32, i32* %gleader77, align 4
  %call78 = call i32 @setpgid(i32 0, i32 %46)
  %cmp79 = icmp eq i32 %call78, -1
  br i1 %cmp79, label %if.then81, label %if.end106

if.then81:                                        ; preds = %lor.lhs.false75, %if.else71
  %call82 = call i32 @getpid()
  %47 = load %struct.job*, %struct.job** @jobtab, align 4
  %48 = load i32, i32* @thisjob, align 4
  %arrayidx83 = getelementptr inbounds %struct.job, %struct.job* %47, i32 %48
  %gleader84 = getelementptr inbounds %struct.job, %struct.job* %arrayidx83, i32 0, i32 0
  store i32 %call82, i32* %gleader84, align 4
  %49 = load i32, i32* @list_pipe_job, align 4
  %50 = load i32, i32* @thisjob, align 4
  %cmp85 = icmp ne i32 %49, %50
  br i1 %cmp85, label %land.lhs.true87, label %if.end96

land.lhs.true87:                                  ; preds = %if.then81
  %51 = load %struct.job*, %struct.job** @jobtab, align 4
  %52 = load i32, i32* @list_pipe_job, align 4
  %arrayidx88 = getelementptr inbounds %struct.job, %struct.job* %51, i32 %52
  %gleader89 = getelementptr inbounds %struct.job, %struct.job* %arrayidx88, i32 0, i32 0
  %53 = load i32, i32* %gleader89, align 4
  %tobool90 = icmp ne i32 %53, 0
  br i1 %tobool90, label %if.end96, label %if.then91

if.then91:                                        ; preds = %land.lhs.true87
  %54 = load %struct.job*, %struct.job** @jobtab, align 4
  %55 = load i32, i32* @thisjob, align 4
  %arrayidx92 = getelementptr inbounds %struct.job, %struct.job* %54, i32 %55
  %gleader93 = getelementptr inbounds %struct.job, %struct.job* %arrayidx92, i32 0, i32 0
  %56 = load i32, i32* %gleader93, align 4
  %57 = load %struct.job*, %struct.job** @jobtab, align 4
  %58 = load i32, i32* @list_pipe_job, align 4
  %arrayidx94 = getelementptr inbounds %struct.job, %struct.job* %57, i32 %58
  %gleader95 = getelementptr inbounds %struct.job, %struct.job* %arrayidx94, i32 0, i32 0
  store i32 %56, i32* %gleader95, align 4
  br label %if.end96

if.end96:                                         ; preds = %if.then91, %land.lhs.true87, %if.then81
  %59 = load %struct.job*, %struct.job** @jobtab, align 4
  %60 = load i32, i32* @thisjob, align 4
  %arrayidx97 = getelementptr inbounds %struct.job, %struct.job* %59, i32 %60
  %gleader98 = getelementptr inbounds %struct.job, %struct.job* %arrayidx97, i32 0, i32 0
  %61 = load i32, i32* %gleader98, align 4
  %call99 = call i32 @setpgid(i32 0, i32 %61)
  %62 = load i32, i32* %flags.addr, align 4
  %and100 = and i32 %62, 1
  %tobool101 = icmp ne i32 %and100, 0
  br i1 %tobool101, label %if.end105, label %if.then102

if.then102:                                       ; preds = %if.end96
  %63 = load %struct.job*, %struct.job** @jobtab, align 4
  %64 = load i32, i32* @thisjob, align 4
  %arrayidx103 = getelementptr inbounds %struct.job, %struct.job* %63, i32 %64
  %gleader104 = getelementptr inbounds %struct.job, %struct.job* %arrayidx103, i32 0, i32 0
  %65 = load i32, i32* %gleader104, align 4
  call void @attachtty(i32 %65)
  br label %if.end105

if.end105:                                        ; preds = %if.then102, %if.end96
  br label %if.end106

if.end106:                                        ; preds = %if.end105, %lor.lhs.false75
  br label %if.end107

if.end107:                                        ; preds = %if.end106, %if.end70
  br label %if.end108

if.end108:                                        ; preds = %if.end107, %land.lhs.true33, %if.else
  br label %if.end109

if.end109:                                        ; preds = %if.end108, %if.end30
  %66 = load i32, i32* %flags.addr, align 4
  %and110 = and i32 %66, 8
  %tobool111 = icmp ne i32 %and110, 0
  br i1 %tobool111, label %if.end113, label %if.then112

if.then112:                                       ; preds = %if.end109
  store i32 1, i32* @subsh, align 4
  br label %if.end113

if.end113:                                        ; preds = %if.then112, %if.end109
  %67 = load i32, i32* @zsh_subshell, align 4
  %inc114 = add nsw i32 %67, 1
  store i32 %inc114, i32* @zsh_subshell, align 4
  %68 = load i32, i32* %flags.addr, align 4
  %and115 = and i32 %68, 16
  %tobool116 = icmp ne i32 %and115, 0
  br i1 %tobool116, label %land.lhs.true117, label %if.end122

land.lhs.true117:                                 ; preds = %if.end113
  %call118 = call i32 @getpid()
  %69 = load i32, i32* @mypgrp, align 4
  %cmp119 = icmp eq i32 %call118, %69
  br i1 %cmp119, label %if.then121, label %if.end122

if.then121:                                       ; preds = %land.lhs.true117
  call void @release_pgrp()
  br label %if.end122

if.end122:                                        ; preds = %if.then121, %land.lhs.true117, %if.end113
  store %struct._IO_FILE* null, %struct._IO_FILE** @shout, align 4
  %70 = load i32, i32* %flags.addr, align 4
  %and123 = and i32 %70, 32
  %tobool124 = icmp ne i32 %and123, 0
  br i1 %tobool124, label %if.then125, label %if.else129

if.then125:                                       ; preds = %if.end122
  %call126 = call void (i32)* @signal(i32 22, void (i32)* inttoptr (i32 1 to void (i32)*))
  %call127 = call void (i32)* @signal(i32 21, void (i32)* inttoptr (i32 1 to void (i32)*))
  %call128 = call void (i32)* @signal(i32 20, void (i32)* inttoptr (i32 1 to void (i32)*))
  br label %if.end136

if.else129:                                       ; preds = %if.end122
  %71 = load i32, i32* %job_control_ok, align 4
  %tobool130 = icmp ne i32 %71, 0
  br i1 %tobool130, label %if.end135, label %if.then131

if.then131:                                       ; preds = %if.else129
  %call132 = call void (i32)* @signal(i32 22, void (i32)* null)
  %call133 = call void (i32)* @signal(i32 21, void (i32)* null)
  %call134 = call void (i32)* @signal(i32 20, void (i32)* null)
  br label %if.end135

if.end135:                                        ; preds = %if.then131, %if.else129
  br label %if.end136

if.end136:                                        ; preds = %if.end135, %if.then125
  %72 = load i8, i8* getelementptr inbounds ([181 x i8], [181 x i8]* @opts, i32 0, i32 94), align 1
  %tobool137 = icmp ne i8 %72, 0
  br i1 %tobool137, label %if.then138, label %if.end149

if.then138:                                       ; preds = %if.end136
  %call139 = call void (i32)* @signal(i32 15, void (i32)* null)
  %73 = load i32, i32* getelementptr inbounds ([34 x i32], [34 x i32]* @sigtrapped, i32 0, i32 2), align 4
  %and140 = and i32 %73, 2
  %tobool141 = icmp ne i32 %and140, 0
  br i1 %tobool141, label %if.end144, label %if.then142

if.then142:                                       ; preds = %if.then138
  %call143 = call void (i32)* @signal(i32 2, void (i32)* null)
  br label %if.end144

if.end144:                                        ; preds = %if.then142, %if.then138
  %74 = load i32, i32* getelementptr inbounds ([34 x i32], [34 x i32]* @sigtrapped, i32 0, i32 13), align 4
  %tobool145 = icmp ne i32 %74, 0
  br i1 %tobool145, label %if.end148, label %if.then146

if.then146:                                       ; preds = %if.end144
  %call147 = call void (i32)* @signal(i32 13, void (i32)* null)
  br label %if.end148

if.end148:                                        ; preds = %if.then146, %if.end144
  br label %if.end149

if.end149:                                        ; preds = %if.end148, %if.end136
  %75 = load i32, i32* getelementptr inbounds ([34 x i32], [34 x i32]* @sigtrapped, i32 0, i32 3), align 4
  %and150 = and i32 %75, 2
  %tobool151 = icmp ne i32 %and150, 0
  br i1 %tobool151, label %if.end154, label %if.then152

if.then152:                                       ; preds = %if.end149
  %call153 = call void (i32)* @signal(i32 3, void (i32)* null)
  br label %if.end154

if.end154:                                        ; preds = %if.then152, %if.end149
  %76 = load i32, i32* @intrap, align 4
  %tobool155 = icmp ne i32 %76, 0
  br i1 %tobool155, label %if.then156, label %if.end172

if.then156:                                       ; preds = %if.end154
  store i32 1, i32* %sig, align 4
  br label %for.cond157

for.cond157:                                      ; preds = %for.inc169, %if.then156
  %77 = load i32, i32* %sig, align 4
  %cmp158 = icmp slt i32 %77, 31
  br i1 %cmp158, label %for.body160, label %for.end171

for.body160:                                      ; preds = %for.cond157
  %78 = load i32, i32* %sig, align 4
  %arrayidx161 = getelementptr inbounds [34 x i32], [34 x i32]* @sigtrapped, i32 0, i32 %78
  %79 = load i32, i32* %arrayidx161, align 4
  %tobool162 = icmp ne i32 %79, 0
  br i1 %tobool162, label %land.lhs.true163, label %if.end168

land.lhs.true163:                                 ; preds = %for.body160
  %80 = load i32, i32* %sig, align 4
  %arrayidx164 = getelementptr inbounds [34 x i32], [34 x i32]* @sigtrapped, i32 0, i32 %80
  %81 = load i32, i32* %arrayidx164, align 4
  %cmp165 = icmp ne i32 %81, 2
  br i1 %cmp165, label %if.then167, label %if.end168

if.then167:                                       ; preds = %land.lhs.true163
  %82 = load i32, i32* %sig, align 4
  call void @signal_mask(%struct.__sigset_t* sret %agg.tmp, i32 %82)
  call void @signal_unblock(%struct.__sigset_t* sret %tmp, %struct.__sigset_t* byval align 4 %agg.tmp)
  br label %if.end168

if.end168:                                        ; preds = %if.then167, %land.lhs.true163, %for.body160
  br label %for.inc169

for.inc169:                                       ; preds = %if.end168
  %83 = load i32, i32* %sig, align 4
  %inc170 = add nsw i32 %83, 1
  store i32 %inc170, i32* %sig, align 4
  br label %for.cond157

for.end171:                                       ; preds = %for.cond157
  br label %if.end172

if.end172:                                        ; preds = %for.end171, %if.end154
  %84 = load i32, i32* %job_control_ok, align 4
  %tobool173 = icmp ne i32 %84, 0
  br i1 %tobool173, label %if.end175, label %if.then174

if.then174:                                       ; preds = %if.end172
  store i8 0, i8* getelementptr inbounds ([181 x i8], [181 x i8]* @opts, i32 0, i32 117), align 1
  br label %if.end175

if.end175:                                        ; preds = %if.then174, %if.end172
  store i8 0, i8* getelementptr inbounds ([181 x i8], [181 x i8]* @opts, i32 0, i32 179), align 1
  store i32 0, i32* @zleactive, align 4
  store i32 10, i32* %i, align 4
  br label %for.cond176

for.cond176:                                      ; preds = %for.inc187, %if.end175
  %85 = load i32, i32* %i, align 4
  %86 = load i32, i32* @max_zsh_fd, align 4
  %cmp177 = icmp sle i32 %85, %86
  br i1 %cmp177, label %for.body179, label %for.end189

for.body179:                                      ; preds = %for.cond176
  %87 = load i8*, i8** @fdtable, align 4
  %88 = load i32, i32* %i, align 4
  %arrayidx180 = getelementptr inbounds i8, i8* %87, i32 %88
  %89 = load i8, i8* %arrayidx180, align 1
  %conv181 = zext i8 %89 to i32
  %and182 = and i32 %conv181, 16
  %tobool183 = icmp ne i32 %and182, 0
  br i1 %tobool183, label %if.then184, label %if.end186

if.then184:                                       ; preds = %for.body179
  %90 = load i32, i32* %i, align 4
  %call185 = call i32 @zclose(i32 %90)
  br label %if.end186

if.end186:                                        ; preds = %if.then184, %for.body179
  br label %for.inc187

for.inc187:                                       ; preds = %if.end186
  %91 = load i32, i32* %i, align 4
  %inc188 = add nsw i32 %91, 1
  store i32 %inc188, i32* %i, align 4
  br label %for.cond176

for.end189:                                       ; preds = %for.cond176
  %92 = load i32, i32* %flags.addr, align 4
  %and190 = and i32 %92, 2
  %tobool191 = icmp ne i32 %and190, 0
  br i1 %tobool191, label %if.then192, label %if.end193

if.then192:                                       ; preds = %for.end189
  %93 = load i32, i32* %monitor, align 4
  call void @clearjobtab(i32 %93)
  br label %if.end193

if.end193:                                        ; preds = %if.then192, %for.end189
  call void @get_usage()
  %94 = load i32, i32* @locallevel, align 4
  store i32 %94, i32* @forklevel, align 4
  ret void
}

declare void @cmdpop() #1

declare i32 @close(i32) #1

declare %struct._IO_FILE* @fdopen(i32, i8*) #1

declare i8* @hcalloc(i32) #1

declare i32 @fgetc(%struct._IO_FILE*) #1

declare void @clearerr(%struct._IO_FILE*) #1

declare i32 @ferror(%struct._IO_FILE*) #1

declare i32 @fclose(%struct._IO_FILE*) #1

declare %struct.linknode* @insertlinknode(%union.linkroot*, %struct.linknode*, i8*) #1

declare i8** @spacesplit(i8*, i32, i32, i32) #1

declare void @shtokenize(i8*) #1

; Function Attrs: noinline nounwind
define i8* @getoutputfile(i8* %cmd, i8** %eptr) #0 {
entry:
  %retval = alloca i8*, align 4
  %cmd.addr = alloca i8*, align 4
  %eptr.addr = alloca i8**, align 4
  %pid = alloca i32, align 4
  %nam = alloca i8*, align 4
  %prog = alloca %struct.eprog*, align 4
  %fd = alloca i32, align 4
  %s = alloca i8*, align 4
  %tmp = alloca %struct.__sigset_t, align 4
  %tmp23 = alloca %struct.__sigset_t, align 4
  %suffix = alloca i8*, align 4
  %len = alloca i32, align 4
  %tmp54 = alloca %struct.__sigset_t, align 4
  %os = alloca i32, align 4
  store i8* %cmd, i8** %cmd.addr, align 4
  store i8** %eptr, i8*** %eptr.addr, align 4
  %0 = load i32, i32* @thisjob, align 4
  %cmp = icmp eq i32 %0, -1
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %1 = load i8*, i8** %cmd.addr, align 4
  call void (i8*, ...) @zerr(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.13, i32 0, i32 0), i8* %1)
  store i8* null, i8** %retval, align 4
  br label %return

if.end:                                           ; preds = %entry
  %2 = load i8*, i8** %cmd.addr, align 4
  %3 = load i8**, i8*** %eptr.addr, align 4
  %call = call %struct.eprog* @parsecmd(i8* %2, i8** %3)
  store %struct.eprog* %call, %struct.eprog** %prog, align 4
  %tobool = icmp ne %struct.eprog* %call, null
  br i1 %tobool, label %if.end2, label %if.then1

if.then1:                                         ; preds = %if.end
  store i8* null, i8** %retval, align 4
  br label %return

if.end2:                                          ; preds = %if.end
  %call3 = call i8* @gettempname(i8* null, i32 1)
  store i8* %call3, i8** %nam, align 4
  %tobool4 = icmp ne i8* %call3, null
  br i1 %tobool4, label %if.end6, label %if.then5

if.then5:                                         ; preds = %if.end2
  store i8* null, i8** %retval, align 4
  br label %return

if.end6:                                          ; preds = %if.end2
  %4 = load %struct.eprog*, %struct.eprog** %prog, align 4
  %call7 = call i8* @simple_redir_name(%struct.eprog* %4, i32 12)
  store i8* %call7, i8** %s, align 4
  %tobool8 = icmp ne i8* %call7, null
  br i1 %tobool8, label %if.then9, label %if.end13

if.then9:                                         ; preds = %if.end6
  call void @singsub(i8** %s)
  %5 = load i32, i32* @errflag, align 4
  %tobool10 = icmp ne i32 %5, 0
  br i1 %tobool10, label %if.then11, label %if.else

if.then11:                                        ; preds = %if.then9
  store i8* null, i8** %s, align 4
  br label %if.end12

if.else:                                          ; preds = %if.then9
  %6 = load i8*, i8** %s, align 4
  call void @untokenize(i8* %6)
  br label %if.end12

if.end12:                                         ; preds = %if.else, %if.then11
  br label %if.end13

if.end13:                                         ; preds = %if.end12, %if.end6
  %7 = load i8*, i8** %s, align 4
  %tobool14 = icmp ne i8* %7, null
  br i1 %tobool14, label %if.end16, label %if.then15

if.then15:                                        ; preds = %if.end13
  call void @signal_block(%struct.__sigset_t* sret %tmp, %struct.__sigset_t* byval align 4 @sigchld_mask)
  br label %if.end16

if.end16:                                         ; preds = %if.then15, %if.end13
  %8 = load i8*, i8** %nam, align 4
  %call17 = call i32 (i8*, i32, ...) @open(i8* %8, i32 449, i32 384)
  store i32 %call17, i32* %fd, align 4
  %cmp18 = icmp slt i32 %call17, 0
  br i1 %cmp18, label %if.then19, label %if.else25

if.then19:                                        ; preds = %if.end16
  %call20 = call i32* @__errno_location()
  %9 = load i32, i32* %call20, align 4
  call void (i8*, ...) @zerr(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.14, i32 0, i32 0), i32 %9)
  %10 = load i8*, i8** %nam, align 4
  call void @free(i8* %10)
  %11 = load i8*, i8** %s, align 4
  %tobool21 = icmp ne i8* %11, null
  br i1 %tobool21, label %if.end24, label %if.then22

if.then22:                                        ; preds = %if.then19
  call void @signal_unblock(%struct.__sigset_t* sret %tmp23, %struct.__sigset_t* byval align 4 @sigchld_mask)
  br label %if.end24

if.end24:                                         ; preds = %if.then22, %if.then19
  store i8* null, i8** %retval, align 4
  br label %return

if.else25:                                        ; preds = %if.end16
  %call27 = call i8* @getsparam(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.15, i32 0, i32 0))
  store i8* %call27, i8** %suffix, align 4
  %12 = load i8*, i8** %suffix, align 4
  %tobool28 = icmp ne i8* %12, null
  br i1 %tobool28, label %land.lhs.true, label %if.end41

land.lhs.true:                                    ; preds = %if.else25
  %13 = load i8*, i8** %suffix, align 4
  %14 = load i8, i8* %13, align 1
  %conv = sext i8 %14 to i32
  %tobool29 = icmp ne i32 %conv, 0
  br i1 %tobool29, label %land.lhs.true30, label %if.end41

land.lhs.true30:                                  ; preds = %land.lhs.true
  %15 = load i8*, i8** %suffix, align 4
  %call31 = call i8* @strstr(i8* %15, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i32 0, i32 0))
  %tobool32 = icmp ne i8* %call31, null
  br i1 %tobool32, label %if.end41, label %if.then33

if.then33:                                        ; preds = %land.lhs.true30
  %16 = load i8*, i8** %nam, align 4
  %17 = load i8*, i8** %suffix, align 4
  %call34 = call i8* @unmeta(i8* %17)
  %call35 = call i8* @dyncat(i8* %16, i8* %call34)
  store i8* %call35, i8** %suffix, align 4
  %18 = load i8*, i8** %nam, align 4
  %19 = load i8*, i8** %suffix, align 4
  %call36 = call i32 @link(i8* %18, i8* %19)
  %cmp37 = icmp eq i32 %call36, 0
  br i1 %cmp37, label %if.then39, label %if.end40

if.then39:                                        ; preds = %if.then33
  %20 = load i8*, i8** %nam, align 4
  call void @addfilelist(i8* %20, i32 0)
  %21 = load i8*, i8** %suffix, align 4
  store i8* %21, i8** %nam, align 4
  br label %if.end40

if.end40:                                         ; preds = %if.then39, %if.then33
  br label %if.end41

if.end41:                                         ; preds = %if.end40, %land.lhs.true30, %land.lhs.true, %if.else25
  br label %if.end42

if.end42:                                         ; preds = %if.end41
  %22 = load i8*, i8** %nam, align 4
  call void @addfilelist(i8* %22, i32 0)
  %23 = load i8*, i8** %s, align 4
  %tobool43 = icmp ne i8* %23, null
  br i1 %tobool43, label %if.then44, label %if.end49

if.then44:                                        ; preds = %if.end42
  %24 = load i8*, i8** %s, align 4
  %call46 = call i8* @unmetafy(i8* %24, i32* %len)
  %25 = load i32, i32* %fd, align 4
  %26 = load i8*, i8** %s, align 4
  %27 = load i32, i32* %len, align 4
  %call47 = call i32 @write_loop(i32 %25, i8* %26, i32 %27)
  %28 = load i32, i32* %fd, align 4
  %call48 = call i32 @close(i32 %28)
  %29 = load i8*, i8** %nam, align 4
  store i8* %29, i8** %retval, align 4
  br label %return

if.end49:                                         ; preds = %if.end42
  %call50 = call i32 @zfork(%struct.timeval* null)
  store i32 %call50, i32* %pid, align 4
  store i32 %call50, i32* @cmdoutpid, align 4
  %cmp51 = icmp eq i32 %call50, -1
  br i1 %cmp51, label %if.then53, label %if.else55

if.then53:                                        ; preds = %if.end49
  call void @signal_unblock(%struct.__sigset_t* sret %tmp54, %struct.__sigset_t* byval align 4 @sigchld_mask)
  %30 = load i8*, i8** %nam, align 4
  store i8* %30, i8** %retval, align 4
  br label %return

if.else55:                                        ; preds = %if.end49
  %31 = load i32, i32* %pid, align 4
  %tobool56 = icmp ne i32 %31, 0
  br i1 %tobool56, label %if.then57, label %if.end63

if.then57:                                        ; preds = %if.else55
  %32 = load i32, i32* %fd, align 4
  %call59 = call i32 @close(i32 %32)
  %33 = load %struct.job*, %struct.job** @jobtab, align 4
  %34 = load i32, i32* @thisjob, align 4
  %arrayidx = getelementptr inbounds %struct.job, %struct.job* %33, i32 %34
  %stat = getelementptr inbounds %struct.job, %struct.job* %arrayidx, i32 0, i32 2
  %35 = load i32, i32* %stat, align 4
  store i32 %35, i32* %os, align 4
  %36 = load i32, i32* %pid, align 4
  %call60 = call i32 @waitforpid(i32 %36, i32 0)
  store i32 0, i32* @cmdoutval, align 4
  %37 = load i32, i32* %os, align 4
  %38 = load %struct.job*, %struct.job** @jobtab, align 4
  %39 = load i32, i32* @thisjob, align 4
  %arrayidx61 = getelementptr inbounds %struct.job, %struct.job* %38, i32 %39
  %stat62 = getelementptr inbounds %struct.job, %struct.job* %arrayidx61, i32 0, i32 2
  store i32 %37, i32* %stat62, align 4
  %40 = load i8*, i8** %nam, align 4
  store i8* %40, i8** %retval, align 4
  br label %return

if.end63:                                         ; preds = %if.else55
  br label %if.end64

if.end64:                                         ; preds = %if.end63
  %41 = load i32, i32* %fd, align 4
  %call65 = call i32 @redup(i32 %41, i32 1)
  call void @entersubsh(i32 34)
  call void @cmdpush(i32 24)
  %42 = load %struct.eprog*, %struct.eprog** %prog, align 4
  call void @execode(%struct.eprog* %42, i32 0, i32 1, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.16, i32 0, i32 0))
  call void @cmdpop()
  %call66 = call i32 @close(i32 1)
  %43 = load i32, i32* @lastval, align 4
  call void @_exit(i32 %43) #4
  unreachable

return:                                           ; preds = %if.then57, %if.then53, %if.then44, %if.end24, %if.then5, %if.then1, %if.then
  %44 = load i8*, i8** %retval, align 4
  ret i8* %44
}

declare void @zerr(i8*, ...) #1

; Function Attrs: noinline nounwind
define internal %struct.eprog* @parsecmd(i8* %cmd, i8** %eptr) #0 {
entry:
  %retval = alloca %struct.eprog*, align 4
  %cmd.addr = alloca i8*, align 4
  %eptr.addr = alloca i8**, align 4
  %str = alloca i8*, align 4
  %prog = alloca %struct.eprog*, align 4
  %errstr = alloca i8*, align 4
  store i8* %cmd, i8** %cmd.addr, align 4
  store i8** %eptr, i8*** %eptr.addr, align 4
  %0 = load i8*, i8** %cmd.addr, align 4
  %add.ptr = getelementptr inbounds i8, i8* %0, i32 2
  store i8* %add.ptr, i8** %str, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i8*, i8** %str, align 4
  %2 = load i8, i8* %1, align 1
  %conv = sext i8 %2 to i32
  %tobool = icmp ne i32 %conv, 0
  br i1 %tobool, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %for.cond
  %3 = load i8*, i8** %str, align 4
  %4 = load i8, i8* %3, align 1
  %conv1 = sext i8 %4 to i32
  %cmp = icmp ne i32 %conv1, -118
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %5 = phi i1 [ false, %for.cond ], [ %cmp, %land.rhs ]
  br i1 %5, label %for.body, label %for.end

for.body:                                         ; preds = %land.end
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %6 = load i8*, i8** %str, align 4
  %incdec.ptr = getelementptr inbounds i8, i8* %6, i32 1
  store i8* %incdec.ptr, i8** %str, align 4
  br label %for.cond

for.end:                                          ; preds = %land.end
  %7 = load i8*, i8** %str, align 4
  %8 = load i8, i8* %7, align 1
  %tobool3 = icmp ne i8 %8, 0
  br i1 %tobool3, label %lor.lhs.false, label %if.then

lor.lhs.false:                                    ; preds = %for.end
  %9 = load i8*, i8** %cmd.addr, align 4
  %arrayidx = getelementptr inbounds i8, i8* %9, i32 1
  %10 = load i8, i8* %arrayidx, align 1
  %conv4 = sext i8 %10 to i32
  %cmp5 = icmp ne i32 %conv4, -120
  br i1 %cmp5, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false, %for.end
  %11 = load i8*, i8** %cmd.addr, align 4
  %call = call i8* @dupstrpfx(i8* %11, i32 2)
  store i8* %call, i8** %errstr, align 4
  %12 = load i8*, i8** %errstr, align 4
  call void @untokenize(i8* %12)
  %13 = load i8*, i8** %errstr, align 4
  call void (i8*, ...) @zerr(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.101, i32 0, i32 0), i8* %13)
  store %struct.eprog* null, %struct.eprog** %retval, align 4
  br label %return

if.end:                                           ; preds = %lor.lhs.false
  %14 = load i8*, i8** %str, align 4
  store i8 0, i8* %14, align 1
  %15 = load i8**, i8*** %eptr.addr, align 4
  %tobool7 = icmp ne i8** %15, null
  br i1 %tobool7, label %if.then8, label %if.end10

if.then8:                                         ; preds = %if.end
  %16 = load i8*, i8** %str, align 4
  %add.ptr9 = getelementptr inbounds i8, i8* %16, i32 1
  %17 = load i8**, i8*** %eptr.addr, align 4
  store i8* %add.ptr9, i8** %17, align 4
  br label %if.end10

if.end10:                                         ; preds = %if.then8, %if.end
  %18 = load i8*, i8** %cmd.addr, align 4
  %add.ptr11 = getelementptr inbounds i8, i8* %18, i32 2
  %call12 = call %struct.eprog* @parse_string(i8* %add.ptr11, i32 0)
  store %struct.eprog* %call12, %struct.eprog** %prog, align 4
  %tobool13 = icmp ne %struct.eprog* %call12, null
  br i1 %tobool13, label %if.end15, label %if.then14

if.then14:                                        ; preds = %if.end10
  call void (i8*, ...) @zerr(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.102, i32 0, i32 0))
  store %struct.eprog* null, %struct.eprog** %retval, align 4
  br label %return

if.end15:                                         ; preds = %if.end10
  %19 = load %struct.eprog*, %struct.eprog** %prog, align 4
  store %struct.eprog* %19, %struct.eprog** %retval, align 4
  br label %return

return:                                           ; preds = %if.end15, %if.then14, %if.then
  %20 = load %struct.eprog*, %struct.eprog** %retval, align 4
  ret %struct.eprog* %20
}

declare i8* @gettempname(i8*, i32) #1

declare void @free(i8*) #1

declare i8* @getsparam(i8*) #1

declare i8* @strstr(i8*, i8*) #1

declare i8* @dyncat(i8*, i8*) #1

declare i32 @link(i8*, i8*) #1

declare void @addfilelist(i8*, i32) #1

declare i8* @unmetafy(i8*, i32*) #1

declare i32 @write_loop(i32, i8*, i32) #1

; Function Attrs: noinline nounwind
define i8* @getproc(i8* %cmd, i8** %eptr) #0 {
entry:
  %retval = alloca i8*, align 4
  %cmd.addr = alloca i8*, align 4
  %eptr.addr = alloca i8**, align 4
  %prog = alloca %struct.eprog*, align 4
  %out = alloca i32, align 4
  %pnam = alloca i8*, align 4
  %pid = alloca i32, align 4
  %bgtime = alloca %struct.timeval, align 4
  %pipes = alloca [2 x i32], align 4
  %fd = alloca i32, align 4
  store i8* %cmd, i8** %cmd.addr, align 4
  store i8** %eptr, i8*** %eptr.addr, align 4
  %0 = load i8*, i8** %cmd.addr, align 4
  %1 = load i8, i8* %0, align 1
  %conv = sext i8 %1 to i32
  %cmp = icmp eq i32 %conv, -108
  %conv1 = zext i1 %cmp to i32
  store i32 %conv1, i32* %out, align 4
  %2 = load i32, i32* @thisjob, align 4
  %cmp2 = icmp eq i32 %2, -1
  br i1 %cmp2, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %3 = load i8*, i8** %cmd.addr, align 4
  call void (i8*, ...) @zerr(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.13, i32 0, i32 0), i8* %3)
  store i8* null, i8** %retval, align 4
  br label %return

if.end:                                           ; preds = %entry
  %call = call i8* @zhalloc(i32 26)
  store i8* %call, i8** %pnam, align 4
  %4 = load i8*, i8** %cmd.addr, align 4
  %5 = load i8**, i8*** %eptr.addr, align 4
  %call4 = call %struct.eprog* @parsecmd(i8* %4, i8** %5)
  store %struct.eprog* %call4, %struct.eprog** %prog, align 4
  %tobool = icmp ne %struct.eprog* %call4, null
  br i1 %tobool, label %if.end6, label %if.then5

if.then5:                                         ; preds = %if.end
  store i8* null, i8** %retval, align 4
  br label %return

if.end6:                                          ; preds = %if.end
  %arraydecay = getelementptr inbounds [2 x i32], [2 x i32]* %pipes, i32 0, i32 0
  %call7 = call i32 @mpipe(i32* %arraydecay)
  %cmp8 = icmp slt i32 %call7, 0
  br i1 %cmp8, label %if.then10, label %if.end11

if.then10:                                        ; preds = %if.end6
  store i8* null, i8** %retval, align 4
  br label %return

if.end11:                                         ; preds = %if.end6
  %call12 = call i32 @zfork(%struct.timeval* %bgtime)
  store i32 %call12, i32* %pid, align 4
  %tobool13 = icmp ne i32 %call12, 0
  br i1 %tobool13, label %if.then14, label %if.end36

if.then14:                                        ; preds = %if.end11
  %6 = load i8*, i8** %pnam, align 4
  %7 = load i32, i32* %out, align 4
  %tobool15 = icmp ne i32 %7, 0
  %lnot = xor i1 %tobool15, true
  %lnot.ext = zext i1 %lnot to i32
  %arrayidx = getelementptr inbounds [2 x i32], [2 x i32]* %pipes, i32 0, i32 %lnot.ext
  %8 = load i32, i32* %arrayidx, align 4
  %call16 = call i32 (i8*, i8*, ...) @sprintf(i8* %6, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.17, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.18, i32 0, i32 0), i32 %8)
  %9 = load i32, i32* %out, align 4
  %arrayidx17 = getelementptr inbounds [2 x i32], [2 x i32]* %pipes, i32 0, i32 %9
  %10 = load i32, i32* %arrayidx17, align 4
  %call18 = call i32 @zclose(i32 %10)
  %11 = load i32, i32* %pid, align 4
  %cmp19 = icmp eq i32 %11, -1
  br i1 %cmp19, label %if.then21, label %if.end27

if.then21:                                        ; preds = %if.then14
  %12 = load i32, i32* %out, align 4
  %tobool22 = icmp ne i32 %12, 0
  %lnot23 = xor i1 %tobool22, true
  %lnot.ext24 = zext i1 %lnot23 to i32
  %arrayidx25 = getelementptr inbounds [2 x i32], [2 x i32]* %pipes, i32 0, i32 %lnot.ext24
  %13 = load i32, i32* %arrayidx25, align 4
  %call26 = call i32 @zclose(i32 %13)
  store i8* null, i8** %retval, align 4
  br label %return

if.end27:                                         ; preds = %if.then14
  %14 = load i32, i32* %out, align 4
  %tobool28 = icmp ne i32 %14, 0
  %lnot29 = xor i1 %tobool28, true
  %lnot.ext30 = zext i1 %lnot29 to i32
  %arrayidx31 = getelementptr inbounds [2 x i32], [2 x i32]* %pipes, i32 0, i32 %lnot.ext30
  %15 = load i32, i32* %arrayidx31, align 4
  store i32 %15, i32* %fd, align 4
  %16 = load i8*, i8** @fdtable, align 4
  %17 = load i32, i32* %fd, align 4
  %arrayidx32 = getelementptr inbounds i8, i8* %16, i32 %17
  store i8 7, i8* %arrayidx32, align 1
  %18 = load i32, i32* %fd, align 4
  call void @addfilelist(i8* null, i32 %18)
  %19 = load i32, i32* %out, align 4
  %tobool33 = icmp ne i32 %19, 0
  br i1 %tobool33, label %if.end35, label %if.then34

if.then34:                                        ; preds = %if.end27
  %20 = load i32, i32* %pid, align 4
  call void @addproc(i32 %20, i8* null, i32 1, %struct.timeval* %bgtime)
  br label %if.end35

if.end35:                                         ; preds = %if.then34, %if.end27
  %21 = load i8*, i8** %pnam, align 4
  store i8* %21, i8** %retval, align 4
  br label %return

if.end36:                                         ; preds = %if.end11
  call void @entersubsh(i32 3)
  %22 = load i32, i32* %out, align 4
  %arrayidx37 = getelementptr inbounds [2 x i32], [2 x i32]* %pipes, i32 0, i32 %22
  %23 = load i32, i32* %arrayidx37, align 4
  %24 = load i32, i32* %out, align 4
  %call38 = call i32 @redup(i32 %23, i32 %24)
  call void @closem(i32 0, i32 0)
  call void @cmdpush(i32 24)
  %25 = load %struct.eprog*, %struct.eprog** %prog, align 4
  %26 = load i32, i32* %out, align 4
  %tobool39 = icmp ne i32 %26, 0
  %cond = select i1 %tobool39, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.19, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.20, i32 0, i32 0)
  call void @execode(%struct.eprog* %25, i32 0, i32 1, i8* %cond)
  call void @cmdpop()
  %27 = load i32, i32* %out, align 4
  %call40 = call i32 @zclose(i32 %27)
  %28 = load i32, i32* @lastval, align 4
  call void @_exit(i32 %28) #4
  unreachable

return:                                           ; preds = %if.end35, %if.then21, %if.then10, %if.then5, %if.then
  %29 = load i8*, i8** %retval, align 4
  ret i8* %29
}

declare i8* @zhalloc(i32) #1

declare i32 @sprintf(i8*, i8*, ...) #1

declare void @addproc(i32, i8*, i32, %struct.timeval*) #1

; Function Attrs: noinline nounwind
define %struct.emulation_options* @sticky_emulation_dup(%struct.emulation_options* %src, i32 %useheap) #0 {
entry:
  %src.addr = alloca %struct.emulation_options*, align 4
  %useheap.addr = alloca i32, align 4
  %newsticky = alloca %struct.emulation_options*, align 4
  %sz = alloca i32, align 4
  %sz18 = alloca i32, align 4
  store %struct.emulation_options* %src, %struct.emulation_options** %src.addr, align 4
  store i32 %useheap, i32* %useheap.addr, align 4
  %0 = load i32, i32* %useheap.addr, align 4
  %tobool = icmp ne i32 %0, 0
  br i1 %tobool, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %call = call i8* @hcalloc(i32 20)
  br label %cond.end

cond.false:                                       ; preds = %entry
  %call1 = call i8* @zshcalloc(i32 20)
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %call, %cond.true ], [ %call1, %cond.false ]
  %1 = bitcast i8* %cond to %struct.emulation_options*
  store %struct.emulation_options* %1, %struct.emulation_options** %newsticky, align 4
  %2 = load %struct.emulation_options*, %struct.emulation_options** %src.addr, align 4
  %emulation = getelementptr inbounds %struct.emulation_options, %struct.emulation_options* %2, i32 0, i32 0
  %3 = load i32, i32* %emulation, align 4
  %4 = load %struct.emulation_options*, %struct.emulation_options** %newsticky, align 4
  %emulation2 = getelementptr inbounds %struct.emulation_options, %struct.emulation_options* %4, i32 0, i32 0
  store i32 %3, i32* %emulation2, align 4
  %5 = load %struct.emulation_options*, %struct.emulation_options** %src.addr, align 4
  %n_on_opts = getelementptr inbounds %struct.emulation_options, %struct.emulation_options* %5, i32 0, i32 1
  %6 = load i32, i32* %n_on_opts, align 4
  %tobool3 = icmp ne i32 %6, 0
  br i1 %tobool3, label %if.then, label %if.end

if.then:                                          ; preds = %cond.end
  %7 = load %struct.emulation_options*, %struct.emulation_options** %src.addr, align 4
  %n_on_opts4 = getelementptr inbounds %struct.emulation_options, %struct.emulation_options* %7, i32 0, i32 1
  %8 = load i32, i32* %n_on_opts4, align 4
  %mul = mul i32 %8, 1
  store i32 %mul, i32* %sz, align 4
  %9 = load %struct.emulation_options*, %struct.emulation_options** %src.addr, align 4
  %n_on_opts5 = getelementptr inbounds %struct.emulation_options, %struct.emulation_options* %9, i32 0, i32 1
  %10 = load i32, i32* %n_on_opts5, align 4
  %11 = load %struct.emulation_options*, %struct.emulation_options** %newsticky, align 4
  %n_on_opts6 = getelementptr inbounds %struct.emulation_options, %struct.emulation_options* %11, i32 0, i32 1
  store i32 %10, i32* %n_on_opts6, align 4
  %12 = load i32, i32* %useheap.addr, align 4
  %tobool7 = icmp ne i32 %12, 0
  br i1 %tobool7, label %cond.true8, label %cond.false10

cond.true8:                                       ; preds = %if.then
  %13 = load i32, i32* %sz, align 4
  %call9 = call i8* @zhalloc(i32 %13)
  br label %cond.end12

cond.false10:                                     ; preds = %if.then
  %14 = load i32, i32* %sz, align 4
  %call11 = call i8* @zalloc(i32 %14)
  br label %cond.end12

cond.end12:                                       ; preds = %cond.false10, %cond.true8
  %cond13 = phi i8* [ %call9, %cond.true8 ], [ %call11, %cond.false10 ]
  %15 = load %struct.emulation_options*, %struct.emulation_options** %newsticky, align 4
  %on_opts = getelementptr inbounds %struct.emulation_options, %struct.emulation_options* %15, i32 0, i32 3
  store i8* %cond13, i8** %on_opts, align 4
  %16 = load %struct.emulation_options*, %struct.emulation_options** %newsticky, align 4
  %on_opts14 = getelementptr inbounds %struct.emulation_options, %struct.emulation_options* %16, i32 0, i32 3
  %17 = load i8*, i8** %on_opts14, align 4
  %18 = load %struct.emulation_options*, %struct.emulation_options** %src.addr, align 4
  %on_opts15 = getelementptr inbounds %struct.emulation_options, %struct.emulation_options* %18, i32 0, i32 3
  %19 = load i8*, i8** %on_opts15, align 4
  %20 = load i32, i32* %sz, align 4
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %17, i8* %19, i32 %20, i32 1, i1 false)
  br label %if.end

if.end:                                           ; preds = %cond.end12, %cond.end
  %21 = load %struct.emulation_options*, %struct.emulation_options** %src.addr, align 4
  %n_off_opts = getelementptr inbounds %struct.emulation_options, %struct.emulation_options* %21, i32 0, i32 2
  %22 = load i32, i32* %n_off_opts, align 4
  %tobool16 = icmp ne i32 %22, 0
  br i1 %tobool16, label %if.then17, label %if.end32

if.then17:                                        ; preds = %if.end
  %23 = load %struct.emulation_options*, %struct.emulation_options** %src.addr, align 4
  %n_off_opts19 = getelementptr inbounds %struct.emulation_options, %struct.emulation_options* %23, i32 0, i32 2
  %24 = load i32, i32* %n_off_opts19, align 4
  %mul20 = mul i32 %24, 1
  store i32 %mul20, i32* %sz18, align 4
  %25 = load %struct.emulation_options*, %struct.emulation_options** %src.addr, align 4
  %n_off_opts21 = getelementptr inbounds %struct.emulation_options, %struct.emulation_options* %25, i32 0, i32 2
  %26 = load i32, i32* %n_off_opts21, align 4
  %27 = load %struct.emulation_options*, %struct.emulation_options** %newsticky, align 4
  %n_off_opts22 = getelementptr inbounds %struct.emulation_options, %struct.emulation_options* %27, i32 0, i32 2
  store i32 %26, i32* %n_off_opts22, align 4
  %28 = load i32, i32* %useheap.addr, align 4
  %tobool23 = icmp ne i32 %28, 0
  br i1 %tobool23, label %cond.true24, label %cond.false26

cond.true24:                                      ; preds = %if.then17
  %29 = load i32, i32* %sz18, align 4
  %call25 = call i8* @zhalloc(i32 %29)
  br label %cond.end28

cond.false26:                                     ; preds = %if.then17
  %30 = load i32, i32* %sz18, align 4
  %call27 = call i8* @zalloc(i32 %30)
  br label %cond.end28

cond.end28:                                       ; preds = %cond.false26, %cond.true24
  %cond29 = phi i8* [ %call25, %cond.true24 ], [ %call27, %cond.false26 ]
  %31 = load %struct.emulation_options*, %struct.emulation_options** %newsticky, align 4
  %off_opts = getelementptr inbounds %struct.emulation_options, %struct.emulation_options* %31, i32 0, i32 4
  store i8* %cond29, i8** %off_opts, align 4
  %32 = load %struct.emulation_options*, %struct.emulation_options** %newsticky, align 4
  %off_opts30 = getelementptr inbounds %struct.emulation_options, %struct.emulation_options* %32, i32 0, i32 4
  %33 = load i8*, i8** %off_opts30, align 4
  %34 = load %struct.emulation_options*, %struct.emulation_options** %src.addr, align 4
  %off_opts31 = getelementptr inbounds %struct.emulation_options, %struct.emulation_options* %34, i32 0, i32 4
  %35 = load i8*, i8** %off_opts31, align 4
  %36 = load i32, i32* %sz18, align 4
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %33, i8* %35, i32 %36, i32 1, i1 false)
  br label %if.end32

if.end32:                                         ; preds = %cond.end28, %if.end
  %37 = load %struct.emulation_options*, %struct.emulation_options** %newsticky, align 4
  ret %struct.emulation_options* %37
}

; Function Attrs: noinline nounwind
define void @shfunc_set_sticky(%struct.shfunc* %shf) #0 {
entry:
  %shf.addr = alloca %struct.shfunc*, align 4
  store %struct.shfunc* %shf, %struct.shfunc** %shf.addr, align 4
  %0 = load %struct.emulation_options*, %struct.emulation_options** @sticky, align 4
  %tobool = icmp ne %struct.emulation_options* %0, null
  br i1 %tobool, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %1 = load %struct.emulation_options*, %struct.emulation_options** @sticky, align 4
  %call = call %struct.emulation_options* @sticky_emulation_dup(%struct.emulation_options* %1, i32 0)
  %2 = load %struct.shfunc*, %struct.shfunc** %shf.addr, align 4
  %sticky = getelementptr inbounds %struct.shfunc, %struct.shfunc* %2, i32 0, i32 5
  store %struct.emulation_options* %call, %struct.emulation_options** %sticky, align 4
  br label %if.end

if.else:                                          ; preds = %entry
  %3 = load %struct.shfunc*, %struct.shfunc** %shf.addr, align 4
  %sticky1 = getelementptr inbounds %struct.shfunc, %struct.shfunc* %3, i32 0, i32 5
  store %struct.emulation_options* null, %struct.emulation_options** %sticky1, align 4
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void
}

; Function Attrs: noinline nounwind
define %struct.shfunc* @loadautofn(%struct.shfunc* %shf, i32 %fksh, i32 %autol, i32 %current_fpath) #0 {
entry:
  %retval = alloca %struct.shfunc*, align 4
  %shf.addr = alloca %struct.shfunc*, align 4
  %fksh.addr = alloca i32, align 4
  %autol.addr = alloca i32, align 4
  %current_fpath.addr = alloca i32, align 4
  %noalias = alloca i32, align 4
  %ksh = alloca i32, align 4
  %prog = alloca %struct.eprog*, align 4
  %fdir = alloca i8*, align 4
  %spec_path = alloca [2 x i8*], align 4
  %n = alloca i8*, align 4
  store %struct.shfunc* %shf, %struct.shfunc** %shf.addr, align 4
  store i32 %fksh, i32* %fksh.addr, align 4
  store i32 %autol, i32* %autol.addr, align 4
  store i32 %current_fpath, i32* %current_fpath.addr, align 4
  %0 = load i32, i32* @noaliases, align 4
  store i32 %0, i32* %noalias, align 4
  store i32 1, i32* %ksh, align 4
  call void @pushheap()
  %1 = load %struct.shfunc*, %struct.shfunc** %shf.addr, align 4
  %node = getelementptr inbounds %struct.shfunc, %struct.shfunc* %1, i32 0, i32 0
  %flags = getelementptr inbounds %struct.hashnode, %struct.hashnode* %node, i32 0, i32 2
  %2 = load i32, i32* %flags, align 4
  %and = and i32 %2, 8192
  store i32 %and, i32* @noaliases, align 4
  %3 = load %struct.shfunc*, %struct.shfunc** %shf.addr, align 4
  %filename = getelementptr inbounds %struct.shfunc, %struct.shfunc* %3, i32 0, i32 1
  %4 = load i8*, i8** %filename, align 4
  %tobool = icmp ne i8* %4, null
  br i1 %tobool, label %land.lhs.true, label %if.else

land.lhs.true:                                    ; preds = %entry
  %5 = load %struct.shfunc*, %struct.shfunc** %shf.addr, align 4
  %filename1 = getelementptr inbounds %struct.shfunc, %struct.shfunc* %5, i32 0, i32 1
  %6 = load i8*, i8** %filename1, align 4
  %arrayidx = getelementptr inbounds i8, i8* %6, i32 0
  %7 = load i8, i8* %arrayidx, align 1
  %conv = sext i8 %7 to i32
  %cmp = icmp eq i32 %conv, 47
  br i1 %cmp, label %land.lhs.true3, label %if.else

land.lhs.true3:                                   ; preds = %land.lhs.true
  %8 = load %struct.shfunc*, %struct.shfunc** %shf.addr, align 4
  %node4 = getelementptr inbounds %struct.shfunc, %struct.shfunc* %8, i32 0, i32 0
  %flags5 = getelementptr inbounds %struct.hashnode, %struct.hashnode* %node4, i32 0, i32 2
  %9 = load i32, i32* %flags5, align 4
  %and6 = and i32 %9, 524288
  %tobool7 = icmp ne i32 %and6, 0
  br i1 %tobool7, label %if.then, label %if.else

if.then:                                          ; preds = %land.lhs.true3
  %10 = load %struct.shfunc*, %struct.shfunc** %shf.addr, align 4
  %filename8 = getelementptr inbounds %struct.shfunc, %struct.shfunc* %10, i32 0, i32 1
  %11 = load i8*, i8** %filename8, align 4
  %call = call i8* @dupstring(i8* %11)
  %arrayidx9 = getelementptr inbounds [2 x i8*], [2 x i8*]* %spec_path, i32 0, i32 0
  store i8* %call, i8** %arrayidx9, align 4
  %arrayidx10 = getelementptr inbounds [2 x i8*], [2 x i8*]* %spec_path, i32 0, i32 1
  store i8* null, i8** %arrayidx10, align 4
  %12 = load %struct.shfunc*, %struct.shfunc** %shf.addr, align 4
  %node11 = getelementptr inbounds %struct.shfunc, %struct.shfunc* %12, i32 0, i32 0
  %nam = getelementptr inbounds %struct.hashnode, %struct.hashnode* %node11, i32 0, i32 1
  %13 = load i8*, i8** %nam, align 4
  %arraydecay = getelementptr inbounds [2 x i8*], [2 x i8*]* %spec_path, i32 0, i32 0
  %call12 = call %struct.eprog* @getfpfunc(i8* %13, i32* %ksh, i8** %fdir, i8** %arraydecay, i32 0)
  store %struct.eprog* %call12, %struct.eprog** %prog, align 4
  %14 = load %struct.eprog*, %struct.eprog** %prog, align 4
  %cmp13 = icmp eq %struct.eprog* %14, @dummy_eprog
  br i1 %cmp13, label %land.lhs.true15, label %if.end

land.lhs.true15:                                  ; preds = %if.then
  %15 = load i32, i32* %current_fpath.addr, align 4
  %tobool16 = icmp ne i32 %15, 0
  br i1 %tobool16, label %if.then21, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true15
  %16 = load %struct.shfunc*, %struct.shfunc** %shf.addr, align 4
  %node17 = getelementptr inbounds %struct.shfunc, %struct.shfunc* %16, i32 0, i32 0
  %flags18 = getelementptr inbounds %struct.hashnode, %struct.hashnode* %node17, i32 0, i32 2
  %17 = load i32, i32* %flags18, align 4
  %and19 = and i32 %17, 16384
  %tobool20 = icmp ne i32 %and19, 0
  br i1 %tobool20, label %if.then21, label %if.end

if.then21:                                        ; preds = %lor.lhs.false, %land.lhs.true15
  %18 = load %struct.shfunc*, %struct.shfunc** %shf.addr, align 4
  %node22 = getelementptr inbounds %struct.shfunc, %struct.shfunc* %18, i32 0, i32 0
  %nam23 = getelementptr inbounds %struct.hashnode, %struct.hashnode* %node22, i32 0, i32 1
  %19 = load i8*, i8** %nam23, align 4
  %call24 = call %struct.eprog* @getfpfunc(i8* %19, i32* %ksh, i8** %fdir, i8** null, i32 0)
  store %struct.eprog* %call24, %struct.eprog** %prog, align 4
  br label %if.end

if.end:                                           ; preds = %if.then21, %lor.lhs.false, %if.then
  br label %if.end28

if.else:                                          ; preds = %land.lhs.true3, %land.lhs.true, %entry
  %20 = load %struct.shfunc*, %struct.shfunc** %shf.addr, align 4
  %node25 = getelementptr inbounds %struct.shfunc, %struct.shfunc* %20, i32 0, i32 0
  %nam26 = getelementptr inbounds %struct.hashnode, %struct.hashnode* %node25, i32 0, i32 1
  %21 = load i8*, i8** %nam26, align 4
  %call27 = call %struct.eprog* @getfpfunc(i8* %21, i32* %ksh, i8** %fdir, i8** null, i32 0)
  store %struct.eprog* %call27, %struct.eprog** %prog, align 4
  br label %if.end28

if.end28:                                         ; preds = %if.else, %if.end
  %22 = load i32, i32* %noalias, align 4
  store i32 %22, i32* @noaliases, align 4
  %23 = load i32, i32* %ksh, align 4
  %cmp29 = icmp eq i32 %23, 1
  br i1 %cmp29, label %if.then31, label %if.end45

if.then31:                                        ; preds = %if.end28
  %24 = load i32, i32* %fksh.addr, align 4
  store i32 %24, i32* %ksh, align 4
  %25 = load i32, i32* %ksh, align 4
  %cmp32 = icmp eq i32 %25, 1
  br i1 %cmp32, label %if.then34, label %if.end44

if.then34:                                        ; preds = %if.then31
  %26 = load %struct.shfunc*, %struct.shfunc** %shf.addr, align 4
  %node35 = getelementptr inbounds %struct.shfunc, %struct.shfunc* %26, i32 0, i32 0
  %flags36 = getelementptr inbounds %struct.hashnode, %struct.hashnode* %node35, i32 0, i32 2
  %27 = load i32, i32* %flags36, align 4
  %and37 = and i32 %27, 131072
  %tobool38 = icmp ne i32 %and37, 0
  br i1 %tobool38, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.then34
  br label %cond.end

cond.false:                                       ; preds = %if.then34
  %28 = load %struct.shfunc*, %struct.shfunc** %shf.addr, align 4
  %node39 = getelementptr inbounds %struct.shfunc, %struct.shfunc* %28, i32 0, i32 0
  %flags40 = getelementptr inbounds %struct.hashnode, %struct.hashnode* %node39, i32 0, i32 2
  %29 = load i32, i32* %flags40, align 4
  %and41 = and i32 %29, 262144
  %tobool42 = icmp ne i32 %and41, 0
  %cond = select i1 %tobool42, i32 0, i32 1
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond43 = phi i32 [ 2, %cond.true ], [ %cond, %cond.false ]
  store i32 %cond43, i32* %ksh, align 4
  br label %if.end44

if.end44:                                         ; preds = %cond.end, %if.then31
  br label %if.end45

if.end45:                                         ; preds = %if.end44, %if.end28
  %30 = load %struct.eprog*, %struct.eprog** %prog, align 4
  %cmp46 = icmp eq %struct.eprog* %30, @dummy_eprog
  br i1 %cmp46, label %if.then48, label %if.end51

if.then48:                                        ; preds = %if.end45
  %31 = load i32, i32* @locallevel, align 4
  %dec = add nsw i32 %31, -1
  store i32 %dec, i32* @locallevel, align 4
  %32 = load %struct.shfunc*, %struct.shfunc** %shf.addr, align 4
  %node49 = getelementptr inbounds %struct.shfunc, %struct.shfunc* %32, i32 0, i32 0
  %nam50 = getelementptr inbounds %struct.hashnode, %struct.hashnode* %node49, i32 0, i32 1
  %33 = load i8*, i8** %nam50, align 4
  call void (i8*, ...) @zwarn(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.21, i32 0, i32 0), i8* %33)
  %34 = load i32, i32* @locallevel, align 4
  %inc = add nsw i32 %34, 1
  store i32 %inc, i32* @locallevel, align 4
  call void @popheap()
  store %struct.shfunc* null, %struct.shfunc** %retval, align 4
  br label %return

if.end51:                                         ; preds = %if.end45
  %35 = load %struct.eprog*, %struct.eprog** %prog, align 4
  %tobool52 = icmp ne %struct.eprog* %35, null
  br i1 %tobool52, label %if.end54, label %if.then53

if.then53:                                        ; preds = %if.end51
  call void @popheap()
  store %struct.shfunc* null, %struct.shfunc** %retval, align 4
  br label %return

if.end54:                                         ; preds = %if.end51
  %36 = load i32, i32* %ksh, align 4
  %cmp55 = icmp eq i32 %36, 2
  br i1 %cmp55, label %if.then63, label %lor.lhs.false57

lor.lhs.false57:                                  ; preds = %if.end54
  %37 = load i32, i32* %ksh, align 4
  %cmp58 = icmp eq i32 %37, 1
  br i1 %cmp58, label %land.lhs.true60, label %if.else99

land.lhs.true60:                                  ; preds = %lor.lhs.false57
  %38 = load i8, i8* getelementptr inbounds ([181 x i8], [181 x i8]* @opts, i32 0, i32 97), align 1
  %conv61 = sext i8 %38 to i32
  %tobool62 = icmp ne i32 %conv61, 0
  br i1 %tobool62, label %if.then63, label %if.else99

if.then63:                                        ; preds = %land.lhs.true60, %if.end54
  %39 = load i32, i32* %autol.addr, align 4
  %tobool64 = icmp ne i32 %39, 0
  br i1 %tobool64, label %if.then65, label %if.else79

if.then65:                                        ; preds = %if.then63
  %40 = load %struct.eprog*, %struct.eprog** %prog, align 4
  %flags66 = getelementptr inbounds %struct.eprog, %struct.eprog* %40, i32 0, i32 0
  %41 = load i32, i32* %flags66, align 4
  %or = or i32 %41, 8
  store i32 %or, i32* %flags66, align 4
  %42 = load %struct.shfunc*, %struct.shfunc** %shf.addr, align 4
  %funcdef = getelementptr inbounds %struct.shfunc, %struct.shfunc* %42, i32 0, i32 3
  %43 = load %struct.eprog*, %struct.eprog** %funcdef, align 4
  call void @freeeprog(%struct.eprog* %43)
  %44 = load %struct.eprog*, %struct.eprog** %prog, align 4
  %flags67 = getelementptr inbounds %struct.eprog, %struct.eprog* %44, i32 0, i32 0
  %45 = load i32, i32* %flags67, align 4
  %and68 = and i32 %45, 4
  %tobool69 = icmp ne i32 %and68, 0
  br i1 %tobool69, label %if.then70, label %if.else72

if.then70:                                        ; preds = %if.then65
  %46 = load %struct.eprog*, %struct.eprog** %prog, align 4
  %47 = load %struct.shfunc*, %struct.shfunc** %shf.addr, align 4
  %funcdef71 = getelementptr inbounds %struct.shfunc, %struct.shfunc* %47, i32 0, i32 3
  store %struct.eprog* %46, %struct.eprog** %funcdef71, align 4
  br label %if.end75

if.else72:                                        ; preds = %if.then65
  %48 = load %struct.eprog*, %struct.eprog** %prog, align 4
  %call73 = call %struct.eprog* @dupeprog(%struct.eprog* %48, i32 0)
  %49 = load %struct.shfunc*, %struct.shfunc** %shf.addr, align 4
  %funcdef74 = getelementptr inbounds %struct.shfunc, %struct.shfunc* %49, i32 0, i32 3
  store %struct.eprog* %call73, %struct.eprog** %funcdef74, align 4
  br label %if.end75

if.end75:                                         ; preds = %if.else72, %if.then70
  %50 = load %struct.shfunc*, %struct.shfunc** %shf.addr, align 4
  %node76 = getelementptr inbounds %struct.shfunc, %struct.shfunc* %50, i32 0, i32 0
  %flags77 = getelementptr inbounds %struct.hashnode, %struct.hashnode* %node76, i32 0, i32 2
  %51 = load i32, i32* %flags77, align 4
  %and78 = and i32 %51, -513
  store i32 %and78, i32* %flags77, align 4
  %52 = load %struct.shfunc*, %struct.shfunc** %shf.addr, align 4
  %53 = load i8*, i8** %fdir, align 4
  call void @loadautofnsetfile(%struct.shfunc* %52, i8* %53)
  br label %if.end98

if.else79:                                        ; preds = %if.then63
  %54 = load %struct.shfunc*, %struct.shfunc** %shf.addr, align 4
  %node80 = getelementptr inbounds %struct.shfunc, %struct.shfunc* %54, i32 0, i32 0
  %nam81 = getelementptr inbounds %struct.hashnode, %struct.hashnode* %node80, i32 0, i32 1
  %55 = load i8*, i8** %nam81, align 4
  %call82 = call i32 @strlen(i8* %55)
  %add = add i32 %call82, 1
  %mul = mul i32 1, %add
  %call83 = call i8* @zhalloc(i32 %mul)
  store i8* %call83, i8** %n, align 4
  %56 = load i8*, i8** %n, align 4
  %57 = load %struct.shfunc*, %struct.shfunc** %shf.addr, align 4
  %node84 = getelementptr inbounds %struct.shfunc, %struct.shfunc* %57, i32 0, i32 0
  %nam85 = getelementptr inbounds %struct.hashnode, %struct.hashnode* %node84, i32 0, i32 1
  %58 = load i8*, i8** %nam85, align 4
  %call86 = call i8* @strcpy(i8* %56, i8* %58)
  %59 = load %struct.eprog*, %struct.eprog** %prog, align 4
  call void @execode(%struct.eprog* %59, i32 1, i32 0, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.22, i32 0, i32 0))
  %60 = load %struct.hashtable*, %struct.hashtable** @shfunctab, align 4
  %getnode = getelementptr inbounds %struct.hashtable, %struct.hashtable* %60, i32 0, i32 9
  %61 = load %struct.hashnode* (%struct.hashtable*, i8*)*, %struct.hashnode* (%struct.hashtable*, i8*)** %getnode, align 4
  %62 = load %struct.hashtable*, %struct.hashtable** @shfunctab, align 4
  %63 = load i8*, i8** %n, align 4
  %call87 = call %struct.hashnode* %61(%struct.hashtable* %62, i8* %63)
  %64 = bitcast %struct.hashnode* %call87 to %struct.shfunc*
  store %struct.shfunc* %64, %struct.shfunc** %shf.addr, align 4
  %65 = load %struct.shfunc*, %struct.shfunc** %shf.addr, align 4
  %tobool88 = icmp ne %struct.shfunc* %65, null
  br i1 %tobool88, label %lor.lhs.false89, label %if.then94

lor.lhs.false89:                                  ; preds = %if.else79
  %66 = load %struct.shfunc*, %struct.shfunc** %shf.addr, align 4
  %node90 = getelementptr inbounds %struct.shfunc, %struct.shfunc* %66, i32 0, i32 0
  %flags91 = getelementptr inbounds %struct.hashnode, %struct.hashnode* %node90, i32 0, i32 2
  %67 = load i32, i32* %flags91, align 4
  %and92 = and i32 %67, 512
  %tobool93 = icmp ne i32 %and92, 0
  br i1 %tobool93, label %if.then94, label %if.end97

if.then94:                                        ; preds = %lor.lhs.false89, %if.else79
  %68 = load i32, i32* @locallevel, align 4
  %dec95 = add nsw i32 %68, -1
  store i32 %dec95, i32* @locallevel, align 4
  %69 = load i8*, i8** %n, align 4
  call void (i8*, ...) @zwarn(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.23, i32 0, i32 0), i8* %69)
  %70 = load i32, i32* @locallevel, align 4
  %inc96 = add nsw i32 %70, 1
  store i32 %inc96, i32* @locallevel, align 4
  call void @popheap()
  store %struct.shfunc* null, %struct.shfunc** %retval, align 4
  br label %return

if.end97:                                         ; preds = %lor.lhs.false89
  br label %if.end98

if.end98:                                         ; preds = %if.end97, %if.end75
  br label %if.end119

if.else99:                                        ; preds = %land.lhs.true60, %lor.lhs.false57
  %71 = load %struct.shfunc*, %struct.shfunc** %shf.addr, align 4
  %funcdef100 = getelementptr inbounds %struct.shfunc, %struct.shfunc* %71, i32 0, i32 3
  %72 = load %struct.eprog*, %struct.eprog** %funcdef100, align 4
  call void @freeeprog(%struct.eprog* %72)
  %73 = load %struct.eprog*, %struct.eprog** %prog, align 4
  %flags101 = getelementptr inbounds %struct.eprog, %struct.eprog* %73, i32 0, i32 0
  %74 = load i32, i32* %flags101, align 4
  %and102 = and i32 %74, 4
  %tobool103 = icmp ne i32 %and102, 0
  br i1 %tobool103, label %if.then104, label %if.else109

if.then104:                                       ; preds = %if.else99
  %75 = load %struct.eprog*, %struct.eprog** %prog, align 4
  %76 = load %struct.shfunc*, %struct.shfunc** %shf.addr, align 4
  %node105 = getelementptr inbounds %struct.shfunc, %struct.shfunc* %76, i32 0, i32 0
  %nam106 = getelementptr inbounds %struct.hashnode, %struct.hashnode* %node105, i32 0, i32 1
  %77 = load i8*, i8** %nam106, align 4
  %call107 = call %struct.eprog* @stripkshdef(%struct.eprog* %75, i8* %77)
  %78 = load %struct.shfunc*, %struct.shfunc** %shf.addr, align 4
  %funcdef108 = getelementptr inbounds %struct.shfunc, %struct.shfunc* %78, i32 0, i32 3
  store %struct.eprog* %call107, %struct.eprog** %funcdef108, align 4
  br label %if.end115

if.else109:                                       ; preds = %if.else99
  %79 = load %struct.eprog*, %struct.eprog** %prog, align 4
  %80 = load %struct.shfunc*, %struct.shfunc** %shf.addr, align 4
  %node110 = getelementptr inbounds %struct.shfunc, %struct.shfunc* %80, i32 0, i32 0
  %nam111 = getelementptr inbounds %struct.hashnode, %struct.hashnode* %node110, i32 0, i32 1
  %81 = load i8*, i8** %nam111, align 4
  %call112 = call %struct.eprog* @stripkshdef(%struct.eprog* %79, i8* %81)
  %call113 = call %struct.eprog* @dupeprog(%struct.eprog* %call112, i32 0)
  %82 = load %struct.shfunc*, %struct.shfunc** %shf.addr, align 4
  %funcdef114 = getelementptr inbounds %struct.shfunc, %struct.shfunc* %82, i32 0, i32 3
  store %struct.eprog* %call113, %struct.eprog** %funcdef114, align 4
  br label %if.end115

if.end115:                                        ; preds = %if.else109, %if.then104
  %83 = load %struct.shfunc*, %struct.shfunc** %shf.addr, align 4
  %node116 = getelementptr inbounds %struct.shfunc, %struct.shfunc* %83, i32 0, i32 0
  %flags117 = getelementptr inbounds %struct.hashnode, %struct.hashnode* %node116, i32 0, i32 2
  %84 = load i32, i32* %flags117, align 4
  %and118 = and i32 %84, -513
  store i32 %and118, i32* %flags117, align 4
  %85 = load %struct.shfunc*, %struct.shfunc** %shf.addr, align 4
  %86 = load i8*, i8** %fdir, align 4
  call void @loadautofnsetfile(%struct.shfunc* %85, i8* %86)
  br label %if.end119

if.end119:                                        ; preds = %if.end115, %if.end98
  call void @popheap()
  %87 = load %struct.shfunc*, %struct.shfunc** %shf.addr, align 4
  store %struct.shfunc* %87, %struct.shfunc** %retval, align 4
  br label %return

return:                                           ; preds = %if.end119, %if.then94, %if.then53, %if.then48
  %88 = load %struct.shfunc*, %struct.shfunc** %retval, align 4
  ret %struct.shfunc* %88
}

; Function Attrs: noinline nounwind
define %struct.eprog* @getfpfunc(i8* %s, i32* %ksh, i8** %fdir, i8** %alt_path, i32 %test_only) #0 {
entry:
  %retval = alloca %struct.eprog*, align 4
  %s.addr = alloca i8*, align 4
  %ksh.addr = alloca i32*, align 4
  %fdir.addr = alloca i8**, align 4
  %alt_path.addr = alloca i8**, align 4
  %test_only.addr = alloca i32, align 4
  %pp = alloca i8**, align 4
  %buf = alloca [4097 x i8], align 1
  %len = alloca i32, align 4
  %rlen = alloca i32, align 4
  %d = alloca i8*, align 4
  %r = alloca %struct.eprog*, align 4
  %fd = alloca i32, align 4
  %st = alloca %struct.stat, align 8
  %oldscriptname = alloca i8*, align 4
  store i8* %s, i8** %s.addr, align 4
  store i32* %ksh, i32** %ksh.addr, align 4
  store i8** %fdir, i8*** %fdir.addr, align 4
  store i8** %alt_path, i8*** %alt_path.addr, align 4
  store i32 %test_only, i32* %test_only.addr, align 4
  %0 = load i8**, i8*** %alt_path.addr, align 4
  %tobool = icmp ne i8** %0, null
  br i1 %tobool, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %1 = load i8**, i8*** %alt_path.addr, align 4
  br label %cond.end

cond.false:                                       ; preds = %entry
  %2 = load i8**, i8*** @fpath, align 4
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8** [ %1, %cond.true ], [ %2, %cond.false ]
  store i8** %cond, i8*** %pp, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %cond.end
  %3 = load i8**, i8*** %pp, align 4
  %4 = load i8*, i8** %3, align 4
  %tobool1 = icmp ne i8* %4, null
  br i1 %tobool1, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %5 = load i8**, i8*** %pp, align 4
  %6 = load i8*, i8** %5, align 4
  %call = call i32 @strlen(i8* %6)
  %7 = load i8*, i8** %s.addr, align 4
  %call2 = call i32 @strlen(i8* %7)
  %add = add i32 %call, %call2
  %add3 = add i32 %add, 1
  %cmp = icmp uge i32 %add3, 4096
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  br label %for.inc

if.end:                                           ; preds = %for.body
  %8 = load i8**, i8*** %pp, align 4
  %9 = load i8*, i8** %8, align 4
  %10 = load i8, i8* %9, align 1
  %tobool4 = icmp ne i8 %10, 0
  br i1 %tobool4, label %if.then5, label %if.else

if.then5:                                         ; preds = %if.end
  %arraydecay = getelementptr inbounds [4097 x i8], [4097 x i8]* %buf, i32 0, i32 0
  %11 = load i8**, i8*** %pp, align 4
  %12 = load i8*, i8** %11, align 4
  %13 = load i8*, i8** %s.addr, align 4
  %call6 = call i32 (i8*, i8*, ...) @sprintf(i8* %arraydecay, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.29, i32 0, i32 0), i8* %12, i8* %13)
  br label %if.end9

if.else:                                          ; preds = %if.end
  %arraydecay7 = getelementptr inbounds [4097 x i8], [4097 x i8]* %buf, i32 0, i32 0
  %14 = load i8*, i8** %s.addr, align 4
  %call8 = call i8* @strcpy(i8* %arraydecay7, i8* %14)
  br label %if.end9

if.end9:                                          ; preds = %if.else, %if.then5
  %15 = load i8**, i8*** %pp, align 4
  %16 = load i8*, i8** %15, align 4
  %17 = load i8*, i8** %s.addr, align 4
  %arraydecay10 = getelementptr inbounds [4097 x i8], [4097 x i8]* %buf, i32 0, i32 0
  %18 = load i32*, i32** %ksh.addr, align 4
  %19 = load i32, i32* %test_only.addr, align 4
  %call11 = call %struct.eprog* @try_dump_file(i8* %16, i8* %17, i8* %arraydecay10, i32* %18, i32 %19)
  store %struct.eprog* %call11, %struct.eprog** %r, align 4
  %tobool12 = icmp ne %struct.eprog* %call11, null
  br i1 %tobool12, label %if.then13, label %if.end17

if.then13:                                        ; preds = %if.end9
  %20 = load i8**, i8*** %fdir.addr, align 4
  %tobool14 = icmp ne i8** %20, null
  br i1 %tobool14, label %if.then15, label %if.end16

if.then15:                                        ; preds = %if.then13
  %21 = load i8**, i8*** %pp, align 4
  %22 = load i8*, i8** %21, align 4
  %23 = load i8**, i8*** %fdir.addr, align 4
  store i8* %22, i8** %23, align 4
  br label %if.end16

if.end16:                                         ; preds = %if.then15, %if.then13
  %24 = load %struct.eprog*, %struct.eprog** %r, align 4
  store %struct.eprog* %24, %struct.eprog** %retval, align 4
  br label %return

if.end17:                                         ; preds = %if.end9
  %arraydecay18 = getelementptr inbounds [4097 x i8], [4097 x i8]* %buf, i32 0, i32 0
  %call19 = call i8* @unmetafy(i8* %arraydecay18, i32* null)
  %arraydecay20 = getelementptr inbounds [4097 x i8], [4097 x i8]* %buf, i32 0, i32 0
  %call21 = call i32 @access(i8* %arraydecay20, i32 4)
  %tobool22 = icmp ne i32 %call21, 0
  br i1 %tobool22, label %if.end63, label %land.lhs.true

land.lhs.true:                                    ; preds = %if.end17
  %arraydecay23 = getelementptr inbounds [4097 x i8], [4097 x i8]* %buf, i32 0, i32 0
  %call24 = call i32 (i8*, i32, ...) @open(i8* %arraydecay23, i32 256)
  store i32 %call24, i32* %fd, align 4
  %cmp25 = icmp ne i32 %call24, -1
  br i1 %cmp25, label %if.then26, label %if.end63

if.then26:                                        ; preds = %land.lhs.true
  %25 = load i32, i32* %fd, align 4
  %call27 = call i32 @fstat(i32 %25, %struct.stat* %st)
  %tobool28 = icmp ne i32 %call27, 0
  br i1 %tobool28, label %if.else60, label %land.lhs.true29

land.lhs.true29:                                  ; preds = %if.then26
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 6
  %26 = load i32, i32* %st_mode, align 8
  %and = and i32 %26, 61440
  %cmp30 = icmp eq i32 %and, 32768
  br i1 %cmp30, label %land.lhs.true31, label %if.else60

land.lhs.true31:                                  ; preds = %land.lhs.true29
  %27 = load i32, i32* %fd, align 4
  %call32 = call i32 @lseek(i32 %27, i32 0, i32 2)
  store i32 %call32, i32* %len, align 4
  %cmp33 = icmp ne i32 %call32, -1
  br i1 %cmp33, label %if.then34, label %if.else60

if.then34:                                        ; preds = %land.lhs.true31
  %28 = load i32, i32* %test_only.addr, align 4
  %tobool35 = icmp ne i32 %28, 0
  br i1 %tobool35, label %if.then36, label %if.end41

if.then36:                                        ; preds = %if.then34
  %29 = load i32, i32* %fd, align 4
  %call37 = call i32 @close(i32 %29)
  %30 = load i8**, i8*** %fdir.addr, align 4
  %tobool38 = icmp ne i8** %30, null
  br i1 %tobool38, label %if.then39, label %if.end40

if.then39:                                        ; preds = %if.then36
  %31 = load i8**, i8*** %pp, align 4
  %32 = load i8*, i8** %31, align 4
  %33 = load i8**, i8*** %fdir.addr, align 4
  store i8* %32, i8** %33, align 4
  br label %if.end40

if.end40:                                         ; preds = %if.then39, %if.then36
  store %struct.eprog* @dummy_eprog, %struct.eprog** %retval, align 4
  br label %return

if.end41:                                         ; preds = %if.then34
  %34 = load i32, i32* %len, align 4
  %add42 = add nsw i32 %34, 1
  %call43 = call i8* @zalloc(i32 %add42)
  store i8* %call43, i8** %d, align 4
  %35 = load i32, i32* %fd, align 4
  %call44 = call i32 @lseek(i32 %35, i32 0, i32 0)
  %36 = load i32, i32* %fd, align 4
  %37 = load i8*, i8** %d, align 4
  %38 = load i32, i32* %len, align 4
  %call45 = call i32 @read(i32 %36, i8* %37, i32 %38)
  store i32 %call45, i32* %rlen, align 4
  %cmp46 = icmp sge i32 %call45, 0
  br i1 %cmp46, label %if.then47, label %if.else56

if.then47:                                        ; preds = %if.end41
  %39 = load i8*, i8** @scriptname, align 4
  store i8* %39, i8** %oldscriptname, align 4
  %40 = load i32, i32* %fd, align 4
  %call48 = call i32 @close(i32 %40)
  %41 = load i8*, i8** %d, align 4
  %42 = load i32, i32* %rlen, align 4
  %arrayidx = getelementptr inbounds i8, i8* %41, i32 %42
  store i8 0, i8* %arrayidx, align 1
  %43 = load i8*, i8** %d, align 4
  %44 = load i32, i32* %rlen, align 4
  %call49 = call i8* @metafy(i8* %43, i32 %44, i32 0)
  store i8* %call49, i8** %d, align 4
  %45 = load i8*, i8** %s.addr, align 4
  %call50 = call i8* @dupstring(i8* %45)
  store i8* %call50, i8** @scriptname, align 4
  %46 = load i8*, i8** %d, align 4
  %call51 = call %struct.eprog* @parse_string(i8* %46, i32 1)
  store %struct.eprog* %call51, %struct.eprog** %r, align 4
  %47 = load i8*, i8** %oldscriptname, align 4
  store i8* %47, i8** @scriptname, align 4
  %48 = load i8**, i8*** %fdir.addr, align 4
  %tobool52 = icmp ne i8** %48, null
  br i1 %tobool52, label %if.then53, label %if.end54

if.then53:                                        ; preds = %if.then47
  %49 = load i8**, i8*** %pp, align 4
  %50 = load i8*, i8** %49, align 4
  %51 = load i8**, i8*** %fdir.addr, align 4
  store i8* %50, i8** %51, align 4
  br label %if.end54

if.end54:                                         ; preds = %if.then53, %if.then47
  %52 = load i8*, i8** %d, align 4
  %53 = load i32, i32* %len, align 4
  %add55 = add nsw i32 %53, 1
  call void @zfree(i8* %52, i32 %add55)
  %54 = load %struct.eprog*, %struct.eprog** %r, align 4
  store %struct.eprog* %54, %struct.eprog** %retval, align 4
  br label %return

if.else56:                                        ; preds = %if.end41
  %55 = load i32, i32* %fd, align 4
  %call57 = call i32 @close(i32 %55)
  br label %if.end58

if.end58:                                         ; preds = %if.else56
  %56 = load i8*, i8** %d, align 4
  %57 = load i32, i32* %len, align 4
  %add59 = add nsw i32 %57, 1
  call void @zfree(i8* %56, i32 %add59)
  br label %if.end62

if.else60:                                        ; preds = %land.lhs.true31, %land.lhs.true29, %if.then26
  %58 = load i32, i32* %fd, align 4
  %call61 = call i32 @close(i32 %58)
  br label %if.end62

if.end62:                                         ; preds = %if.else60, %if.end58
  br label %if.end63

if.end63:                                         ; preds = %if.end62, %land.lhs.true, %if.end17
  br label %for.inc

for.inc:                                          ; preds = %if.end63, %if.then
  %59 = load i8**, i8*** %pp, align 4
  %incdec.ptr = getelementptr inbounds i8*, i8** %59, i32 1
  store i8** %incdec.ptr, i8*** %pp, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %60 = load i32, i32* %test_only.addr, align 4
  %tobool64 = icmp ne i32 %60, 0
  %cond65 = select i1 %tobool64, %struct.eprog* null, %struct.eprog* @dummy_eprog
  store %struct.eprog* %cond65, %struct.eprog** %retval, align 4
  br label %return

return:                                           ; preds = %for.end, %if.end54, %if.end40, %if.end16
  %61 = load %struct.eprog*, %struct.eprog** %retval, align 4
  ret %struct.eprog* %61
}

declare %struct.eprog* @dupeprog(%struct.eprog*, i32) #1

; Function Attrs: noinline nounwind
define internal void @loadautofnsetfile(%struct.shfunc* %shf, i8* %fdir) #0 {
entry:
  %shf.addr = alloca %struct.shfunc*, align 4
  %fdir.addr = alloca i8*, align 4
  store %struct.shfunc* %shf, %struct.shfunc** %shf.addr, align 4
  store i8* %fdir, i8** %fdir.addr, align 4
  %0 = load %struct.shfunc*, %struct.shfunc** %shf.addr, align 4
  %node = getelementptr inbounds %struct.shfunc, %struct.shfunc* %0, i32 0, i32 0
  %flags = getelementptr inbounds %struct.hashnode, %struct.hashnode* %node, i32 0, i32 2
  %1 = load i32, i32* %flags, align 4
  %and = and i32 %1, 524288
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %lor.lhs.false, label %if.then

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.shfunc*, %struct.shfunc** %shf.addr, align 4
  %filename = getelementptr inbounds %struct.shfunc, %struct.shfunc* %2, i32 0, i32 1
  %3 = load i8*, i8** %filename, align 4
  %4 = load i8*, i8** %fdir.addr, align 4
  %call = call i32 @strcmp(i8* %3, i8* %4)
  %cmp = icmp ne i32 %call, 0
  br i1 %cmp, label %if.then, label %if.end13

if.then:                                          ; preds = %lor.lhs.false, %entry
  %5 = load %struct.shfunc*, %struct.shfunc** %shf.addr, align 4
  %filename1 = getelementptr inbounds %struct.shfunc, %struct.shfunc* %5, i32 0, i32 1
  call void @dircache_set(i8** %filename1, i8* null)
  %6 = load i8*, i8** %fdir.addr, align 4
  %tobool2 = icmp ne i8* %6, null
  br i1 %tobool2, label %if.then3, label %if.else

if.then3:                                         ; preds = %if.then
  %7 = load %struct.shfunc*, %struct.shfunc** %shf.addr, align 4
  %node4 = getelementptr inbounds %struct.shfunc, %struct.shfunc* %7, i32 0, i32 0
  %flags5 = getelementptr inbounds %struct.hashnode, %struct.hashnode* %node4, i32 0, i32 2
  %8 = load i32, i32* %flags5, align 4
  %or = or i32 %8, 524288
  store i32 %or, i32* %flags5, align 4
  %9 = load %struct.shfunc*, %struct.shfunc** %shf.addr, align 4
  %filename6 = getelementptr inbounds %struct.shfunc, %struct.shfunc* %9, i32 0, i32 1
  %10 = load i8*, i8** %fdir.addr, align 4
  call void @dircache_set(i8** %filename6, i8* %10)
  br label %if.end

if.else:                                          ; preds = %if.then
  %11 = load %struct.shfunc*, %struct.shfunc** %shf.addr, align 4
  %node7 = getelementptr inbounds %struct.shfunc, %struct.shfunc* %11, i32 0, i32 0
  %flags8 = getelementptr inbounds %struct.hashnode, %struct.hashnode* %node7, i32 0, i32 2
  %12 = load i32, i32* %flags8, align 4
  %and9 = and i32 %12, -524289
  store i32 %and9, i32* %flags8, align 4
  %13 = load %struct.shfunc*, %struct.shfunc** %shf.addr, align 4
  %node10 = getelementptr inbounds %struct.shfunc, %struct.shfunc* %13, i32 0, i32 0
  %nam = getelementptr inbounds %struct.hashnode, %struct.hashnode* %node10, i32 0, i32 1
  %14 = load i8*, i8** %nam, align 4
  %call11 = call i8* @ztrdup(i8* %14)
  %15 = load %struct.shfunc*, %struct.shfunc** %shf.addr, align 4
  %filename12 = getelementptr inbounds %struct.shfunc, %struct.shfunc* %15, i32 0, i32 1
  store i8* %call11, i8** %filename12, align 4
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then3
  br label %if.end13

if.end13:                                         ; preds = %if.end, %lor.lhs.false
  ret void
}

; Function Attrs: noinline nounwind
define %struct.eprog* @stripkshdef(%struct.eprog* %prog, i8* %name) #0 {
entry:
  %retval = alloca %struct.eprog*, align 4
  %prog.addr = alloca %struct.eprog*, align 4
  %name.addr = alloca i8*, align 4
  %pc = alloca i32*, align 4
  %code = alloca i32, align 4
  %ptr1 = alloca i8*, align 4
  %ptr2 = alloca i8*, align 4
  %ret = alloca %struct.eprog*, align 4
  %end = alloca i32*, align 4
  %sbeg = alloca i32, align 4
  %nstrs = alloca i32, align 4
  %nprg = alloca i32, align 4
  %npats = alloca i32, align 4
  %plen = alloca i32, align 4
  %len = alloca i32, align 4
  %i = alloca i32, align 4
  %pp = alloca %struct.patprog**, align 4
  store %struct.eprog* %prog, %struct.eprog** %prog.addr, align 4
  store i8* %name, i8** %name.addr, align 4
  %0 = load %struct.eprog*, %struct.eprog** %prog.addr, align 4
  %tobool = icmp ne %struct.eprog* %0, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store %struct.eprog* null, %struct.eprog** %retval, align 4
  br label %return

if.end:                                           ; preds = %entry
  %1 = load %struct.eprog*, %struct.eprog** %prog.addr, align 4
  %prog1 = getelementptr inbounds %struct.eprog, %struct.eprog* %1, i32 0, i32 5
  %2 = load i32*, i32** %prog1, align 4
  store i32* %2, i32** %pc, align 4
  %3 = load i32*, i32** %pc, align 4
  %incdec.ptr = getelementptr inbounds i32, i32* %3, i32 1
  store i32* %incdec.ptr, i32** %pc, align 4
  %4 = load i32, i32* %3, align 4
  store i32 %4, i32* %code, align 4
  %5 = load i32, i32* %code, align 4
  %and = and i32 %5, 31
  %cmp = icmp ne i32 %and, 1
  br i1 %cmp, label %if.then4, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end
  %6 = load i32, i32* %code, align 4
  %shr = lshr i32 %6, 5
  %and2 = and i32 %shr, 50
  %cmp3 = icmp ne i32 %and2, 50
  br i1 %cmp3, label %if.then4, label %if.end5

if.then4:                                         ; preds = %lor.lhs.false, %if.end
  %7 = load %struct.eprog*, %struct.eprog** %prog.addr, align 4
  store %struct.eprog* %7, %struct.eprog** %retval, align 4
  br label %return

if.end5:                                          ; preds = %lor.lhs.false
  %8 = load i32*, i32** %pc, align 4
  %incdec.ptr6 = getelementptr inbounds i32, i32* %8, i32 1
  store i32* %incdec.ptr6, i32** %pc, align 4
  %9 = load i32*, i32** %pc, align 4
  %incdec.ptr7 = getelementptr inbounds i32, i32* %9, i32 1
  store i32* %incdec.ptr7, i32** %pc, align 4
  %10 = load i32, i32* %9, align 4
  store i32 %10, i32* %code, align 4
  %11 = load i32, i32* %code, align 4
  %and8 = and i32 %11, 31
  %cmp9 = icmp ne i32 %and8, 11
  br i1 %cmp9, label %if.then12, label %lor.lhs.false10

lor.lhs.false10:                                  ; preds = %if.end5
  %12 = load i32*, i32** %pc, align 4
  %13 = load i32, i32* %12, align 4
  %cmp11 = icmp ne i32 %13, 1
  br i1 %cmp11, label %if.then12, label %if.end13

if.then12:                                        ; preds = %lor.lhs.false10, %if.end5
  %14 = load %struct.eprog*, %struct.eprog** %prog.addr, align 4
  store %struct.eprog* %14, %struct.eprog** %retval, align 4
  br label %return

if.end13:                                         ; preds = %lor.lhs.false10
  %15 = load i8*, i8** %name.addr, align 4
  store i8* %15, i8** %ptr1, align 4
  %16 = load %struct.eprog*, %struct.eprog** %prog.addr, align 4
  %17 = load i32*, i32** %pc, align 4
  %add.ptr = getelementptr inbounds i32, i32* %17, i32 1
  %call = call i8* @ecrawstr(%struct.eprog* %16, i32* %add.ptr, i32* null)
  store i8* %call, i8** %ptr2, align 4
  br label %while.cond

while.cond:                                       ; preds = %if.end37, %if.end13
  %18 = load i8*, i8** %ptr1, align 4
  %19 = load i8, i8* %18, align 1
  %conv = sext i8 %19 to i32
  %tobool14 = icmp ne i32 %conv, 0
  br i1 %tobool14, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %while.cond
  %20 = load i8*, i8** %ptr2, align 4
  %21 = load i8, i8* %20, align 1
  %conv15 = sext i8 %21 to i32
  %tobool16 = icmp ne i32 %conv15, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %22 = phi i1 [ false, %while.cond ], [ %tobool16, %land.rhs ]
  br i1 %22, label %while.body, label %while.end

while.body:                                       ; preds = %land.end
  %23 = load i8*, i8** %ptr1, align 4
  %24 = load i8, i8* %23, align 1
  %conv17 = sext i8 %24 to i32
  %25 = load i8*, i8** %ptr2, align 4
  %26 = load i8, i8* %25, align 1
  %conv18 = sext i8 %26 to i32
  %cmp19 = icmp ne i32 %conv17, %conv18
  br i1 %cmp19, label %land.lhs.true, label %if.end37

land.lhs.true:                                    ; preds = %while.body
  %27 = load i8*, i8** %ptr1, align 4
  %28 = load i8, i8* %27, align 1
  %conv21 = sext i8 %28 to i32
  %cmp22 = icmp ne i32 %conv21, -101
  br i1 %cmp22, label %land.lhs.true24, label %if.end37

land.lhs.true24:                                  ; preds = %land.lhs.true
  %29 = load i8*, i8** %ptr1, align 4
  %30 = load i8, i8* %29, align 1
  %conv25 = sext i8 %30 to i32
  %cmp26 = icmp ne i32 %conv25, 45
  br i1 %cmp26, label %land.lhs.true28, label %if.end37

land.lhs.true28:                                  ; preds = %land.lhs.true24
  %31 = load i8*, i8** %ptr2, align 4
  %32 = load i8, i8* %31, align 1
  %conv29 = sext i8 %32 to i32
  %cmp30 = icmp ne i32 %conv29, -101
  br i1 %cmp30, label %land.lhs.true32, label %if.end37

land.lhs.true32:                                  ; preds = %land.lhs.true28
  %33 = load i8*, i8** %ptr2, align 4
  %34 = load i8, i8* %33, align 1
  %conv33 = sext i8 %34 to i32
  %cmp34 = icmp ne i32 %conv33, 45
  br i1 %cmp34, label %if.then36, label %if.end37

if.then36:                                        ; preds = %land.lhs.true32
  br label %while.end

if.end37:                                         ; preds = %land.lhs.true32, %land.lhs.true28, %land.lhs.true24, %land.lhs.true, %while.body
  %35 = load i8*, i8** %ptr1, align 4
  %incdec.ptr38 = getelementptr inbounds i8, i8* %35, i32 1
  store i8* %incdec.ptr38, i8** %ptr1, align 4
  %36 = load i8*, i8** %ptr2, align 4
  %incdec.ptr39 = getelementptr inbounds i8, i8* %36, i32 1
  store i8* %incdec.ptr39, i8** %ptr2, align 4
  br label %while.cond

while.end:                                        ; preds = %if.then36, %land.end
  %37 = load i8*, i8** %ptr1, align 4
  %38 = load i8, i8* %37, align 1
  %conv40 = sext i8 %38 to i32
  %tobool41 = icmp ne i32 %conv40, 0
  br i1 %tobool41, label %if.then45, label %lor.lhs.false42

lor.lhs.false42:                                  ; preds = %while.end
  %39 = load i8*, i8** %ptr2, align 4
  %40 = load i8, i8* %39, align 1
  %conv43 = sext i8 %40 to i32
  %tobool44 = icmp ne i32 %conv43, 0
  br i1 %tobool44, label %if.then45, label %if.end46

if.then45:                                        ; preds = %lor.lhs.false42, %while.end
  %41 = load %struct.eprog*, %struct.eprog** %prog.addr, align 4
  store %struct.eprog* %41, %struct.eprog** %retval, align 4
  br label %return

if.end46:                                         ; preds = %lor.lhs.false42
  %42 = load i32*, i32** %pc, align 4
  %43 = load i32, i32* %code, align 4
  %shr47 = lshr i32 %43, 5
  %add.ptr48 = getelementptr inbounds i32, i32* %42, i32 %shr47
  store i32* %add.ptr48, i32** %end, align 4
  %44 = load i32*, i32** %pc, align 4
  %arrayidx = getelementptr inbounds i32, i32* %44, i32 2
  %45 = load i32, i32* %arrayidx, align 4
  store i32 %45, i32* %sbeg, align 4
  %46 = load i32*, i32** %pc, align 4
  %arrayidx49 = getelementptr inbounds i32, i32* %46, i32 3
  %47 = load i32, i32* %arrayidx49, align 4
  store i32 %47, i32* %nstrs, align 4
  %48 = load i32*, i32** %pc, align 4
  %arrayidx50 = getelementptr inbounds i32, i32* %48, i32 4
  %49 = load i32, i32* %arrayidx50, align 4
  store i32 %49, i32* %npats, align 4
  %50 = load i32*, i32** %pc, align 4
  %add.ptr51 = getelementptr inbounds i32, i32* %50, i32 5
  store i32* %add.ptr51, i32** %pc, align 4
  %51 = load i32*, i32** %end, align 4
  %52 = load i32*, i32** %pc, align 4
  %sub.ptr.lhs.cast = ptrtoint i32* %51 to i32
  %sub.ptr.rhs.cast = ptrtoint i32* %52 to i32
  %sub.ptr.sub = sub i32 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i32 %sub.ptr.sub, 4
  store i32 %sub.ptr.div, i32* %nprg, align 4
  %53 = load i32, i32* %nprg, align 4
  %mul = mul i32 %53, 4
  store i32 %mul, i32* %plen, align 4
  %54 = load i32, i32* %plen, align 4
  %55 = load i32, i32* %npats, align 4
  %mul52 = mul i32 %55, 4
  %add = add i32 %54, %mul52
  %56 = load i32, i32* %nstrs, align 4
  %add53 = add i32 %add, %56
  store i32 %add53, i32* %len, align 4
  %57 = load %struct.eprog*, %struct.eprog** %prog.addr, align 4
  %flags = getelementptr inbounds %struct.eprog, %struct.eprog* %57, i32 0, i32 0
  %58 = load i32, i32* %flags, align 4
  %and54 = and i32 %58, 4
  %tobool55 = icmp ne i32 %and54, 0
  br i1 %tobool55, label %if.then56, label %if.else

if.then56:                                        ; preds = %if.end46
  %59 = load %struct.eprog*, %struct.eprog** %prog.addr, align 4
  store %struct.eprog* %59, %struct.eprog** %ret, align 4
  %60 = load %struct.eprog*, %struct.eprog** %prog.addr, align 4
  %pats = getelementptr inbounds %struct.eprog, %struct.eprog* %60, i32 0, i32 4
  %61 = load %struct.patprog**, %struct.patprog*** %pats, align 4
  %62 = bitcast %struct.patprog** %61 to i8*
  call void @free(i8* %62)
  %63 = load i32, i32* %npats, align 4
  %mul57 = mul i32 %63, 4
  %call58 = call i8* @zalloc(i32 %mul57)
  %64 = bitcast i8* %call58 to %struct.patprog**
  store %struct.patprog** %64, %struct.patprog*** %pp, align 4
  %65 = load %struct.eprog*, %struct.eprog** %ret, align 4
  %pats59 = getelementptr inbounds %struct.eprog, %struct.eprog* %65, i32 0, i32 4
  store %struct.patprog** %64, %struct.patprog*** %pats59, align 4
  %66 = load i32*, i32** %pc, align 4
  %67 = load %struct.eprog*, %struct.eprog** %ret, align 4
  %prog60 = getelementptr inbounds %struct.eprog, %struct.eprog* %67, i32 0, i32 5
  store i32* %66, i32** %prog60, align 4
  %68 = load %struct.eprog*, %struct.eprog** %prog.addr, align 4
  %strs = getelementptr inbounds %struct.eprog, %struct.eprog* %68, i32 0, i32 6
  %69 = load i8*, i8** %strs, align 4
  %70 = load i32, i32* %sbeg, align 4
  %add.ptr61 = getelementptr inbounds i8, i8* %69, i32 %70
  %71 = load %struct.eprog*, %struct.eprog** %ret, align 4
  %strs62 = getelementptr inbounds %struct.eprog, %struct.eprog* %71, i32 0, i32 6
  store i8* %add.ptr61, i8** %strs62, align 4
  br label %if.end77

if.else:                                          ; preds = %if.end46
  %call63 = call i8* @zhalloc(i32 36)
  %72 = bitcast i8* %call63 to %struct.eprog*
  store %struct.eprog* %72, %struct.eprog** %ret, align 4
  %73 = load %struct.eprog*, %struct.eprog** %ret, align 4
  %flags64 = getelementptr inbounds %struct.eprog, %struct.eprog* %73, i32 0, i32 0
  store i32 2, i32* %flags64, align 4
  %74 = load i32, i32* %len, align 4
  %call65 = call i8* @zhalloc(i32 %74)
  %75 = bitcast i8* %call65 to %struct.patprog**
  store %struct.patprog** %75, %struct.patprog*** %pp, align 4
  %76 = load %struct.eprog*, %struct.eprog** %ret, align 4
  %pats66 = getelementptr inbounds %struct.eprog, %struct.eprog* %76, i32 0, i32 4
  store %struct.patprog** %75, %struct.patprog*** %pats66, align 4
  %77 = load %struct.eprog*, %struct.eprog** %ret, align 4
  %pats67 = getelementptr inbounds %struct.eprog, %struct.eprog* %77, i32 0, i32 4
  %78 = load %struct.patprog**, %struct.patprog*** %pats67, align 4
  %79 = load i32, i32* %npats, align 4
  %add.ptr68 = getelementptr inbounds %struct.patprog*, %struct.patprog** %78, i32 %79
  %80 = bitcast %struct.patprog** %add.ptr68 to i32*
  %81 = load %struct.eprog*, %struct.eprog** %ret, align 4
  %prog69 = getelementptr inbounds %struct.eprog, %struct.eprog* %81, i32 0, i32 5
  store i32* %80, i32** %prog69, align 4
  %82 = load %struct.eprog*, %struct.eprog** %ret, align 4
  %prog70 = getelementptr inbounds %struct.eprog, %struct.eprog* %82, i32 0, i32 5
  %83 = load i32*, i32** %prog70, align 4
  %84 = load i32, i32* %nprg, align 4
  %add.ptr71 = getelementptr inbounds i32, i32* %83, i32 %84
  %85 = bitcast i32* %add.ptr71 to i8*
  %86 = load %struct.eprog*, %struct.eprog** %ret, align 4
  %strs72 = getelementptr inbounds %struct.eprog, %struct.eprog* %86, i32 0, i32 6
  store i8* %85, i8** %strs72, align 4
  %87 = load %struct.eprog*, %struct.eprog** %ret, align 4
  %prog73 = getelementptr inbounds %struct.eprog, %struct.eprog* %87, i32 0, i32 5
  %88 = load i32*, i32** %prog73, align 4
  %89 = bitcast i32* %88 to i8*
  %90 = load i32*, i32** %pc, align 4
  %91 = bitcast i32* %90 to i8*
  %92 = load i32, i32* %plen, align 4
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %89, i8* %91, i32 %92, i32 4, i1 false)
  %93 = load %struct.eprog*, %struct.eprog** %ret, align 4
  %strs74 = getelementptr inbounds %struct.eprog, %struct.eprog* %93, i32 0, i32 6
  %94 = load i8*, i8** %strs74, align 4
  %95 = load %struct.eprog*, %struct.eprog** %prog.addr, align 4
  %strs75 = getelementptr inbounds %struct.eprog, %struct.eprog* %95, i32 0, i32 6
  %96 = load i8*, i8** %strs75, align 4
  %97 = load i32, i32* %sbeg, align 4
  %add.ptr76 = getelementptr inbounds i8, i8* %96, i32 %97
  %98 = load i32, i32* %nstrs, align 4
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %94, i8* %add.ptr76, i32 %98, i32 1, i1 false)
  %99 = load %struct.eprog*, %struct.eprog** %ret, align 4
  %dump = getelementptr inbounds %struct.eprog, %struct.eprog* %99, i32 0, i32 8
  store %struct.funcdump* null, %struct.funcdump** %dump, align 4
  br label %if.end77

if.end77:                                         ; preds = %if.else, %if.then56
  %100 = load i32, i32* %len, align 4
  %101 = load %struct.eprog*, %struct.eprog** %ret, align 4
  %len78 = getelementptr inbounds %struct.eprog, %struct.eprog* %101, i32 0, i32 1
  store i32 %100, i32* %len78, align 4
  %102 = load i32, i32* %npats, align 4
  %103 = load %struct.eprog*, %struct.eprog** %ret, align 4
  %npats79 = getelementptr inbounds %struct.eprog, %struct.eprog* %103, i32 0, i32 2
  store i32 %102, i32* %npats79, align 4
  %104 = load i32, i32* %npats, align 4
  store i32 %104, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end77
  %105 = load i32, i32* %i, align 4
  %dec = add nsw i32 %105, -1
  store i32 %dec, i32* %i, align 4
  %tobool80 = icmp ne i32 %105, 0
  br i1 %tobool80, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %106 = load %struct.patprog**, %struct.patprog*** %pp, align 4
  store %struct.patprog* inttoptr (i32 1 to %struct.patprog*), %struct.patprog** %106, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %107 = load %struct.patprog**, %struct.patprog*** %pp, align 4
  %incdec.ptr81 = getelementptr inbounds %struct.patprog*, %struct.patprog** %107, i32 1
  store %struct.patprog** %incdec.ptr81, %struct.patprog*** %pp, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %108 = load %struct.eprog*, %struct.eprog** %ret, align 4
  %shf = getelementptr inbounds %struct.eprog, %struct.eprog* %108, i32 0, i32 7
  store %struct.shfunc* null, %struct.shfunc** %shf, align 4
  %109 = load %struct.eprog*, %struct.eprog** %ret, align 4
  store %struct.eprog* %109, %struct.eprog** %retval, align 4
  br label %return

return:                                           ; preds = %for.end, %if.then45, %if.then12, %if.then4, %if.then
  %110 = load %struct.eprog*, %struct.eprog** %retval, align 4
  ret %struct.eprog* %110
}

; Function Attrs: noinline nounwind
define i32 @sticky_emulation_differs(%struct.emulation_options* %sticky2) #0 {
entry:
  %retval = alloca i32, align 4
  %sticky2.addr = alloca %struct.emulation_options*, align 4
  store %struct.emulation_options* %sticky2, %struct.emulation_options** %sticky2.addr, align 4
  %0 = load %struct.emulation_options*, %struct.emulation_options** %sticky2.addr, align 4
  %tobool = icmp ne %struct.emulation_options* %0, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4
  br label %return

if.end:                                           ; preds = %entry
  %1 = load %struct.emulation_options*, %struct.emulation_options** @sticky, align 4
  %tobool1 = icmp ne %struct.emulation_options* %1, null
  br i1 %tobool1, label %if.end3, label %if.then2

if.then2:                                         ; preds = %if.end
  store i32 1, i32* %retval, align 4
  br label %return

if.end3:                                          ; preds = %if.end
  %2 = load %struct.emulation_options*, %struct.emulation_options** @sticky, align 4
  %emulation = getelementptr inbounds %struct.emulation_options, %struct.emulation_options* %2, i32 0, i32 0
  %3 = load i32, i32* %emulation, align 4
  %4 = load %struct.emulation_options*, %struct.emulation_options** %sticky2.addr, align 4
  %emulation4 = getelementptr inbounds %struct.emulation_options, %struct.emulation_options* %4, i32 0, i32 0
  %5 = load i32, i32* %emulation4, align 4
  %cmp = icmp ne i32 %3, %5
  br i1 %cmp, label %if.then5, label %if.end6

if.then5:                                         ; preds = %if.end3
  store i32 1, i32* %retval, align 4
  br label %return

if.end6:                                          ; preds = %if.end3
  %6 = load %struct.emulation_options*, %struct.emulation_options** @sticky, align 4
  %n_on_opts = getelementptr inbounds %struct.emulation_options, %struct.emulation_options* %6, i32 0, i32 1
  %7 = load i32, i32* %n_on_opts, align 4
  %8 = load %struct.emulation_options*, %struct.emulation_options** %sticky2.addr, align 4
  %n_on_opts7 = getelementptr inbounds %struct.emulation_options, %struct.emulation_options* %8, i32 0, i32 1
  %9 = load i32, i32* %n_on_opts7, align 4
  %cmp8 = icmp ne i32 %7, %9
  br i1 %cmp8, label %if.then11, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end6
  %10 = load %struct.emulation_options*, %struct.emulation_options** @sticky, align 4
  %n_off_opts = getelementptr inbounds %struct.emulation_options, %struct.emulation_options* %10, i32 0, i32 2
  %11 = load i32, i32* %n_off_opts, align 4
  %12 = load %struct.emulation_options*, %struct.emulation_options** %sticky2.addr, align 4
  %n_off_opts9 = getelementptr inbounds %struct.emulation_options, %struct.emulation_options* %12, i32 0, i32 2
  %13 = load i32, i32* %n_off_opts9, align 4
  %cmp10 = icmp ne i32 %11, %13
  br i1 %cmp10, label %if.then11, label %if.end12

if.then11:                                        ; preds = %lor.lhs.false, %if.end6
  store i32 1, i32* %retval, align 4
  br label %return

if.end12:                                         ; preds = %lor.lhs.false
  %14 = load %struct.emulation_options*, %struct.emulation_options** @sticky, align 4
  %n_on_opts13 = getelementptr inbounds %struct.emulation_options, %struct.emulation_options* %14, i32 0, i32 1
  %15 = load i32, i32* %n_on_opts13, align 4
  %tobool14 = icmp ne i32 %15, 0
  br i1 %tobool14, label %land.lhs.true, label %if.end19

land.lhs.true:                                    ; preds = %if.end12
  %16 = load %struct.emulation_options*, %struct.emulation_options** @sticky, align 4
  %on_opts = getelementptr inbounds %struct.emulation_options, %struct.emulation_options* %16, i32 0, i32 3
  %17 = load i8*, i8** %on_opts, align 4
  %18 = load %struct.emulation_options*, %struct.emulation_options** %sticky2.addr, align 4
  %on_opts15 = getelementptr inbounds %struct.emulation_options, %struct.emulation_options* %18, i32 0, i32 3
  %19 = load i8*, i8** %on_opts15, align 4
  %20 = load %struct.emulation_options*, %struct.emulation_options** @sticky, align 4
  %n_on_opts16 = getelementptr inbounds %struct.emulation_options, %struct.emulation_options* %20, i32 0, i32 1
  %21 = load i32, i32* %n_on_opts16, align 4
  %mul = mul i32 %21, 1
  %call = call i32 @memcmp(i8* %17, i8* %19, i32 %mul)
  %cmp17 = icmp ne i32 %call, 0
  br i1 %cmp17, label %if.then18, label %if.end19

if.then18:                                        ; preds = %land.lhs.true
  store i32 1, i32* %retval, align 4
  br label %return

if.end19:                                         ; preds = %land.lhs.true, %if.end12
  %22 = load %struct.emulation_options*, %struct.emulation_options** @sticky, align 4
  %n_off_opts20 = getelementptr inbounds %struct.emulation_options, %struct.emulation_options* %22, i32 0, i32 2
  %23 = load i32, i32* %n_off_opts20, align 4
  %tobool21 = icmp ne i32 %23, 0
  br i1 %tobool21, label %land.lhs.true22, label %if.end29

land.lhs.true22:                                  ; preds = %if.end19
  %24 = load %struct.emulation_options*, %struct.emulation_options** @sticky, align 4
  %off_opts = getelementptr inbounds %struct.emulation_options, %struct.emulation_options* %24, i32 0, i32 4
  %25 = load i8*, i8** %off_opts, align 4
  %26 = load %struct.emulation_options*, %struct.emulation_options** %sticky2.addr, align 4
  %off_opts23 = getelementptr inbounds %struct.emulation_options, %struct.emulation_options* %26, i32 0, i32 4
  %27 = load i8*, i8** %off_opts23, align 4
  %28 = load %struct.emulation_options*, %struct.emulation_options** @sticky, align 4
  %n_off_opts24 = getelementptr inbounds %struct.emulation_options, %struct.emulation_options* %28, i32 0, i32 2
  %29 = load i32, i32* %n_off_opts24, align 4
  %mul25 = mul i32 %29, 1
  %call26 = call i32 @memcmp(i8* %25, i8* %27, i32 %mul25)
  %cmp27 = icmp ne i32 %call26, 0
  br i1 %cmp27, label %if.then28, label %if.end29

if.then28:                                        ; preds = %land.lhs.true22
  store i32 1, i32* %retval, align 4
  br label %return

if.end29:                                         ; preds = %land.lhs.true22, %if.end19
  store i32 0, i32* %retval, align 4
  br label %return

return:                                           ; preds = %if.end29, %if.then28, %if.then18, %if.then11, %if.then5, %if.then2, %if.then
  %30 = load i32, i32* %retval, align 4
  ret i32 %30
}

declare i32 @memcmp(i8*, i8*, i32) #1

; Function Attrs: noinline nounwind
define i32 @doshfunc(%struct.shfunc* %shfunc, %union.linkroot* %doshargs, i32 %noreturnval) #0 {
entry:
  %shfunc.addr = alloca %struct.shfunc*, align 4
  %doshargs.addr = alloca %union.linkroot*, align 4
  %noreturnval.addr = alloca i32, align 4
  %pptab = alloca i8**, align 4
  %x = alloca i8**, align 4
  %ret = alloca i32, align 4
  %name = alloca i8*, align 4
  %flags = alloca i32, align 4
  %fname = alloca i8*, align 4
  %prog = alloca %struct.eprog*, align 4
  %funcheap = alloca %struct.heap*, align 4
  %_switch_oldheaps = alloca %struct.heap*, align 4
  %funcsave = alloca %struct.funcsave*, align 4
  %bytes = alloca i32, align 4
  %onptr = alloca i8*, align 4
  %offptr = alloca i8*, align 4
  %node81 = alloca %struct.linknode*, align 4
  %shf = alloca %struct.shfunc*, align 4
  %oset = alloca %struct.__sigset_t, align 4
  %tmp = alloca %struct.__sigset_t, align 4
  %tmp237 = alloca %struct.__sigset_t, align 4
  store %struct.shfunc* %shfunc, %struct.shfunc** %shfunc.addr, align 4
  store %union.linkroot* %doshargs, %union.linkroot** %doshargs.addr, align 4
  store i32 %noreturnval, i32* %noreturnval.addr, align 4
  %0 = load %struct.shfunc*, %struct.shfunc** %shfunc.addr, align 4
  %node = getelementptr inbounds %struct.shfunc, %struct.shfunc* %0, i32 0, i32 0
  %nam = getelementptr inbounds %struct.hashnode, %struct.hashnode* %node, i32 0, i32 1
  %1 = load i8*, i8** %nam, align 4
  store i8* %1, i8** %name, align 4
  %2 = load %struct.shfunc*, %struct.shfunc** %shfunc.addr, align 4
  %node1 = getelementptr inbounds %struct.shfunc, %struct.shfunc* %2, i32 0, i32 0
  %flags2 = getelementptr inbounds %struct.hashnode, %struct.hashnode* %node1, i32 0, i32 2
  %3 = load i32, i32* %flags2, align 4
  store i32 %3, i32* %flags, align 4
  %4 = load i8*, i8** %name, align 4
  %call = call i8* @dupstring(i8* %4)
  store i8* %call, i8** %fname, align 4
  %5 = load i32, i32* @queueing_enabled, align 4
  %inc = add nsw i32 %5, 1
  store i32 %inc, i32* @queueing_enabled, align 4
  br label %do.body

do.body:                                          ; preds = %entry
  %call3 = call %struct.heap* @new_heaps()
  store %struct.heap* %call3, %struct.heap** %funcheap, align 4
  store %struct.heap* %call3, %struct.heap** %_switch_oldheaps, align 4
  br label %do.body4

do.body4:                                         ; preds = %do.body
  %call5 = call i8* @zhalloc(i32 272)
  %6 = bitcast i8* %call5 to %struct.funcsave*
  store %struct.funcsave* %6, %struct.funcsave** %funcsave, align 4
  %7 = load i8*, i8** @scriptname, align 4
  %8 = load %struct.funcsave*, %struct.funcsave** %funcsave, align 4
  %scriptname = getelementptr inbounds %struct.funcsave, %struct.funcsave* %8, i32 0, i32 7
  store i8* %7, i8** %scriptname, align 4
  %9 = load %struct.funcsave*, %struct.funcsave** %funcsave, align 4
  %argv0 = getelementptr inbounds %struct.funcsave, %struct.funcsave* %9, i32 0, i32 1
  store i8* null, i8** %argv0, align 4
  %10 = load i32, i32* @breaks, align 4
  %11 = load %struct.funcsave*, %struct.funcsave** %funcsave, align 4
  %breaks = getelementptr inbounds %struct.funcsave, %struct.funcsave* %11, i32 0, i32 8
  store i32 %10, i32* %breaks, align 4
  %12 = load i32, i32* @contflag, align 4
  %13 = load %struct.funcsave*, %struct.funcsave** %funcsave, align 4
  %contflag = getelementptr inbounds %struct.funcsave, %struct.funcsave* %13, i32 0, i32 9
  store i32 %12, i32* %contflag, align 4
  %14 = load i32, i32* @loops, align 4
  %15 = load %struct.funcsave*, %struct.funcsave** %funcsave, align 4
  %loops = getelementptr inbounds %struct.funcsave, %struct.funcsave* %15, i32 0, i32 10
  store i32 %14, i32* %loops, align 4
  %16 = load i32, i32* @lastval, align 4
  %17 = load %struct.funcsave*, %struct.funcsave** %funcsave, align 4
  %lastval = getelementptr inbounds %struct.funcsave, %struct.funcsave* %17, i32 0, i32 3
  store i32 %16, i32* %lastval, align 4
  %18 = load %struct.funcsave*, %struct.funcsave** %funcsave, align 4
  %pipestats = getelementptr inbounds %struct.funcsave, %struct.funcsave* %18, i32 0, i32 6
  store i32* null, i32** %pipestats, align 4
  %19 = load i32, i32* @numpipestats, align 4
  %20 = load %struct.funcsave*, %struct.funcsave** %funcsave, align 4
  %numpipestats = getelementptr inbounds %struct.funcsave, %struct.funcsave* %20, i32 0, i32 5
  store i32 %19, i32* %numpipestats, align 4
  %21 = load i32, i32* @noerrexit, align 4
  %22 = load %struct.funcsave*, %struct.funcsave** %funcsave, align 4
  %noerrexit = getelementptr inbounds %struct.funcsave, %struct.funcsave* %22, i32 0, i32 12
  store i32 %21, i32* %noerrexit, align 4
  %23 = load i32, i32* @trap_state, align 4
  %cmp = icmp eq i32 %23, 1
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %do.body4
  %24 = load i32, i32* @trap_return, align 4
  %dec = add nsw i32 %24, -1
  store i32 %dec, i32* @trap_return, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %do.body4
  %25 = load i32, i32* @noerrexit, align 4
  %and = and i32 %25, -3
  store i32 %and, i32* @noerrexit, align 4
  %26 = load i32, i32* %noreturnval.addr, align 4
  %tobool = icmp ne i32 %26, 0
  br i1 %tobool, label %if.then6, label %if.end10

if.then6:                                         ; preds = %if.end
  %27 = load i32, i32* @numpipestats, align 4
  %mul = mul i32 4, %27
  store i32 %mul, i32* %bytes, align 4
  %28 = load i32, i32* %bytes, align 4
  %call7 = call i8* @zhalloc(i32 %28)
  %29 = bitcast i8* %call7 to i32*
  %30 = load %struct.funcsave*, %struct.funcsave** %funcsave, align 4
  %pipestats8 = getelementptr inbounds %struct.funcsave, %struct.funcsave* %30, i32 0, i32 6
  store i32* %29, i32** %pipestats8, align 4
  %31 = load %struct.funcsave*, %struct.funcsave** %funcsave, align 4
  %pipestats9 = getelementptr inbounds %struct.funcsave, %struct.funcsave* %31, i32 0, i32 6
  %32 = load i32*, i32** %pipestats9, align 4
  %33 = bitcast i32* %32 to i8*
  %34 = load i32, i32* %bytes, align 4
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %33, i8* bitcast ([256 x i32]* @pipestats to i8*), i32 %34, i32 4, i1 false)
  br label %if.end10

if.end10:                                         ; preds = %if.then6, %if.end
  call void @starttrapscope()
  call void @startpatternscope()
  %35 = load i8**, i8*** @pparams, align 4
  store i8** %35, i8*** %pptab, align 4
  %36 = load i32, i32* %flags, align 4
  %and11 = and i32 %36, 512
  %tobool12 = icmp ne i32 %and11, 0
  br i1 %tobool12, label %if.end15, label %if.then13

if.then13:                                        ; preds = %if.end10
  %37 = load i8*, i8** %name, align 4
  %call14 = call i8* @dupstring(i8* %37)
  store i8* %call14, i8** @scriptname, align 4
  br label %if.end15

if.end15:                                         ; preds = %if.then13, %if.end10
  %38 = load i32, i32* @zoptind, align 4
  %39 = load %struct.funcsave*, %struct.funcsave** %funcsave, align 4
  %zoptind = getelementptr inbounds %struct.funcsave, %struct.funcsave* %39, i32 0, i32 2
  store i32 %38, i32* %zoptind, align 4
  %40 = load i32, i32* @optcind, align 4
  %41 = load %struct.funcsave*, %struct.funcsave** %funcsave, align 4
  %optcind = getelementptr inbounds %struct.funcsave, %struct.funcsave* %41, i32 0, i32 4
  store i32 %40, i32* %optcind, align 4
  %42 = load i8, i8* getelementptr inbounds ([181 x i8], [181 x i8]* @opts, i32 0, i32 132), align 1
  %tobool16 = icmp ne i8 %42, 0
  br i1 %tobool16, label %if.end18, label %if.then17

if.then17:                                        ; preds = %if.end15
  store i32 1, i32* @zoptind, align 4
  store i32 0, i32* @optcind, align 4
  br label %if.end18

if.end18:                                         ; preds = %if.then17, %if.end15
  %43 = load %struct.funcsave*, %struct.funcsave** %funcsave, align 4
  %opts = getelementptr inbounds %struct.funcsave, %struct.funcsave* %43, i32 0, i32 0
  %arraydecay = getelementptr inbounds [181 x i8], [181 x i8]* %opts, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %arraydecay, i8* getelementptr inbounds ([181 x i8], [181 x i8]* @opts, i32 0, i32 0), i32 181, i32 1, i1 false)
  %44 = load i32, i32* @emulation, align 4
  %45 = load %struct.funcsave*, %struct.funcsave** %funcsave, align 4
  %emulation = getelementptr inbounds %struct.funcsave, %struct.funcsave* %45, i32 0, i32 11
  store i32 %44, i32* %emulation, align 4
  %46 = load %struct.emulation_options*, %struct.emulation_options** @sticky, align 4
  %47 = load %struct.funcsave*, %struct.funcsave** %funcsave, align 4
  %sticky = getelementptr inbounds %struct.funcsave, %struct.funcsave* %47, i32 0, i32 15
  store %struct.emulation_options* %46, %struct.emulation_options** %sticky, align 4
  %48 = load %struct.shfunc*, %struct.shfunc** %shfunc.addr, align 4
  %sticky19 = getelementptr inbounds %struct.shfunc, %struct.shfunc* %48, i32 0, i32 5
  %49 = load %struct.emulation_options*, %struct.emulation_options** %sticky19, align 4
  %call20 = call i32 @sticky_emulation_differs(%struct.emulation_options* %49)
  %tobool21 = icmp ne i32 %call20, 0
  br i1 %tobool21, label %if.then22, label %if.else

if.then22:                                        ; preds = %if.end18
  %50 = load %struct.shfunc*, %struct.shfunc** %shfunc.addr, align 4
  %sticky23 = getelementptr inbounds %struct.shfunc, %struct.shfunc* %50, i32 0, i32 5
  %51 = load %struct.emulation_options*, %struct.emulation_options** %sticky23, align 4
  %call24 = call %struct.emulation_options* @sticky_emulation_dup(%struct.emulation_options* %51, i32 1)
  store %struct.emulation_options* %call24, %struct.emulation_options** @sticky, align 4
  %52 = load %struct.emulation_options*, %struct.emulation_options** @sticky, align 4
  %emulation25 = getelementptr inbounds %struct.emulation_options, %struct.emulation_options* %52, i32 0, i32 0
  %53 = load i32, i32* %emulation25, align 4
  store i32 %53, i32* @emulation, align 4
  %54 = load %struct.funcsave*, %struct.funcsave** %funcsave, align 4
  %restore_sticky = getelementptr inbounds %struct.funcsave, %struct.funcsave* %54, i32 0, i32 14
  store i32 1, i32* %restore_sticky, align 4
  %55 = load i32, i32* @emulation, align 4
  call void @installemulation(i32 %55, i8* getelementptr inbounds ([181 x i8], [181 x i8]* @opts, i32 0, i32 0))
  %56 = load %struct.emulation_options*, %struct.emulation_options** @sticky, align 4
  %n_on_opts = getelementptr inbounds %struct.emulation_options, %struct.emulation_options* %56, i32 0, i32 1
  %57 = load i32, i32* %n_on_opts, align 4
  %tobool26 = icmp ne i32 %57, 0
  br i1 %tobool26, label %if.then27, label %if.end31

if.then27:                                        ; preds = %if.then22
  %58 = load %struct.emulation_options*, %struct.emulation_options** @sticky, align 4
  %on_opts = getelementptr inbounds %struct.emulation_options, %struct.emulation_options* %58, i32 0, i32 3
  %59 = load i8*, i8** %on_opts, align 4
  store i8* %59, i8** %onptr, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then27
  %60 = load i8*, i8** %onptr, align 4
  %61 = load %struct.emulation_options*, %struct.emulation_options** @sticky, align 4
  %on_opts28 = getelementptr inbounds %struct.emulation_options, %struct.emulation_options* %61, i32 0, i32 3
  %62 = load i8*, i8** %on_opts28, align 4
  %63 = load %struct.emulation_options*, %struct.emulation_options** @sticky, align 4
  %n_on_opts29 = getelementptr inbounds %struct.emulation_options, %struct.emulation_options* %63, i32 0, i32 1
  %64 = load i32, i32* %n_on_opts29, align 4
  %add.ptr = getelementptr inbounds i8, i8* %62, i32 %64
  %cmp30 = icmp ult i8* %60, %add.ptr
  br i1 %cmp30, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %65 = load i8*, i8** %onptr, align 4
  %66 = load i8, i8* %65, align 1
  %idxprom = zext i8 %66 to i32
  %arrayidx = getelementptr inbounds [181 x i8], [181 x i8]* @opts, i32 0, i32 %idxprom
  store i8 1, i8* %arrayidx, align 1
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %67 = load i8*, i8** %onptr, align 4
  %incdec.ptr = getelementptr inbounds i8, i8* %67, i32 1
  store i8* %incdec.ptr, i8** %onptr, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  br label %if.end31

if.end31:                                         ; preds = %for.end, %if.then22
  %68 = load %struct.emulation_options*, %struct.emulation_options** @sticky, align 4
  %n_off_opts = getelementptr inbounds %struct.emulation_options, %struct.emulation_options* %68, i32 0, i32 2
  %69 = load i32, i32* %n_off_opts, align 4
  %tobool32 = icmp ne i32 %69, 0
  br i1 %tobool32, label %if.then33, label %if.end45

if.then33:                                        ; preds = %if.end31
  %70 = load %struct.emulation_options*, %struct.emulation_options** @sticky, align 4
  %off_opts = getelementptr inbounds %struct.emulation_options, %struct.emulation_options* %70, i32 0, i32 4
  %71 = load i8*, i8** %off_opts, align 4
  store i8* %71, i8** %offptr, align 4
  br label %for.cond34

for.cond34:                                       ; preds = %for.inc42, %if.then33
  %72 = load i8*, i8** %offptr, align 4
  %73 = load %struct.emulation_options*, %struct.emulation_options** @sticky, align 4
  %off_opts35 = getelementptr inbounds %struct.emulation_options, %struct.emulation_options* %73, i32 0, i32 4
  %74 = load i8*, i8** %off_opts35, align 4
  %75 = load %struct.emulation_options*, %struct.emulation_options** @sticky, align 4
  %n_off_opts36 = getelementptr inbounds %struct.emulation_options, %struct.emulation_options* %75, i32 0, i32 2
  %76 = load i32, i32* %n_off_opts36, align 4
  %add.ptr37 = getelementptr inbounds i8, i8* %74, i32 %76
  %cmp38 = icmp ult i8* %72, %add.ptr37
  br i1 %cmp38, label %for.body39, label %for.end44

for.body39:                                       ; preds = %for.cond34
  %77 = load i8*, i8** %offptr, align 4
  %78 = load i8, i8* %77, align 1
  %idxprom40 = zext i8 %78 to i32
  %arrayidx41 = getelementptr inbounds [181 x i8], [181 x i8]* @opts, i32 0, i32 %idxprom40
  store i8 0, i8* %arrayidx41, align 1
  br label %for.inc42

for.inc42:                                        ; preds = %for.body39
  %79 = load i8*, i8** %offptr, align 4
  %incdec.ptr43 = getelementptr inbounds i8, i8* %79, i32 1
  store i8* %incdec.ptr43, i8** %offptr, align 4
  br label %for.cond34

for.end44:                                        ; preds = %for.cond34
  br label %if.end45

if.end45:                                         ; preds = %for.end44, %if.end31
  call void @clearpatterndisables()
  br label %if.end47

if.else:                                          ; preds = %if.end18
  %80 = load %struct.funcsave*, %struct.funcsave** %funcsave, align 4
  %restore_sticky46 = getelementptr inbounds %struct.funcsave, %struct.funcsave* %80, i32 0, i32 14
  store i32 0, i32* %restore_sticky46, align 4
  br label %if.end47

if.end47:                                         ; preds = %if.else, %if.end45
  %81 = load i32, i32* %flags, align 4
  %and48 = and i32 %81, 67584
  %tobool49 = icmp ne i32 %and48, 0
  br i1 %tobool49, label %if.then50, label %if.else51

if.then50:                                        ; preds = %if.end47
  store i8 1, i8* getelementptr inbounds ([181 x i8], [181 x i8]* @opts, i32 0, i32 178), align 1
  br label %if.end62

if.else51:                                        ; preds = %if.end47
  %82 = load i32, i32* @doshfunc.oflags, align 4
  %and52 = and i32 %82, 65536
  %tobool53 = icmp ne i32 %and52, 0
  br i1 %tobool53, label %if.then54, label %if.end61

if.then54:                                        ; preds = %if.else51
  %83 = load %struct.shfunc*, %struct.shfunc** %shfunc.addr, align 4
  %node55 = getelementptr inbounds %struct.shfunc, %struct.shfunc* %83, i32 0, i32 0
  %nam56 = getelementptr inbounds %struct.hashnode, %struct.hashnode* %node55, i32 0, i32 1
  %84 = load i8*, i8** %nam56, align 4
  %cmp57 = icmp eq i8* %84, getelementptr inbounds ([7 x i8], [7 x i8]* @.str.24, i32 0, i32 0)
  br i1 %cmp57, label %if.then58, label %if.else59

if.then58:                                        ; preds = %if.then54
  %85 = load i32, i32* %flags, align 4
  %or = or i32 %85, 65536
  store i32 %or, i32* %flags, align 4
  br label %if.end60

if.else59:                                        ; preds = %if.then54
  store i8 0, i8* getelementptr inbounds ([181 x i8], [181 x i8]* @opts, i32 0, i32 178), align 1
  br label %if.end60

if.end60:                                         ; preds = %if.else59, %if.then58
  br label %if.end61

if.end61:                                         ; preds = %if.end60, %if.else51
  br label %if.end62

if.end62:                                         ; preds = %if.end61, %if.then50
  %86 = load i32, i32* %flags, align 4
  %and63 = and i32 %86, 32768
  %tobool64 = icmp ne i32 %and63, 0
  br i1 %tobool64, label %if.then65, label %if.else66

if.then65:                                        ; preds = %if.end62
  store i8 1, i8* getelementptr inbounds ([181 x i8], [181 x i8]* @opts, i32 0, i32 177), align 1
  br label %if.end78

if.else66:                                        ; preds = %if.end62
  %87 = load i32, i32* @doshfunc.oflags, align 4
  %and67 = and i32 %87, 32768
  %tobool68 = icmp ne i32 %and67, 0
  br i1 %tobool68, label %if.then69, label %if.end77

if.then69:                                        ; preds = %if.else66
  %88 = load %struct.shfunc*, %struct.shfunc** %shfunc.addr, align 4
  %node70 = getelementptr inbounds %struct.shfunc, %struct.shfunc* %88, i32 0, i32 0
  %nam71 = getelementptr inbounds %struct.hashnode, %struct.hashnode* %node70, i32 0, i32 1
  %89 = load i8*, i8** %nam71, align 4
  %cmp72 = icmp eq i8* %89, getelementptr inbounds ([7 x i8], [7 x i8]* @.str.24, i32 0, i32 0)
  br i1 %cmp72, label %if.then73, label %if.else75

if.then73:                                        ; preds = %if.then69
  %90 = load i32, i32* %flags, align 4
  %or74 = or i32 %90, 32768
  store i32 %or74, i32* %flags, align 4
  br label %if.end76

if.else75:                                        ; preds = %if.then69
  store i8 0, i8* getelementptr inbounds ([181 x i8], [181 x i8]* @opts, i32 0, i32 177), align 1
  br label %if.end76

if.end76:                                         ; preds = %if.else75, %if.then73
  br label %if.end77

if.end77:                                         ; preds = %if.end76, %if.else66
  br label %if.end78

if.end78:                                         ; preds = %if.end77, %if.then65
  %91 = load i32, i32* @doshfunc.oflags, align 4
  %92 = load %struct.funcsave*, %struct.funcsave** %funcsave, align 4
  %oflags = getelementptr inbounds %struct.funcsave, %struct.funcsave* %92, i32 0, i32 13
  store i32 %91, i32* %oflags, align 4
  %93 = load i32, i32* %flags, align 4
  store i32 %93, i32* @doshfunc.oflags, align 4
  store i8 0, i8* getelementptr inbounds ([181 x i8], [181 x i8]* @opts, i32 0, i32 139), align 1
  %94 = load %union.linkroot*, %union.linkroot** %doshargs.addr, align 4
  %tobool79 = icmp ne %union.linkroot* %94, null
  br i1 %tobool79, label %if.then80, label %if.else99

if.then80:                                        ; preds = %if.end78
  %95 = load %union.linkroot*, %union.linkroot** %doshargs.addr, align 4
  %list = bitcast %union.linkroot* %95 to %struct.linklist*
  %first = getelementptr inbounds %struct.linklist, %struct.linklist* %list, i32 0, i32 0
  %96 = load %struct.linknode*, %struct.linknode** %first, align 4
  store %struct.linknode* %96, %struct.linknode** %node81, align 4
  %97 = load %union.linkroot*, %union.linkroot** %doshargs.addr, align 4
  %call82 = call i32 @countlinknodes(%union.linkroot* %97)
  %add = add nsw i32 1, %call82
  %mul83 = mul i32 4, %add
  %call84 = call i8* @zshcalloc(i32 %mul83)
  %98 = bitcast i8* %call84 to i8**
  store i8** %98, i8*** %x, align 4
  store i8** %98, i8*** @pparams, align 4
  %99 = load i8, i8* getelementptr inbounds ([181 x i8], [181 x i8]* @opts, i32 0, i32 59), align 1
  %tobool85 = icmp ne i8 %99, 0
  br i1 %tobool85, label %if.then86, label %if.end89

if.then86:                                        ; preds = %if.then80
  %100 = load i8*, i8** @argzero, align 4
  %101 = load %struct.funcsave*, %struct.funcsave** %funcsave, align 4
  %argv087 = getelementptr inbounds %struct.funcsave, %struct.funcsave* %101, i32 0, i32 1
  store i8* %100, i8** %argv087, align 4
  %102 = load %struct.linknode*, %struct.linknode** %node81, align 4
  %dat = getelementptr inbounds %struct.linknode, %struct.linknode* %102, i32 0, i32 2
  %103 = load i8*, i8** %dat, align 4
  %call88 = call i8* @ztrdup(i8* %103)
  store i8* %call88, i8** @argzero, align 4
  br label %if.end89

if.end89:                                         ; preds = %if.then86, %if.then80
  %104 = load %struct.linknode*, %struct.linknode** %node81, align 4
  %next = getelementptr inbounds %struct.linknode, %struct.linknode* %104, i32 0, i32 0
  %105 = load %struct.linknode*, %struct.linknode** %next, align 4
  store %struct.linknode* %105, %struct.linknode** %node81, align 4
  br label %for.cond90

for.cond90:                                       ; preds = %for.inc95, %if.end89
  %106 = load %struct.linknode*, %struct.linknode** %node81, align 4
  %tobool91 = icmp ne %struct.linknode* %106, null
  br i1 %tobool91, label %for.body92, label %for.end98

for.body92:                                       ; preds = %for.cond90
  %107 = load %struct.linknode*, %struct.linknode** %node81, align 4
  %dat93 = getelementptr inbounds %struct.linknode, %struct.linknode* %107, i32 0, i32 2
  %108 = load i8*, i8** %dat93, align 4
  %call94 = call i8* @ztrdup(i8* %108)
  %109 = load i8**, i8*** %x, align 4
  store i8* %call94, i8** %109, align 4
  br label %for.inc95

for.inc95:                                        ; preds = %for.body92
  %110 = load %struct.linknode*, %struct.linknode** %node81, align 4
  %next96 = getelementptr inbounds %struct.linknode, %struct.linknode* %110, i32 0, i32 0
  %111 = load %struct.linknode*, %struct.linknode** %next96, align 4
  store %struct.linknode* %111, %struct.linknode** %node81, align 4
  %112 = load i8**, i8*** %x, align 4
  %incdec.ptr97 = getelementptr inbounds i8*, i8** %112, i32 1
  store i8** %incdec.ptr97, i8*** %x, align 4
  br label %for.cond90

for.end98:                                        ; preds = %for.cond90
  br label %if.end106

if.else99:                                        ; preds = %if.end78
  %call100 = call i8* @zshcalloc(i32 4)
  %113 = bitcast i8* %call100 to i8**
  store i8** %113, i8*** @pparams, align 4
  %114 = load i8, i8* getelementptr inbounds ([181 x i8], [181 x i8]* @opts, i32 0, i32 59), align 1
  %tobool101 = icmp ne i8 %114, 0
  br i1 %tobool101, label %if.then102, label %if.end105

if.then102:                                       ; preds = %if.else99
  %115 = load i8*, i8** @argzero, align 4
  %116 = load %struct.funcsave*, %struct.funcsave** %funcsave, align 4
  %argv0103 = getelementptr inbounds %struct.funcsave, %struct.funcsave* %116, i32 0, i32 1
  store i8* %115, i8** %argv0103, align 4
  %117 = load i8*, i8** @argzero, align 4
  %call104 = call i8* @ztrdup(i8* %117)
  store i8* %call104, i8** @argzero, align 4
  br label %if.end105

if.end105:                                        ; preds = %if.then102, %if.else99
  br label %if.end106

if.end106:                                        ; preds = %if.end105, %for.end98
  %118 = load i32, i32* @doshfunc.funcdepth, align 4
  %inc107 = add nsw i32 %118, 1
  store i32 %inc107, i32* @doshfunc.funcdepth, align 4
  %119 = load i32, i32* @zsh_funcnest, align 4
  %cmp108 = icmp sge i32 %119, 0
  br i1 %cmp108, label %land.lhs.true, label %if.end111

land.lhs.true:                                    ; preds = %if.end106
  %120 = load i32, i32* @doshfunc.funcdepth, align 4
  %121 = load i32, i32* @zsh_funcnest, align 4
  %cmp109 = icmp sgt i32 %120, %121
  br i1 %cmp109, label %if.then110, label %if.end111

if.then110:                                       ; preds = %land.lhs.true
  call void (i8*, ...) @zerr(i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.25, i32 0, i32 0))
  store i32 1, i32* @lastval, align 4
  br label %undoshfunc

if.end111:                                        ; preds = %land.lhs.true, %if.end106
  %122 = load i8*, i8** %name, align 4
  %call112 = call i8* @dupstring(i8* %122)
  %123 = load %struct.funcsave*, %struct.funcsave** %funcsave, align 4
  %fstack = getelementptr inbounds %struct.funcsave, %struct.funcsave* %123, i32 0, i32 16
  %name113 = getelementptr inbounds %struct.funcstack, %struct.funcstack* %fstack, i32 0, i32 1
  store i8* %call112, i8** %name113, align 4
  %124 = load %struct.funcstack*, %struct.funcstack** @funcstack, align 4
  %tobool114 = icmp ne %struct.funcstack* %124, null
  br i1 %tobool114, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end111
  %125 = load %struct.funcstack*, %struct.funcstack** @funcstack, align 4
  %name115 = getelementptr inbounds %struct.funcstack, %struct.funcstack* %125, i32 0, i32 1
  %126 = load i8*, i8** %name115, align 4
  br label %cond.end122

cond.false:                                       ; preds = %if.end111
  %127 = load %struct.funcsave*, %struct.funcsave** %funcsave, align 4
  %argv0116 = getelementptr inbounds %struct.funcsave, %struct.funcsave* %127, i32 0, i32 1
  %128 = load i8*, i8** %argv0116, align 4
  %tobool117 = icmp ne i8* %128, null
  br i1 %tobool117, label %cond.true118, label %cond.false120

cond.true118:                                     ; preds = %cond.false
  %129 = load %struct.funcsave*, %struct.funcsave** %funcsave, align 4
  %argv0119 = getelementptr inbounds %struct.funcsave, %struct.funcsave* %129, i32 0, i32 1
  %130 = load i8*, i8** %argv0119, align 4
  br label %cond.end

cond.false120:                                    ; preds = %cond.false
  %131 = load i8*, i8** @argzero, align 4
  br label %cond.end

cond.end:                                         ; preds = %cond.false120, %cond.true118
  %cond = phi i8* [ %130, %cond.true118 ], [ %131, %cond.false120 ]
  %call121 = call i8* @dupstring(i8* %cond)
  br label %cond.end122

cond.end122:                                      ; preds = %cond.end, %cond.true
  %cond123 = phi i8* [ %126, %cond.true ], [ %call121, %cond.end ]
  %132 = load %struct.funcsave*, %struct.funcsave** %funcsave, align 4
  %fstack124 = getelementptr inbounds %struct.funcsave, %struct.funcsave* %132, i32 0, i32 16
  %caller = getelementptr inbounds %struct.funcstack, %struct.funcstack* %fstack124, i32 0, i32 3
  store i8* %cond123, i8** %caller, align 4
  %133 = load i32, i32* @lineno, align 4
  %134 = load %struct.funcsave*, %struct.funcsave** %funcsave, align 4
  %fstack125 = getelementptr inbounds %struct.funcsave, %struct.funcsave* %134, i32 0, i32 16
  %lineno = getelementptr inbounds %struct.funcstack, %struct.funcstack* %fstack125, i32 0, i32 5
  store i32 %133, i32* %lineno, align 4
  %135 = load %struct.funcstack*, %struct.funcstack** @funcstack, align 4
  %136 = load %struct.funcsave*, %struct.funcsave** %funcsave, align 4
  %fstack126 = getelementptr inbounds %struct.funcsave, %struct.funcsave* %136, i32 0, i32 16
  %prev = getelementptr inbounds %struct.funcstack, %struct.funcstack* %fstack126, i32 0, i32 0
  store %struct.funcstack* %135, %struct.funcstack** %prev, align 4
  %137 = load %struct.funcsave*, %struct.funcsave** %funcsave, align 4
  %fstack127 = getelementptr inbounds %struct.funcsave, %struct.funcsave* %137, i32 0, i32 16
  %tp = getelementptr inbounds %struct.funcstack, %struct.funcstack* %fstack127, i32 0, i32 6
  store i32 1, i32* %tp, align 4
  %138 = load %struct.funcsave*, %struct.funcsave** %funcsave, align 4
  %fstack128 = getelementptr inbounds %struct.funcsave, %struct.funcsave* %138, i32 0, i32 16
  store %struct.funcstack* %fstack128, %struct.funcstack** @funcstack, align 4
  %139 = load %struct.shfunc*, %struct.shfunc** %shfunc.addr, align 4
  %lineno129 = getelementptr inbounds %struct.shfunc, %struct.shfunc* %139, i32 0, i32 2
  %140 = load i32, i32* %lineno129, align 4
  %141 = load %struct.funcsave*, %struct.funcsave** %funcsave, align 4
  %fstack130 = getelementptr inbounds %struct.funcsave, %struct.funcsave* %141, i32 0, i32 16
  %flineno = getelementptr inbounds %struct.funcstack, %struct.funcstack* %fstack130, i32 0, i32 4
  store i32 %140, i32* %flineno, align 4
  %142 = load %struct.shfunc*, %struct.shfunc** %shfunc.addr, align 4
  %call131 = call i8* @getshfuncfile(%struct.shfunc* %142)
  %143 = load %struct.funcsave*, %struct.funcsave** %funcsave, align 4
  %fstack132 = getelementptr inbounds %struct.funcsave, %struct.funcsave* %143, i32 0, i32 16
  %filename = getelementptr inbounds %struct.funcstack, %struct.funcstack* %fstack132, i32 0, i32 2
  store i8* %call131, i8** %filename, align 4
  %144 = load %struct.shfunc*, %struct.shfunc** %shfunc.addr, align 4
  %funcdef = getelementptr inbounds %struct.shfunc, %struct.shfunc* %144, i32 0, i32 3
  %145 = load %struct.eprog*, %struct.eprog** %funcdef, align 4
  store %struct.eprog* %145, %struct.eprog** %prog, align 4
  %146 = load %struct.eprog*, %struct.eprog** %prog, align 4
  %flags133 = getelementptr inbounds %struct.eprog, %struct.eprog* %146, i32 0, i32 0
  %147 = load i32, i32* %flags133, align 4
  %and134 = and i32 %147, 8
  %tobool135 = icmp ne i32 %and134, 0
  br i1 %tobool135, label %if.then136, label %if.end151

if.then136:                                       ; preds = %cond.end122
  %148 = load %struct.eprog*, %struct.eprog** %prog, align 4
  %flags137 = getelementptr inbounds %struct.eprog, %struct.eprog* %148, i32 0, i32 0
  %149 = load i32, i32* %flags137, align 4
  %and138 = and i32 %149, -9
  store i32 %and138, i32* %flags137, align 4
  %150 = load %struct.eprog*, %struct.eprog** %prog, align 4
  %151 = load %struct.funcsave*, %struct.funcsave** %funcsave, align 4
  %fstack139 = getelementptr inbounds %struct.funcsave, %struct.funcsave* %151, i32 0, i32 16
  %name140 = getelementptr inbounds %struct.funcstack, %struct.funcstack* %fstack139, i32 0, i32 1
  %152 = load i8*, i8** %name140, align 4
  call void @runshfunc(%struct.eprog* %150, %struct.funcwrap* null, i8* %152)
  %153 = load %struct.hashtable*, %struct.hashtable** @shfunctab, align 4
  %getnode = getelementptr inbounds %struct.hashtable, %struct.hashtable* %153, i32 0, i32 9
  %154 = load %struct.hashnode* (%struct.hashtable*, i8*)*, %struct.hashnode* (%struct.hashtable*, i8*)** %getnode, align 4
  %155 = load %struct.hashtable*, %struct.hashtable** @shfunctab, align 4
  %156 = load i8*, i8** %fname, align 4
  store i8* %156, i8** %name, align 4
  %call141 = call %struct.hashnode* %154(%struct.hashtable* %155, i8* %156)
  %157 = bitcast %struct.hashnode* %call141 to %struct.shfunc*
  store %struct.shfunc* %157, %struct.shfunc** %shf, align 4
  %tobool142 = icmp ne %struct.shfunc* %157, null
  br i1 %tobool142, label %if.end149, label %if.then143

if.then143:                                       ; preds = %if.then136
  %158 = load i8*, i8** %name, align 4
  call void (i8*, ...) @zwarn(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.23, i32 0, i32 0), i8* %158)
  %159 = load i32, i32* %noreturnval.addr, align 4
  %tobool144 = icmp ne i32 %159, 0
  br i1 %tobool144, label %if.then145, label %if.else147

if.then145:                                       ; preds = %if.then143
  %160 = load i32, i32* @errflag, align 4
  %or146 = or i32 %160, 1
  store i32 %or146, i32* @errflag, align 4
  br label %if.end148

if.else147:                                       ; preds = %if.then143
  store i32 1, i32* @lastval, align 4
  br label %if.end148

if.end148:                                        ; preds = %if.else147, %if.then145
  br label %doneshfunc

if.end149:                                        ; preds = %if.then136
  %161 = load %struct.shfunc*, %struct.shfunc** %shf, align 4
  %funcdef150 = getelementptr inbounds %struct.shfunc, %struct.shfunc* %161, i32 0, i32 3
  %162 = load %struct.eprog*, %struct.eprog** %funcdef150, align 4
  store %struct.eprog* %162, %struct.eprog** %prog, align 4
  br label %if.end151

if.end151:                                        ; preds = %if.end149, %cond.end122
  %163 = load %struct.eprog*, %struct.eprog** %prog, align 4
  %164 = load %struct.funcwrap*, %struct.funcwrap** @wrappers, align 4
  %165 = load %struct.funcsave*, %struct.funcsave** %funcsave, align 4
  %fstack152 = getelementptr inbounds %struct.funcsave, %struct.funcsave* %165, i32 0, i32 16
  %name153 = getelementptr inbounds %struct.funcstack, %struct.funcstack* %fstack152, i32 0, i32 1
  %166 = load i8*, i8** %name153, align 4
  call void @runshfunc(%struct.eprog* %163, %struct.funcwrap* %164, i8* %166)
  br label %doneshfunc

doneshfunc:                                       ; preds = %if.end151, %if.end148
  %167 = load %struct.funcsave*, %struct.funcsave** %funcsave, align 4
  %fstack154 = getelementptr inbounds %struct.funcsave, %struct.funcsave* %167, i32 0, i32 16
  %prev155 = getelementptr inbounds %struct.funcstack, %struct.funcstack* %fstack154, i32 0, i32 0
  %168 = load %struct.funcstack*, %struct.funcstack** %prev155, align 4
  store %struct.funcstack* %168, %struct.funcstack** @funcstack, align 4
  br label %undoshfunc

undoshfunc:                                       ; preds = %doneshfunc, %if.then110
  %169 = load i32, i32* @doshfunc.funcdepth, align 4
  %dec156 = add nsw i32 %169, -1
  store i32 %dec156, i32* @doshfunc.funcdepth, align 4
  %170 = load i32, i32* @retflag, align 4
  %tobool157 = icmp ne i32 %170, 0
  br i1 %tobool157, label %if.then158, label %if.end160

if.then158:                                       ; preds = %undoshfunc
  store i32 0, i32* @retflag, align 4
  %171 = load %struct.funcsave*, %struct.funcsave** %funcsave, align 4
  %breaks159 = getelementptr inbounds %struct.funcsave, %struct.funcsave* %171, i32 0, i32 8
  %172 = load i32, i32* %breaks159, align 4
  store i32 %172, i32* @breaks, align 4
  br label %if.end160

if.end160:                                        ; preds = %if.then158, %undoshfunc
  %173 = load i8**, i8*** @pparams, align 4
  call void @freearray(i8** %173)
  %174 = load %struct.funcsave*, %struct.funcsave** %funcsave, align 4
  %argv0161 = getelementptr inbounds %struct.funcsave, %struct.funcsave* %174, i32 0, i32 1
  %175 = load i8*, i8** %argv0161, align 4
  %tobool162 = icmp ne i8* %175, null
  br i1 %tobool162, label %if.then163, label %if.end165

if.then163:                                       ; preds = %if.end160
  %176 = load i8*, i8** @argzero, align 4
  call void @zsfree(i8* %176)
  %177 = load %struct.funcsave*, %struct.funcsave** %funcsave, align 4
  %argv0164 = getelementptr inbounds %struct.funcsave, %struct.funcsave* %177, i32 0, i32 1
  %178 = load i8*, i8** %argv0164, align 4
  store i8* %178, i8** @argzero, align 4
  br label %if.end165

if.end165:                                        ; preds = %if.then163, %if.end160
  %179 = load i8**, i8*** %pptab, align 4
  store i8** %179, i8*** @pparams, align 4
  %180 = load i8, i8* getelementptr inbounds ([181 x i8], [181 x i8]* @opts, i32 0, i32 132), align 1
  %tobool166 = icmp ne i8 %180, 0
  br i1 %tobool166, label %if.end170, label %if.then167

if.then167:                                       ; preds = %if.end165
  %181 = load %struct.funcsave*, %struct.funcsave** %funcsave, align 4
  %zoptind168 = getelementptr inbounds %struct.funcsave, %struct.funcsave* %181, i32 0, i32 2
  %182 = load i32, i32* %zoptind168, align 4
  store i32 %182, i32* @zoptind, align 4
  %183 = load %struct.funcsave*, %struct.funcsave** %funcsave, align 4
  %optcind169 = getelementptr inbounds %struct.funcsave, %struct.funcsave* %183, i32 0, i32 4
  %184 = load i32, i32* %optcind169, align 4
  store i32 %184, i32* @optcind, align 4
  br label %if.end170

if.end170:                                        ; preds = %if.then167, %if.end165
  %185 = load %struct.funcsave*, %struct.funcsave** %funcsave, align 4
  %scriptname171 = getelementptr inbounds %struct.funcsave, %struct.funcsave* %185, i32 0, i32 7
  %186 = load i8*, i8** %scriptname171, align 4
  store i8* %186, i8** @scriptname, align 4
  %187 = load %struct.funcsave*, %struct.funcsave** %funcsave, align 4
  %oflags172 = getelementptr inbounds %struct.funcsave, %struct.funcsave* %187, i32 0, i32 13
  %188 = load i32, i32* %oflags172, align 4
  store i32 %188, i32* @doshfunc.oflags, align 4
  call void @endpatternscope()
  %189 = load %struct.funcsave*, %struct.funcsave** %funcsave, align 4
  %restore_sticky173 = getelementptr inbounds %struct.funcsave, %struct.funcsave* %189, i32 0, i32 14
  %190 = load i32, i32* %restore_sticky173, align 4
  %tobool174 = icmp ne i32 %190, 0
  br i1 %tobool174, label %if.then175, label %if.else180

if.then175:                                       ; preds = %if.end170
  %191 = load %struct.funcsave*, %struct.funcsave** %funcsave, align 4
  %opts176 = getelementptr inbounds %struct.funcsave, %struct.funcsave* %191, i32 0, i32 0
  %arraydecay177 = getelementptr inbounds [181 x i8], [181 x i8]* %opts176, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* getelementptr inbounds ([181 x i8], [181 x i8]* @opts, i32 0, i32 0), i8* %arraydecay177, i32 181, i32 1, i1 false)
  %192 = load %struct.funcsave*, %struct.funcsave** %funcsave, align 4
  %emulation178 = getelementptr inbounds %struct.funcsave, %struct.funcsave* %192, i32 0, i32 11
  %193 = load i32, i32* %emulation178, align 4
  store i32 %193, i32* @emulation, align 4
  %194 = load %struct.funcsave*, %struct.funcsave** %funcsave, align 4
  %sticky179 = getelementptr inbounds %struct.funcsave, %struct.funcsave* %194, i32 0, i32 15
  %195 = load %struct.emulation_options*, %struct.emulation_options** %sticky179, align 4
  store %struct.emulation_options* %195, %struct.emulation_options** @sticky, align 4
  br label %if.end202

if.else180:                                       ; preds = %if.end170
  %196 = load i8, i8* getelementptr inbounds ([181 x i8], [181 x i8]* @opts, i32 0, i32 108), align 1
  %tobool181 = icmp ne i8 %196, 0
  br i1 %tobool181, label %if.then182, label %if.else190

if.then182:                                       ; preds = %if.else180
  %197 = load i8, i8* getelementptr inbounds ([181 x i8], [181 x i8]* @opts, i32 0, i32 140), align 1
  %198 = load %struct.funcsave*, %struct.funcsave** %funcsave, align 4
  %opts183 = getelementptr inbounds %struct.funcsave, %struct.funcsave* %198, i32 0, i32 0
  %arrayidx184 = getelementptr inbounds [181 x i8], [181 x i8]* %opts183, i32 0, i32 140
  store i8 %197, i8* %arrayidx184, align 4
  %199 = load i8, i8* getelementptr inbounds ([181 x i8], [181 x i8]* @opts, i32 0, i32 155), align 1
  %200 = load %struct.funcsave*, %struct.funcsave** %funcsave, align 4
  %opts185 = getelementptr inbounds %struct.funcsave, %struct.funcsave* %200, i32 0, i32 0
  %arrayidx186 = getelementptr inbounds [181 x i8], [181 x i8]* %opts185, i32 0, i32 155
  store i8 %199, i8* %arrayidx186, align 1
  %201 = load %struct.funcsave*, %struct.funcsave** %funcsave, align 4
  %opts187 = getelementptr inbounds %struct.funcsave, %struct.funcsave* %201, i32 0, i32 0
  %arraydecay188 = getelementptr inbounds [181 x i8], [181 x i8]* %opts187, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* getelementptr inbounds ([181 x i8], [181 x i8]* @opts, i32 0, i32 0), i8* %arraydecay188, i32 181, i32 1, i1 false)
  %202 = load %struct.funcsave*, %struct.funcsave** %funcsave, align 4
  %emulation189 = getelementptr inbounds %struct.funcsave, %struct.funcsave* %202, i32 0, i32 11
  %203 = load i32, i32* %emulation189, align 4
  store i32 %203, i32* @emulation, align 4
  br label %if.end201

if.else190:                                       ; preds = %if.else180
  %204 = load %struct.funcsave*, %struct.funcsave** %funcsave, align 4
  %opts191 = getelementptr inbounds %struct.funcsave, %struct.funcsave* %204, i32 0, i32 0
  %arrayidx192 = getelementptr inbounds [181 x i8], [181 x i8]* %opts191, i32 0, i32 178
  %205 = load i8, i8* %arrayidx192, align 2
  store i8 %205, i8* getelementptr inbounds ([181 x i8], [181 x i8]* @opts, i32 0, i32 178), align 1
  %206 = load %struct.funcsave*, %struct.funcsave** %funcsave, align 4
  %opts193 = getelementptr inbounds %struct.funcsave, %struct.funcsave* %206, i32 0, i32 0
  %arrayidx194 = getelementptr inbounds [181 x i8], [181 x i8]* %opts193, i32 0, i32 139
  %207 = load i8, i8* %arrayidx194, align 1
  store i8 %207, i8* getelementptr inbounds ([181 x i8], [181 x i8]* @opts, i32 0, i32 139), align 1
  %208 = load %struct.funcsave*, %struct.funcsave** %funcsave, align 4
  %opts195 = getelementptr inbounds %struct.funcsave, %struct.funcsave* %208, i32 0, i32 0
  %arrayidx196 = getelementptr inbounds [181 x i8], [181 x i8]* %opts195, i32 0, i32 108
  %209 = load i8, i8* %arrayidx196, align 4
  store i8 %209, i8* getelementptr inbounds ([181 x i8], [181 x i8]* @opts, i32 0, i32 108), align 1
  %210 = load %struct.funcsave*, %struct.funcsave** %funcsave, align 4
  %opts197 = getelementptr inbounds %struct.funcsave, %struct.funcsave* %210, i32 0, i32 0
  %arrayidx198 = getelementptr inbounds [181 x i8], [181 x i8]* %opts197, i32 0, i32 107
  %211 = load i8, i8* %arrayidx198, align 1
  store i8 %211, i8* getelementptr inbounds ([181 x i8], [181 x i8]* @opts, i32 0, i32 107), align 1
  %212 = load %struct.funcsave*, %struct.funcsave** %funcsave, align 4
  %opts199 = getelementptr inbounds %struct.funcsave, %struct.funcsave* %212, i32 0, i32 0
  %arrayidx200 = getelementptr inbounds [181 x i8], [181 x i8]* %opts199, i32 0, i32 177
  %213 = load i8, i8* %arrayidx200, align 1
  store i8 %213, i8* getelementptr inbounds ([181 x i8], [181 x i8]* @opts, i32 0, i32 177), align 1
  br label %if.end201

if.end201:                                        ; preds = %if.else190, %if.then182
  br label %if.end202

if.end202:                                        ; preds = %if.end201, %if.then175
  %214 = load i8, i8* getelementptr inbounds ([181 x i8], [181 x i8]* @opts, i32 0, i32 107), align 1
  %tobool203 = icmp ne i8 %214, 0
  br i1 %tobool203, label %if.then204, label %if.end214

if.then204:                                       ; preds = %if.end202
  %215 = load i32, i32* @contflag, align 4
  %tobool205 = icmp ne i32 %215, 0
  br i1 %tobool205, label %if.then206, label %if.end207

if.then206:                                       ; preds = %if.then204
  call void (i8*, ...) @zwarn(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.26, i32 0, i32 0))
  br label %if.end207

if.end207:                                        ; preds = %if.then206, %if.then204
  %216 = load i32, i32* @breaks, align 4
  %tobool208 = icmp ne i32 %216, 0
  br i1 %tobool208, label %if.then209, label %if.end210

if.then209:                                       ; preds = %if.end207
  call void (i8*, ...) @zwarn(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.27, i32 0, i32 0))
  br label %if.end210

if.end210:                                        ; preds = %if.then209, %if.end207
  %217 = load %struct.funcsave*, %struct.funcsave** %funcsave, align 4
  %breaks211 = getelementptr inbounds %struct.funcsave, %struct.funcsave* %217, i32 0, i32 8
  %218 = load i32, i32* %breaks211, align 4
  store i32 %218, i32* @breaks, align 4
  %219 = load %struct.funcsave*, %struct.funcsave** %funcsave, align 4
  %contflag212 = getelementptr inbounds %struct.funcsave, %struct.funcsave* %219, i32 0, i32 9
  %220 = load i32, i32* %contflag212, align 4
  store i32 %220, i32* @contflag, align 4
  %221 = load %struct.funcsave*, %struct.funcsave** %funcsave, align 4
  %loops213 = getelementptr inbounds %struct.funcsave, %struct.funcsave* %221, i32 0, i32 10
  %222 = load i32, i32* %loops213, align 4
  store i32 %222, i32* @loops, align 4
  br label %if.end214

if.end214:                                        ; preds = %if.end210, %if.end202
  call void @endtrapscope()
  %223 = load i32, i32* @trap_state, align 4
  %cmp215 = icmp eq i32 %223, 1
  br i1 %cmp215, label %if.then216, label %if.end218

if.then216:                                       ; preds = %if.end214
  %224 = load i32, i32* @trap_return, align 4
  %inc217 = add nsw i32 %224, 1
  store i32 %inc217, i32* @trap_return, align 4
  br label %if.end218

if.end218:                                        ; preds = %if.then216, %if.end214
  %225 = load i32, i32* @lastval, align 4
  store i32 %225, i32* %ret, align 4
  %226 = load %struct.funcsave*, %struct.funcsave** %funcsave, align 4
  %noerrexit219 = getelementptr inbounds %struct.funcsave, %struct.funcsave* %226, i32 0, i32 12
  %227 = load i32, i32* %noerrexit219, align 4
  store i32 %227, i32* @noerrexit, align 4
  %228 = load i32, i32* %noreturnval.addr, align 4
  %tobool220 = icmp ne i32 %228, 0
  br i1 %tobool220, label %if.then221, label %if.end226

if.then221:                                       ; preds = %if.end218
  %229 = load %struct.funcsave*, %struct.funcsave** %funcsave, align 4
  %lastval222 = getelementptr inbounds %struct.funcsave, %struct.funcsave* %229, i32 0, i32 3
  %230 = load i32, i32* %lastval222, align 4
  store i32 %230, i32* @lastval, align 4
  %231 = load %struct.funcsave*, %struct.funcsave** %funcsave, align 4
  %numpipestats223 = getelementptr inbounds %struct.funcsave, %struct.funcsave* %231, i32 0, i32 5
  %232 = load i32, i32* %numpipestats223, align 4
  store i32 %232, i32* @numpipestats, align 4
  %233 = load %struct.funcsave*, %struct.funcsave** %funcsave, align 4
  %pipestats224 = getelementptr inbounds %struct.funcsave, %struct.funcsave* %233, i32 0, i32 6
  %234 = load i32*, i32** %pipestats224, align 4
  %235 = bitcast i32* %234 to i8*
  %236 = load i32, i32* @numpipestats, align 4
  %mul225 = mul i32 4, %236
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* bitcast ([256 x i32]* @pipestats to i8*), i8* %235, i32 %mul225, i32 4, i1 false)
  br label %if.end226

if.end226:                                        ; preds = %if.then221, %if.end218
  br label %do.end

do.end:                                           ; preds = %if.end226
  %237 = load %struct.heap*, %struct.heap** %_switch_oldheaps, align 4
  call void @old_heaps(%struct.heap* %237)
  br label %do.end227

do.end227:                                        ; preds = %do.end
  br label %do.body228

do.body228:                                       ; preds = %do.end227
  %238 = load i32, i32* @queueing_enabled, align 4
  %dec229 = add nsw i32 %238, -1
  store i32 %dec229, i32* @queueing_enabled, align 4
  %tobool230 = icmp ne i32 %dec229, 0
  br i1 %tobool230, label %if.end239, label %if.then231

if.then231:                                       ; preds = %do.body228
  br label %do.body232

do.body232:                                       ; preds = %if.then231
  br label %while.cond

while.cond:                                       ; preds = %while.body, %do.body232
  %239 = load i32, i32* @queue_front, align 4
  %240 = load i32, i32* @queue_rear, align 4
  %cmp233 = icmp ne i32 %239, %240
  br i1 %cmp233, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %241 = load i32, i32* @queue_front, align 4
  %add234 = add nsw i32 %241, 1
  %rem = srem i32 %add234, 128
  store i32 %rem, i32* @queue_front, align 4
  %242 = load i32, i32* @queue_front, align 4
  %arrayidx235 = getelementptr inbounds [128 x %struct.__sigset_t], [128 x %struct.__sigset_t]* @signal_mask_queue, i32 0, i32 %242
  call void @signal_setmask(%struct.__sigset_t* sret %tmp, %struct.__sigset_t* byval align 4 %arrayidx235)
  %243 = bitcast %struct.__sigset_t* %oset to i8*
  %244 = bitcast %struct.__sigset_t* %tmp to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %243, i8* %244, i32 128, i32 4, i1 false)
  %245 = load i32, i32* @queue_front, align 4
  %arrayidx236 = getelementptr inbounds [128 x i32], [128 x i32]* @signal_queue, i32 0, i32 %245
  %246 = load i32, i32* %arrayidx236, align 4
  call void @zhandler(i32 %246)
  call void @signal_setmask(%struct.__sigset_t* sret %tmp237, %struct.__sigset_t* byval align 4 %oset)
  br label %while.cond

while.end:                                        ; preds = %while.cond
  br label %do.end238

do.end238:                                        ; preds = %while.end
  br label %if.end239

if.end239:                                        ; preds = %do.end238, %do.body228
  br label %do.end240

do.end240:                                        ; preds = %if.end239
  %247 = load i32, i32* @exit_pending, align 4
  %tobool241 = icmp ne i32 %247, 0
  br i1 %tobool241, label %land.lhs.true242, label %if.end252

land.lhs.true242:                                 ; preds = %do.end240
  %248 = load i32, i32* @exit_level, align 4
  %249 = load i32, i32* @locallevel, align 4
  %add243 = add nsw i32 %249, 1
  %cmp244 = icmp sge i32 %248, %add243
  br i1 %cmp244, label %land.lhs.true245, label %if.end252

land.lhs.true245:                                 ; preds = %land.lhs.true242
  %250 = load i32, i32* @in_exit_trap, align 4
  %tobool246 = icmp ne i32 %250, 0
  br i1 %tobool246, label %if.end252, label %if.then247

if.then247:                                       ; preds = %land.lhs.true245
  %251 = load i32, i32* @locallevel, align 4
  %252 = load i32, i32* @forklevel, align 4
  %cmp248 = icmp sgt i32 %251, %252
  br i1 %cmp248, label %if.then249, label %if.else250

if.then249:                                       ; preds = %if.then247
  store i32 1, i32* @retflag, align 4
  %253 = load i32, i32* @loops, align 4
  store i32 %253, i32* @breaks, align 4
  br label %if.end251

if.else250:                                       ; preds = %if.then247
  store i32 1, i32* @stopmsg, align 4
  %254 = load i32, i32* @exit_pending, align 4
  %shr = ashr i32 %254, 1
  call void @zexit(i32 %shr, i32 0)
  br label %if.end251

if.end251:                                        ; preds = %if.else250, %if.then249
  br label %if.end252

if.end252:                                        ; preds = %if.end251, %land.lhs.true245, %land.lhs.true242, %do.end240
  %255 = load i32, i32* %ret, align 4
  ret i32 %255
}

declare %struct.heap* @new_heaps() #1

declare void @starttrapscope() #1

declare void @startpatternscope() #1

declare void @installemulation(i32, i8*) #1

declare void @clearpatterndisables() #1

declare i32 @countlinknodes(%union.linkroot*) #1

declare i8* @getshfuncfile(%struct.shfunc*) #1

; Function Attrs: noinline nounwind
define void @runshfunc(%struct.eprog* %prog, %struct.funcwrap* %wrap, i8* %name) #0 {
entry:
  %prog.addr = alloca %struct.eprog*, align 4
  %wrap.addr = alloca %struct.funcwrap*, align 4
  %name.addr = alloca i8*, align 4
  %cont = alloca i32, align 4
  %ouu = alloca i32, align 4
  %ou = alloca i8*, align 4
  %oset = alloca %struct.__sigset_t, align 4
  %tmp = alloca %struct.__sigset_t, align 4
  %tmp27 = alloca %struct.__sigset_t, align 4
  %oset45 = alloca %struct.__sigset_t, align 4
  %tmp49 = alloca %struct.__sigset_t, align 4
  %tmp51 = alloca %struct.__sigset_t, align 4
  store %struct.eprog* %prog, %struct.eprog** %prog.addr, align 4
  store %struct.funcwrap* %wrap, %struct.funcwrap** %wrap.addr, align 4
  store i8* %name, i8** %name.addr, align 4
  %0 = load i32, i32* @queueing_enabled, align 4
  %inc = add nsw i32 %0, 1
  store i32 %inc, i32* @queueing_enabled, align 4
  %1 = load i32, i32* @underscoreused, align 4
  store i32 %1, i32* %ouu, align 4
  %call = call i8* @zalloc(i32 %1)
  store i8* %call, i8** %ou, align 4
  %2 = load i8*, i8** %ou, align 4
  %tobool = icmp ne i8* %2, null
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %3 = load i8*, i8** %ou, align 4
  %4 = load i8*, i8** @zunderscore, align 4
  %5 = load i32, i32* @underscoreused, align 4
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %3, i8* %4, i32 %5, i32 1, i1 false)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  br label %while.cond

while.cond:                                       ; preds = %if.end30, %if.end
  %6 = load %struct.funcwrap*, %struct.funcwrap** %wrap.addr, align 4
  %tobool1 = icmp ne %struct.funcwrap* %6, null
  br i1 %tobool1, label %while.body, label %while.end32

while.body:                                       ; preds = %while.cond
  %7 = load %struct.funcwrap*, %struct.funcwrap** %wrap.addr, align 4
  %module = getelementptr inbounds %struct.funcwrap, %struct.funcwrap* %7, i32 0, i32 3
  %8 = load %struct.module*, %struct.module** %module, align 4
  %wrapper = getelementptr inbounds %struct.module, %struct.module* %8, i32 0, i32 4
  %9 = load i32, i32* %wrapper, align 4
  %inc2 = add nsw i32 %9, 1
  store i32 %inc2, i32* %wrapper, align 4
  %10 = load %struct.funcwrap*, %struct.funcwrap** %wrap.addr, align 4
  %handler = getelementptr inbounds %struct.funcwrap, %struct.funcwrap* %10, i32 0, i32 2
  %11 = load i32 (%struct.eprog*, %struct.funcwrap*, i8*)*, i32 (%struct.eprog*, %struct.funcwrap*, i8*)** %handler, align 4
  %12 = load %struct.eprog*, %struct.eprog** %prog.addr, align 4
  %13 = load %struct.funcwrap*, %struct.funcwrap** %wrap.addr, align 4
  %next = getelementptr inbounds %struct.funcwrap, %struct.funcwrap* %13, i32 0, i32 0
  %14 = load %struct.funcwrap*, %struct.funcwrap** %next, align 4
  %15 = load i8*, i8** %name.addr, align 4
  %call3 = call i32 %11(%struct.eprog* %12, %struct.funcwrap* %14, i8* %15)
  store i32 %call3, i32* %cont, align 4
  %16 = load %struct.funcwrap*, %struct.funcwrap** %wrap.addr, align 4
  %module4 = getelementptr inbounds %struct.funcwrap, %struct.funcwrap* %16, i32 0, i32 3
  %17 = load %struct.module*, %struct.module** %module4, align 4
  %wrapper5 = getelementptr inbounds %struct.module, %struct.module* %17, i32 0, i32 4
  %18 = load i32, i32* %wrapper5, align 4
  %dec = add nsw i32 %18, -1
  store i32 %dec, i32* %wrapper5, align 4
  %19 = load %struct.funcwrap*, %struct.funcwrap** %wrap.addr, align 4
  %module6 = getelementptr inbounds %struct.funcwrap, %struct.funcwrap* %19, i32 0, i32 3
  %20 = load %struct.module*, %struct.module** %module6, align 4
  %wrapper7 = getelementptr inbounds %struct.module, %struct.module* %20, i32 0, i32 4
  %21 = load i32, i32* %wrapper7, align 4
  %tobool8 = icmp ne i32 %21, 0
  br i1 %tobool8, label %if.end14, label %land.lhs.true

land.lhs.true:                                    ; preds = %while.body
  %22 = load %struct.funcwrap*, %struct.funcwrap** %wrap.addr, align 4
  %module9 = getelementptr inbounds %struct.funcwrap, %struct.funcwrap* %22, i32 0, i32 3
  %23 = load %struct.module*, %struct.module** %module9, align 4
  %node = getelementptr inbounds %struct.module, %struct.module* %23, i32 0, i32 0
  %flags = getelementptr inbounds %struct.hashnode, %struct.hashnode* %node, i32 0, i32 2
  %24 = load i32, i32* %flags, align 4
  %and = and i32 %24, 2
  %tobool10 = icmp ne i32 %and, 0
  br i1 %tobool10, label %if.then11, label %if.end14

if.then11:                                        ; preds = %land.lhs.true
  %25 = load %struct.funcwrap*, %struct.funcwrap** %wrap.addr, align 4
  %module12 = getelementptr inbounds %struct.funcwrap, %struct.funcwrap* %25, i32 0, i32 3
  %26 = load %struct.module*, %struct.module** %module12, align 4
  %call13 = call i32 @unload_module(%struct.module* %26)
  br label %if.end14

if.end14:                                         ; preds = %if.then11, %land.lhs.true, %while.body
  %27 = load i32, i32* %cont, align 4
  %tobool15 = icmp ne i32 %27, 0
  br i1 %tobool15, label %if.end30, label %if.then16

if.then16:                                        ; preds = %if.end14
  %28 = load i8*, i8** %ou, align 4
  %tobool17 = icmp ne i8* %28, null
  br i1 %tobool17, label %if.then18, label %if.end19

if.then18:                                        ; preds = %if.then16
  %29 = load i8*, i8** %ou, align 4
  %30 = load i32, i32* %ouu, align 4
  call void @zfree(i8* %29, i32 %30)
  br label %if.end19

if.end19:                                         ; preds = %if.then18, %if.then16
  br label %do.body

do.body:                                          ; preds = %if.end19
  %31 = load i32, i32* @queueing_enabled, align 4
  %dec20 = add nsw i32 %31, -1
  store i32 %dec20, i32* @queueing_enabled, align 4
  %tobool21 = icmp ne i32 %dec20, 0
  br i1 %tobool21, label %if.end28, label %if.then22

if.then22:                                        ; preds = %do.body
  br label %do.body23

do.body23:                                        ; preds = %if.then22
  br label %while.cond24

while.cond24:                                     ; preds = %while.body25, %do.body23
  %32 = load i32, i32* @queue_front, align 4
  %33 = load i32, i32* @queue_rear, align 4
  %cmp = icmp ne i32 %32, %33
  br i1 %cmp, label %while.body25, label %while.end

while.body25:                                     ; preds = %while.cond24
  %34 = load i32, i32* @queue_front, align 4
  %add = add nsw i32 %34, 1
  %rem = srem i32 %add, 128
  store i32 %rem, i32* @queue_front, align 4
  %35 = load i32, i32* @queue_front, align 4
  %arrayidx = getelementptr inbounds [128 x %struct.__sigset_t], [128 x %struct.__sigset_t]* @signal_mask_queue, i32 0, i32 %35
  call void @signal_setmask(%struct.__sigset_t* sret %tmp, %struct.__sigset_t* byval align 4 %arrayidx)
  %36 = bitcast %struct.__sigset_t* %oset to i8*
  %37 = bitcast %struct.__sigset_t* %tmp to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %36, i8* %37, i32 128, i32 4, i1 false)
  %38 = load i32, i32* @queue_front, align 4
  %arrayidx26 = getelementptr inbounds [128 x i32], [128 x i32]* @signal_queue, i32 0, i32 %38
  %39 = load i32, i32* %arrayidx26, align 4
  call void @zhandler(i32 %39)
  call void @signal_setmask(%struct.__sigset_t* sret %tmp27, %struct.__sigset_t* byval align 4 %oset)
  br label %while.cond24

while.end:                                        ; preds = %while.cond24
  br label %do.end

do.end:                                           ; preds = %while.end
  br label %if.end28

if.end28:                                         ; preds = %do.end, %do.body
  br label %do.end29

do.end29:                                         ; preds = %if.end28
  br label %do.end55

if.end30:                                         ; preds = %if.end14
  %40 = load %struct.funcwrap*, %struct.funcwrap** %wrap.addr, align 4
  %next31 = getelementptr inbounds %struct.funcwrap, %struct.funcwrap* %40, i32 0, i32 0
  %41 = load %struct.funcwrap*, %struct.funcwrap** %next31, align 4
  store %struct.funcwrap* %41, %struct.funcwrap** %wrap.addr, align 4
  br label %while.cond

while.end32:                                      ; preds = %while.cond
  call void @startparamscope()
  %42 = load %struct.eprog*, %struct.eprog** %prog.addr, align 4
  call void @execode(%struct.eprog* %42, i32 1, i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.28, i32 0, i32 0))
  %43 = load i8*, i8** %ou, align 4
  %tobool33 = icmp ne i8* %43, null
  br i1 %tobool33, label %if.then34, label %if.end35

if.then34:                                        ; preds = %while.end32
  %44 = load i8*, i8** %ou, align 4
  call void @setunderscore(i8* %44)
  %45 = load i8*, i8** %ou, align 4
  %46 = load i32, i32* %ouu, align 4
  call void @zfree(i8* %45, i32 %46)
  br label %if.end35

if.end35:                                         ; preds = %if.then34, %while.end32
  call void @endparamscope()
  br label %do.body36

do.body36:                                        ; preds = %if.end35
  %47 = load i32, i32* @queueing_enabled, align 4
  %dec37 = add nsw i32 %47, -1
  store i32 %dec37, i32* @queueing_enabled, align 4
  %tobool38 = icmp ne i32 %dec37, 0
  br i1 %tobool38, label %if.end54, label %if.then39

if.then39:                                        ; preds = %do.body36
  br label %do.body40

do.body40:                                        ; preds = %if.then39
  br label %while.cond41

while.cond41:                                     ; preds = %while.body43, %do.body40
  %48 = load i32, i32* @queue_front, align 4
  %49 = load i32, i32* @queue_rear, align 4
  %cmp42 = icmp ne i32 %48, %49
  br i1 %cmp42, label %while.body43, label %while.end52

while.body43:                                     ; preds = %while.cond41
  %50 = load i32, i32* @queue_front, align 4
  %add46 = add nsw i32 %50, 1
  %rem47 = srem i32 %add46, 128
  store i32 %rem47, i32* @queue_front, align 4
  %51 = load i32, i32* @queue_front, align 4
  %arrayidx48 = getelementptr inbounds [128 x %struct.__sigset_t], [128 x %struct.__sigset_t]* @signal_mask_queue, i32 0, i32 %51
  call void @signal_setmask(%struct.__sigset_t* sret %tmp49, %struct.__sigset_t* byval align 4 %arrayidx48)
  %52 = bitcast %struct.__sigset_t* %oset45 to i8*
  %53 = bitcast %struct.__sigset_t* %tmp49 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %52, i8* %53, i32 128, i32 4, i1 false)
  %54 = load i32, i32* @queue_front, align 4
  %arrayidx50 = getelementptr inbounds [128 x i32], [128 x i32]* @signal_queue, i32 0, i32 %54
  %55 = load i32, i32* %arrayidx50, align 4
  call void @zhandler(i32 %55)
  call void @signal_setmask(%struct.__sigset_t* sret %tmp51, %struct.__sigset_t* byval align 4 %oset45)
  br label %while.cond41

while.end52:                                      ; preds = %while.cond41
  br label %do.end53

do.end53:                                         ; preds = %while.end52
  br label %if.end54

if.end54:                                         ; preds = %do.end53, %do.body36
  br label %do.end55

do.end55:                                         ; preds = %do.end29, %if.end54
  ret void
}

declare void @freearray(i8**) #1

declare void @endpatternscope() #1

declare void @endtrapscope() #1

declare void @old_heaps(%struct.heap*) #1

declare void @zexit(i32, i32) #1

declare i32 @unload_module(%struct.module*) #1

declare void @startparamscope() #1

declare void @endparamscope() #1

declare %struct.eprog* @try_dump_file(i8*, i8*, i8*, i32*, i32) #1

declare i32 @fstat(i32, %struct.stat*) #1

declare i32 @lseek(i32, i32, i32) #1

declare i32 @read(i32, i8*, i32) #1

declare i8* @metafy(i8*, i32, i32) #1

declare i8* @ecrawstr(%struct.eprog*, i32*, i32*) #1

; Function Attrs: noinline nounwind
define void @execsave() #0 {
entry:
  %es = alloca %struct.execstack*, align 4
  %call = call i8* @zalloc(i32 156)
  %0 = bitcast i8* %call to %struct.execstack*
  store %struct.execstack* %0, %struct.execstack** %es, align 4
  %1 = load i32, i32* @list_pipe_pid, align 4
  %2 = load %struct.execstack*, %struct.execstack** %es, align 4
  %list_pipe_pid = getelementptr inbounds %struct.execstack, %struct.execstack* %2, i32 0, i32 1
  store i32 %1, i32* %list_pipe_pid, align 4
  %3 = load i32, i32* @nowait, align 4
  %4 = load %struct.execstack*, %struct.execstack** %es, align 4
  %nowait = getelementptr inbounds %struct.execstack, %struct.execstack* %4, i32 0, i32 2
  store i32 %3, i32* %nowait, align 4
  %5 = load i32, i32* @pline_level, align 4
  %6 = load %struct.execstack*, %struct.execstack** %es, align 4
  %pline_level = getelementptr inbounds %struct.execstack, %struct.execstack* %6, i32 0, i32 3
  store i32 %5, i32* %pline_level, align 4
  %7 = load i32, i32* @list_pipe_child, align 4
  %8 = load %struct.execstack*, %struct.execstack** %es, align 4
  %list_pipe_child = getelementptr inbounds %struct.execstack, %struct.execstack* %8, i32 0, i32 4
  store i32 %7, i32* %list_pipe_child, align 4
  %9 = load i32, i32* @list_pipe_job, align 4
  %10 = load %struct.execstack*, %struct.execstack** %es, align 4
  %list_pipe_job = getelementptr inbounds %struct.execstack, %struct.execstack* %10, i32 0, i32 5
  store i32 %9, i32* %list_pipe_job, align 4
  %11 = load %struct.execstack*, %struct.execstack** %es, align 4
  %list_pipe_text = getelementptr inbounds %struct.execstack, %struct.execstack* %11, i32 0, i32 6
  %arraydecay = getelementptr inbounds [80 x i8], [80 x i8]* %list_pipe_text, i32 0, i32 0
  %call1 = call i8* @strcpy(i8* %arraydecay, i8* getelementptr inbounds ([80 x i8], [80 x i8]* @list_pipe_text, i32 0, i32 0))
  %12 = load i32, i32* @lastval, align 4
  %13 = load %struct.execstack*, %struct.execstack** %es, align 4
  %lastval = getelementptr inbounds %struct.execstack, %struct.execstack* %13, i32 0, i32 7
  store i32 %12, i32* %lastval, align 4
  %14 = load i32, i32* @noeval, align 4
  %15 = load %struct.execstack*, %struct.execstack** %es, align 4
  %noeval = getelementptr inbounds %struct.execstack, %struct.execstack* %15, i32 0, i32 8
  store i32 %14, i32* %noeval, align 4
  %16 = load i32, i32* @badcshglob, align 4
  %17 = load %struct.execstack*, %struct.execstack** %es, align 4
  %badcshglob = getelementptr inbounds %struct.execstack, %struct.execstack* %17, i32 0, i32 9
  store i32 %16, i32* %badcshglob, align 4
  %18 = load i32, i32* @cmdoutpid, align 4
  %19 = load %struct.execstack*, %struct.execstack** %es, align 4
  %cmdoutpid = getelementptr inbounds %struct.execstack, %struct.execstack* %19, i32 0, i32 10
  store i32 %18, i32* %cmdoutpid, align 4
  %20 = load i32, i32* @cmdoutval, align 4
  %21 = load %struct.execstack*, %struct.execstack** %es, align 4
  %cmdoutval = getelementptr inbounds %struct.execstack, %struct.execstack* %21, i32 0, i32 11
  store i32 %20, i32* %cmdoutval, align 4
  %22 = load i32, i32* @use_cmdoutval, align 4
  %23 = load %struct.execstack*, %struct.execstack** %es, align 4
  %use_cmdoutval = getelementptr inbounds %struct.execstack, %struct.execstack* %23, i32 0, i32 12
  store i32 %22, i32* %use_cmdoutval, align 4
  %24 = load i32, i32* @trap_return, align 4
  %25 = load %struct.execstack*, %struct.execstack** %es, align 4
  %trap_return = getelementptr inbounds %struct.execstack, %struct.execstack* %25, i32 0, i32 13
  store i32 %24, i32* %trap_return, align 4
  %26 = load i32, i32* @trap_state, align 4
  %27 = load %struct.execstack*, %struct.execstack** %es, align 4
  %trap_state = getelementptr inbounds %struct.execstack, %struct.execstack* %27, i32 0, i32 14
  store i32 %26, i32* %trap_state, align 4
  %28 = load i32, i32* @trapisfunc, align 4
  %29 = load %struct.execstack*, %struct.execstack** %es, align 4
  %trapisfunc = getelementptr inbounds %struct.execstack, %struct.execstack* %29, i32 0, i32 15
  store i32 %28, i32* %trapisfunc, align 4
  %30 = load i32, i32* @traplocallevel, align 4
  %31 = load %struct.execstack*, %struct.execstack** %es, align 4
  %traplocallevel = getelementptr inbounds %struct.execstack, %struct.execstack* %31, i32 0, i32 16
  store i32 %30, i32* %traplocallevel, align 4
  %32 = load i32, i32* @noerrs, align 4
  %33 = load %struct.execstack*, %struct.execstack** %es, align 4
  %noerrs = getelementptr inbounds %struct.execstack, %struct.execstack* %33, i32 0, i32 17
  store i32 %32, i32* %noerrs, align 4
  %34 = load i32, i32* @this_noerrexit, align 4
  %35 = load %struct.execstack*, %struct.execstack** %es, align 4
  %this_noerrexit = getelementptr inbounds %struct.execstack, %struct.execstack* %35, i32 0, i32 18
  store i32 %34, i32* %this_noerrexit, align 4
  %36 = load i8*, i8** @zunderscore, align 4
  %call2 = call i8* @ztrdup(i8* %36)
  %37 = load %struct.execstack*, %struct.execstack** %es, align 4
  %underscore = getelementptr inbounds %struct.execstack, %struct.execstack* %37, i32 0, i32 19
  store i8* %call2, i8** %underscore, align 4
  %38 = load %struct.execstack*, %struct.execstack** @exstack, align 4
  %39 = load %struct.execstack*, %struct.execstack** %es, align 4
  %next = getelementptr inbounds %struct.execstack, %struct.execstack* %39, i32 0, i32 0
  store %struct.execstack* %38, %struct.execstack** %next, align 4
  %40 = load %struct.execstack*, %struct.execstack** %es, align 4
  store %struct.execstack* %40, %struct.execstack** @exstack, align 4
  store i32 0, i32* @cmdoutpid, align 4
  store i32 0, i32* @noerrs, align 4
  ret void
}

; Function Attrs: noinline nounwind
define void @execrestore() #0 {
entry:
  %en = alloca %struct.execstack*, align 4
  %oset = alloca %struct.__sigset_t, align 4
  %tmp = alloca %struct.__sigset_t, align 4
  %tmp4 = alloca %struct.__sigset_t, align 4
  %0 = load %struct.execstack*, %struct.execstack** @exstack, align 4
  store %struct.execstack* %0, %struct.execstack** %en, align 4
  %1 = load i32, i32* @queueing_enabled, align 4
  %inc = add nsw i32 %1, 1
  store i32 %inc, i32* @queueing_enabled, align 4
  %2 = load %struct.execstack*, %struct.execstack** @exstack, align 4
  %next = getelementptr inbounds %struct.execstack, %struct.execstack* %2, i32 0, i32 0
  %3 = load %struct.execstack*, %struct.execstack** %next, align 4
  store %struct.execstack* %3, %struct.execstack** @exstack, align 4
  %4 = load %struct.execstack*, %struct.execstack** %en, align 4
  %list_pipe_pid = getelementptr inbounds %struct.execstack, %struct.execstack* %4, i32 0, i32 1
  %5 = load i32, i32* %list_pipe_pid, align 4
  store i32 %5, i32* @list_pipe_pid, align 4
  %6 = load %struct.execstack*, %struct.execstack** %en, align 4
  %nowait = getelementptr inbounds %struct.execstack, %struct.execstack* %6, i32 0, i32 2
  %7 = load i32, i32* %nowait, align 4
  store i32 %7, i32* @nowait, align 4
  %8 = load %struct.execstack*, %struct.execstack** %en, align 4
  %pline_level = getelementptr inbounds %struct.execstack, %struct.execstack* %8, i32 0, i32 3
  %9 = load i32, i32* %pline_level, align 4
  store i32 %9, i32* @pline_level, align 4
  %10 = load %struct.execstack*, %struct.execstack** %en, align 4
  %list_pipe_child = getelementptr inbounds %struct.execstack, %struct.execstack* %10, i32 0, i32 4
  %11 = load i32, i32* %list_pipe_child, align 4
  store i32 %11, i32* @list_pipe_child, align 4
  %12 = load %struct.execstack*, %struct.execstack** %en, align 4
  %list_pipe_job = getelementptr inbounds %struct.execstack, %struct.execstack* %12, i32 0, i32 5
  %13 = load i32, i32* %list_pipe_job, align 4
  store i32 %13, i32* @list_pipe_job, align 4
  %14 = load %struct.execstack*, %struct.execstack** %en, align 4
  %list_pipe_text = getelementptr inbounds %struct.execstack, %struct.execstack* %14, i32 0, i32 6
  %arraydecay = getelementptr inbounds [80 x i8], [80 x i8]* %list_pipe_text, i32 0, i32 0
  %call = call i8* @strcpy(i8* getelementptr inbounds ([80 x i8], [80 x i8]* @list_pipe_text, i32 0, i32 0), i8* %arraydecay)
  %15 = load %struct.execstack*, %struct.execstack** %en, align 4
  %lastval = getelementptr inbounds %struct.execstack, %struct.execstack* %15, i32 0, i32 7
  %16 = load i32, i32* %lastval, align 4
  store i32 %16, i32* @lastval, align 4
  %17 = load %struct.execstack*, %struct.execstack** %en, align 4
  %noeval = getelementptr inbounds %struct.execstack, %struct.execstack* %17, i32 0, i32 8
  %18 = load i32, i32* %noeval, align 4
  store i32 %18, i32* @noeval, align 4
  %19 = load %struct.execstack*, %struct.execstack** %en, align 4
  %badcshglob = getelementptr inbounds %struct.execstack, %struct.execstack* %19, i32 0, i32 9
  %20 = load i32, i32* %badcshglob, align 4
  store i32 %20, i32* @badcshglob, align 4
  %21 = load %struct.execstack*, %struct.execstack** %en, align 4
  %cmdoutpid = getelementptr inbounds %struct.execstack, %struct.execstack* %21, i32 0, i32 10
  %22 = load i32, i32* %cmdoutpid, align 4
  store i32 %22, i32* @cmdoutpid, align 4
  %23 = load %struct.execstack*, %struct.execstack** %en, align 4
  %cmdoutval = getelementptr inbounds %struct.execstack, %struct.execstack* %23, i32 0, i32 11
  %24 = load i32, i32* %cmdoutval, align 4
  store i32 %24, i32* @cmdoutval, align 4
  %25 = load %struct.execstack*, %struct.execstack** %en, align 4
  %use_cmdoutval = getelementptr inbounds %struct.execstack, %struct.execstack* %25, i32 0, i32 12
  %26 = load i32, i32* %use_cmdoutval, align 4
  store i32 %26, i32* @use_cmdoutval, align 4
  %27 = load %struct.execstack*, %struct.execstack** %en, align 4
  %trap_return = getelementptr inbounds %struct.execstack, %struct.execstack* %27, i32 0, i32 13
  %28 = load i32, i32* %trap_return, align 4
  store i32 %28, i32* @trap_return, align 4
  %29 = load %struct.execstack*, %struct.execstack** %en, align 4
  %trap_state = getelementptr inbounds %struct.execstack, %struct.execstack* %29, i32 0, i32 14
  %30 = load i32, i32* %trap_state, align 4
  store i32 %30, i32* @trap_state, align 4
  %31 = load %struct.execstack*, %struct.execstack** %en, align 4
  %trapisfunc = getelementptr inbounds %struct.execstack, %struct.execstack* %31, i32 0, i32 15
  %32 = load i32, i32* %trapisfunc, align 4
  store i32 %32, i32* @trapisfunc, align 4
  %33 = load %struct.execstack*, %struct.execstack** %en, align 4
  %traplocallevel = getelementptr inbounds %struct.execstack, %struct.execstack* %33, i32 0, i32 16
  %34 = load i32, i32* %traplocallevel, align 4
  store i32 %34, i32* @traplocallevel, align 4
  %35 = load %struct.execstack*, %struct.execstack** %en, align 4
  %noerrs = getelementptr inbounds %struct.execstack, %struct.execstack* %35, i32 0, i32 17
  %36 = load i32, i32* %noerrs, align 4
  store i32 %36, i32* @noerrs, align 4
  %37 = load %struct.execstack*, %struct.execstack** %en, align 4
  %this_noerrexit = getelementptr inbounds %struct.execstack, %struct.execstack* %37, i32 0, i32 18
  %38 = load i32, i32* %this_noerrexit, align 4
  store i32 %38, i32* @this_noerrexit, align 4
  %39 = load %struct.execstack*, %struct.execstack** %en, align 4
  %underscore = getelementptr inbounds %struct.execstack, %struct.execstack* %39, i32 0, i32 19
  %40 = load i8*, i8** %underscore, align 4
  call void @setunderscore(i8* %40)
  %41 = load %struct.execstack*, %struct.execstack** %en, align 4
  %underscore1 = getelementptr inbounds %struct.execstack, %struct.execstack* %41, i32 0, i32 19
  %42 = load i8*, i8** %underscore1, align 4
  call void @zsfree(i8* %42)
  %43 = load %struct.execstack*, %struct.execstack** %en, align 4
  %44 = bitcast %struct.execstack* %43 to i8*
  call void @free(i8* %44)
  br label %do.body

do.body:                                          ; preds = %entry
  %45 = load i32, i32* @queueing_enabled, align 4
  %dec = add nsw i32 %45, -1
  store i32 %dec, i32* @queueing_enabled, align 4
  %tobool = icmp ne i32 %dec, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %do.body
  br label %do.body2

do.body2:                                         ; preds = %if.then
  br label %while.cond

while.cond:                                       ; preds = %while.body, %do.body2
  %46 = load i32, i32* @queue_front, align 4
  %47 = load i32, i32* @queue_rear, align 4
  %cmp = icmp ne i32 %46, %47
  br i1 %cmp, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %48 = load i32, i32* @queue_front, align 4
  %add = add nsw i32 %48, 1
  %rem = srem i32 %add, 128
  store i32 %rem, i32* @queue_front, align 4
  %49 = load i32, i32* @queue_front, align 4
  %arrayidx = getelementptr inbounds [128 x %struct.__sigset_t], [128 x %struct.__sigset_t]* @signal_mask_queue, i32 0, i32 %49
  call void @signal_setmask(%struct.__sigset_t* sret %tmp, %struct.__sigset_t* byval align 4 %arrayidx)
  %50 = bitcast %struct.__sigset_t* %oset to i8*
  %51 = bitcast %struct.__sigset_t* %tmp to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %50, i8* %51, i32 128, i32 4, i1 false)
  %52 = load i32, i32* @queue_front, align 4
  %arrayidx3 = getelementptr inbounds [128 x i32], [128 x i32]* @signal_queue, i32 0, i32 %52
  %53 = load i32, i32* %arrayidx3, align 4
  call void @zhandler(i32 %53)
  call void @signal_setmask(%struct.__sigset_t* sret %tmp4, %struct.__sigset_t* byval align 4 %oset)
  br label %while.cond

while.end:                                        ; preds = %while.cond
  br label %do.end

do.end:                                           ; preds = %while.end
  br label %if.end

if.end:                                           ; preds = %do.end, %do.body
  br label %do.end5

do.end5:                                          ; preds = %if.end
  ret void
}

; Function Attrs: noinline nounwind
define internal void @addvars(%struct.estate* %state, i32* %pc, i32 %addflags) #0 {
entry:
  %state.addr = alloca %struct.estate*, align 4
  %pc.addr = alloca i32*, align 4
  %addflags.addr = alloca i32, align 4
  %vl = alloca %union.linkroot*, align 4
  %xtr = alloca i32, align 4
  %isstr = alloca i32, align 4
  %htok = alloca i32, align 4
  %arr = alloca i8**, align 4
  %ptr = alloca i8**, align 4
  %name = alloca i8*, align 4
  %flags = alloca i32, align 4
  %opc = alloca i32*, align 4
  %ac = alloca i32, align 4
  %svl = alloca %union.linkroot, align 4
  %__n0 = alloca %struct.linknode, align 4
  %myflags = alloca i32, align 4
  %prefork_ret = alloca i32, align 4
  %pm = alloca %struct.param*, align 4
  %val = alloca i8*, align 4
  %allexp = alloca i32, align 4
  store %struct.estate* %state, %struct.estate** %state.addr, align 4
  store i32* %pc, i32** %pc.addr, align 4
  store i32 %addflags, i32* %addflags.addr, align 4
  store i32 0, i32* %htok, align 4
  %0 = load %struct.estate*, %struct.estate** %state.addr, align 4
  %pc1 = getelementptr inbounds %struct.estate, %struct.estate* %0, i32 0, i32 1
  %1 = load i32*, i32** %pc1, align 4
  store i32* %1, i32** %opc, align 4
  %2 = load i32, i32* %addflags.addr, align 4
  %and = and i32 %2, 4
  %tobool = icmp ne i32 %and, 0
  %lnot = xor i1 %tobool, true
  %cond = select i1 %lnot, i32 6, i32 0
  store i32 %cond, i32* %flags, align 4
  %3 = load i8, i8* getelementptr inbounds ([181 x i8], [181 x i8]* @opts, i32 0, i32 178), align 1
  %conv = sext i8 %3 to i32
  store i32 %conv, i32* %xtr, align 4
  %4 = load i32, i32* %xtr, align 4
  %tobool2 = icmp ne i32 %4, 0
  br i1 %tobool2, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void @printprompt4()
  store i32 1, i32* @doneps4, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %5 = load i32*, i32** %pc.addr, align 4
  %6 = load %struct.estate*, %struct.estate** %state.addr, align 4
  %pc3 = getelementptr inbounds %struct.estate, %struct.estate* %6, i32 0, i32 1
  store i32* %5, i32** %pc3, align 4
  br label %while.cond

while.cond:                                       ; preds = %if.end183, %if.end152, %if.end
  %7 = load %struct.estate*, %struct.estate** %state.addr, align 4
  %pc4 = getelementptr inbounds %struct.estate, %struct.estate* %7, i32 0, i32 1
  %8 = load i32*, i32** %pc4, align 4
  %incdec.ptr = getelementptr inbounds i32, i32* %8, i32 1
  store i32* %incdec.ptr, i32** %pc4, align 4
  %9 = load i32, i32* %8, align 4
  store i32 %9, i32* %ac, align 4
  %and5 = and i32 %9, 31
  %cmp = icmp eq i32 %and5, 5
  br i1 %cmp, label %while.body, label %while.end184

while.body:                                       ; preds = %while.cond
  %10 = load i32, i32* %flags, align 4
  store i32 %10, i32* %myflags, align 4
  %11 = load %struct.estate*, %struct.estate** %state.addr, align 4
  %call = call i8* @ecgetstr(%struct.estate* %11, i32 2, i32* %htok)
  store i8* %call, i8** %name, align 4
  %12 = load i32, i32* %htok, align 4
  %tobool7 = icmp ne i32 %12, 0
  br i1 %tobool7, label %if.then8, label %if.end9

if.then8:                                         ; preds = %while.body
  %13 = load i8*, i8** %name, align 4
  call void @untokenize(i8* %13)
  br label %if.end9

if.end9:                                          ; preds = %if.then8, %while.body
  %14 = load i32, i32* %ac, align 4
  %shr = lshr i32 %14, 5
  %and10 = and i32 %shr, 2
  %shr11 = lshr i32 %and10, 1
  %cmp12 = icmp eq i32 %shr11, 1
  br i1 %cmp12, label %if.then14, label %if.end15

if.then14:                                        ; preds = %if.end9
  %15 = load i32, i32* %myflags, align 4
  %or = or i32 %15, 1
  store i32 %or, i32* %myflags, align 4
  br label %if.end15

if.end15:                                         ; preds = %if.then14, %if.end9
  %16 = load i32, i32* %xtr, align 4
  %tobool16 = icmp ne i32 %16, 0
  br i1 %tobool16, label %if.then17, label %if.end25

if.then17:                                        ; preds = %if.end15
  %17 = load %struct._IO_FILE*, %struct._IO_FILE** @xtrerr, align 4
  %18 = load i32, i32* %ac, align 4
  %shr18 = lshr i32 %18, 5
  %and19 = and i32 %shr18, 2
  %shr20 = lshr i32 %and19, 1
  %cmp21 = icmp eq i32 %shr20, 1
  %cond23 = select i1 %cmp21, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.31, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.32, i32 0, i32 0)
  %19 = load i8*, i8** %name, align 4
  %call24 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %17, i8* %cond23, i8* %19)
  br label %if.end25

if.end25:                                         ; preds = %if.then17, %if.end15
  %20 = load i32, i32* %ac, align 4
  %shr26 = lshr i32 %20, 5
  %and27 = and i32 %shr26, 1
  %cmp28 = icmp eq i32 %and27, 0
  %conv29 = zext i1 %cmp28 to i32
  store i32 %conv29, i32* %isstr, align 4
  br i1 %cmp28, label %if.then30, label %if.else

if.then30:                                        ; preds = %if.end25
  br label %do.body

do.body:                                          ; preds = %if.then30
  %list = bitcast %union.linkroot* %svl to %struct.linklist*
  %first = getelementptr inbounds %struct.linklist, %struct.linklist* %list, i32 0, i32 0
  store %struct.linknode* %__n0, %struct.linknode** %first, align 4
  %list31 = bitcast %union.linkroot* %svl to %struct.linklist*
  %last = getelementptr inbounds %struct.linklist, %struct.linklist* %list31, i32 0, i32 1
  store %struct.linknode* %__n0, %struct.linknode** %last, align 4
  %list32 = bitcast %union.linkroot* %svl to %struct.linklist*
  %flags33 = getelementptr inbounds %struct.linklist, %struct.linklist* %list32, i32 0, i32 2
  store i32 0, i32* %flags33, align 4
  %next = getelementptr inbounds %struct.linknode, %struct.linknode* %__n0, i32 0, i32 0
  store %struct.linknode* null, %struct.linknode** %next, align 4
  %node = bitcast %union.linkroot* %svl to %struct.linknode*
  %prev = getelementptr inbounds %struct.linknode, %struct.linknode* %__n0, i32 0, i32 1
  store %struct.linknode* %node, %struct.linknode** %prev, align 4
  %21 = load %struct.estate*, %struct.estate** %state.addr, align 4
  %call34 = call i8* @ecgetstr(%struct.estate* %21, i32 2, i32* %htok)
  %dat = getelementptr inbounds %struct.linknode, %struct.linknode* %__n0, i32 0, i32 2
  store i8* %call34, i8** %dat, align 4
  br label %do.end

do.end:                                           ; preds = %do.body
  store %union.linkroot* %svl, %union.linkroot** %vl, align 4
  br label %if.end42

if.else:                                          ; preds = %if.end25
  %22 = load %struct.estate*, %struct.estate** %state.addr, align 4
  %23 = load i32, i32* %ac, align 4
  %shr35 = lshr i32 %23, 5
  %shr36 = lshr i32 %shr35, 2
  %call37 = call %union.linkroot* @ecgetlist(%struct.estate* %22, i32 %shr36, i32 2, i32* %htok)
  store %union.linkroot* %call37, %union.linkroot** %vl, align 4
  %24 = load i32, i32* @errflag, align 4
  %tobool38 = icmp ne i32 %24, 0
  br i1 %tobool38, label %if.then39, label %if.end41

if.then39:                                        ; preds = %if.else
  %25 = load i32*, i32** %opc, align 4
  %26 = load %struct.estate*, %struct.estate** %state.addr, align 4
  %pc40 = getelementptr inbounds %struct.estate, %struct.estate* %26, i32 0, i32 1
  store i32* %25, i32** %pc40, align 4
  br label %return

if.end41:                                         ; preds = %if.else
  br label %if.end42

if.end42:                                         ; preds = %if.end41, %do.end
  %27 = load %union.linkroot*, %union.linkroot** %vl, align 4
  %tobool43 = icmp ne %union.linkroot* %27, null
  br i1 %tobool43, label %land.lhs.true, label %if.end80

land.lhs.true:                                    ; preds = %if.end42
  %28 = load i32, i32* %htok, align 4
  %tobool44 = icmp ne i32 %28, 0
  br i1 %tobool44, label %if.then45, label %if.end80

if.then45:                                        ; preds = %land.lhs.true
  store i32 0, i32* %prefork_ret, align 4
  %29 = load %union.linkroot*, %union.linkroot** %vl, align 4
  %30 = load i32, i32* %isstr, align 4
  %tobool46 = icmp ne i32 %30, 0
  %cond47 = select i1 %tobool46, i32 6, i32 2
  call void @prefork(%union.linkroot* %29, i32 %cond47, i32* %prefork_ret)
  %31 = load i32, i32* @errflag, align 4
  %tobool48 = icmp ne i32 %31, 0
  br i1 %tobool48, label %if.then49, label %if.end51

if.then49:                                        ; preds = %if.then45
  %32 = load i32*, i32** %opc, align 4
  %33 = load %struct.estate*, %struct.estate** %state.addr, align 4
  %pc50 = getelementptr inbounds %struct.estate, %struct.estate* %33, i32 0, i32 1
  store i32* %32, i32** %pc50, align 4
  br label %return

if.end51:                                         ; preds = %if.then45
  %34 = load i32, i32* %prefork_ret, align 4
  %and52 = and i32 %34, 128
  %tobool53 = icmp ne i32 %and52, 0
  br i1 %tobool53, label %if.then54, label %if.end56

if.then54:                                        ; preds = %if.end51
  %35 = load i32, i32* %myflags, align 4
  %or55 = or i32 %35, 16
  store i32 %or55, i32* %myflags, align 4
  br label %if.end56

if.end56:                                         ; preds = %if.then54, %if.end51
  %36 = load i32, i32* %isstr, align 4
  %tobool57 = icmp ne i32 %36, 0
  br i1 %tobool57, label %lor.lhs.false, label %if.then68

lor.lhs.false:                                    ; preds = %if.end56
  %37 = load i8, i8* getelementptr inbounds ([181 x i8], [181 x i8]* @opts, i32 0, i32 63), align 1
  %conv58 = sext i8 %37 to i32
  %tobool59 = icmp ne i32 %conv58, 0
  br i1 %tobool59, label %land.lhs.true60, label %if.end79

land.lhs.true60:                                  ; preds = %lor.lhs.false
  %38 = load i32, i32* %isstr, align 4
  %tobool61 = icmp ne i32 %38, 0
  br i1 %tobool61, label %land.lhs.true62, label %if.end79

land.lhs.true62:                                  ; preds = %land.lhs.true60
  %39 = load %union.linkroot*, %union.linkroot** %vl, align 4
  %list63 = bitcast %union.linkroot* %39 to %struct.linklist*
  %first64 = getelementptr inbounds %struct.linklist, %struct.linklist* %list63, i32 0, i32 0
  %40 = load %struct.linknode*, %struct.linknode** %first64, align 4
  %dat65 = getelementptr inbounds %struct.linknode, %struct.linknode* %40, i32 0, i32 2
  %41 = load i8*, i8** %dat65, align 4
  %call66 = call i32 @haswilds(i8* %41)
  %tobool67 = icmp ne i32 %call66, 0
  br i1 %tobool67, label %if.then68, label %if.end79

if.then68:                                        ; preds = %land.lhs.true62, %if.end56
  %42 = load %union.linkroot*, %union.linkroot** %vl, align 4
  %43 = load i32, i32* %prefork_ret, align 4
  call void @globlist(%union.linkroot* %42, i32 %43)
  %44 = load i8, i8* getelementptr inbounds ([181 x i8], [181 x i8]* @opts, i32 0, i32 63), align 1
  %conv69 = sext i8 %44 to i32
  %tobool70 = icmp ne i32 %conv69, 0
  br i1 %tobool70, label %land.lhs.true71, label %if.end74

land.lhs.true71:                                  ; preds = %if.then68
  %45 = load i32, i32* %isstr, align 4
  %tobool72 = icmp ne i32 %45, 0
  br i1 %tobool72, label %if.then73, label %if.end74

if.then73:                                        ; preds = %land.lhs.true71
  %46 = load i8*, i8** %name, align 4
  call void @unsetparam(i8* %46)
  br label %if.end74

if.end74:                                         ; preds = %if.then73, %land.lhs.true71, %if.then68
  %47 = load i32, i32* @errflag, align 4
  %tobool75 = icmp ne i32 %47, 0
  br i1 %tobool75, label %if.then76, label %if.end78

if.then76:                                        ; preds = %if.end74
  %48 = load i32*, i32** %opc, align 4
  %49 = load %struct.estate*, %struct.estate** %state.addr, align 4
  %pc77 = getelementptr inbounds %struct.estate, %struct.estate* %49, i32 0, i32 1
  store i32* %48, i32** %pc77, align 4
  br label %return

if.end78:                                         ; preds = %if.end74
  br label %if.end79

if.end79:                                         ; preds = %if.end78, %land.lhs.true62, %land.lhs.true60, %lor.lhs.false
  br label %if.end80

if.end80:                                         ; preds = %if.end79, %land.lhs.true, %if.end42
  %50 = load i32, i32* %isstr, align 4
  %tobool81 = icmp ne i32 %50, 0
  br i1 %tobool81, label %land.lhs.true82, label %if.end153

land.lhs.true82:                                  ; preds = %if.end80
  %51 = load %union.linkroot*, %union.linkroot** %vl, align 4
  %list83 = bitcast %union.linkroot* %51 to %struct.linklist*
  %first84 = getelementptr inbounds %struct.linklist, %struct.linklist* %list83, i32 0, i32 0
  %52 = load %struct.linknode*, %struct.linknode** %first84, align 4
  %cmp85 = icmp eq %struct.linknode* %52, null
  br i1 %cmp85, label %if.then92, label %lor.lhs.false87

lor.lhs.false87:                                  ; preds = %land.lhs.true82
  %53 = load %union.linkroot*, %union.linkroot** %vl, align 4
  %list88 = bitcast %union.linkroot* %53 to %struct.linklist*
  %first89 = getelementptr inbounds %struct.linklist, %struct.linklist* %list88, i32 0, i32 0
  %54 = load %struct.linknode*, %struct.linknode** %first89, align 4
  %next90 = getelementptr inbounds %struct.linknode, %struct.linknode* %54, i32 0, i32 0
  %55 = load %struct.linknode*, %struct.linknode** %next90, align 4
  %tobool91 = icmp ne %struct.linknode* %55, null
  br i1 %tobool91, label %if.end153, label %if.then92

if.then92:                                        ; preds = %lor.lhs.false87, %land.lhs.true82
  %56 = load %union.linkroot*, %union.linkroot** %vl, align 4
  %list93 = bitcast %union.linkroot* %56 to %struct.linklist*
  %first94 = getelementptr inbounds %struct.linklist, %struct.linklist* %list93, i32 0, i32 0
  %57 = load %struct.linknode*, %struct.linknode** %first94, align 4
  %cmp95 = icmp eq %struct.linknode* %57, null
  br i1 %cmp95, label %if.then97, label %if.else99

if.then97:                                        ; preds = %if.then92
  %call98 = call i8* @ztrdup(i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i32 0, i32 0))
  store i8* %call98, i8** %val, align 4
  br label %if.end105

if.else99:                                        ; preds = %if.then92
  %58 = load %union.linkroot*, %union.linkroot** %vl, align 4
  %list100 = bitcast %union.linkroot* %58 to %struct.linklist*
  %first101 = getelementptr inbounds %struct.linklist, %struct.linklist* %list100, i32 0, i32 0
  %59 = load %struct.linknode*, %struct.linknode** %first101, align 4
  %dat102 = getelementptr inbounds %struct.linknode, %struct.linknode* %59, i32 0, i32 2
  %60 = load i8*, i8** %dat102, align 4
  call void @untokenize(i8* %60)
  %61 = load %union.linkroot*, %union.linkroot** %vl, align 4
  %call103 = call i8* @ugetnode(%union.linkroot* %61)
  %call104 = call i8* @ztrdup(i8* %call103)
  store i8* %call104, i8** %val, align 4
  br label %if.end105

if.end105:                                        ; preds = %if.else99, %if.then97
  %62 = load i32, i32* %xtr, align 4
  %tobool106 = icmp ne i32 %62, 0
  br i1 %tobool106, label %if.then107, label %if.end110

if.then107:                                       ; preds = %if.end105
  %63 = load i8*, i8** %val, align 4
  %64 = load %struct._IO_FILE*, %struct._IO_FILE** @xtrerr, align 4
  %call108 = call i8* @quotedzputs(i8* %63, %struct._IO_FILE* %64)
  %65 = load %struct._IO_FILE*, %struct._IO_FILE** @xtrerr, align 4
  %call109 = call i32 @fputc(i32 32, %struct._IO_FILE* %65)
  br label %if.end110

if.end110:                                        ; preds = %if.then107, %if.end105
  %66 = load i32, i32* %addflags.addr, align 4
  %and111 = and i32 %66, 1
  %tobool112 = icmp ne i32 %and111, 0
  br i1 %tobool112, label %land.lhs.true113, label %if.else146

land.lhs.true113:                                 ; preds = %if.end110
  %67 = load i8*, i8** %name, align 4
  %call114 = call i8* @strchr(i8* %67, i32 91)
  %tobool115 = icmp ne i8* %call114, null
  br i1 %tobool115, label %if.else146, label %if.then116

if.then116:                                       ; preds = %land.lhs.true113
  %68 = load i32, i32* %addflags.addr, align 4
  %and117 = and i32 %68, 2
  %tobool118 = icmp ne i32 %and117, 0
  br i1 %tobool118, label %land.lhs.true119, label %if.end133

land.lhs.true119:                                 ; preds = %if.then116
  %69 = load i8, i8* getelementptr inbounds ([181 x i8], [181 x i8]* @opts, i32 0, i32 155), align 1
  %conv120 = sext i8 %69 to i32
  %tobool121 = icmp ne i32 %conv120, 0
  br i1 %tobool121, label %land.lhs.true122, label %if.end133

land.lhs.true122:                                 ; preds = %land.lhs.true119
  %70 = load %struct.hashtable*, %struct.hashtable** @paramtab, align 4
  %removenode = getelementptr inbounds %struct.hashtable, %struct.hashtable* %70, i32 0, i32 11
  %71 = load %struct.hashnode* (%struct.hashtable*, i8*)*, %struct.hashnode* (%struct.hashtable*, i8*)** %removenode, align 4
  %72 = load %struct.hashtable*, %struct.hashtable** @paramtab, align 4
  %73 = load i8*, i8** %name, align 4
  %call123 = call %struct.hashnode* %71(%struct.hashtable* %72, i8* %73)
  %74 = bitcast %struct.hashnode* %call123 to %struct.param*
  store %struct.param* %74, %struct.param** %pm, align 4
  %tobool124 = icmp ne %struct.param* %74, null
  br i1 %tobool124, label %land.lhs.true125, label %if.end133

land.lhs.true125:                                 ; preds = %land.lhs.true122
  %75 = load %struct.param*, %struct.param** %pm, align 4
  %node126 = getelementptr inbounds %struct.param, %struct.param* %75, i32 0, i32 0
  %flags127 = getelementptr inbounds %struct.hashnode, %struct.hashnode* %node126, i32 0, i32 2
  %76 = load i32, i32* %flags127, align 8
  %and128 = and i32 %76, 16777216
  %tobool129 = icmp ne i32 %and128, 0
  br i1 %tobool129, label %if.then130, label %if.end133

if.then130:                                       ; preds = %land.lhs.true125
  %77 = load %struct.param*, %struct.param** %pm, align 4
  %node131 = getelementptr inbounds %struct.param, %struct.param* %77, i32 0, i32 0
  %nam = getelementptr inbounds %struct.hashnode, %struct.hashnode* %node131, i32 0, i32 1
  %78 = load i8*, i8** %nam, align 4
  call void (i8*, ...) @zerr(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.33, i32 0, i32 0), i8* %78)
  %79 = load i8*, i8** %val, align 4
  call void @zsfree(i8* %79)
  %80 = load i32*, i32** %opc, align 4
  %81 = load %struct.estate*, %struct.estate** %state.addr, align 4
  %pc132 = getelementptr inbounds %struct.estate, %struct.estate* %81, i32 0, i32 1
  store i32* %80, i32** %pc132, align 4
  br label %return

if.end133:                                        ; preds = %land.lhs.true125, %land.lhs.true122, %land.lhs.true119, %if.then116
  %82 = load i8*, i8** %name, align 4
  %call134 = call i32 @strcmp(i8* %82, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.34, i32 0, i32 0))
  %cmp135 = icmp eq i32 %call134, 0
  br i1 %cmp135, label %if.then137, label %if.end139

if.then137:                                       ; preds = %if.end133
  %83 = load i8*, i8** @STTYval, align 4
  call void @zsfree(i8* %83)
  %84 = load i8*, i8** %val, align 4
  %call138 = call i8* @ztrdup(i8* %84)
  store i8* %call138, i8** @STTYval, align 4
  br label %if.end139

if.end139:                                        ; preds = %if.then137, %if.end133
  %85 = load i8, i8* getelementptr inbounds ([181 x i8], [181 x i8]* @opts, i32 0, i32 3), align 1
  %conv140 = sext i8 %85 to i32
  store i32 %conv140, i32* %allexp, align 4
  store i8 1, i8* getelementptr inbounds ([181 x i8], [181 x i8]* @opts, i32 0, i32 3), align 1
  %86 = load i8, i8* getelementptr inbounds ([181 x i8], [181 x i8]* @opts, i32 0, i32 96), align 1
  %tobool141 = icmp ne i8 %86, 0
  br i1 %tobool141, label %if.then142, label %if.end143

if.then142:                                       ; preds = %if.end139
  %87 = load i8*, i8** %name, align 4
  call void @unsetparam(i8* %87)
  br label %if.end143

if.end143:                                        ; preds = %if.then142, %if.end139
  %88 = load i8*, i8** %name, align 4
  %89 = load i8*, i8** %val, align 4
  %90 = load i32, i32* %myflags, align 4
  %call144 = call %struct.param* @assignsparam(i8* %88, i8* %89, i32 %90)
  store %struct.param* %call144, %struct.param** %pm, align 4
  %91 = load i32, i32* %allexp, align 4
  %conv145 = trunc i32 %91 to i8
  store i8 %conv145, i8* getelementptr inbounds ([181 x i8], [181 x i8]* @opts, i32 0, i32 3), align 1
  br label %if.end148

if.else146:                                       ; preds = %land.lhs.true113, %if.end110
  %92 = load i8*, i8** %name, align 4
  %93 = load i8*, i8** %val, align 4
  %94 = load i32, i32* %myflags, align 4
  %call147 = call %struct.param* @assignsparam(i8* %92, i8* %93, i32 %94)
  store %struct.param* %call147, %struct.param** %pm, align 4
  br label %if.end148

if.end148:                                        ; preds = %if.else146, %if.end143
  %95 = load i32, i32* @errflag, align 4
  %tobool149 = icmp ne i32 %95, 0
  br i1 %tobool149, label %if.then150, label %if.end152

if.then150:                                       ; preds = %if.end148
  %96 = load i32*, i32** %opc, align 4
  %97 = load %struct.estate*, %struct.estate** %state.addr, align 4
  %pc151 = getelementptr inbounds %struct.estate, %struct.estate* %97, i32 0, i32 1
  store i32* %96, i32** %pc151, align 4
  br label %return

if.end152:                                        ; preds = %if.end148
  br label %while.cond

if.end153:                                        ; preds = %lor.lhs.false87, %if.end80
  %98 = load %union.linkroot*, %union.linkroot** %vl, align 4
  %tobool154 = icmp ne %union.linkroot* %98, null
  br i1 %tobool154, label %if.then155, label %if.else167

if.then155:                                       ; preds = %if.end153
  %99 = load %union.linkroot*, %union.linkroot** %vl, align 4
  %call156 = call i32 @countlinknodes(%union.linkroot* %99)
  %add = add nsw i32 %call156, 1
  %mul = mul i32 4, %add
  %call157 = call i8* @zalloc(i32 %mul)
  %100 = bitcast i8* %call157 to i8**
  store i8** %100, i8*** %arr, align 4
  store i8** %100, i8*** %ptr, align 4
  br label %while.cond158

while.cond158:                                    ; preds = %while.body163, %if.then155
  %101 = load %union.linkroot*, %union.linkroot** %vl, align 4
  %list159 = bitcast %union.linkroot* %101 to %struct.linklist*
  %first160 = getelementptr inbounds %struct.linklist, %struct.linklist* %list159, i32 0, i32 0
  %102 = load %struct.linknode*, %struct.linknode** %first160, align 4
  %cmp161 = icmp ne %struct.linknode* %102, null
  br i1 %cmp161, label %while.body163, label %while.end

while.body163:                                    ; preds = %while.cond158
  %103 = load %union.linkroot*, %union.linkroot** %vl, align 4
  %call164 = call i8* @ugetnode(%union.linkroot* %103)
  %call165 = call i8* @ztrdup(i8* %call164)
  %104 = load i8**, i8*** %ptr, align 4
  %incdec.ptr166 = getelementptr inbounds i8*, i8** %104, i32 1
  store i8** %incdec.ptr166, i8*** %ptr, align 4
  store i8* %call165, i8** %104, align 4
  br label %while.cond158

while.end:                                        ; preds = %while.cond158
  br label %if.end169

if.else167:                                       ; preds = %if.end153
  %call168 = call i8* @zalloc(i32 4)
  %105 = bitcast i8* %call168 to i8**
  store i8** %105, i8*** %arr, align 4
  store i8** %105, i8*** %ptr, align 4
  br label %if.end169

if.end169:                                        ; preds = %if.else167, %while.end
  %106 = load i8**, i8*** %ptr, align 4
  store i8* null, i8** %106, align 4
  %107 = load i32, i32* %xtr, align 4
  %tobool170 = icmp ne i32 %107, 0
  br i1 %tobool170, label %if.then171, label %if.end178

if.then171:                                       ; preds = %if.end169
  %108 = load %struct._IO_FILE*, %struct._IO_FILE** @xtrerr, align 4
  %call172 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %108, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.35, i32 0, i32 0))
  %109 = load i8**, i8*** %arr, align 4
  store i8** %109, i8*** %ptr, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then171
  %110 = load i8**, i8*** %ptr, align 4
  %111 = load i8*, i8** %110, align 4
  %tobool173 = icmp ne i8* %111, null
  br i1 %tobool173, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %112 = load i8**, i8*** %ptr, align 4
  %113 = load i8*, i8** %112, align 4
  %114 = load %struct._IO_FILE*, %struct._IO_FILE** @xtrerr, align 4
  %call174 = call i8* @quotedzputs(i8* %113, %struct._IO_FILE* %114)
  %115 = load %struct._IO_FILE*, %struct._IO_FILE** @xtrerr, align 4
  %call175 = call i32 @fputc(i32 32, %struct._IO_FILE* %115)
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %116 = load i8**, i8*** %ptr, align 4
  %incdec.ptr176 = getelementptr inbounds i8*, i8** %116, i32 1
  store i8** %incdec.ptr176, i8*** %ptr, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %117 = load %struct._IO_FILE*, %struct._IO_FILE** @xtrerr, align 4
  %call177 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %117, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.36, i32 0, i32 0))
  br label %if.end178

if.end178:                                        ; preds = %for.end, %if.end169
  %118 = load i8*, i8** %name, align 4
  %119 = load i8**, i8*** %arr, align 4
  %120 = load i32, i32* %myflags, align 4
  %call179 = call %struct.param* @assignaparam(i8* %118, i8** %119, i32 %120)
  %121 = load i32, i32* @errflag, align 4
  %tobool180 = icmp ne i32 %121, 0
  br i1 %tobool180, label %if.then181, label %if.end183

if.then181:                                       ; preds = %if.end178
  %122 = load i32*, i32** %opc, align 4
  %123 = load %struct.estate*, %struct.estate** %state.addr, align 4
  %pc182 = getelementptr inbounds %struct.estate, %struct.estate* %123, i32 0, i32 1
  store i32* %122, i32** %pc182, align 4
  br label %return

if.end183:                                        ; preds = %if.end178
  br label %while.cond

while.end184:                                     ; preds = %while.cond
  %124 = load i32*, i32** %opc, align 4
  %125 = load %struct.estate*, %struct.estate** %state.addr, align 4
  %pc185 = getelementptr inbounds %struct.estate, %struct.estate* %125, i32 0, i32 1
  store i32* %124, i32** %pc185, align 4
  br label %return

return:                                           ; preds = %while.end184, %if.then181, %if.then150, %if.then130, %if.then76, %if.then49, %if.then39
  ret void
}

; Function Attrs: noinline nounwind
define internal i32 @execfuncdef(%struct.estate* %state, %struct.eprog* %redir_prog) #0 {
entry:
  %retval = alloca i32, align 4
  %state.addr = alloca %struct.estate*, align 4
  %redir_prog.addr = alloca %struct.eprog*, align 4
  %shf = alloca %struct.shfunc*, align 4
  %s = alloca i8*, align 4
  %signum = alloca i32, align 4
  %nprg = alloca i32, align 4
  %sbeg = alloca i32, align 4
  %nstrs = alloca i32, align 4
  %npats = alloca i32, align 4
  %len = alloca i32, align 4
  %plen = alloca i32, align 4
  %i = alloca i32, align 4
  %htok = alloca i32, align 4
  %ret = alloca i32, align 4
  %anon_func = alloca i32, align 4
  %beg = alloca i32*, align 4
  %end = alloca i32*, align 4
  %prog = alloca %struct.eprog*, align 4
  %pp = alloca %struct.patprog**, align 4
  %names = alloca %union.linkroot*, align 4
  %args = alloca %union.linkroot*, align 4
  store %struct.estate* %state, %struct.estate** %state.addr, align 4
  store %struct.eprog* %redir_prog, %struct.eprog** %redir_prog.addr, align 4
  store i8* null, i8** %s, align 4
  store i32 0, i32* %htok, align 4
  store i32 0, i32* %ret, align 4
  store i32 0, i32* %anon_func, align 4
  %0 = load %struct.estate*, %struct.estate** %state.addr, align 4
  %pc = getelementptr inbounds %struct.estate, %struct.estate* %0, i32 0, i32 1
  %1 = load i32*, i32** %pc, align 4
  store i32* %1, i32** %beg, align 4
  %2 = load i32*, i32** %beg, align 4
  %3 = load %struct.estate*, %struct.estate** %state.addr, align 4
  %pc1 = getelementptr inbounds %struct.estate, %struct.estate* %3, i32 0, i32 1
  %4 = load i32*, i32** %pc1, align 4
  %arrayidx = getelementptr inbounds i32, i32* %4, i32 -1
  %5 = load i32, i32* %arrayidx, align 4
  %shr = lshr i32 %5, 5
  %add.ptr = getelementptr inbounds i32, i32* %2, i32 %shr
  store i32* %add.ptr, i32** %end, align 4
  %6 = load %struct.estate*, %struct.estate** %state.addr, align 4
  %7 = load %struct.estate*, %struct.estate** %state.addr, align 4
  %pc2 = getelementptr inbounds %struct.estate, %struct.estate* %7, i32 0, i32 1
  %8 = load i32*, i32** %pc2, align 4
  %incdec.ptr = getelementptr inbounds i32, i32* %8, i32 1
  store i32* %incdec.ptr, i32** %pc2, align 4
  %9 = load i32, i32* %8, align 4
  %call = call %union.linkroot* @ecgetlist(%struct.estate* %6, i32 %9, i32 2, i32* %htok)
  store %union.linkroot* %call, %union.linkroot** %names, align 4
  %10 = load i32*, i32** %end, align 4
  %11 = load i32*, i32** %beg, align 4
  %sub.ptr.lhs.cast = ptrtoint i32* %10 to i32
  %sub.ptr.rhs.cast = ptrtoint i32* %11 to i32
  %sub.ptr.sub = sub i32 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i32 %sub.ptr.sub, 4
  store i32 %sub.ptr.div, i32* %nprg, align 4
  %12 = load %struct.estate*, %struct.estate** %state.addr, align 4
  %pc3 = getelementptr inbounds %struct.estate, %struct.estate* %12, i32 0, i32 1
  %13 = load i32*, i32** %pc3, align 4
  %incdec.ptr4 = getelementptr inbounds i32, i32* %13, i32 1
  store i32* %incdec.ptr4, i32** %pc3, align 4
  %14 = load i32, i32* %13, align 4
  store i32 %14, i32* %sbeg, align 4
  %15 = load %struct.estate*, %struct.estate** %state.addr, align 4
  %pc5 = getelementptr inbounds %struct.estate, %struct.estate* %15, i32 0, i32 1
  %16 = load i32*, i32** %pc5, align 4
  %incdec.ptr6 = getelementptr inbounds i32, i32* %16, i32 1
  store i32* %incdec.ptr6, i32** %pc5, align 4
  %17 = load i32, i32* %16, align 4
  store i32 %17, i32* %nstrs, align 4
  %18 = load %struct.estate*, %struct.estate** %state.addr, align 4
  %pc7 = getelementptr inbounds %struct.estate, %struct.estate* %18, i32 0, i32 1
  %19 = load i32*, i32** %pc7, align 4
  %incdec.ptr8 = getelementptr inbounds i32, i32* %19, i32 1
  store i32* %incdec.ptr8, i32** %pc7, align 4
  %20 = load i32, i32* %19, align 4
  store i32 %20, i32* %npats, align 4
  %21 = load i32*, i32** %end, align 4
  %22 = load %struct.estate*, %struct.estate** %state.addr, align 4
  %pc9 = getelementptr inbounds %struct.estate, %struct.estate* %22, i32 0, i32 1
  %23 = load i32*, i32** %pc9, align 4
  %sub.ptr.lhs.cast10 = ptrtoint i32* %21 to i32
  %sub.ptr.rhs.cast11 = ptrtoint i32* %23 to i32
  %sub.ptr.sub12 = sub i32 %sub.ptr.lhs.cast10, %sub.ptr.rhs.cast11
  %sub.ptr.div13 = sdiv exact i32 %sub.ptr.sub12, 4
  store i32 %sub.ptr.div13, i32* %nprg, align 4
  %24 = load i32, i32* %nprg, align 4
  %mul = mul i32 %24, 4
  store i32 %mul, i32* %plen, align 4
  %25 = load i32, i32* %plen, align 4
  %26 = load i32, i32* %npats, align 4
  %mul14 = mul i32 %26, 4
  %add = add i32 %25, %mul14
  %27 = load i32, i32* %nstrs, align 4
  %add15 = add i32 %add, %27
  store i32 %add15, i32* %len, align 4
  %28 = load i32, i32* %htok, align 4
  %tobool = icmp ne i32 %28, 0
  br i1 %tobool, label %land.lhs.true, label %if.end20

land.lhs.true:                                    ; preds = %entry
  %29 = load %union.linkroot*, %union.linkroot** %names, align 4
  %tobool16 = icmp ne %union.linkroot* %29, null
  br i1 %tobool16, label %if.then, label %if.end20

if.then:                                          ; preds = %land.lhs.true
  %30 = load %union.linkroot*, %union.linkroot** %names, align 4
  call void @execsubst(%union.linkroot* %30)
  %31 = load i32, i32* @errflag, align 4
  %tobool17 = icmp ne i32 %31, 0
  br i1 %tobool17, label %if.then18, label %if.end

if.then18:                                        ; preds = %if.then
  %32 = load i32*, i32** %end, align 4
  %33 = load %struct.estate*, %struct.estate** %state.addr, align 4
  %pc19 = getelementptr inbounds %struct.estate, %struct.estate* %33, i32 0, i32 1
  store i32* %32, i32** %pc19, align 4
  store i32 1, i32* %retval, align 4
  br label %return

if.end:                                           ; preds = %if.then
  br label %if.end20

if.end20:                                         ; preds = %if.end, %land.lhs.true, %entry
  br label %while.cond

while.cond:                                       ; preds = %if.end176, %if.end20
  %34 = load %union.linkroot*, %union.linkroot** %names, align 4
  %tobool21 = icmp ne %union.linkroot* %34, null
  br i1 %tobool21, label %lor.rhs, label %lor.end

lor.rhs:                                          ; preds = %while.cond
  %35 = load %union.linkroot*, %union.linkroot** %names, align 4
  %call22 = call i8* @ugetnode(%union.linkroot* %35)
  store i8* %call22, i8** %s, align 4
  %tobool23 = icmp ne i8* %call22, null
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %while.cond
  %36 = phi i1 [ true, %while.cond ], [ %tobool23, %lor.rhs ]
  br i1 %36, label %while.body, label %while.end

while.body:                                       ; preds = %lor.end
  %37 = load %union.linkroot*, %union.linkroot** %names, align 4
  %tobool24 = icmp ne %union.linkroot* %37, null
  br i1 %tobool24, label %if.else, label %if.then25

if.then25:                                        ; preds = %while.body
  %call26 = call i8* @zhalloc(i32 36)
  %38 = bitcast i8* %call26 to %struct.eprog*
  store %struct.eprog* %38, %struct.eprog** %prog, align 4
  %39 = load %struct.eprog*, %struct.eprog** %prog, align 4
  %nref = getelementptr inbounds %struct.eprog, %struct.eprog* %39, i32 0, i32 3
  store i32 -1, i32* %nref, align 4
  br label %if.end29

if.else:                                          ; preds = %while.body
  %call27 = call i8* @zalloc(i32 36)
  %40 = bitcast i8* %call27 to %struct.eprog*
  store %struct.eprog* %40, %struct.eprog** %prog, align 4
  %41 = load %struct.eprog*, %struct.eprog** %prog, align 4
  %nref28 = getelementptr inbounds %struct.eprog, %struct.eprog* %41, i32 0, i32 3
  store i32 1, i32* %nref28, align 4
  br label %if.end29

if.end29:                                         ; preds = %if.else, %if.then25
  %42 = load i32, i32* %npats, align 4
  %43 = load %struct.eprog*, %struct.eprog** %prog, align 4
  %npats30 = getelementptr inbounds %struct.eprog, %struct.eprog* %43, i32 0, i32 2
  store i32 %42, i32* %npats30, align 4
  %44 = load i32, i32* %len, align 4
  %45 = load %struct.eprog*, %struct.eprog** %prog, align 4
  %len31 = getelementptr inbounds %struct.eprog, %struct.eprog* %45, i32 0, i32 1
  store i32 %44, i32* %len31, align 4
  %46 = load %struct.estate*, %struct.estate** %state.addr, align 4
  %prog32 = getelementptr inbounds %struct.estate, %struct.estate* %46, i32 0, i32 0
  %47 = load %struct.eprog*, %struct.eprog** %prog32, align 4
  %dump = getelementptr inbounds %struct.eprog, %struct.eprog* %47, i32 0, i32 8
  %48 = load %struct.funcdump*, %struct.funcdump** %dump, align 4
  %tobool33 = icmp ne %struct.funcdump* %48, null
  br i1 %tobool33, label %if.then35, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end29
  %49 = load %union.linkroot*, %union.linkroot** %names, align 4
  %tobool34 = icmp ne %union.linkroot* %49, null
  br i1 %tobool34, label %if.else56, label %if.then35

if.then35:                                        ; preds = %lor.lhs.false, %if.end29
  %50 = load %union.linkroot*, %union.linkroot** %names, align 4
  %tobool36 = icmp ne %union.linkroot* %50, null
  br i1 %tobool36, label %if.else41, label %if.then37

if.then37:                                        ; preds = %if.then35
  %51 = load %struct.eprog*, %struct.eprog** %prog, align 4
  %flags = getelementptr inbounds %struct.eprog, %struct.eprog* %51, i32 0, i32 0
  store i32 2, i32* %flags, align 4
  %52 = load %struct.eprog*, %struct.eprog** %prog, align 4
  %dump38 = getelementptr inbounds %struct.eprog, %struct.eprog* %52, i32 0, i32 8
  store %struct.funcdump* null, %struct.funcdump** %dump38, align 4
  %53 = load i32, i32* %npats, align 4
  %mul39 = mul i32 %53, 4
  %call40 = call i8* @zhalloc(i32 %mul39)
  %54 = bitcast i8* %call40 to %struct.patprog**
  store %struct.patprog** %54, %struct.patprog*** %pp, align 4
  %55 = load %struct.eprog*, %struct.eprog** %prog, align 4
  %pats = getelementptr inbounds %struct.eprog, %struct.eprog* %55, i32 0, i32 4
  store %struct.patprog** %54, %struct.patprog*** %pats, align 4
  br label %if.end51

if.else41:                                        ; preds = %if.then35
  %56 = load %struct.eprog*, %struct.eprog** %prog, align 4
  %flags42 = getelementptr inbounds %struct.eprog, %struct.eprog* %56, i32 0, i32 0
  store i32 4, i32* %flags42, align 4
  %57 = load %struct.estate*, %struct.estate** %state.addr, align 4
  %prog43 = getelementptr inbounds %struct.estate, %struct.estate* %57, i32 0, i32 0
  %58 = load %struct.eprog*, %struct.eprog** %prog43, align 4
  %dump44 = getelementptr inbounds %struct.eprog, %struct.eprog* %58, i32 0, i32 8
  %59 = load %struct.funcdump*, %struct.funcdump** %dump44, align 4
  call void @incrdumpcount(%struct.funcdump* %59)
  %60 = load %struct.estate*, %struct.estate** %state.addr, align 4
  %prog45 = getelementptr inbounds %struct.estate, %struct.estate* %60, i32 0, i32 0
  %61 = load %struct.eprog*, %struct.eprog** %prog45, align 4
  %dump46 = getelementptr inbounds %struct.eprog, %struct.eprog* %61, i32 0, i32 8
  %62 = load %struct.funcdump*, %struct.funcdump** %dump46, align 4
  %63 = load %struct.eprog*, %struct.eprog** %prog, align 4
  %dump47 = getelementptr inbounds %struct.eprog, %struct.eprog* %63, i32 0, i32 8
  store %struct.funcdump* %62, %struct.funcdump** %dump47, align 4
  %64 = load i32, i32* %npats, align 4
  %mul48 = mul i32 %64, 4
  %call49 = call i8* @zalloc(i32 %mul48)
  %65 = bitcast i8* %call49 to %struct.patprog**
  store %struct.patprog** %65, %struct.patprog*** %pp, align 4
  %66 = load %struct.eprog*, %struct.eprog** %prog, align 4
  %pats50 = getelementptr inbounds %struct.eprog, %struct.eprog* %66, i32 0, i32 4
  store %struct.patprog** %65, %struct.patprog*** %pats50, align 4
  br label %if.end51

if.end51:                                         ; preds = %if.else41, %if.then37
  %67 = load %struct.estate*, %struct.estate** %state.addr, align 4
  %pc52 = getelementptr inbounds %struct.estate, %struct.estate* %67, i32 0, i32 1
  %68 = load i32*, i32** %pc52, align 4
  %69 = load %struct.eprog*, %struct.eprog** %prog, align 4
  %prog53 = getelementptr inbounds %struct.eprog, %struct.eprog* %69, i32 0, i32 5
  store i32* %68, i32** %prog53, align 4
  %70 = load %struct.estate*, %struct.estate** %state.addr, align 4
  %strs = getelementptr inbounds %struct.estate, %struct.estate* %70, i32 0, i32 2
  %71 = load i8*, i8** %strs, align 4
  %72 = load i32, i32* %sbeg, align 4
  %add.ptr54 = getelementptr inbounds i8, i8* %71, i32 %72
  %73 = load %struct.eprog*, %struct.eprog** %prog, align 4
  %strs55 = getelementptr inbounds %struct.eprog, %struct.eprog* %73, i32 0, i32 6
  store i8* %add.ptr54, i8** %strs55, align 4
  br label %if.end72

if.else56:                                        ; preds = %lor.lhs.false
  %74 = load %struct.eprog*, %struct.eprog** %prog, align 4
  %flags57 = getelementptr inbounds %struct.eprog, %struct.eprog* %74, i32 0, i32 0
  store i32 1, i32* %flags57, align 4
  %75 = load i32, i32* %len, align 4
  %call58 = call i8* @zalloc(i32 %75)
  %76 = bitcast i8* %call58 to %struct.patprog**
  store %struct.patprog** %76, %struct.patprog*** %pp, align 4
  %77 = load %struct.eprog*, %struct.eprog** %prog, align 4
  %pats59 = getelementptr inbounds %struct.eprog, %struct.eprog* %77, i32 0, i32 4
  store %struct.patprog** %76, %struct.patprog*** %pats59, align 4
  %78 = load %struct.eprog*, %struct.eprog** %prog, align 4
  %pats60 = getelementptr inbounds %struct.eprog, %struct.eprog* %78, i32 0, i32 4
  %79 = load %struct.patprog**, %struct.patprog*** %pats60, align 4
  %80 = load i32, i32* %npats, align 4
  %add.ptr61 = getelementptr inbounds %struct.patprog*, %struct.patprog** %79, i32 %80
  %81 = bitcast %struct.patprog** %add.ptr61 to i32*
  %82 = load %struct.eprog*, %struct.eprog** %prog, align 4
  %prog62 = getelementptr inbounds %struct.eprog, %struct.eprog* %82, i32 0, i32 5
  store i32* %81, i32** %prog62, align 4
  %83 = load %struct.eprog*, %struct.eprog** %prog, align 4
  %prog63 = getelementptr inbounds %struct.eprog, %struct.eprog* %83, i32 0, i32 5
  %84 = load i32*, i32** %prog63, align 4
  %85 = load i32, i32* %nprg, align 4
  %add.ptr64 = getelementptr inbounds i32, i32* %84, i32 %85
  %86 = bitcast i32* %add.ptr64 to i8*
  %87 = load %struct.eprog*, %struct.eprog** %prog, align 4
  %strs65 = getelementptr inbounds %struct.eprog, %struct.eprog* %87, i32 0, i32 6
  store i8* %86, i8** %strs65, align 4
  %88 = load %struct.eprog*, %struct.eprog** %prog, align 4
  %dump66 = getelementptr inbounds %struct.eprog, %struct.eprog* %88, i32 0, i32 8
  store %struct.funcdump* null, %struct.funcdump** %dump66, align 4
  %89 = load %struct.eprog*, %struct.eprog** %prog, align 4
  %prog67 = getelementptr inbounds %struct.eprog, %struct.eprog* %89, i32 0, i32 5
  %90 = load i32*, i32** %prog67, align 4
  %91 = bitcast i32* %90 to i8*
  %92 = load %struct.estate*, %struct.estate** %state.addr, align 4
  %pc68 = getelementptr inbounds %struct.estate, %struct.estate* %92, i32 0, i32 1
  %93 = load i32*, i32** %pc68, align 4
  %94 = bitcast i32* %93 to i8*
  %95 = load i32, i32* %plen, align 4
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %91, i8* %94, i32 %95, i32 4, i1 false)
  %96 = load %struct.eprog*, %struct.eprog** %prog, align 4
  %strs69 = getelementptr inbounds %struct.eprog, %struct.eprog* %96, i32 0, i32 6
  %97 = load i8*, i8** %strs69, align 4
  %98 = load %struct.estate*, %struct.estate** %state.addr, align 4
  %strs70 = getelementptr inbounds %struct.estate, %struct.estate* %98, i32 0, i32 2
  %99 = load i8*, i8** %strs70, align 4
  %100 = load i32, i32* %sbeg, align 4
  %add.ptr71 = getelementptr inbounds i8, i8* %99, i32 %100
  %101 = load i32, i32* %nstrs, align 4
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %97, i8* %add.ptr71, i32 %101, i32 1, i1 false)
  br label %if.end72

if.end72:                                         ; preds = %if.else56, %if.end51
  %102 = load i32, i32* %npats, align 4
  store i32 %102, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end72
  %103 = load i32, i32* %i, align 4
  %dec = add nsw i32 %103, -1
  store i32 %dec, i32* %i, align 4
  %tobool73 = icmp ne i32 %103, 0
  br i1 %tobool73, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %104 = load %struct.patprog**, %struct.patprog*** %pp, align 4
  store %struct.patprog* inttoptr (i32 1 to %struct.patprog*), %struct.patprog** %104, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %105 = load %struct.patprog**, %struct.patprog*** %pp, align 4
  %incdec.ptr74 = getelementptr inbounds %struct.patprog*, %struct.patprog** %105, i32 1
  store %struct.patprog** %incdec.ptr74, %struct.patprog*** %pp, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %106 = load %struct.eprog*, %struct.eprog** %prog, align 4
  %shf75 = getelementptr inbounds %struct.eprog, %struct.eprog* %106, i32 0, i32 7
  store %struct.shfunc* null, %struct.shfunc** %shf75, align 4
  %call76 = call i8* @zalloc(i32 32)
  %107 = bitcast i8* %call76 to %struct.shfunc*
  store %struct.shfunc* %107, %struct.shfunc** %shf, align 4
  %108 = load %struct.eprog*, %struct.eprog** %prog, align 4
  %109 = load %struct.shfunc*, %struct.shfunc** %shf, align 4
  %funcdef = getelementptr inbounds %struct.shfunc, %struct.shfunc* %109, i32 0, i32 3
  store %struct.eprog* %108, %struct.eprog** %funcdef, align 4
  %110 = load %struct.shfunc*, %struct.shfunc** %shf, align 4
  %node = getelementptr inbounds %struct.shfunc, %struct.shfunc* %110, i32 0, i32 0
  %flags77 = getelementptr inbounds %struct.hashnode, %struct.hashnode* %node, i32 0, i32 2
  store i32 0, i32* %flags77, align 4
  %111 = load i8*, i8** @scriptfilename, align 4
  %call78 = call i8* @ztrdup(i8* %111)
  %112 = load %struct.shfunc*, %struct.shfunc** %shf, align 4
  %filename = getelementptr inbounds %struct.shfunc, %struct.shfunc* %112, i32 0, i32 1
  store i8* %call78, i8** %filename, align 4
  %113 = load %struct.funcstack*, %struct.funcstack** @funcstack, align 4
  %tobool79 = icmp ne %struct.funcstack* %113, null
  br i1 %tobool79, label %land.lhs.true80, label %cond.false

land.lhs.true80:                                  ; preds = %for.end
  %114 = load %struct.funcstack*, %struct.funcstack** @funcstack, align 4
  %tp = getelementptr inbounds %struct.funcstack, %struct.funcstack* %114, i32 0, i32 6
  %115 = load i32, i32* %tp, align 4
  %cmp = icmp eq i32 %115, 1
  br i1 %cmp, label %cond.true, label %lor.lhs.false81

lor.lhs.false81:                                  ; preds = %land.lhs.true80
  %116 = load %struct.funcstack*, %struct.funcstack** @funcstack, align 4
  %tp82 = getelementptr inbounds %struct.funcstack, %struct.funcstack* %116, i32 0, i32 6
  %117 = load i32, i32* %tp82, align 4
  %cmp83 = icmp eq i32 %117, 2
  br i1 %cmp83, label %cond.true, label %cond.false

cond.true:                                        ; preds = %lor.lhs.false81, %land.lhs.true80
  %118 = load %struct.funcstack*, %struct.funcstack** @funcstack, align 4
  %flineno = getelementptr inbounds %struct.funcstack, %struct.funcstack* %118, i32 0, i32 4
  %119 = load i32, i32* %flineno, align 4
  %120 = load i32, i32* @lineno, align 4
  %add84 = add nsw i32 %119, %120
  br label %cond.end

cond.false:                                       ; preds = %lor.lhs.false81, %for.end
  %121 = load i32, i32* @lineno, align 4
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %add84, %cond.true ], [ %121, %cond.false ]
  %122 = load %struct.shfunc*, %struct.shfunc** %shf, align 4
  %lineno = getelementptr inbounds %struct.shfunc, %struct.shfunc* %122, i32 0, i32 2
  store i32 %cond, i32* %lineno, align 4
  %123 = load %union.linkroot*, %union.linkroot** %names, align 4
  %tobool85 = icmp ne %union.linkroot* %123, null
  br i1 %tobool85, label %land.lhs.true86, label %if.else92

land.lhs.true86:                                  ; preds = %cond.end
  %124 = load %union.linkroot*, %union.linkroot** %names, align 4
  %list = bitcast %union.linkroot* %124 to %struct.linklist*
  %first = getelementptr inbounds %struct.linklist, %struct.linklist* %list, i32 0, i32 0
  %125 = load %struct.linknode*, %struct.linknode** %first, align 4
  %cmp87 = icmp ne %struct.linknode* %125, null
  br i1 %cmp87, label %land.lhs.true88, label %if.else92

land.lhs.true88:                                  ; preds = %land.lhs.true86
  %126 = load %struct.eprog*, %struct.eprog** %redir_prog.addr, align 4
  %tobool89 = icmp ne %struct.eprog* %126, null
  br i1 %tobool89, label %if.then90, label %if.else92

if.then90:                                        ; preds = %land.lhs.true88
  %127 = load %struct.eprog*, %struct.eprog** %redir_prog.addr, align 4
  %call91 = call %struct.eprog* @dupeprog(%struct.eprog* %127, i32 0)
  %128 = load %struct.shfunc*, %struct.shfunc** %shf, align 4
  %redir = getelementptr inbounds %struct.shfunc, %struct.shfunc* %128, i32 0, i32 4
  store %struct.eprog* %call91, %struct.eprog** %redir, align 4
  br label %if.end94

if.else92:                                        ; preds = %land.lhs.true88, %land.lhs.true86, %cond.end
  %129 = load %struct.eprog*, %struct.eprog** %redir_prog.addr, align 4
  %130 = load %struct.shfunc*, %struct.shfunc** %shf, align 4
  %redir93 = getelementptr inbounds %struct.shfunc, %struct.shfunc* %130, i32 0, i32 4
  store %struct.eprog* %129, %struct.eprog** %redir93, align 4
  store %struct.eprog* null, %struct.eprog** %redir_prog.addr, align 4
  br label %if.end94

if.end94:                                         ; preds = %if.else92, %if.then90
  %131 = load %struct.shfunc*, %struct.shfunc** %shf, align 4
  call void @shfunc_set_sticky(%struct.shfunc* %131)
  %132 = load %union.linkroot*, %union.linkroot** %names, align 4
  %tobool95 = icmp ne %union.linkroot* %132, null
  br i1 %tobool95, label %if.else158, label %if.then96

if.then96:                                        ; preds = %if.end94
  store i32 1, i32* %anon_func, align 4
  %133 = load %struct.shfunc*, %struct.shfunc** %shf, align 4
  %node97 = getelementptr inbounds %struct.shfunc, %struct.shfunc* %133, i32 0, i32 0
  %flags98 = getelementptr inbounds %struct.hashnode, %struct.hashnode* %node97, i32 0, i32 2
  %134 = load i32, i32* %flags98, align 4
  %or = or i32 %134, 1048576
  store i32 %or, i32* %flags98, align 4
  %135 = load i32*, i32** %end, align 4
  %136 = load %struct.estate*, %struct.estate** %state.addr, align 4
  %pc99 = getelementptr inbounds %struct.estate, %struct.estate* %136, i32 0, i32 1
  store i32* %135, i32** %pc99, align 4
  %137 = load %struct.estate*, %struct.estate** %state.addr, align 4
  %pc100 = getelementptr inbounds %struct.estate, %struct.estate* %137, i32 0, i32 1
  %138 = load i32*, i32** %pc100, align 4
  %incdec.ptr101 = getelementptr inbounds i32, i32* %138, i32 1
  store i32* %incdec.ptr101, i32** %pc100, align 4
  %139 = load i32, i32* %138, align 4
  %140 = load i32*, i32** %end, align 4
  %add.ptr102 = getelementptr inbounds i32, i32* %140, i32 %139
  store i32* %add.ptr102, i32** %end, align 4
  %141 = load %struct.estate*, %struct.estate** %state.addr, align 4
  %142 = load %struct.estate*, %struct.estate** %state.addr, align 4
  %pc103 = getelementptr inbounds %struct.estate, %struct.estate* %142, i32 0, i32 1
  %143 = load i32*, i32** %pc103, align 4
  %incdec.ptr104 = getelementptr inbounds i32, i32* %143, i32 1
  store i32* %incdec.ptr104, i32** %pc103, align 4
  %144 = load i32, i32* %143, align 4
  %call105 = call %union.linkroot* @ecgetlist(%struct.estate* %141, i32 %144, i32 2, i32* %htok)
  store %union.linkroot* %call105, %union.linkroot** %args, align 4
  %145 = load i32, i32* %htok, align 4
  %tobool106 = icmp ne i32 %145, 0
  br i1 %tobool106, label %land.lhs.true107, label %if.end121

land.lhs.true107:                                 ; preds = %if.then96
  %146 = load %union.linkroot*, %union.linkroot** %args, align 4
  %tobool108 = icmp ne %union.linkroot* %146, null
  br i1 %tobool108, label %if.then109, label %if.end121

if.then109:                                       ; preds = %land.lhs.true107
  %147 = load %union.linkroot*, %union.linkroot** %args, align 4
  call void @execsubst(%union.linkroot* %147)
  %148 = load i32, i32* @errflag, align 4
  %tobool110 = icmp ne i32 %148, 0
  br i1 %tobool110, label %if.then111, label %if.end120

if.then111:                                       ; preds = %if.then109
  %149 = load %struct.shfunc*, %struct.shfunc** %shf, align 4
  %funcdef112 = getelementptr inbounds %struct.shfunc, %struct.shfunc* %149, i32 0, i32 3
  %150 = load %struct.eprog*, %struct.eprog** %funcdef112, align 4
  call void @freeeprog(%struct.eprog* %150)
  %151 = load %struct.shfunc*, %struct.shfunc** %shf, align 4
  %redir113 = getelementptr inbounds %struct.shfunc, %struct.shfunc* %151, i32 0, i32 4
  %152 = load %struct.eprog*, %struct.eprog** %redir113, align 4
  %tobool114 = icmp ne %struct.eprog* %152, null
  br i1 %tobool114, label %if.then115, label %if.end117

if.then115:                                       ; preds = %if.then111
  %153 = load %struct.shfunc*, %struct.shfunc** %shf, align 4
  %redir116 = getelementptr inbounds %struct.shfunc, %struct.shfunc* %153, i32 0, i32 4
  %154 = load %struct.eprog*, %struct.eprog** %redir116, align 4
  call void @freeeprog(%struct.eprog* %154)
  br label %if.end117

if.end117:                                        ; preds = %if.then115, %if.then111
  %155 = load %struct.shfunc*, %struct.shfunc** %shf, align 4
  %filename118 = getelementptr inbounds %struct.shfunc, %struct.shfunc* %155, i32 0, i32 1
  call void @dircache_set(i8** %filename118, i8* null)
  %156 = load %struct.shfunc*, %struct.shfunc** %shf, align 4
  %157 = bitcast %struct.shfunc* %156 to i8*
  call void @zfree(i8* %157, i32 32)
  %158 = load i32*, i32** %end, align 4
  %159 = load %struct.estate*, %struct.estate** %state.addr, align 4
  %pc119 = getelementptr inbounds %struct.estate, %struct.estate* %159, i32 0, i32 1
  store i32* %158, i32** %pc119, align 4
  store i32 1, i32* %retval, align 4
  br label %return

if.end120:                                        ; preds = %if.then109
  br label %if.end121

if.end121:                                        ; preds = %if.end120, %land.lhs.true107, %if.then96
  %160 = load %union.linkroot*, %union.linkroot** %args, align 4
  %tobool122 = icmp ne %union.linkroot* %160, null
  br i1 %tobool122, label %land.lhs.true123, label %cond.false129

land.lhs.true123:                                 ; preds = %if.end121
  %161 = load %union.linkroot*, %union.linkroot** %args, align 4
  %list124 = bitcast %union.linkroot* %161 to %struct.linklist*
  %first125 = getelementptr inbounds %struct.linklist, %struct.linklist* %list124, i32 0, i32 0
  %162 = load %struct.linknode*, %struct.linknode** %first125, align 4
  %cmp126 = icmp ne %struct.linknode* %162, null
  br i1 %cmp126, label %cond.true127, label %cond.false129

cond.true127:                                     ; preds = %land.lhs.true123
  %163 = load %union.linkroot*, %union.linkroot** %args, align 4
  %list128 = bitcast %union.linkroot* %163 to %struct.linklist*
  %last = getelementptr inbounds %struct.linklist, %struct.linklist* %list128, i32 0, i32 1
  %164 = load %struct.linknode*, %struct.linknode** %last, align 4
  %dat = getelementptr inbounds %struct.linknode, %struct.linknode* %164, i32 0, i32 2
  %165 = load i8*, i8** %dat, align 4
  br label %cond.end130

cond.false129:                                    ; preds = %land.lhs.true123, %if.end121
  br label %cond.end130

cond.end130:                                      ; preds = %cond.false129, %cond.true127
  %cond131 = phi i8* [ %165, %cond.true127 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i32 0, i32 0), %cond.false129 ]
  call void @setunderscore(i8* %cond131)
  %166 = load %union.linkroot*, %union.linkroot** %args, align 4
  %tobool132 = icmp ne %union.linkroot* %166, null
  br i1 %tobool132, label %if.end135, label %if.then133

if.then133:                                       ; preds = %cond.end130
  %call134 = call %union.linkroot* @newlinklist()
  store %union.linkroot* %call134, %union.linkroot** %args, align 4
  br label %if.end135

if.end135:                                        ; preds = %if.then133, %cond.end130
  %167 = load %struct.shfunc*, %struct.shfunc** %shf, align 4
  %node136 = getelementptr inbounds %struct.shfunc, %struct.shfunc* %167, i32 0, i32 0
  %nam = getelementptr inbounds %struct.hashnode, %struct.hashnode* %node136, i32 0, i32 1
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.24, i32 0, i32 0), i8** %nam, align 4
  %168 = load %union.linkroot*, %union.linkroot** %args, align 4
  %169 = load %union.linkroot*, %union.linkroot** %args, align 4
  %node137 = bitcast %union.linkroot* %169 to %struct.linknode*
  %170 = load %struct.shfunc*, %struct.shfunc** %shf, align 4
  %node138 = getelementptr inbounds %struct.shfunc, %struct.shfunc* %170, i32 0, i32 0
  %nam139 = getelementptr inbounds %struct.hashnode, %struct.hashnode* %node138, i32 0, i32 1
  %171 = load i8*, i8** %nam139, align 4
  %call140 = call %struct.linknode* @insertlinknode(%union.linkroot* %168, %struct.linknode* %node137, i8* %171)
  %172 = load %struct.shfunc*, %struct.shfunc** %shf, align 4
  %173 = load %union.linkroot*, %union.linkroot** %args, align 4
  call void @execshfunc(%struct.shfunc* %172, %union.linkroot* %173)
  %174 = load i32, i32* @lastval, align 4
  store i32 %174, i32* %ret, align 4
  %175 = load i8, i8* getelementptr inbounds ([181 x i8], [181 x i8]* @opts, i32 0, i32 139), align 1
  %conv = sext i8 %175 to i32
  %tobool141 = icmp ne i32 %conv, 0
  br i1 %tobool141, label %land.lhs.true142, label %if.end150

land.lhs.true142:                                 ; preds = %if.end135
  %176 = load i8, i8* getelementptr inbounds ([181 x i8], [181 x i8]* @opts, i32 0, i32 161), align 1
  %conv143 = sext i8 %176 to i32
  %tobool144 = icmp ne i32 %conv143, 0
  br i1 %tobool144, label %land.lhs.true145, label %if.end150

land.lhs.true145:                                 ; preds = %land.lhs.true142
  %177 = load i32, i32* @lastval, align 4
  %tobool146 = icmp ne i32 %177, 0
  br i1 %tobool146, label %if.then147, label %if.end150

if.then147:                                       ; preds = %land.lhs.true145
  %178 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 4
  %179 = load i32, i32* @lastval, align 4
  %call148 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %178, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.37, i32 0, i32 0), i32 %179)
  %180 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 4
  %call149 = call i32 @fflush(%struct._IO_FILE* %180)
  br label %if.end150

if.end150:                                        ; preds = %if.then147, %land.lhs.true145, %land.lhs.true142, %if.end135
  %181 = load %struct.shfunc*, %struct.shfunc** %shf, align 4
  %funcdef151 = getelementptr inbounds %struct.shfunc, %struct.shfunc* %181, i32 0, i32 3
  %182 = load %struct.eprog*, %struct.eprog** %funcdef151, align 4
  call void @freeeprog(%struct.eprog* %182)
  %183 = load %struct.shfunc*, %struct.shfunc** %shf, align 4
  %redir152 = getelementptr inbounds %struct.shfunc, %struct.shfunc* %183, i32 0, i32 4
  %184 = load %struct.eprog*, %struct.eprog** %redir152, align 4
  %tobool153 = icmp ne %struct.eprog* %184, null
  br i1 %tobool153, label %if.then154, label %if.end156

if.then154:                                       ; preds = %if.end150
  %185 = load %struct.shfunc*, %struct.shfunc** %shf, align 4
  %redir155 = getelementptr inbounds %struct.shfunc, %struct.shfunc* %185, i32 0, i32 4
  %186 = load %struct.eprog*, %struct.eprog** %redir155, align 4
  call void @freeeprog(%struct.eprog* %186)
  br label %if.end156

if.end156:                                        ; preds = %if.then154, %if.end150
  %187 = load %struct.shfunc*, %struct.shfunc** %shf, align 4
  %filename157 = getelementptr inbounds %struct.shfunc, %struct.shfunc* %187, i32 0, i32 1
  call void @dircache_set(i8** %filename157, i8* null)
  %188 = load %struct.shfunc*, %struct.shfunc** %shf, align 4
  %189 = bitcast %struct.shfunc* %188 to i8*
  call void @zfree(i8* %189, i32 32)
  br label %while.end

if.else158:                                       ; preds = %if.end94
  %190 = load i8*, i8** %s, align 4
  %call159 = call i32 @strncmp(i8* %190, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.38, i32 0, i32 0), i32 4)
  %tobool160 = icmp ne i32 %call159, 0
  br i1 %tobool160, label %if.end174, label %land.lhs.true161

land.lhs.true161:                                 ; preds = %if.else158
  %191 = load i8*, i8** %s, align 4
  %add.ptr162 = getelementptr inbounds i8, i8* %191, i32 4
  %call163 = call i32 @getsignum(i8* %add.ptr162)
  store i32 %call163, i32* %signum, align 4
  %cmp164 = icmp ne i32 %call163, -1
  br i1 %cmp164, label %if.then166, label %if.end174

if.then166:                                       ; preds = %land.lhs.true161
  %192 = load i32, i32* %signum, align 4
  %call167 = call i32 @settrap(i32 %192, %struct.eprog* null, i32 4)
  %tobool168 = icmp ne i32 %call167, 0
  br i1 %tobool168, label %if.then169, label %if.end173

if.then169:                                       ; preds = %if.then166
  %193 = load %struct.shfunc*, %struct.shfunc** %shf, align 4
  %funcdef170 = getelementptr inbounds %struct.shfunc, %struct.shfunc* %193, i32 0, i32 3
  %194 = load %struct.eprog*, %struct.eprog** %funcdef170, align 4
  call void @freeeprog(%struct.eprog* %194)
  %195 = load %struct.shfunc*, %struct.shfunc** %shf, align 4
  %filename171 = getelementptr inbounds %struct.shfunc, %struct.shfunc* %195, i32 0, i32 1
  call void @dircache_set(i8** %filename171, i8* null)
  %196 = load %struct.shfunc*, %struct.shfunc** %shf, align 4
  %197 = bitcast %struct.shfunc* %196 to i8*
  call void @zfree(i8* %197, i32 32)
  %198 = load i32*, i32** %end, align 4
  %199 = load %struct.estate*, %struct.estate** %state.addr, align 4
  %pc172 = getelementptr inbounds %struct.estate, %struct.estate* %199, i32 0, i32 1
  store i32* %198, i32** %pc172, align 4
  store i32 1, i32* %retval, align 4
  br label %return

if.end173:                                        ; preds = %if.then166
  %200 = load i32, i32* %signum, align 4
  call void @removetrapnode(i32 %200)
  br label %if.end174

if.end174:                                        ; preds = %if.end173, %land.lhs.true161, %if.else158
  %201 = load %struct.hashtable*, %struct.hashtable** @shfunctab, align 4
  %addnode = getelementptr inbounds %struct.hashtable, %struct.hashtable* %201, i32 0, i32 8
  %202 = load void (%struct.hashtable*, i8*, i8*)*, void (%struct.hashtable*, i8*, i8*)** %addnode, align 4
  %203 = load %struct.hashtable*, %struct.hashtable** @shfunctab, align 4
  %204 = load i8*, i8** %s, align 4
  %call175 = call i8* @ztrdup(i8* %204)
  %205 = load %struct.shfunc*, %struct.shfunc** %shf, align 4
  %206 = bitcast %struct.shfunc* %205 to i8*
  call void %202(%struct.hashtable* %203, i8* %call175, i8* %206)
  br label %if.end176

if.end176:                                        ; preds = %if.end174
  br label %while.cond

while.end:                                        ; preds = %if.end156, %lor.end
  %207 = load i32, i32* %anon_func, align 4
  %tobool177 = icmp ne i32 %207, 0
  br i1 %tobool177, label %if.end179, label %if.then178

if.then178:                                       ; preds = %while.end
  call void @setunderscore(i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i32 0, i32 0))
  br label %if.end179

if.end179:                                        ; preds = %if.then178, %while.end
  %208 = load %struct.eprog*, %struct.eprog** %redir_prog.addr, align 4
  %tobool180 = icmp ne %struct.eprog* %208, null
  br i1 %tobool180, label %if.then181, label %if.end182

if.then181:                                       ; preds = %if.end179
  %209 = load %struct.eprog*, %struct.eprog** %redir_prog.addr, align 4
  call void @freeeprog(%struct.eprog* %209)
  br label %if.end182

if.end182:                                        ; preds = %if.then181, %if.end179
  %210 = load i32*, i32** %end, align 4
  %211 = load %struct.estate*, %struct.estate** %state.addr, align 4
  %pc183 = getelementptr inbounds %struct.estate, %struct.estate* %211, i32 0, i32 1
  store i32* %210, i32** %pc183, align 4
  %212 = load i32, i32* %ret, align 4
  store i32 %212, i32* %retval, align 4
  br label %return

return:                                           ; preds = %if.end182, %if.then169, %if.end117, %if.then18
  %213 = load i32, i32* %retval, align 4
  ret i32 %213
}

declare void @printprompt4() #1

declare i8* @ecgetstr(%struct.estate*, i32, i32*) #1

declare i32 @fprintf(%struct._IO_FILE*, i8*, ...) #1

declare %union.linkroot* @ecgetlist(%struct.estate*, i32, i32, i32*) #1

declare i32 @haswilds(i8*) #1

declare void @unsetparam(i8*) #1

declare i8* @ugetnode(%union.linkroot*) #1

declare i8* @quotedzputs(i8*, %struct._IO_FILE*) #1

declare %struct.param* @assignaparam(i8*, i8**, i32) #1

declare void @incrdumpcount(%struct.funcdump*) #1

declare void @dircache_set(i8**, i8*) #1

; Function Attrs: noinline nounwind
define internal void @execshfunc(%struct.shfunc* %shf, %union.linkroot* %args) #0 {
entry:
  %shf.addr = alloca %struct.shfunc*, align 4
  %args.addr = alloca %union.linkroot*, align 4
  %last_file_list = alloca %union.linkroot*, align 4
  %ocs = alloca i8*, align 4
  %ocsp = alloca i32, align 4
  %osfc = alloca i32, align 4
  %lptr = alloca %struct.linknode*, align 4
  %oset = alloca %struct.__sigset_t, align 4
  %tmp = alloca %struct.__sigset_t, align 4
  %tmp40 = alloca %struct.__sigset_t, align 4
  store %struct.shfunc* %shf, %struct.shfunc** %shf.addr, align 4
  store %union.linkroot* %args, %union.linkroot** %args.addr, align 4
  store %union.linkroot* null, %union.linkroot** %last_file_list, align 4
  %0 = load i32, i32* @errflag, align 4
  %tobool = icmp ne i32 %0, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  br label %do.end42

if.end:                                           ; preds = %entry
  %1 = load i32, i32* @list_pipe, align 4
  %tobool1 = icmp ne i32 %1, 0
  br i1 %tobool1, label %if.end9, label %land.lhs.true

land.lhs.true:                                    ; preds = %if.end
  %2 = load i32, i32* @thisjob, align 4
  %cmp = icmp ne i32 %2, -1
  br i1 %cmp, label %land.lhs.true2, label %if.end9

land.lhs.true2:                                   ; preds = %land.lhs.true
  %3 = load i32, i32* @thisjob, align 4
  %4 = load i32, i32* @list_pipe_job, align 4
  %cmp3 = icmp ne i32 %3, %4
  br i1 %cmp3, label %land.lhs.true4, label %if.end9

land.lhs.true4:                                   ; preds = %land.lhs.true2
  %5 = load i32, i32* @thisjob, align 4
  %call = call i32 @hasprocs(i32 %5)
  %tobool5 = icmp ne i32 %call, 0
  br i1 %tobool5, label %if.end9, label %if.then6

if.then6:                                         ; preds = %land.lhs.true4
  %6 = load %struct.job*, %struct.job** @jobtab, align 4
  %7 = load i32, i32* @thisjob, align 4
  %arrayidx = getelementptr inbounds %struct.job, %struct.job* %6, i32 %7
  %filelist = getelementptr inbounds %struct.job, %struct.job* %arrayidx, i32 0, i32 6
  %8 = load %union.linkroot*, %union.linkroot** %filelist, align 4
  store %union.linkroot* %8, %union.linkroot** %last_file_list, align 4
  %9 = load %struct.job*, %struct.job** @jobtab, align 4
  %10 = load i32, i32* @thisjob, align 4
  %arrayidx7 = getelementptr inbounds %struct.job, %struct.job* %9, i32 %10
  %filelist8 = getelementptr inbounds %struct.job, %struct.job* %arrayidx7, i32 0, i32 6
  store %union.linkroot* null, %union.linkroot** %filelist8, align 4
  %11 = load %struct.job*, %struct.job** @jobtab, align 4
  %12 = load i32, i32* @thisjob, align 4
  %add.ptr = getelementptr inbounds %struct.job, %struct.job* %11, i32 %12
  call void @deletejob(%struct.job* %add.ptr, i32 0)
  br label %if.end9

if.end9:                                          ; preds = %if.then6, %land.lhs.true4, %land.lhs.true2, %land.lhs.true, %if.end
  %13 = load i8, i8* getelementptr inbounds ([181 x i8], [181 x i8]* @opts, i32 0, i32 178), align 1
  %tobool10 = icmp ne i8 %13, 0
  br i1 %tobool10, label %if.then11, label %if.end25

if.then11:                                        ; preds = %if.end9
  call void @printprompt4()
  %14 = load %union.linkroot*, %union.linkroot** %args.addr, align 4
  %tobool12 = icmp ne %union.linkroot* %14, null
  br i1 %tobool12, label %if.then13, label %if.end22

if.then13:                                        ; preds = %if.then11
  %15 = load %union.linkroot*, %union.linkroot** %args.addr, align 4
  %list = bitcast %union.linkroot* %15 to %struct.linklist*
  %first = getelementptr inbounds %struct.linklist, %struct.linklist* %list, i32 0, i32 0
  %16 = load %struct.linknode*, %struct.linknode** %first, align 4
  store %struct.linknode* %16, %struct.linknode** %lptr, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then13
  %17 = load %struct.linknode*, %struct.linknode** %lptr, align 4
  %tobool14 = icmp ne %struct.linknode* %17, null
  br i1 %tobool14, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %18 = load %struct.linknode*, %struct.linknode** %lptr, align 4
  %19 = load %union.linkroot*, %union.linkroot** %args.addr, align 4
  %list15 = bitcast %union.linkroot* %19 to %struct.linklist*
  %first16 = getelementptr inbounds %struct.linklist, %struct.linklist* %list15, i32 0, i32 0
  %20 = load %struct.linknode*, %struct.linknode** %first16, align 4
  %cmp17 = icmp ne %struct.linknode* %18, %20
  br i1 %cmp17, label %if.then18, label %if.end20

if.then18:                                        ; preds = %for.body
  %21 = load %struct._IO_FILE*, %struct._IO_FILE** @xtrerr, align 4
  %call19 = call i32 @fputc(i32 32, %struct._IO_FILE* %21)
  br label %if.end20

if.end20:                                         ; preds = %if.then18, %for.body
  %22 = load %struct.linknode*, %struct.linknode** %lptr, align 4
  %dat = getelementptr inbounds %struct.linknode, %struct.linknode* %22, i32 0, i32 2
  %23 = load i8*, i8** %dat, align 4
  %24 = load %struct._IO_FILE*, %struct._IO_FILE** @xtrerr, align 4
  %call21 = call i8* @quotedzputs(i8* %23, %struct._IO_FILE* %24)
  br label %for.inc

for.inc:                                          ; preds = %if.end20
  %25 = load %struct.linknode*, %struct.linknode** %lptr, align 4
  %next = getelementptr inbounds %struct.linknode, %struct.linknode* %25, i32 0, i32 0
  %26 = load %struct.linknode*, %struct.linknode** %next, align 4
  store %struct.linknode* %26, %struct.linknode** %lptr, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  br label %if.end22

if.end22:                                         ; preds = %for.end, %if.then11
  %27 = load %struct._IO_FILE*, %struct._IO_FILE** @xtrerr, align 4
  %call23 = call i32 @fputc(i32 10, %struct._IO_FILE* %27)
  %28 = load %struct._IO_FILE*, %struct._IO_FILE** @xtrerr, align 4
  %call24 = call i32 @fflush(%struct._IO_FILE* %28)
  br label %if.end25

if.end25:                                         ; preds = %if.end22, %if.end9
  %29 = load i32, i32* @queueing_enabled, align 4
  %inc = add nsw i32 %29, 1
  store i32 %inc, i32* @queueing_enabled, align 4
  %30 = load i8*, i8** @cmdstack, align 4
  store i8* %30, i8** %ocs, align 4
  %31 = load i32, i32* @cmdsp, align 4
  store i32 %31, i32* %ocsp, align 4
  %call26 = call i8* @zalloc(i32 256)
  store i8* %call26, i8** @cmdstack, align 4
  store i32 0, i32* @cmdsp, align 4
  %32 = load i32, i32* @sfcontext, align 4
  store i32 %32, i32* %osfc, align 4
  %cmp27 = icmp eq i32 %32, 0
  br i1 %cmp27, label %if.then28, label %if.end29

if.then28:                                        ; preds = %if.end25
  store i32 1, i32* @sfcontext, align 4
  br label %if.end29

if.end29:                                         ; preds = %if.then28, %if.end25
  %33 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 4
  store %struct._IO_FILE* %33, %struct._IO_FILE** @xtrerr, align 4
  %34 = load %struct.shfunc*, %struct.shfunc** %shf.addr, align 4
  %35 = load %union.linkroot*, %union.linkroot** %args.addr, align 4
  %call30 = call i32 @doshfunc(%struct.shfunc* %34, %union.linkroot* %35, i32 0)
  %36 = load i32, i32* %osfc, align 4
  store i32 %36, i32* @sfcontext, align 4
  %37 = load i8*, i8** @cmdstack, align 4
  call void @free(i8* %37)
  %38 = load i8*, i8** %ocs, align 4
  store i8* %38, i8** @cmdstack, align 4
  %39 = load i32, i32* %ocsp, align 4
  store i32 %39, i32* @cmdsp, align 4
  %40 = load i32, i32* @list_pipe, align 4
  %tobool31 = icmp ne i32 %40, 0
  br i1 %tobool31, label %if.end33, label %if.then32

if.then32:                                        ; preds = %if.end29
  %41 = load %union.linkroot*, %union.linkroot** %last_file_list, align 4
  call void @deletefilelist(%union.linkroot* %41, i32 0)
  br label %if.end33

if.end33:                                         ; preds = %if.then32, %if.end29
  br label %do.body

do.body:                                          ; preds = %if.end33
  %42 = load i32, i32* @queueing_enabled, align 4
  %dec = add nsw i32 %42, -1
  store i32 %dec, i32* @queueing_enabled, align 4
  %tobool34 = icmp ne i32 %dec, 0
  br i1 %tobool34, label %if.end41, label %if.then35

if.then35:                                        ; preds = %do.body
  br label %do.body36

do.body36:                                        ; preds = %if.then35
  br label %while.cond

while.cond:                                       ; preds = %while.body, %do.body36
  %43 = load i32, i32* @queue_front, align 4
  %44 = load i32, i32* @queue_rear, align 4
  %cmp37 = icmp ne i32 %43, %44
  br i1 %cmp37, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %45 = load i32, i32* @queue_front, align 4
  %add = add nsw i32 %45, 1
  %rem = srem i32 %add, 128
  store i32 %rem, i32* @queue_front, align 4
  %46 = load i32, i32* @queue_front, align 4
  %arrayidx38 = getelementptr inbounds [128 x %struct.__sigset_t], [128 x %struct.__sigset_t]* @signal_mask_queue, i32 0, i32 %46
  call void @signal_setmask(%struct.__sigset_t* sret %tmp, %struct.__sigset_t* byval align 4 %arrayidx38)
  %47 = bitcast %struct.__sigset_t* %oset to i8*
  %48 = bitcast %struct.__sigset_t* %tmp to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %47, i8* %48, i32 128, i32 4, i1 false)
  %49 = load i32, i32* @queue_front, align 4
  %arrayidx39 = getelementptr inbounds [128 x i32], [128 x i32]* @signal_queue, i32 0, i32 %49
  %50 = load i32, i32* %arrayidx39, align 4
  call void @zhandler(i32 %50)
  call void @signal_setmask(%struct.__sigset_t* sret %tmp40, %struct.__sigset_t* byval align 4 %oset)
  br label %while.cond

while.end:                                        ; preds = %while.cond
  br label %do.end

do.end:                                           ; preds = %while.end
  br label %if.end41

if.end41:                                         ; preds = %do.end, %do.body
  br label %do.end42

do.end42:                                         ; preds = %if.then, %if.end41
  ret void
}

declare i32 @getsignum(i8*) #1

declare i32 @settrap(i32, %struct.eprog*, i32) #1

declare void @removetrapnode(i32) #1

declare i32 @hasprocs(i32) #1

declare void @deletejob(%struct.job*, i32) #1

declare void @deletefilelist(%union.linkroot*, i32) #1

; Function Attrs: noinline nounwind
define internal i32 @execcursh(%struct.estate* %state, i32 %do_exec) #0 {
entry:
  %state.addr = alloca %struct.estate*, align 4
  %do_exec.addr = alloca i32, align 4
  %end = alloca i32*, align 4
  store %struct.estate* %state, %struct.estate** %state.addr, align 4
  store i32 %do_exec, i32* %do_exec.addr, align 4
  %0 = load %struct.estate*, %struct.estate** %state.addr, align 4
  %pc = getelementptr inbounds %struct.estate, %struct.estate* %0, i32 0, i32 1
  %1 = load i32*, i32** %pc, align 4
  %2 = load %struct.estate*, %struct.estate** %state.addr, align 4
  %pc1 = getelementptr inbounds %struct.estate, %struct.estate* %2, i32 0, i32 1
  %3 = load i32*, i32** %pc1, align 4
  %arrayidx = getelementptr inbounds i32, i32* %3, i32 -1
  %4 = load i32, i32* %arrayidx, align 4
  %shr = lshr i32 %4, 5
  %add.ptr = getelementptr inbounds i32, i32* %1, i32 %shr
  store i32* %add.ptr, i32** %end, align 4
  %5 = load %struct.estate*, %struct.estate** %state.addr, align 4
  %pc2 = getelementptr inbounds %struct.estate, %struct.estate* %5, i32 0, i32 1
  %6 = load i32*, i32** %pc2, align 4
  %incdec.ptr = getelementptr inbounds i32, i32* %6, i32 1
  store i32* %incdec.ptr, i32** %pc2, align 4
  %7 = load i32, i32* @list_pipe, align 4
  %tobool = icmp ne i32 %7, 0
  br i1 %tobool, label %if.end, label %land.lhs.true

land.lhs.true:                                    ; preds = %entry
  %8 = load i32, i32* @thisjob, align 4
  %cmp = icmp ne i32 %8, -1
  br i1 %cmp, label %land.lhs.true3, label %if.end

land.lhs.true3:                                   ; preds = %land.lhs.true
  %9 = load i32, i32* @thisjob, align 4
  %10 = load i32, i32* @list_pipe_job, align 4
  %cmp4 = icmp ne i32 %9, %10
  br i1 %cmp4, label %land.lhs.true5, label %if.end

land.lhs.true5:                                   ; preds = %land.lhs.true3
  %11 = load i32, i32* @thisjob, align 4
  %call = call i32 @hasprocs(i32 %11)
  %tobool6 = icmp ne i32 %call, 0
  br i1 %tobool6, label %if.end, label %if.then

if.then:                                          ; preds = %land.lhs.true5
  %12 = load %struct.job*, %struct.job** @jobtab, align 4
  %13 = load i32, i32* @thisjob, align 4
  %add.ptr7 = getelementptr inbounds %struct.job, %struct.job* %12, i32 %13
  call void @deletejob(%struct.job* %add.ptr7, i32 0)
  br label %if.end

if.end:                                           ; preds = %if.then, %land.lhs.true5, %land.lhs.true3, %land.lhs.true, %entry
  call void @cmdpush(i32 19)
  %14 = load %struct.estate*, %struct.estate** %state.addr, align 4
  %15 = load i32, i32* %do_exec.addr, align 4
  call void @execlist(%struct.estate* %14, i32 1, i32 %15)
  call void @cmdpop()
  %16 = load i32*, i32** %end, align 4
  %17 = load %struct.estate*, %struct.estate** %state.addr, align 4
  %pc8 = getelementptr inbounds %struct.estate, %struct.estate* %17, i32 0, i32 1
  store i32* %16, i32** %pc8, align 4
  store i32 1, i32* @this_noerrexit, align 4
  %18 = load i32, i32* @lastval, align 4
  ret i32 %18
}

; Function Attrs: noinline nounwind
define internal i32 @exectime(%struct.estate* %state, i32 %do_exec) #0 {
entry:
  %retval = alloca i32, align 4
  %state.addr = alloca %struct.estate*, align 4
  %do_exec.addr = alloca i32, align 4
  %jb = alloca i32, align 4
  store %struct.estate* %state, %struct.estate** %state.addr, align 4
  store i32 %do_exec, i32* %do_exec.addr, align 4
  %0 = load i32, i32* @thisjob, align 4
  store i32 %0, i32* %jb, align 4
  %1 = load %struct.estate*, %struct.estate** %state.addr, align 4
  %pc = getelementptr inbounds %struct.estate, %struct.estate* %1, i32 0, i32 1
  %2 = load i32*, i32** %pc, align 4
  %arrayidx = getelementptr inbounds i32, i32* %2, i32 -1
  %3 = load i32, i32* %arrayidx, align 4
  %shr = lshr i32 %3, 5
  %cmp = icmp eq i32 %shr, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void @shelltime()
  store i32 0, i32* %retval, align 4
  br label %return

if.end:                                           ; preds = %entry
  %4 = load %struct.estate*, %struct.estate** %state.addr, align 4
  %5 = load %struct.estate*, %struct.estate** %state.addr, align 4
  %pc1 = getelementptr inbounds %struct.estate, %struct.estate* %5, i32 0, i32 1
  %6 = load i32*, i32** %pc1, align 4
  %incdec.ptr = getelementptr inbounds i32, i32* %6, i32 1
  store i32* %incdec.ptr, i32** %pc1, align 4
  %7 = load i32, i32* %6, align 4
  %call = call i32 @execpline(%struct.estate* %4, i32 %7, i32 3, i32 0)
  %8 = load i32, i32* %jb, align 4
  store i32 %8, i32* @thisjob, align 4
  %9 = load i32, i32* @lastval, align 4
  store i32 %9, i32* %retval, align 4
  br label %return

return:                                           ; preds = %if.end, %if.then
  %10 = load i32, i32* %retval, align 4
  ret i32 %10
}

declare i32 @execfor(%struct.estate*, i32) #1

declare i32 @execselect(%struct.estate*, i32) #1

declare i32 @execwhile(%struct.estate*, i32) #1

declare i32 @execrepeat(%struct.estate*, i32) #1

declare i32 @execcase(%struct.estate*, i32) #1

declare i32 @execif(%struct.estate*, i32) #1

; Function Attrs: noinline nounwind
define internal i32 @execcond(%struct.estate* %state, i32 %do_exec) #0 {
entry:
  %state.addr = alloca %struct.estate*, align 4
  %do_exec.addr = alloca i32, align 4
  %stat = alloca i32, align 4
  store %struct.estate* %state, %struct.estate** %state.addr, align 4
  store i32 %do_exec, i32* %do_exec.addr, align 4
  %0 = load %struct.estate*, %struct.estate** %state.addr, align 4
  %pc = getelementptr inbounds %struct.estate, %struct.estate* %0, i32 0, i32 1
  %1 = load i32*, i32** %pc, align 4
  %incdec.ptr = getelementptr inbounds i32, i32* %1, i32 -1
  store i32* %incdec.ptr, i32** %pc, align 4
  %2 = load i8, i8* getelementptr inbounds ([181 x i8], [181 x i8]* @opts, i32 0, i32 178), align 1
  %tobool = icmp ne i8 %2, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void @printprompt4()
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** @xtrerr, align 4
  %call = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %3, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.39, i32 0, i32 0))
  %4 = load i32, i32* @tracingcond, align 4
  %inc = add nsw i32 %4, 1
  store i32 %inc, i32* @tracingcond, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  call void @cmdpush(i32 10)
  %5 = load %struct.estate*, %struct.estate** %state.addr, align 4
  %call1 = call i32 @evalcond(%struct.estate* %5, i8* null)
  store i32 %call1, i32* %stat, align 4
  %6 = load i32, i32* %stat, align 4
  %cmp = icmp eq i32 %6, 2
  br i1 %cmp, label %if.then2, label %if.end3

if.then2:                                         ; preds = %if.end
  %7 = load i32, i32* @errflag, align 4
  %or = or i32 %7, 1
  store i32 %or, i32* @errflag, align 4
  br label %if.end3

if.end3:                                          ; preds = %if.then2, %if.end
  call void @cmdpop()
  %8 = load i8, i8* getelementptr inbounds ([181 x i8], [181 x i8]* @opts, i32 0, i32 178), align 1
  %tobool4 = icmp ne i8 %8, 0
  br i1 %tobool4, label %if.then5, label %if.end8

if.then5:                                         ; preds = %if.end3
  %9 = load %struct._IO_FILE*, %struct._IO_FILE** @xtrerr, align 4
  %call6 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %9, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.40, i32 0, i32 0))
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** @xtrerr, align 4
  %call7 = call i32 @fflush(%struct._IO_FILE* %10)
  %11 = load i32, i32* @tracingcond, align 4
  %dec = add nsw i32 %11, -1
  store i32 %dec, i32* @tracingcond, align 4
  br label %if.end8

if.end8:                                          ; preds = %if.then5, %if.end3
  %12 = load i32, i32* %stat, align 4
  ret i32 %12
}

; Function Attrs: noinline nounwind
define internal i32 @execarith(%struct.estate* %state, i32 %do_exec) #0 {
entry:
  %retval = alloca i32, align 4
  %state.addr = alloca %struct.estate*, align 4
  %do_exec.addr = alloca i32, align 4
  %e = alloca i8*, align 4
  %val = alloca %struct.mnumber, align 8
  %htok = alloca i32, align 4
  %tmp = alloca %struct.mnumber, align 8
  store %struct.estate* %state, %struct.estate** %state.addr, align 4
  store i32 %do_exec, i32* %do_exec.addr, align 4
  %0 = bitcast %struct.mnumber* %val to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %0, i8* bitcast (%struct.mnumber* @zero_mnumber to i8*), i32 16, i32 8, i1 false)
  store i32 0, i32* %htok, align 4
  %1 = load i8, i8* getelementptr inbounds ([181 x i8], [181 x i8]* @opts, i32 0, i32 178), align 1
  %tobool = icmp ne i8 %1, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void @printprompt4()
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** @xtrerr, align 4
  %call = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %2, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.41, i32 0, i32 0))
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  call void @cmdpush(i32 9)
  %3 = load %struct.estate*, %struct.estate** %state.addr, align 4
  %call1 = call i8* @ecgetstr(%struct.estate* %3, i32 2, i32* %htok)
  store i8* %call1, i8** %e, align 4
  %4 = load i32, i32* %htok, align 4
  %tobool2 = icmp ne i32 %4, 0
  br i1 %tobool2, label %if.then3, label %if.end4

if.then3:                                         ; preds = %if.end
  call void @singsub(i8** %e)
  br label %if.end4

if.end4:                                          ; preds = %if.then3, %if.end
  %5 = load i8, i8* getelementptr inbounds ([181 x i8], [181 x i8]* @opts, i32 0, i32 178), align 1
  %tobool5 = icmp ne i8 %5, 0
  br i1 %tobool5, label %if.then6, label %if.end8

if.then6:                                         ; preds = %if.end4
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** @xtrerr, align 4
  %7 = load i8*, i8** %e, align 4
  %call7 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %6, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.42, i32 0, i32 0), i8* %7)
  br label %if.end8

if.end8:                                          ; preds = %if.then6, %if.end4
  %8 = load i8*, i8** %e, align 4
  call void @matheval(%struct.mnumber* sret %tmp, i8* %8)
  %9 = bitcast %struct.mnumber* %val to i8*
  %10 = bitcast %struct.mnumber* %tmp to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %9, i8* %10, i32 16, i32 8, i1 false)
  call void @cmdpop()
  %11 = load i8, i8* getelementptr inbounds ([181 x i8], [181 x i8]* @opts, i32 0, i32 178), align 1
  %tobool9 = icmp ne i8 %11, 0
  br i1 %tobool9, label %if.then10, label %if.end13

if.then10:                                        ; preds = %if.end8
  %12 = load %struct._IO_FILE*, %struct._IO_FILE** @xtrerr, align 4
  %call11 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %12, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.43, i32 0, i32 0))
  %13 = load %struct._IO_FILE*, %struct._IO_FILE** @xtrerr, align 4
  %call12 = call i32 @fflush(%struct._IO_FILE* %13)
  br label %if.end13

if.end13:                                         ; preds = %if.then10, %if.end8
  %14 = load i32, i32* @errflag, align 4
  %tobool14 = icmp ne i32 %14, 0
  br i1 %tobool14, label %if.then15, label %if.end16

if.then15:                                        ; preds = %if.end13
  %15 = load i32, i32* @errflag, align 4
  %and = and i32 %15, -2
  store i32 %and, i32* @errflag, align 4
  store i32 2, i32* %retval, align 4
  br label %return

if.end16:                                         ; preds = %if.end13
  %type = getelementptr inbounds %struct.mnumber, %struct.mnumber* %val, i32 0, i32 1
  %16 = load i32, i32* %type, align 8
  %cmp = icmp eq i32 %16, 1
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end16
  %u = getelementptr inbounds %struct.mnumber, %struct.mnumber* %val, i32 0, i32 0
  %l = bitcast %union.anon.3* %u to i32*
  %17 = load i32, i32* %l, align 8
  %cmp17 = icmp eq i32 %17, 0
  %conv = zext i1 %cmp17 to i32
  br label %cond.end

cond.false:                                       ; preds = %if.end16
  %u18 = getelementptr inbounds %struct.mnumber, %struct.mnumber* %val, i32 0, i32 0
  %d = bitcast %union.anon.3* %u18 to double*
  %18 = load double, double* %d, align 8
  %cmp19 = fcmp oeq double %18, 0.000000e+00
  %conv20 = zext i1 %cmp19 to i32
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv, %cond.true ], [ %conv20, %cond.false ]
  store i32 %cond, i32* %retval, align 4
  br label %return

return:                                           ; preds = %cond.end, %if.then15
  %19 = load i32, i32* %retval, align 4
  ret i32 %19
}

; Function Attrs: noinline nounwind
define internal i32 @execautofn(%struct.estate* %state, i32 %do_exec) #0 {
entry:
  %retval = alloca i32, align 4
  %state.addr = alloca %struct.estate*, align 4
  %do_exec.addr = alloca i32, align 4
  %shf = alloca %struct.shfunc*, align 4
  store %struct.estate* %state, %struct.estate** %state.addr, align 4
  store i32 %do_exec, i32* %do_exec.addr, align 4
  %0 = load %struct.estate*, %struct.estate** %state.addr, align 4
  %prog = getelementptr inbounds %struct.estate, %struct.estate* %0, i32 0, i32 0
  %1 = load %struct.eprog*, %struct.eprog** %prog, align 4
  %shf1 = getelementptr inbounds %struct.eprog, %struct.eprog* %1, i32 0, i32 7
  %2 = load %struct.shfunc*, %struct.shfunc** %shf1, align 4
  %call = call %struct.shfunc* @loadautofn(%struct.shfunc* %2, i32 1, i32 0, i32 0)
  store %struct.shfunc* %call, %struct.shfunc** %shf, align 4
  %tobool = icmp ne %struct.shfunc* %call, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i32 1, i32* %retval, align 4
  br label %return

if.end:                                           ; preds = %entry
  %3 = load %struct.shfunc*, %struct.shfunc** %shf, align 4
  %4 = load %struct.estate*, %struct.estate** %state.addr, align 4
  %prog2 = getelementptr inbounds %struct.estate, %struct.estate* %4, i32 0, i32 0
  %5 = load %struct.eprog*, %struct.eprog** %prog2, align 4
  %shf3 = getelementptr inbounds %struct.eprog, %struct.eprog* %5, i32 0, i32 7
  store %struct.shfunc* %3, %struct.shfunc** %shf3, align 4
  %6 = load %struct.estate*, %struct.estate** %state.addr, align 4
  %call4 = call i32 @execautofn_basic(%struct.estate* %6, i32 0)
  store i32 %call4, i32* %retval, align 4
  br label %return

return:                                           ; preds = %if.end, %if.then
  %7 = load i32, i32* %retval, align 4
  ret i32 %7
}

declare i32 @exectry(%struct.estate*, i32) #1

declare void @shelltime() #1

declare i32 @evalcond(%struct.estate*, i8*) #1

declare void @matheval(%struct.mnumber* sret, i8*) #1

; Function Attrs: noinline nounwind
define internal i32 @execautofn_basic(%struct.estate* %state, i32 %do_exec) #0 {
entry:
  %state.addr = alloca %struct.estate*, align 4
  %do_exec.addr = alloca i32, align 4
  %shf = alloca %struct.shfunc*, align 4
  %oldscriptname = alloca i8*, align 4
  %oldscriptfilename = alloca i8*, align 4
  store %struct.estate* %state, %struct.estate** %state.addr, align 4
  store i32 %do_exec, i32* %do_exec.addr, align 4
  %0 = load %struct.estate*, %struct.estate** %state.addr, align 4
  %prog = getelementptr inbounds %struct.estate, %struct.estate* %0, i32 0, i32 0
  %1 = load %struct.eprog*, %struct.eprog** %prog, align 4
  %shf1 = getelementptr inbounds %struct.eprog, %struct.eprog* %1, i32 0, i32 7
  %2 = load %struct.shfunc*, %struct.shfunc** %shf1, align 4
  store %struct.shfunc* %2, %struct.shfunc** %shf, align 4
  %3 = load %struct.funcstack*, %struct.funcstack** @funcstack, align 4
  %tobool = icmp ne %struct.funcstack* %3, null
  br i1 %tobool, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %entry
  %4 = load %struct.funcstack*, %struct.funcstack** @funcstack, align 4
  %filename = getelementptr inbounds %struct.funcstack, %struct.funcstack* %4, i32 0, i32 2
  %5 = load i8*, i8** %filename, align 4
  %tobool2 = icmp ne i8* %5, null
  br i1 %tobool2, label %if.end, label %if.then

if.then:                                          ; preds = %land.lhs.true
  %6 = load %struct.shfunc*, %struct.shfunc** %shf, align 4
  %call = call i8* @getshfuncfile(%struct.shfunc* %6)
  %7 = load %struct.funcstack*, %struct.funcstack** @funcstack, align 4
  %filename3 = getelementptr inbounds %struct.funcstack, %struct.funcstack* %7, i32 0, i32 2
  store i8* %call, i8** %filename3, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %8 = load i8*, i8** @scriptname, align 4
  store i8* %8, i8** %oldscriptname, align 4
  %9 = load i8*, i8** @scriptfilename, align 4
  store i8* %9, i8** %oldscriptfilename, align 4
  %10 = load %struct.shfunc*, %struct.shfunc** %shf, align 4
  %node = getelementptr inbounds %struct.shfunc, %struct.shfunc* %10, i32 0, i32 0
  %nam = getelementptr inbounds %struct.hashnode, %struct.hashnode* %node, i32 0, i32 1
  %11 = load i8*, i8** %nam, align 4
  %call4 = call i8* @dupstring(i8* %11)
  store i8* %call4, i8** @scriptname, align 4
  %12 = load %struct.shfunc*, %struct.shfunc** %shf, align 4
  %call5 = call i8* @getshfuncfile(%struct.shfunc* %12)
  store i8* %call5, i8** @scriptfilename, align 4
  %13 = load %struct.shfunc*, %struct.shfunc** %shf, align 4
  %funcdef = getelementptr inbounds %struct.shfunc, %struct.shfunc* %13, i32 0, i32 3
  %14 = load %struct.eprog*, %struct.eprog** %funcdef, align 4
  call void @execode(%struct.eprog* %14, i32 1, i32 0, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.44, i32 0, i32 0))
  %15 = load i8*, i8** %oldscriptname, align 4
  store i8* %15, i8** @scriptname, align 4
  %16 = load i8*, i8** %oldscriptfilename, align 4
  store i8* %16, i8** @scriptfilename, align 4
  %17 = load i32, i32* @lastval, align 4
  ret i32 %17
}

declare i32 @initjob() #1

; Function Attrs: noinline nounwind
define internal void @execpline2(%struct.estate* %state, i32 %pcode, i32 %how, i32 %input, i32 %output, i32 %last1) #0 {
entry:
  %state.addr = alloca %struct.estate*, align 4
  %pcode.addr = alloca i32, align 4
  %how.addr = alloca i32, align 4
  %input.addr = alloca i32, align 4
  %output.addr = alloca i32, align 4
  %last1.addr = alloca i32, align 4
  %eparams = alloca %struct.execcmd_params, align 4
  %pipes = alloca [2 x i32], align 4
  %old_list_pipe = alloca i32, align 4
  %next = alloca i32*, align 4
  store %struct.estate* %state, %struct.estate** %state.addr, align 4
  store i32 %pcode, i32* %pcode.addr, align 4
  store i32 %how, i32* %how.addr, align 4
  store i32 %input, i32* %input.addr, align 4
  store i32 %output, i32* %output.addr, align 4
  store i32 %last1, i32* %last1.addr, align 4
  %0 = load i32, i32* @breaks, align 4
  %tobool = icmp ne i32 %0, 0
  br i1 %tobool, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %1 = load i32, i32* @retflag, align 4
  %tobool1 = icmp ne i32 %1, 0
  br i1 %tobool1, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false, %entry
  br label %if.end49

if.end:                                           ; preds = %lor.lhs.false
  %2 = load i32, i32* @intrap, align 4
  %tobool2 = icmp ne i32 %2, 0
  br i1 %tobool2, label %land.lhs.true, label %land.lhs.true5

land.lhs.true:                                    ; preds = %if.end
  %3 = load i32, i32* @trapisfunc, align 4
  %tobool3 = icmp ne i32 %3, 0
  br i1 %tobool3, label %land.lhs.true5, label %land.lhs.true4

land.lhs.true4:                                   ; preds = %land.lhs.true
  %4 = load i32, i32* @traplocallevel, align 4
  %5 = load i32, i32* @locallevel, align 4
  %cmp = icmp eq i32 %4, %5
  br i1 %cmp, label %if.end13, label %land.lhs.true5

land.lhs.true5:                                   ; preds = %land.lhs.true4, %land.lhs.true, %if.end
  %6 = load i32, i32* @ineval, align 4
  %tobool6 = icmp ne i32 %6, 0
  br i1 %tobool6, label %if.end13, label %land.lhs.true7

land.lhs.true7:                                   ; preds = %land.lhs.true5
  %7 = load i32, i32* %pcode.addr, align 4
  %shr = lshr i32 %7, 5
  %shr8 = lshr i32 %shr, 1
  %tobool9 = icmp ne i32 %shr8, 0
  br i1 %tobool9, label %if.then10, label %if.end13

if.then10:                                        ; preds = %land.lhs.true7
  %8 = load i32, i32* %pcode.addr, align 4
  %shr11 = lshr i32 %8, 5
  %shr12 = lshr i32 %shr11, 1
  %sub = sub i32 %shr12, 1
  store i32 %sub, i32* @lineno, align 4
  br label %if.end13

if.end13:                                         ; preds = %if.then10, %land.lhs.true7, %land.lhs.true5, %land.lhs.true4
  %9 = load i32, i32* @pline_level, align 4
  %cmp14 = icmp eq i32 %9, 1
  br i1 %cmp14, label %if.then15, label %if.end25

if.then15:                                        ; preds = %if.end13
  %10 = load i32, i32* %how.addr, align 4
  %and = and i32 %10, 4
  %tobool16 = icmp ne i32 %and, 0
  br i1 %tobool16, label %if.then19, label %lor.lhs.false17

lor.lhs.false17:                                  ; preds = %if.then15
  %11 = load i32, i32* @sfcontext, align 4
  %tobool18 = icmp ne i32 %11, 0
  br i1 %tobool18, label %if.else, label %if.then19

if.then19:                                        ; preds = %lor.lhs.false17, %if.then15
  %12 = load %struct.estate*, %struct.estate** %state.addr, align 4
  %prog = getelementptr inbounds %struct.estate, %struct.estate* %12, i32 0, i32 0
  %13 = load %struct.eprog*, %struct.eprog** %prog, align 4
  %14 = load %struct.estate*, %struct.estate** %state.addr, align 4
  %pc = getelementptr inbounds %struct.estate, %struct.estate* %14, i32 0, i32 1
  %15 = load i32*, i32** %pc, align 4
  %16 = load i32, i32* %pcode.addr, align 4
  %shr20 = lshr i32 %16, 5
  %and21 = and i32 %shr20, 1
  %cmp22 = icmp eq i32 %and21, 0
  %cond = select i1 %cmp22, i32 0, i32 1
  %add.ptr = getelementptr inbounds i32, i32* %15, i32 %cond
  %call = call i8* @getjobtext(%struct.eprog* %13, i32* %add.ptr)
  %call23 = call i8* @strcpy(i8* getelementptr inbounds ([80 x i8], [80 x i8]* @list_pipe_text, i32 0, i32 0), i8* %call)
  br label %if.end24

if.else:                                          ; preds = %lor.lhs.false17
  store i8 0, i8* getelementptr inbounds ([80 x i8], [80 x i8]* @list_pipe_text, i32 0, i32 0), align 1
  br label %if.end24

if.end24:                                         ; preds = %if.else, %if.then19
  br label %if.end25

if.end25:                                         ; preds = %if.end24, %if.end13
  %17 = load i32, i32* %pcode.addr, align 4
  %shr26 = lshr i32 %17, 5
  %and27 = and i32 %shr26, 1
  %cmp28 = icmp eq i32 %and27, 0
  br i1 %cmp28, label %if.then29, label %if.else32

if.then29:                                        ; preds = %if.end25
  %18 = load %struct.estate*, %struct.estate** %state.addr, align 4
  call void @execcmd_analyse(%struct.estate* %18, %struct.execcmd_params* %eparams)
  %19 = load %struct.estate*, %struct.estate** %state.addr, align 4
  %20 = load i32, i32* %input.addr, align 4
  %21 = load i32, i32* %output.addr, align 4
  %22 = load i32, i32* %how.addr, align 4
  %23 = load i32, i32* %last1.addr, align 4
  %tobool30 = icmp ne i32 %23, 0
  %cond31 = select i1 %tobool30, i32 1, i32 2
  call void @execcmd_exec(%struct.estate* %19, %struct.execcmd_params* %eparams, i32 %20, i32 %21, i32 %22, i32 %cond31, i32 -1)
  br label %if.end49

if.else32:                                        ; preds = %if.end25
  %24 = load i32, i32* @list_pipe, align 4
  store i32 %24, i32* %old_list_pipe, align 4
  %25 = load %struct.estate*, %struct.estate** %state.addr, align 4
  %pc33 = getelementptr inbounds %struct.estate, %struct.estate* %25, i32 0, i32 1
  %26 = load i32*, i32** %pc33, align 4
  %27 = load %struct.estate*, %struct.estate** %state.addr, align 4
  %pc34 = getelementptr inbounds %struct.estate, %struct.estate* %27, i32 0, i32 1
  %28 = load i32*, i32** %pc34, align 4
  %29 = load i32, i32* %28, align 4
  %add.ptr35 = getelementptr inbounds i32, i32* %26, i32 %29
  store i32* %add.ptr35, i32** %next, align 4
  %30 = load %struct.estate*, %struct.estate** %state.addr, align 4
  %pc36 = getelementptr inbounds %struct.estate, %struct.estate* %30, i32 0, i32 1
  %31 = load i32*, i32** %pc36, align 4
  %incdec.ptr = getelementptr inbounds i32, i32* %31, i32 1
  store i32* %incdec.ptr, i32** %pc36, align 4
  %32 = load %struct.estate*, %struct.estate** %state.addr, align 4
  call void @execcmd_analyse(%struct.estate* %32, %struct.execcmd_params* %eparams)
  %arraydecay = getelementptr inbounds [2 x i32], [2 x i32]* %pipes, i32 0, i32 0
  %call37 = call i32 @mpipe(i32* %arraydecay)
  %cmp38 = icmp slt i32 %call37, 0
  br i1 %cmp38, label %if.then39, label %if.end40

if.then39:                                        ; preds = %if.else32
  br label %if.end40

if.end40:                                         ; preds = %if.then39, %if.else32
  %arrayidx = getelementptr inbounds [2 x i32], [2 x i32]* %pipes, i32 0, i32 0
  %33 = load i32, i32* %arrayidx, align 4
  call void @addfilelist(i8* null, i32 %33)
  %34 = load %struct.estate*, %struct.estate** %state.addr, align 4
  %35 = load i32, i32* %input.addr, align 4
  %arrayidx41 = getelementptr inbounds [2 x i32], [2 x i32]* %pipes, i32 0, i32 1
  %36 = load i32, i32* %arrayidx41, align 4
  %37 = load i32, i32* %how.addr, align 4
  %arrayidx42 = getelementptr inbounds [2 x i32], [2 x i32]* %pipes, i32 0, i32 0
  %38 = load i32, i32* %arrayidx42, align 4
  call void @execcmd_exec(%struct.estate* %34, %struct.execcmd_params* %eparams, i32 %35, i32 %36, i32 %37, i32 0, i32 %38)
  %arrayidx43 = getelementptr inbounds [2 x i32], [2 x i32]* %pipes, i32 0, i32 1
  %39 = load i32, i32* %arrayidx43, align 4
  %call44 = call i32 @zclose(i32 %39)
  %40 = load i32*, i32** %next, align 4
  %41 = load %struct.estate*, %struct.estate** %state.addr, align 4
  %pc45 = getelementptr inbounds %struct.estate, %struct.estate* %41, i32 0, i32 1
  store i32* %40, i32** %pc45, align 4
  call void @cmdpush(i32 13)
  store i32 1, i32* @list_pipe, align 4
  %42 = load %struct.estate*, %struct.estate** %state.addr, align 4
  %43 = load %struct.estate*, %struct.estate** %state.addr, align 4
  %pc46 = getelementptr inbounds %struct.estate, %struct.estate* %43, i32 0, i32 1
  %44 = load i32*, i32** %pc46, align 4
  %incdec.ptr47 = getelementptr inbounds i32, i32* %44, i32 1
  store i32* %incdec.ptr47, i32** %pc46, align 4
  %45 = load i32, i32* %44, align 4
  %46 = load i32, i32* %how.addr, align 4
  %arrayidx48 = getelementptr inbounds [2 x i32], [2 x i32]* %pipes, i32 0, i32 0
  %47 = load i32, i32* %arrayidx48, align 4
  %48 = load i32, i32* %output.addr, align 4
  %49 = load i32, i32* %last1.addr, align 4
  call void @execpline2(%struct.estate* %42, i32 %45, i32 %46, i32 %47, i32 %48, i32 %49)
  %50 = load i32, i32* %old_list_pipe, align 4
  store i32 %50, i32* @list_pipe, align 4
  call void @cmdpop()
  br label %if.end49

if.end49:                                         ; preds = %if.then, %if.end40, %if.then29
  ret void
}

declare void @pipecleanfilelist(%union.linkroot*, i32) #1

declare void @spawnjob() #1

declare i32 @printjob(%struct.job*, i32, i32) #1

declare void @makerunning(%struct.job*) #1

declare void @waitjobs() #1

declare i32 @killpg(i32, i32) #1

declare i32 @pipe(i32*) #1

declare i8* @zleentry(i32, ...) #1

declare i32 @killjb(%struct.job*, i32) #1

declare i32 @read_loop(i32, i8*, i32) #1

declare i32 @setpgid(i32, i32) #1

declare i32 @kill(i32, i32) #1

declare i8* @getjobtext(%struct.eprog*, i32*) #1

; Function Attrs: noinline nounwind
define internal void @execcmd_analyse(%struct.estate* %state, %struct.execcmd_params* %eparams) #0 {
entry:
  %state.addr = alloca %struct.estate*, align 4
  %eparams.addr = alloca %struct.execcmd_params*, align 4
  %code = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.estate* %state, %struct.estate** %state.addr, align 4
  store %struct.execcmd_params* %eparams, %struct.execcmd_params** %eparams.addr, align 4
  %0 = load %struct.estate*, %struct.estate** %state.addr, align 4
  %pc = getelementptr inbounds %struct.estate, %struct.estate* %0, i32 0, i32 1
  %1 = load i32*, i32** %pc, align 4
  %2 = load %struct.execcmd_params*, %struct.execcmd_params** %eparams.addr, align 4
  %beg = getelementptr inbounds %struct.execcmd_params, %struct.execcmd_params* %2, i32 0, i32 2
  store i32* %1, i32** %beg, align 4
  %3 = load %struct.estate*, %struct.estate** %state.addr, align 4
  %pc1 = getelementptr inbounds %struct.estate, %struct.estate* %3, i32 0, i32 1
  %4 = load i32*, i32** %pc1, align 4
  %5 = load i32, i32* %4, align 4
  %and = and i32 %5, 31
  %cmp = icmp eq i32 %and, 4
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %6 = load %struct.estate*, %struct.estate** %state.addr, align 4
  %call = call %union.linkroot* @ecgetredirs(%struct.estate* %6)
  br label %cond.end

cond.false:                                       ; preds = %entry
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %union.linkroot* [ %call, %cond.true ], [ null, %cond.false ]
  %7 = load %struct.execcmd_params*, %struct.execcmd_params** %eparams.addr, align 4
  %redir = getelementptr inbounds %struct.execcmd_params, %struct.execcmd_params* %7, i32 0, i32 1
  store %union.linkroot* %cond, %union.linkroot** %redir, align 4
  %8 = load %struct.estate*, %struct.estate** %state.addr, align 4
  %pc2 = getelementptr inbounds %struct.estate, %struct.estate* %8, i32 0, i32 1
  %9 = load i32*, i32** %pc2, align 4
  %10 = load i32, i32* %9, align 4
  %and3 = and i32 %10, 31
  %cmp4 = icmp eq i32 %and3, 5
  br i1 %cmp4, label %if.then, label %if.else

if.then:                                          ; preds = %cond.end
  store i32 0, i32* @cmdoutval, align 4
  %11 = load %struct.estate*, %struct.estate** %state.addr, align 4
  %pc5 = getelementptr inbounds %struct.estate, %struct.estate* %11, i32 0, i32 1
  %12 = load i32*, i32** %pc5, align 4
  %13 = load %struct.execcmd_params*, %struct.execcmd_params** %eparams.addr, align 4
  %varspc = getelementptr inbounds %struct.execcmd_params, %struct.execcmd_params* %13, i32 0, i32 3
  store i32* %12, i32** %varspc, align 4
  br label %while.cond

while.cond:                                       ; preds = %cond.end15, %if.then
  %14 = load %struct.estate*, %struct.estate** %state.addr, align 4
  %pc6 = getelementptr inbounds %struct.estate, %struct.estate* %14, i32 0, i32 1
  %15 = load i32*, i32** %pc6, align 4
  %16 = load i32, i32* %15, align 4
  store i32 %16, i32* %code, align 4
  %and7 = and i32 %16, 31
  %cmp8 = icmp eq i32 %and7, 5
  br i1 %cmp8, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %17 = load i32, i32* %code, align 4
  %shr = lshr i32 %17, 5
  %and9 = and i32 %shr, 1
  %cmp10 = icmp eq i32 %and9, 0
  br i1 %cmp10, label %cond.true11, label %cond.false12

cond.true11:                                      ; preds = %while.body
  br label %cond.end15

cond.false12:                                     ; preds = %while.body
  %18 = load i32, i32* %code, align 4
  %shr13 = lshr i32 %18, 5
  %shr14 = lshr i32 %shr13, 2
  %add = add i32 %shr14, 2
  br label %cond.end15

cond.end15:                                       ; preds = %cond.false12, %cond.true11
  %cond16 = phi i32 [ 3, %cond.true11 ], [ %add, %cond.false12 ]
  %19 = load %struct.estate*, %struct.estate** %state.addr, align 4
  %pc17 = getelementptr inbounds %struct.estate, %struct.estate* %19, i32 0, i32 1
  %20 = load i32*, i32** %pc17, align 4
  %add.ptr = getelementptr inbounds i32, i32* %20, i32 %cond16
  store i32* %add.ptr, i32** %pc17, align 4
  br label %while.cond

while.end:                                        ; preds = %while.cond
  br label %if.end

if.else:                                          ; preds = %cond.end
  %21 = load %struct.execcmd_params*, %struct.execcmd_params** %eparams.addr, align 4
  %varspc18 = getelementptr inbounds %struct.execcmd_params, %struct.execcmd_params* %21, i32 0, i32 3
  store i32* null, i32** %varspc18, align 4
  br label %if.end

if.end:                                           ; preds = %if.else, %while.end
  %22 = load %struct.estate*, %struct.estate** %state.addr, align 4
  %pc19 = getelementptr inbounds %struct.estate, %struct.estate* %22, i32 0, i32 1
  %23 = load i32*, i32** %pc19, align 4
  %incdec.ptr = getelementptr inbounds i32, i32* %23, i32 1
  store i32* %incdec.ptr, i32** %pc19, align 4
  %24 = load i32, i32* %23, align 4
  store i32 %24, i32* %code, align 4
  %25 = load i32, i32* %code, align 4
  %and20 = and i32 %25, 31
  %26 = load %struct.execcmd_params*, %struct.execcmd_params** %eparams.addr, align 4
  %type = getelementptr inbounds %struct.execcmd_params, %struct.execcmd_params* %26, i32 0, i32 5
  store i32 %and20, i32* %type, align 4
  %27 = load %struct.execcmd_params*, %struct.execcmd_params** %eparams.addr, align 4
  %postassigns = getelementptr inbounds %struct.execcmd_params, %struct.execcmd_params* %27, i32 0, i32 6
  store i32 0, i32* %postassigns, align 4
  %28 = load %struct.execcmd_params*, %struct.execcmd_params** %eparams.addr, align 4
  %type21 = getelementptr inbounds %struct.execcmd_params, %struct.execcmd_params* %28, i32 0, i32 5
  %29 = load i32, i32* %type21, align 4
  switch i32 %29, label %sw.default [
    i32 6, label %sw.bb
    i32 7, label %sw.bb24
  ]

sw.bb:                                            ; preds = %if.end
  %30 = load %struct.estate*, %struct.estate** %state.addr, align 4
  %31 = load i32, i32* %code, align 4
  %shr22 = lshr i32 %31, 5
  %32 = load %struct.execcmd_params*, %struct.execcmd_params** %eparams.addr, align 4
  %htok = getelementptr inbounds %struct.execcmd_params, %struct.execcmd_params* %32, i32 0, i32 7
  %call23 = call %union.linkroot* @ecgetlist(%struct.estate* %30, i32 %shr22, i32 1, i32* %htok)
  %33 = load %struct.execcmd_params*, %struct.execcmd_params** %eparams.addr, align 4
  %args = getelementptr inbounds %struct.execcmd_params, %struct.execcmd_params* %33, i32 0, i32 0
  store %union.linkroot* %call23, %union.linkroot** %args, align 4
  %34 = load %struct.execcmd_params*, %struct.execcmd_params** %eparams.addr, align 4
  %assignspc = getelementptr inbounds %struct.execcmd_params, %struct.execcmd_params* %34, i32 0, i32 4
  store i32* null, i32** %assignspc, align 4
  br label %sw.epilog

sw.bb24:                                          ; preds = %if.end
  %35 = load %struct.estate*, %struct.estate** %state.addr, align 4
  %36 = load i32, i32* %code, align 4
  %shr25 = lshr i32 %36, 5
  %37 = load %struct.execcmd_params*, %struct.execcmd_params** %eparams.addr, align 4
  %htok26 = getelementptr inbounds %struct.execcmd_params, %struct.execcmd_params* %37, i32 0, i32 7
  %call27 = call %union.linkroot* @ecgetlist(%struct.estate* %35, i32 %shr25, i32 1, i32* %htok26)
  %38 = load %struct.execcmd_params*, %struct.execcmd_params** %eparams.addr, align 4
  %args28 = getelementptr inbounds %struct.execcmd_params, %struct.execcmd_params* %38, i32 0, i32 0
  store %union.linkroot* %call27, %union.linkroot** %args28, align 4
  %39 = load %struct.estate*, %struct.estate** %state.addr, align 4
  %pc29 = getelementptr inbounds %struct.estate, %struct.estate* %39, i32 0, i32 1
  %40 = load i32*, i32** %pc29, align 4
  %incdec.ptr30 = getelementptr inbounds i32, i32* %40, i32 1
  store i32* %incdec.ptr30, i32** %pc29, align 4
  %41 = load i32, i32* %40, align 4
  %42 = load %struct.execcmd_params*, %struct.execcmd_params** %eparams.addr, align 4
  %postassigns31 = getelementptr inbounds %struct.execcmd_params, %struct.execcmd_params* %42, i32 0, i32 6
  store i32 %41, i32* %postassigns31, align 4
  %43 = load %struct.estate*, %struct.estate** %state.addr, align 4
  %pc32 = getelementptr inbounds %struct.estate, %struct.estate* %43, i32 0, i32 1
  %44 = load i32*, i32** %pc32, align 4
  %45 = load %struct.execcmd_params*, %struct.execcmd_params** %eparams.addr, align 4
  %assignspc33 = getelementptr inbounds %struct.execcmd_params, %struct.execcmd_params* %45, i32 0, i32 4
  store i32* %44, i32** %assignspc33, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %sw.bb24
  %46 = load i32, i32* %i, align 4
  %47 = load %struct.execcmd_params*, %struct.execcmd_params** %eparams.addr, align 4
  %postassigns34 = getelementptr inbounds %struct.execcmd_params, %struct.execcmd_params* %47, i32 0, i32 6
  %48 = load i32, i32* %postassigns34, align 4
  %cmp35 = icmp slt i32 %46, %48
  br i1 %cmp35, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %49 = load %struct.estate*, %struct.estate** %state.addr, align 4
  %pc36 = getelementptr inbounds %struct.estate, %struct.estate* %49, i32 0, i32 1
  %50 = load i32*, i32** %pc36, align 4
  %51 = load i32, i32* %50, align 4
  store i32 %51, i32* %code, align 4
  %52 = load i32, i32* %code, align 4
  %shr37 = lshr i32 %52, 5
  %and38 = and i32 %shr37, 1
  %cmp39 = icmp eq i32 %and38, 0
  br i1 %cmp39, label %cond.true40, label %cond.false41

cond.true40:                                      ; preds = %for.body
  br label %cond.end45

cond.false41:                                     ; preds = %for.body
  %53 = load i32, i32* %code, align 4
  %shr42 = lshr i32 %53, 5
  %shr43 = lshr i32 %shr42, 2
  %add44 = add i32 %shr43, 2
  br label %cond.end45

cond.end45:                                       ; preds = %cond.false41, %cond.true40
  %cond46 = phi i32 [ 3, %cond.true40 ], [ %add44, %cond.false41 ]
  %54 = load %struct.estate*, %struct.estate** %state.addr, align 4
  %pc47 = getelementptr inbounds %struct.estate, %struct.estate* %54, i32 0, i32 1
  %55 = load i32*, i32** %pc47, align 4
  %add.ptr48 = getelementptr inbounds i32, i32* %55, i32 %cond46
  store i32* %add.ptr48, i32** %pc47, align 4
  br label %for.inc

for.inc:                                          ; preds = %cond.end45
  %56 = load i32, i32* %i, align 4
  %inc = add nsw i32 %56, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  br label %sw.epilog

sw.default:                                       ; preds = %if.end
  %57 = load %struct.execcmd_params*, %struct.execcmd_params** %eparams.addr, align 4
  %args49 = getelementptr inbounds %struct.execcmd_params, %struct.execcmd_params* %57, i32 0, i32 0
  store %union.linkroot* null, %union.linkroot** %args49, align 4
  %58 = load %struct.execcmd_params*, %struct.execcmd_params** %eparams.addr, align 4
  %assignspc50 = getelementptr inbounds %struct.execcmd_params, %struct.execcmd_params* %58, i32 0, i32 4
  store i32* null, i32** %assignspc50, align 4
  %59 = load %struct.execcmd_params*, %struct.execcmd_params** %eparams.addr, align 4
  %htok51 = getelementptr inbounds %struct.execcmd_params, %struct.execcmd_params* %59, i32 0, i32 7
  store i32 0, i32* %htok51, align 4
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %for.end, %sw.bb
  ret void
}

; Function Attrs: noinline nounwind
define internal void @execcmd_exec(%struct.estate* %state, %struct.execcmd_params* %eparams, i32 %input, i32 %output, i32 %how, i32 %last1, i32 %close_if_forked) #0 {
entry:
  %state.addr = alloca %struct.estate*, align 4
  %eparams.addr = alloca %struct.execcmd_params*, align 4
  %input.addr = alloca i32, align 4
  %output.addr = alloca i32, align 4
  %how.addr = alloca i32, align 4
  %last1.addr = alloca i32, align 4
  %close_if_forked.addr = alloca i32, align 4
  %hn = alloca %struct.hashnode*, align 4
  %filelist = alloca %union.linkroot*, align 4
  %node = alloca %struct.linknode*, align 4
  %fn = alloca %struct.redir*, align 4
  %mfds = alloca [10 x %struct.multio*], align 4
  %text = alloca i8*, align 4
  %save = alloca [10 x i32], align 4
  %fil = alloca i32, align 4
  %dfil = alloca i32, align 4
  %is_cursh = alloca i32, align 4
  %do_exec = alloca i32, align 4
  %redir_err = alloca i32, align 4
  %i = alloca i32, align 4
  %nullexec = alloca i32, align 4
  %magic_assign = alloca i32, align 4
  %forked = alloca i32, align 4
  %old_lastval = alloca i32, align 4
  %is_shfunc = alloca i32, align 4
  %is_builtin = alloca i32, align 4
  %is_exec = alloca i32, align 4
  %use_defpath = alloca i32, align 4
  %cflags = alloca i32, align 4
  %orig_cflags = alloca i32, align 4
  %checked = alloca i32, align 4
  %oautocont = alloca i32, align 4
  %oxtrerr = alloca %struct._IO_FILE*, align 4
  %newxtrerr = alloca %struct._IO_FILE*, align 4
  %args = alloca %union.linkroot*, align 4
  %redir = alloca %union.linkroot*, align 4
  %varspc = alloca i32*, align 4
  %type = alloca i32, align 4
  %preargs = alloca %union.linkroot*, align 4
  %cmdarg = alloca i8*, align 4
  %argnode = alloca %struct.linknode*, align 4
  %oldnode = alloca %struct.linknode*, align 4
  %pnode = alloca %struct.linknode*, align 4
  %argdata = alloca i8*, align 4
  %cmdopt = alloca i8*, align 4
  %has_p = alloca i32, align 4
  %has_vV = alloca i32, align 4
  %has_other = alloca i32, align 4
  %argnode275 = alloca %struct.linknode*, align 4
  %oldnode278 = alloca %struct.linknode*, align 4
  %argdata279 = alloca i8*, align 4
  %cmdopt281 = alloca i8*, align 4
  %exec_argv0 = alloca i8*, align 4
  %str = alloca i8*, align 4
  %s = alloca i8*, align 4
  %sz = alloca i32, align 4
  %unglobbed = alloca i32, align 4
  %cmdarg443 = alloca i8*, align 4
  %node772 = alloca %struct.linknode*, align 4
  %next773 = alloca %struct.linknode*, align 4
  %s785 = alloca i8*, align 4
  %l = alloca i32, align 4
  %t = alloca i8, align 1
  %rmall = alloca i32, align 4
  %shf = alloca %struct.shfunc*, align 4
  %s870 = alloca %struct.estate, align 4
  %redir2871 = alloca %union.linkroot*, align 4
  %s917 = alloca i8*, align 4
  %trycd = alloca i8, align 1
  %cmdarg952 = alloca i8*, align 4
  %checkpath = alloca i8**, align 4
  %dohashcmd = alloca i32, align 4
  %oargs = alloca %union.linkroot*, align 4
  %closed = alloca i32, align 4
  %s1338 = alloca i8*, align 4
  %t1340 = alloca i8*, align 4
  %vbuf = alloca %struct.value, align 4
  %v = alloca %struct.value*, align 4
  %bad = alloca i32, align 4
  %bad_msg = alloca [3 x i8*], align 4
  %fd = alloca i32, align 4
  %fdstr = alloca [12 x i8], align 1
  %restorelist = alloca %union.linkroot*, align 4
  %removelist = alloca %union.linkroot*, align 4
  %q = alloca i32, align 4
  %flags1752 = alloca i32, align 4
  %redir_prog = alloca %struct.eprog*, align 4
  %s1786 = alloca %struct.estate, align 4
  %oset = alloca %struct.__sigset_t, align 4
  %tmp = alloca %struct.__sigset_t, align 4
  %tmp1806 = alloca %struct.__sigset_t, align 4
  %oset1826 = alloca %struct.__sigset_t, align 4
  %tmp1830 = alloca %struct.__sigset_t, align 4
  %tmp1832 = alloca %struct.__sigset_t, align 4
  %restorelist1851 = alloca %union.linkroot*, align 4
  %removelist1853 = alloca %union.linkroot*, align 4
  %do_save = alloca i32, align 4
  %flags1885 = alloca i32, align 4
  %assigns = alloca %union.linkroot*, align 4
  %postassigns = alloca i32, align 4
  %opc = alloca i32*, align 4
  %htok1921 = alloca i32, align 4
  %ac = alloca i32, align 4
  %name1926 = alloca i8*, align 4
  %asg = alloca %struct.asgment*, align 4
  %svl = alloca %union.linkroot, align 4
  %__n0 = alloca %struct.linknode, align 4
  %data = alloca i8*, align 4
  %ptr = alloca i8*, align 4
  %val = alloca i8*, align 4
  %prefork_ret = alloca i32, align 4
  %oset2099 = alloca %struct.__sigset_t, align 4
  %tmp2103 = alloca %struct.__sigset_t, align 4
  %tmp2105 = alloca %struct.__sigset_t, align 4
  %ret = alloca i32, align 4
  %addflags = alloca i32, align 4
  store %struct.estate* %state, %struct.estate** %state.addr, align 4
  store %struct.execcmd_params* %eparams, %struct.execcmd_params** %eparams.addr, align 4
  store i32 %input, i32* %input.addr, align 4
  store i32 %output, i32* %output.addr, align 4
  store i32 %how, i32* %how.addr, align 4
  store i32 %last1, i32* %last1.addr, align 4
  store i32 %close_if_forked, i32* %close_if_forked.addr, align 4
  store %struct.hashnode* null, %struct.hashnode** %hn, align 4
  store %union.linkroot* null, %union.linkroot** %filelist, align 4
  store i32 0, i32* %do_exec, align 4
  store i32 0, i32* %redir_err, align 4
  store i32 0, i32* %nullexec, align 4
  store i32 0, i32* %magic_assign, align 4
  store i32 0, i32* %forked, align 4
  store i32 0, i32* %is_shfunc, align 4
  store i32 0, i32* %is_builtin, align 4
  store i32 0, i32* %is_exec, align 4
  store i32 0, i32* %use_defpath, align 4
  store i32 0, i32* %cflags, align 4
  store i32 0, i32* %orig_cflags, align 4
  store i32 0, i32* %checked, align 4
  store i32 -1, i32* %oautocont, align 4
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @xtrerr, align 4
  store %struct._IO_FILE* %0, %struct._IO_FILE** %oxtrerr, align 4
  store %struct._IO_FILE* null, %struct._IO_FILE** %newxtrerr, align 4
  %1 = load %struct.execcmd_params*, %struct.execcmd_params** %eparams.addr, align 4
  %args1 = getelementptr inbounds %struct.execcmd_params, %struct.execcmd_params* %1, i32 0, i32 0
  %2 = load %union.linkroot*, %union.linkroot** %args1, align 4
  store %union.linkroot* %2, %union.linkroot** %args, align 4
  %3 = load %struct.execcmd_params*, %struct.execcmd_params** %eparams.addr, align 4
  %redir2 = getelementptr inbounds %struct.execcmd_params, %struct.execcmd_params* %3, i32 0, i32 1
  %4 = load %union.linkroot*, %union.linkroot** %redir2, align 4
  store %union.linkroot* %4, %union.linkroot** %redir, align 4
  %5 = load %struct.execcmd_params*, %struct.execcmd_params** %eparams.addr, align 4
  %varspc3 = getelementptr inbounds %struct.execcmd_params, %struct.execcmd_params* %5, i32 0, i32 3
  %6 = load i32*, i32** %varspc3, align 4
  store i32* %6, i32** %varspc, align 4
  %7 = load %struct.execcmd_params*, %struct.execcmd_params** %eparams.addr, align 4
  %type4 = getelementptr inbounds %struct.execcmd_params, %struct.execcmd_params* %7, i32 0, i32 5
  %8 = load i32, i32* %type4, align 4
  store i32 %8, i32* %type, align 4
  store i32 0, i32* @doneps4, align 4
  %9 = load i32, i32* @lastval, align 4
  store i32 %9, i32* %old_lastval, align 4
  %10 = load %union.linkroot*, %union.linkroot** %args, align 4
  %tobool = icmp ne %union.linkroot* %10, null
  br i1 %tobool, label %if.end, label %land.lhs.true

land.lhs.true:                                    ; preds = %entry
  %11 = load i32*, i32** %varspc, align 4
  %tobool5 = icmp ne i32* %11, null
  br i1 %tobool5, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true
  %12 = load i32, i32* @errflag, align 4
  %tobool6 = icmp ne i32 %12, 0
  br i1 %tobool6, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.then
  %13 = load i32, i32* @errflag, align 4
  br label %cond.end

cond.false:                                       ; preds = %if.then
  %14 = load i32, i32* @cmdoutval, align 4
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %13, %cond.true ], [ %14, %cond.false ]
  store i32 %cond, i32* @lastval, align 4
  br label %if.end

if.end:                                           ; preds = %cond.end, %land.lhs.true, %entry
  %15 = load %union.linkroot*, %union.linkroot** %args, align 4
  %tobool7 = icmp ne %union.linkroot* %15, null
  %lnot = xor i1 %tobool7, true
  %lnot.ext = zext i1 %lnot to i32
  store i32 %lnot.ext, i32* @use_cmdoutval, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end
  %16 = load i32, i32* %i, align 4
  %cmp = icmp slt i32 %16, 10
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %17 = load i32, i32* %i, align 4
  %arrayidx = getelementptr inbounds [10 x i32], [10 x i32]* %save, i32 0, i32 %17
  store i32 -2, i32* %arrayidx, align 4
  %18 = load i32, i32* %i, align 4
  %arrayidx8 = getelementptr inbounds [10 x %struct.multio*], [10 x %struct.multio*]* %mfds, i32 0, i32 %18
  store %struct.multio* null, %struct.multio** %arrayidx8, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %19 = load i32, i32* %i, align 4
  %inc = add nsw i32 %19, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %20 = load i32, i32* %type, align 4
  %cmp9 = icmp eq i32 %20, 6
  br i1 %cmp9, label %land.lhs.true11, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %for.end
  %21 = load i32, i32* %type, align 4
  %cmp10 = icmp eq i32 %21, 7
  br i1 %cmp10, label %land.lhs.true11, label %if.end36

land.lhs.true11:                                  ; preds = %lor.lhs.false, %for.end
  %22 = load %union.linkroot*, %union.linkroot** %args, align 4
  %tobool12 = icmp ne %union.linkroot* %22, null
  br i1 %tobool12, label %land.lhs.true13, label %if.end36

land.lhs.true13:                                  ; preds = %land.lhs.true11
  %23 = load %union.linkroot*, %union.linkroot** %args, align 4
  %list = bitcast %union.linkroot* %23 to %struct.linklist*
  %first = getelementptr inbounds %struct.linklist, %struct.linklist* %list, i32 0, i32 0
  %24 = load %struct.linknode*, %struct.linknode** %first, align 4
  %cmp14 = icmp ne %struct.linknode* %24, null
  br i1 %cmp14, label %land.lhs.true15, label %if.end36

land.lhs.true15:                                  ; preds = %land.lhs.true13
  %25 = load %union.linkroot*, %union.linkroot** %args, align 4
  %list16 = bitcast %union.linkroot* %25 to %struct.linklist*
  %first17 = getelementptr inbounds %struct.linklist, %struct.linklist* %list16, i32 0, i32 0
  %26 = load %struct.linknode*, %struct.linknode** %first17, align 4
  %dat = getelementptr inbounds %struct.linknode, %struct.linknode* %26, i32 0, i32 2
  %27 = load i8*, i8** %dat, align 4
  %28 = load i8, i8* %27, align 1
  %conv = sext i8 %28 to i32
  %cmp18 = icmp eq i32 %conv, 37
  br i1 %cmp18, label %if.then20, label %if.end36

if.then20:                                        ; preds = %land.lhs.true15
  %29 = load i32, i32* %how.addr, align 4
  %and = and i32 %29, 8
  %tobool21 = icmp ne i32 %and, 0
  br i1 %tobool21, label %if.then22, label %if.end24

if.then22:                                        ; preds = %if.then20
  %30 = load i8, i8* getelementptr inbounds ([181 x i8], [181 x i8]* @opts, i32 0, i32 8), align 1
  %conv23 = sext i8 %30 to i32
  store i32 %conv23, i32* %oautocont, align 4
  store i8 1, i8* getelementptr inbounds ([181 x i8], [181 x i8]* @opts, i32 0, i32 8), align 1
  br label %if.end24

if.end24:                                         ; preds = %if.then22, %if.then20
  %31 = load %union.linkroot*, %union.linkroot** %args, align 4
  %32 = load %union.linkroot*, %union.linkroot** %args, align 4
  %node25 = bitcast %union.linkroot* %32 to %struct.linknode*
  %33 = load i32, i32* %how.addr, align 4
  %and26 = and i32 %33, 8
  %tobool27 = icmp ne i32 %and26, 0
  br i1 %tobool27, label %cond.true28, label %cond.false29

cond.true28:                                      ; preds = %if.end24
  br label %cond.end33

cond.false29:                                     ; preds = %if.end24
  %34 = load i32, i32* %how.addr, align 4
  %and30 = and i32 %34, 4
  %tobool31 = icmp ne i32 %and30, 0
  %cond32 = select i1 %tobool31, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.48, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.49, i32 0, i32 0)
  br label %cond.end33

cond.end33:                                       ; preds = %cond.false29, %cond.true28
  %cond34 = phi i8* [ getelementptr inbounds ([7 x i8], [7 x i8]* @.str.47, i32 0, i32 0), %cond.true28 ], [ %cond32, %cond.false29 ]
  %call = call i8* @dupstring(i8* %cond34)
  %call35 = call %struct.linknode* @insertlinknode(%union.linkroot* %31, %struct.linknode* %node25, i8* %call)
  store i32 2, i32* %how.addr, align 4
  br label %if.end36

if.end36:                                         ; preds = %cond.end33, %land.lhs.true15, %land.lhs.true13, %land.lhs.true11, %lor.lhs.false
  %35 = load i8, i8* getelementptr inbounds ([181 x i8], [181 x i8]* @opts, i32 0, i32 16), align 1
  %conv37 = sext i8 %35 to i32
  %tobool38 = icmp ne i32 %conv37, 0
  br i1 %tobool38, label %land.lhs.true39, label %if.end80

land.lhs.true39:                                  ; preds = %if.end36
  %36 = load i32, i32* %type, align 4
  %cmp40 = icmp eq i32 %36, 6
  br i1 %cmp40, label %land.lhs.true42, label %if.end80

land.lhs.true42:                                  ; preds = %land.lhs.true39
  %37 = load i32, i32* %how.addr, align 4
  %and43 = and i32 %37, 2
  %tobool44 = icmp ne i32 %and43, 0
  br i1 %tobool44, label %land.lhs.true45, label %if.end80

land.lhs.true45:                                  ; preds = %land.lhs.true42
  %38 = load %union.linkroot*, %union.linkroot** %args, align 4
  %tobool46 = icmp ne %union.linkroot* %38, null
  br i1 %tobool46, label %land.lhs.true47, label %if.end80

land.lhs.true47:                                  ; preds = %land.lhs.true45
  %39 = load %union.linkroot*, %union.linkroot** %args, align 4
  %list48 = bitcast %union.linkroot* %39 to %struct.linklist*
  %first49 = getelementptr inbounds %struct.linklist, %struct.linklist* %list48, i32 0, i32 0
  %40 = load %struct.linknode*, %struct.linknode** %first49, align 4
  %cmp50 = icmp ne %struct.linknode* %40, null
  br i1 %cmp50, label %land.lhs.true52, label %if.end80

land.lhs.true52:                                  ; preds = %land.lhs.true47
  %41 = load %union.linkroot*, %union.linkroot** %redir, align 4
  %tobool53 = icmp ne %union.linkroot* %41, null
  br i1 %tobool53, label %lor.lhs.false54, label %land.lhs.true59

lor.lhs.false54:                                  ; preds = %land.lhs.true52
  %42 = load %union.linkroot*, %union.linkroot** %redir, align 4
  %list55 = bitcast %union.linkroot* %42 to %struct.linklist*
  %first56 = getelementptr inbounds %struct.linklist, %struct.linklist* %list55, i32 0, i32 0
  %43 = load %struct.linknode*, %struct.linknode** %first56, align 4
  %cmp57 = icmp eq %struct.linknode* %43, null
  br i1 %cmp57, label %land.lhs.true59, label %if.end80

land.lhs.true59:                                  ; preds = %lor.lhs.false54, %land.lhs.true52
  %44 = load i32, i32* %input.addr, align 4
  %tobool60 = icmp ne i32 %44, 0
  br i1 %tobool60, label %if.end80, label %land.lhs.true61

land.lhs.true61:                                  ; preds = %land.lhs.true59
  %45 = load %union.linkroot*, %union.linkroot** %args, align 4
  %list62 = bitcast %union.linkroot* %45 to %struct.linklist*
  %first63 = getelementptr inbounds %struct.linklist, %struct.linklist* %list62, i32 0, i32 0
  %46 = load %struct.linknode*, %struct.linknode** %first63, align 4
  %next = getelementptr inbounds %struct.linknode, %struct.linknode* %46, i32 0, i32 0
  %47 = load %struct.linknode*, %struct.linknode** %next, align 4
  %tobool64 = icmp ne %struct.linknode* %47, null
  br i1 %tobool64, label %if.end80, label %if.then65

if.then65:                                        ; preds = %land.lhs.true61
  %48 = load i8, i8* getelementptr inbounds ([181 x i8], [181 x i8]* @opts, i32 0, i32 122), align 1
  %tobool66 = icmp ne i8 %48, 0
  br i1 %tobool66, label %if.end68, label %if.then67

if.then67:                                        ; preds = %if.then65
  call void @scanjobs()
  br label %if.end68

if.end68:                                         ; preds = %if.then67, %if.then65
  %49 = load %union.linkroot*, %union.linkroot** %args, align 4
  %list69 = bitcast %union.linkroot* %49 to %struct.linklist*
  %first70 = getelementptr inbounds %struct.linklist, %struct.linklist* %list69, i32 0, i32 0
  %50 = load %struct.linknode*, %struct.linknode** %first70, align 4
  %dat71 = getelementptr inbounds %struct.linknode, %struct.linknode* %50, i32 0, i32 2
  %51 = load i8*, i8** %dat71, align 4
  %call72 = call i32 @findjobnam(i8* %51)
  %cmp73 = icmp ne i32 %call72, -1
  br i1 %cmp73, label %if.then75, label %if.end79

if.then75:                                        ; preds = %if.end68
  %52 = load %union.linkroot*, %union.linkroot** %args, align 4
  %53 = load %union.linkroot*, %union.linkroot** %args, align 4
  %node76 = bitcast %union.linkroot* %53 to %struct.linknode*
  %call77 = call i8* @dupstring(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.49, i32 0, i32 0))
  %call78 = call %struct.linknode* @insertlinknode(%union.linkroot* %52, %struct.linknode* %node76, i8* %call77)
  br label %if.end79

if.end79:                                         ; preds = %if.then75, %if.end68
  br label %if.end80

if.end80:                                         ; preds = %if.end79, %land.lhs.true61, %land.lhs.true59, %lor.lhs.false54, %land.lhs.true47, %land.lhs.true45, %land.lhs.true42, %land.lhs.true39, %if.end36
  %54 = load i32, i32* %how.addr, align 4
  %and81 = and i32 %54, 4
  %tobool82 = icmp ne i32 %and81, 0
  br i1 %tobool82, label %if.then85, label %lor.lhs.false83

lor.lhs.false83:                                  ; preds = %if.end80
  %55 = load i32, i32* %output.addr, align 4
  %tobool84 = icmp ne i32 %55, 0
  br i1 %tobool84, label %if.then85, label %if.else

if.then85:                                        ; preds = %lor.lhs.false83, %if.end80
  %56 = load %struct.estate*, %struct.estate** %state.addr, align 4
  %prog = getelementptr inbounds %struct.estate, %struct.estate* %56, i32 0, i32 0
  %57 = load %struct.eprog*, %struct.eprog** %prog, align 4
  %58 = load %struct.execcmd_params*, %struct.execcmd_params** %eparams.addr, align 4
  %beg = getelementptr inbounds %struct.execcmd_params, %struct.execcmd_params* %58, i32 0, i32 2
  %59 = load i32*, i32** %beg, align 4
  %call86 = call i8* @getjobtext(%struct.eprog* %57, i32* %59)
  store i8* %call86, i8** %text, align 4
  %60 = load %struct.estate*, %struct.estate** %state.addr, align 4
  %61 = load i32, i32* %how.addr, align 4
  %62 = load i32, i32* %type, align 4
  %63 = load i32*, i32** %varspc, align 4
  %64 = load i8*, i8** %text, align 4
  %65 = load i32, i32* %oautocont, align 4
  %66 = load i32, i32* %close_if_forked.addr, align 4
  %call87 = call i32 @execcmd_fork(%struct.estate* %60, i32 %61, i32 %62, i32* %63, %union.linkroot** %filelist, i8* %64, i32 %65, i32 %66)
  switch i32 %call87, label %sw.default [
    i32 -1, label %sw.bb
    i32 0, label %sw.bb88
  ]

sw.bb:                                            ; preds = %if.then85
  br label %fatal

sw.bb88:                                          ; preds = %if.then85
  br label %sw.epilog

sw.default:                                       ; preds = %if.then85
  br label %if.end2286

sw.epilog:                                        ; preds = %sw.bb88
  store i32 1, i32* %forked, align 4
  store i32 1, i32* %last1.addr, align 4
  br label %if.end89

if.else:                                          ; preds = %lor.lhs.false83
  store i8* null, i8** %text, align 4
  br label %if.end89

if.end89:                                         ; preds = %if.else, %sw.epilog
  %67 = load i32, i32* %type, align 4
  %cmp90 = icmp eq i32 %67, 6
  br i1 %cmp90, label %land.lhs.true95, label %lor.lhs.false92

lor.lhs.false92:                                  ; preds = %if.end89
  %68 = load i32, i32* %type, align 4
  %cmp93 = icmp eq i32 %68, 7
  br i1 %cmp93, label %land.lhs.true95, label %if.else409

land.lhs.true95:                                  ; preds = %lor.lhs.false92, %if.end89
  %69 = load %union.linkroot*, %union.linkroot** %args, align 4
  %tobool96 = icmp ne %union.linkroot* %69, null
  br i1 %tobool96, label %if.then97, label %if.else409

if.then97:                                        ; preds = %land.lhs.true95
  %call98 = call %union.linkroot* @newlinklist()
  store %union.linkroot* %call98, %union.linkroot** %preargs, align 4
  %70 = load %union.linkroot*, %union.linkroot** %preargs, align 4
  %71 = load %union.linkroot*, %union.linkroot** %args, align 4
  %72 = load %struct.execcmd_params*, %struct.execcmd_params** %eparams.addr, align 4
  %htok = getelementptr inbounds %struct.execcmd_params, %struct.execcmd_params* %72, i32 0, i32 7
  %73 = load i32, i32* %htok, align 4
  call void @execcmd_getargs(%union.linkroot* %70, %union.linkroot* %71, i32 %73)
  br label %while.cond

while.cond:                                       ; preds = %if.end407, %if.then97
  %74 = load %union.linkroot*, %union.linkroot** %preargs, align 4
  %list99 = bitcast %union.linkroot* %74 to %struct.linklist*
  %first100 = getelementptr inbounds %struct.linklist, %struct.linklist* %list99, i32 0, i32 0
  %75 = load %struct.linknode*, %struct.linknode** %first100, align 4
  %cmp101 = icmp ne %struct.linknode* %75, null
  br i1 %cmp101, label %while.body, label %while.end408

while.body:                                       ; preds = %while.cond
  %76 = load %union.linkroot*, %union.linkroot** %preargs, align 4
  %list103 = bitcast %union.linkroot* %76 to %struct.linklist*
  %first104 = getelementptr inbounds %struct.linklist, %struct.linklist* %list103, i32 0, i32 0
  %77 = load %struct.linknode*, %struct.linknode** %first104, align 4
  %dat105 = getelementptr inbounds %struct.linknode, %struct.linknode* %77, i32 0, i32 2
  %78 = load i8*, i8** %dat105, align 4
  store i8* %78, i8** %cmdarg, align 4
  %79 = load i8*, i8** %cmdarg, align 4
  %call106 = call i32 @has_token(i8* %79)
  %tobool107 = icmp ne i32 %call106, 0
  %lnot108 = xor i1 %tobool107, true
  %lnot.ext109 = zext i1 %lnot108 to i32
  store i32 %lnot.ext109, i32* %checked, align 4
  %80 = load i32, i32* %checked, align 4
  %tobool110 = icmp ne i32 %80, 0
  br i1 %tobool110, label %if.end112, label %if.then111

if.then111:                                       ; preds = %while.body
  br label %while.end408

if.end112:                                        ; preds = %while.body
  %81 = load i32, i32* %type, align 4
  %cmp113 = icmp eq i32 %81, 7
  br i1 %cmp113, label %land.lhs.true115, label %if.else119

land.lhs.true115:                                 ; preds = %if.end112
  %82 = load %struct.hashtable*, %struct.hashtable** @builtintab, align 4
  %getnode2 = getelementptr inbounds %struct.hashtable, %struct.hashtable* %82, i32 0, i32 10
  %83 = load %struct.hashnode* (%struct.hashtable*, i8*)*, %struct.hashnode* (%struct.hashtable*, i8*)** %getnode2, align 4
  %84 = load %struct.hashtable*, %struct.hashtable** @builtintab, align 4
  %85 = load i8*, i8** %cmdarg, align 4
  %call116 = call %struct.hashnode* %83(%struct.hashtable* %84, i8* %85)
  store %struct.hashnode* %call116, %struct.hashnode** %hn, align 4
  %tobool117 = icmp ne %struct.hashnode* %call116, null
  br i1 %tobool117, label %if.then118, label %if.else119

if.then118:                                       ; preds = %land.lhs.true115
  store i32 1, i32* %checked, align 4
  br label %if.end144

if.else119:                                       ; preds = %land.lhs.true115, %if.end112
  %86 = load i8, i8* getelementptr inbounds ([181 x i8], [181 x i8]* @opts, i32 0, i32 132), align 1
  %conv120 = sext i8 %86 to i32
  %tobool121 = icmp ne i32 %conv120, 0
  br i1 %tobool121, label %land.lhs.true122, label %if.else126

land.lhs.true122:                                 ; preds = %if.else119
  %87 = load i32, i32* %cflags, align 4
  %and123 = and i32 %87, 512
  %tobool124 = icmp ne i32 %and123, 0
  br i1 %tobool124, label %if.then125, label %if.else126

if.then125:                                       ; preds = %land.lhs.true122
  br label %while.end408

if.else126:                                       ; preds = %land.lhs.true122, %if.else119
  %88 = load i32, i32* %cflags, align 4
  %and127 = and i32 %88, 384
  %tobool128 = icmp ne i32 %and127, 0
  br i1 %tobool128, label %if.end133, label %land.lhs.true129

land.lhs.true129:                                 ; preds = %if.else126
  %89 = load %struct.hashtable*, %struct.hashtable** @shfunctab, align 4
  %getnode = getelementptr inbounds %struct.hashtable, %struct.hashtable* %89, i32 0, i32 9
  %90 = load %struct.hashnode* (%struct.hashtable*, i8*)*, %struct.hashnode* (%struct.hashtable*, i8*)** %getnode, align 4
  %91 = load %struct.hashtable*, %struct.hashtable** @shfunctab, align 4
  %92 = load i8*, i8** %cmdarg, align 4
  %call130 = call %struct.hashnode* %90(%struct.hashtable* %91, i8* %92)
  store %struct.hashnode* %call130, %struct.hashnode** %hn, align 4
  %tobool131 = icmp ne %struct.hashnode* %call130, null
  br i1 %tobool131, label %if.then132, label %if.end133

if.then132:                                       ; preds = %land.lhs.true129
  store i32 1, i32* %is_shfunc, align 4
  br label %while.end408

if.end133:                                        ; preds = %land.lhs.true129, %if.else126
  %93 = load %struct.hashtable*, %struct.hashtable** @builtintab, align 4
  %getnode134 = getelementptr inbounds %struct.hashtable, %struct.hashtable* %93, i32 0, i32 9
  %94 = load %struct.hashnode* (%struct.hashtable*, i8*)*, %struct.hashnode* (%struct.hashtable*, i8*)** %getnode134, align 4
  %95 = load %struct.hashtable*, %struct.hashtable** @builtintab, align 4
  %96 = load i8*, i8** %cmdarg, align 4
  %call135 = call %struct.hashnode* %94(%struct.hashtable* %95, i8* %96)
  store %struct.hashnode* %call135, %struct.hashnode** %hn, align 4
  %tobool136 = icmp ne %struct.hashnode* %call135, null
  br i1 %tobool136, label %if.end142, label %if.then137

if.then137:                                       ; preds = %if.end133
  %97 = load i32, i32* %cflags, align 4
  %and138 = and i32 %97, 128
  %tobool139 = icmp ne i32 %and138, 0
  %lnot140 = xor i1 %tobool139, true
  %lnot.ext141 = zext i1 %lnot140 to i32
  store i32 %lnot.ext141, i32* %checked, align 4
  br label %while.end408

if.end142:                                        ; preds = %if.end133
  br label %if.end143

if.end143:                                        ; preds = %if.end142
  br label %if.end144

if.end144:                                        ; preds = %if.end143, %if.then118
  %98 = load i32, i32* %cflags, align 4
  %99 = load i32, i32* %orig_cflags, align 4
  %or = or i32 %99, %98
  store i32 %or, i32* %orig_cflags, align 4
  %100 = load i32, i32* %cflags, align 4
  %and145 = and i32 %100, -385
  store i32 %and145, i32* %cflags, align 4
  %101 = load %struct.hashnode*, %struct.hashnode** %hn, align 4
  %flags = getelementptr inbounds %struct.hashnode, %struct.hashnode* %101, i32 0, i32 2
  %102 = load i32, i32* %flags, align 4
  %103 = load i32, i32* %cflags, align 4
  %or146 = or i32 %103, %102
  store i32 %or146, i32* %cflags, align 4
  %104 = load %struct.hashnode*, %struct.hashnode** %hn, align 4
  %flags147 = getelementptr inbounds %struct.hashnode, %struct.hashnode* %104, i32 0, i32 2
  %105 = load i32, i32* %flags147, align 4
  %and148 = and i32 %105, 32
  %tobool149 = icmp ne i32 %and148, 0
  br i1 %tobool149, label %if.end164, label %if.then150

if.then150:                                       ; preds = %if.end144
  store i32 1, i32* %is_builtin, align 4
  %106 = load i8*, i8** %cmdarg, align 4
  %107 = load %struct.hashnode*, %struct.hashnode** %hn, align 4
  %call151 = call %struct.hashnode* @resolvebuiltin(i8* %106, %struct.hashnode* %107)
  store %struct.hashnode* %call151, %struct.hashnode** %hn, align 4
  %tobool152 = icmp ne %struct.hashnode* %call151, null
  br i1 %tobool152, label %if.end157, label %if.then153

if.then153:                                       ; preds = %if.then150
  %108 = load i32, i32* %forked, align 4
  %tobool154 = icmp ne i32 %108, 0
  br i1 %tobool154, label %if.then155, label %if.end156

if.then155:                                       ; preds = %if.then153
  %109 = load i32, i32* @lastval, align 4
  call void @_exit(i32 %109) #4
  unreachable

if.end156:                                        ; preds = %if.then153
  br label %if.end2286

if.end157:                                        ; preds = %if.then150
  %110 = load i32, i32* %type, align 4
  %cmp158 = icmp ne i32 %110, 7
  br i1 %cmp158, label %if.then160, label %if.end163

if.then160:                                       ; preds = %if.end157
  %111 = load %struct.hashnode*, %struct.hashnode** %hn, align 4
  %flags161 = getelementptr inbounds %struct.hashnode, %struct.hashnode* %111, i32 0, i32 2
  %112 = load i32, i32* %flags161, align 4
  %and162 = and i32 %112, 16
  store i32 %and162, i32* %magic_assign, align 4
  br label %if.end163

if.end163:                                        ; preds = %if.then160, %if.end157
  br label %while.end408

if.end164:                                        ; preds = %if.end144
  store i32 0, i32* %checked, align 4
  %113 = load %union.linkroot*, %union.linkroot** %preargs, align 4
  %114 = load %union.linkroot*, %union.linkroot** %preargs, align 4
  %list165 = bitcast %union.linkroot* %114 to %struct.linklist*
  %first166 = getelementptr inbounds %struct.linklist, %struct.linklist* %list165, i32 0, i32 0
  %115 = load %struct.linknode*, %struct.linknode** %first166, align 4
  %call167 = call i8* @uremnode(%union.linkroot* %113, %struct.linknode* %115)
  %116 = load %union.linkroot*, %union.linkroot** %preargs, align 4
  %list168 = bitcast %union.linkroot* %116 to %struct.linklist*
  %first169 = getelementptr inbounds %struct.linklist, %struct.linklist* %list168, i32 0, i32 0
  %117 = load %struct.linknode*, %struct.linknode** %first169, align 4
  %tobool170 = icmp ne %struct.linknode* %117, null
  br i1 %tobool170, label %if.end178, label %if.then171

if.then171:                                       ; preds = %if.end164
  %118 = load %union.linkroot*, %union.linkroot** %preargs, align 4
  %119 = load %union.linkroot*, %union.linkroot** %args, align 4
  %120 = load %struct.execcmd_params*, %struct.execcmd_params** %eparams.addr, align 4
  %htok172 = getelementptr inbounds %struct.execcmd_params, %struct.execcmd_params* %120, i32 0, i32 7
  %121 = load i32, i32* %htok172, align 4
  call void @execcmd_getargs(%union.linkroot* %118, %union.linkroot* %119, i32 %121)
  %122 = load %union.linkroot*, %union.linkroot** %preargs, align 4
  %list173 = bitcast %union.linkroot* %122 to %struct.linklist*
  %first174 = getelementptr inbounds %struct.linklist, %struct.linklist* %list173, i32 0, i32 0
  %123 = load %struct.linknode*, %struct.linknode** %first174, align 4
  %tobool175 = icmp ne %struct.linknode* %123, null
  br i1 %tobool175, label %if.end177, label %if.then176

if.then176:                                       ; preds = %if.then171
  br label %while.end408

if.end177:                                        ; preds = %if.then171
  br label %if.end178

if.end178:                                        ; preds = %if.end177, %if.end164
  %124 = load i32, i32* %cflags, align 4
  %and179 = and i32 %124, 256
  %tobool180 = icmp ne i32 %and179, 0
  br i1 %tobool180, label %if.then181, label %if.else271

if.then181:                                       ; preds = %if.end178
  store %struct.linknode* null, %struct.linknode** %pnode, align 4
  store i32 0, i32* %has_p, align 4
  store i32 0, i32* %has_vV, align 4
  store i32 0, i32* %has_other, align 4
  %125 = load %union.linkroot*, %union.linkroot** %preargs, align 4
  %list182 = bitcast %union.linkroot* %125 to %struct.linklist*
  %first183 = getelementptr inbounds %struct.linklist, %struct.linklist* %list182, i32 0, i32 0
  %126 = load %struct.linknode*, %struct.linknode** %first183, align 4
  store %struct.linknode* %126, %struct.linknode** %argnode, align 4
  %127 = load %struct.linknode*, %struct.linknode** %argnode, align 4
  %dat184 = getelementptr inbounds %struct.linknode, %struct.linknode* %127, i32 0, i32 2
  %128 = load i8*, i8** %dat184, align 4
  store i8* %128, i8** %argdata, align 4
  br label %while.cond185

while.cond185:                                    ; preds = %if.end231, %if.then181
  %129 = load i8*, i8** %argdata, align 4
  %130 = load i8, i8* %129, align 1
  %conv186 = sext i8 %130 to i32
  %cmp187 = icmp eq i32 %conv186, 45
  br i1 %cmp187, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %while.cond185
  %131 = load i8*, i8** %argdata, align 4
  %132 = load i8, i8* %131, align 1
  %conv189 = sext i8 %132 to i32
  %cmp190 = icmp eq i32 %conv189, -101
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %while.cond185
  %133 = phi i1 [ true, %while.cond185 ], [ %cmp190, %lor.rhs ]
  br i1 %133, label %while.body192, label %while.end

while.body192:                                    ; preds = %lor.end
  %134 = load i8*, i8** %argdata, align 4
  %arrayidx193 = getelementptr inbounds i8, i8* %134, i32 1
  %135 = load i8, i8* %arrayidx193, align 1
  %tobool194 = icmp ne i8 %135, 0
  br i1 %tobool194, label %lor.lhs.false195, label %if.then208

lor.lhs.false195:                                 ; preds = %while.body192
  %136 = load i8*, i8** %argdata, align 4
  %arrayidx196 = getelementptr inbounds i8, i8* %136, i32 1
  %137 = load i8, i8* %arrayidx196, align 1
  %conv197 = sext i8 %137 to i32
  %cmp198 = icmp eq i32 %conv197, 45
  br i1 %cmp198, label %land.lhs.true205, label %lor.lhs.false200

lor.lhs.false200:                                 ; preds = %lor.lhs.false195
  %138 = load i8*, i8** %argdata, align 4
  %arrayidx201 = getelementptr inbounds i8, i8* %138, i32 1
  %139 = load i8, i8* %arrayidx201, align 1
  %conv202 = sext i8 %139 to i32
  %cmp203 = icmp eq i32 %conv202, -101
  br i1 %cmp203, label %land.lhs.true205, label %if.end209

land.lhs.true205:                                 ; preds = %lor.lhs.false200, %lor.lhs.false195
  %140 = load i8*, i8** %argdata, align 4
  %arrayidx206 = getelementptr inbounds i8, i8* %140, i32 2
  %141 = load i8, i8* %arrayidx206, align 1
  %tobool207 = icmp ne i8 %141, 0
  br i1 %tobool207, label %if.end209, label %if.then208

if.then208:                                       ; preds = %land.lhs.true205, %while.body192
  br label %while.end

if.end209:                                        ; preds = %land.lhs.true205, %lor.lhs.false200
  %142 = load i8*, i8** %argdata, align 4
  %add.ptr = getelementptr inbounds i8, i8* %142, i32 1
  store i8* %add.ptr, i8** %cmdopt, align 4
  br label %for.cond210

for.cond210:                                      ; preds = %for.inc218, %if.end209
  %143 = load i8*, i8** %cmdopt, align 4
  %144 = load i8, i8* %143, align 1
  %tobool211 = icmp ne i8 %144, 0
  br i1 %tobool211, label %for.body212, label %for.end219

for.body212:                                      ; preds = %for.cond210
  %145 = load i8*, i8** %cmdopt, align 4
  %146 = load i8, i8* %145, align 1
  %conv213 = sext i8 %146 to i32
  switch i32 %conv213, label %sw.default216 [
    i32 112, label %sw.bb214
    i32 118, label %sw.bb215
    i32 86, label %sw.bb215
  ]

sw.bb214:                                         ; preds = %for.body212
  store i32 1, i32* %has_p, align 4
  %147 = load %struct.linknode*, %struct.linknode** %argnode, align 4
  store %struct.linknode* %147, %struct.linknode** %pnode, align 4
  br label %sw.epilog217

sw.bb215:                                         ; preds = %for.body212, %for.body212
  store i32 1, i32* %has_vV, align 4
  br label %sw.epilog217

sw.default216:                                    ; preds = %for.body212
  store i32 1, i32* %has_other, align 4
  br label %sw.epilog217

sw.epilog217:                                     ; preds = %sw.default216, %sw.bb215, %sw.bb214
  br label %for.inc218

for.inc218:                                       ; preds = %sw.epilog217
  %148 = load i8*, i8** %cmdopt, align 4
  %incdec.ptr = getelementptr inbounds i8, i8* %148, i32 1
  store i8* %incdec.ptr, i8** %cmdopt, align 4
  br label %for.cond210

for.end219:                                       ; preds = %for.cond210
  %149 = load i32, i32* %has_other, align 4
  %tobool220 = icmp ne i32 %149, 0
  br i1 %tobool220, label %if.then221, label %if.end222

if.then221:                                       ; preds = %for.end219
  store i32 0, i32* %has_vV, align 4
  store i32 0, i32* %has_p, align 4
  br label %while.end

if.end222:                                        ; preds = %for.end219
  %150 = load %struct.linknode*, %struct.linknode** %argnode, align 4
  store %struct.linknode* %150, %struct.linknode** %oldnode, align 4
  %151 = load %struct.linknode*, %struct.linknode** %argnode, align 4
  %next223 = getelementptr inbounds %struct.linknode, %struct.linknode* %151, i32 0, i32 0
  %152 = load %struct.linknode*, %struct.linknode** %next223, align 4
  store %struct.linknode* %152, %struct.linknode** %argnode, align 4
  %153 = load %struct.linknode*, %struct.linknode** %argnode, align 4
  %tobool224 = icmp ne %struct.linknode* %153, null
  br i1 %tobool224, label %if.end231, label %if.then225

if.then225:                                       ; preds = %if.end222
  %154 = load %union.linkroot*, %union.linkroot** %preargs, align 4
  %155 = load %union.linkroot*, %union.linkroot** %args, align 4
  %156 = load %struct.execcmd_params*, %struct.execcmd_params** %eparams.addr, align 4
  %htok226 = getelementptr inbounds %struct.execcmd_params, %struct.execcmd_params* %156, i32 0, i32 7
  %157 = load i32, i32* %htok226, align 4
  call void @execcmd_getargs(%union.linkroot* %154, %union.linkroot* %155, i32 %157)
  %158 = load %struct.linknode*, %struct.linknode** %oldnode, align 4
  %next227 = getelementptr inbounds %struct.linknode, %struct.linknode* %158, i32 0, i32 0
  %159 = load %struct.linknode*, %struct.linknode** %next227, align 4
  store %struct.linknode* %159, %struct.linknode** %argnode, align 4
  %tobool228 = icmp ne %struct.linknode* %159, null
  br i1 %tobool228, label %if.end230, label %if.then229

if.then229:                                       ; preds = %if.then225
  br label %while.end

if.end230:                                        ; preds = %if.then225
  br label %if.end231

if.end231:                                        ; preds = %if.end230, %if.end222
  %160 = load %struct.linknode*, %struct.linknode** %argnode, align 4
  %dat232 = getelementptr inbounds %struct.linknode, %struct.linknode* %160, i32 0, i32 2
  %161 = load i8*, i8** %dat232, align 4
  store i8* %161, i8** %argdata, align 4
  br label %while.cond185

while.end:                                        ; preds = %if.then229, %if.then221, %if.then208, %lor.end
  %162 = load i32, i32* %has_vV, align 4
  %tobool233 = icmp ne i32 %162, 0
  br i1 %tobool233, label %if.then234, label %if.else237

if.then234:                                       ; preds = %while.end
  %163 = load %union.linkroot*, %union.linkroot** %preargs, align 4
  %164 = load %union.linkroot*, %union.linkroot** %preargs, align 4
  %node235 = bitcast %union.linkroot* %164 to %struct.linknode*
  %call236 = call %struct.linknode* @insertlinknode(%union.linkroot* %163, %struct.linknode* %node235, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.50, i32 0, i32 0))
  store %struct.hashnode* getelementptr inbounds (%struct.builtin, %struct.builtin* @commandbn, i32 0, i32 0), %struct.hashnode** %hn, align 4
  store i32 1, i32* %is_builtin, align 4
  br label %while.end408

if.else237:                                       ; preds = %while.end
  %165 = load i32, i32* %has_p, align 4
  %tobool238 = icmp ne i32 %165, 0
  br i1 %tobool238, label %if.then239, label %if.end244

if.then239:                                       ; preds = %if.else237
  store i32 1, i32* %use_defpath, align 4
  %166 = load %struct.linknode*, %struct.linknode** %pnode, align 4
  %tobool240 = icmp ne %struct.linknode* %166, null
  br i1 %tobool240, label %if.then241, label %if.end243

if.then241:                                       ; preds = %if.then239
  %167 = load %union.linkroot*, %union.linkroot** %preargs, align 4
  %168 = load %struct.linknode*, %struct.linknode** %pnode, align 4
  %call242 = call i8* @uremnode(%union.linkroot* %167, %struct.linknode* %168)
  br label %if.end243

if.end243:                                        ; preds = %if.then241, %if.then239
  br label %if.end244

if.end244:                                        ; preds = %if.end243, %if.else237
  br label %if.end245

if.end245:                                        ; preds = %if.end244
  %169 = load i8*, i8** %argdata, align 4
  %arrayidx246 = getelementptr inbounds i8, i8* %169, i32 0
  %170 = load i8, i8* %arrayidx246, align 1
  %conv247 = sext i8 %170 to i32
  %cmp248 = icmp eq i32 %conv247, 45
  br i1 %cmp248, label %land.lhs.true255, label %lor.lhs.false250

lor.lhs.false250:                                 ; preds = %if.end245
  %171 = load i8*, i8** %argdata, align 4
  %arrayidx251 = getelementptr inbounds i8, i8* %171, i32 0
  %172 = load i8, i8* %arrayidx251, align 1
  %conv252 = sext i8 %172 to i32
  %cmp253 = icmp eq i32 %conv252, -101
  br i1 %cmp253, label %land.lhs.true255, label %if.end270

land.lhs.true255:                                 ; preds = %lor.lhs.false250, %if.end245
  %173 = load i8*, i8** %argdata, align 4
  %arrayidx256 = getelementptr inbounds i8, i8* %173, i32 1
  %174 = load i8, i8* %arrayidx256, align 1
  %conv257 = sext i8 %174 to i32
  %cmp258 = icmp eq i32 %conv257, 45
  br i1 %cmp258, label %land.lhs.true265, label %lor.lhs.false260

lor.lhs.false260:                                 ; preds = %land.lhs.true255
  %175 = load i8*, i8** %argdata, align 4
  %arrayidx261 = getelementptr inbounds i8, i8* %175, i32 1
  %176 = load i8, i8* %arrayidx261, align 1
  %conv262 = sext i8 %176 to i32
  %cmp263 = icmp eq i32 %conv262, -101
  br i1 %cmp263, label %land.lhs.true265, label %if.end270

land.lhs.true265:                                 ; preds = %lor.lhs.false260, %land.lhs.true255
  %177 = load i8*, i8** %argdata, align 4
  %arrayidx266 = getelementptr inbounds i8, i8* %177, i32 2
  %178 = load i8, i8* %arrayidx266, align 1
  %tobool267 = icmp ne i8 %178, 0
  br i1 %tobool267, label %if.end270, label %if.then268

if.then268:                                       ; preds = %land.lhs.true265
  %179 = load %union.linkroot*, %union.linkroot** %preargs, align 4
  %180 = load %struct.linknode*, %struct.linknode** %argnode, align 4
  %call269 = call i8* @uremnode(%union.linkroot* %179, %struct.linknode* %180)
  br label %if.end270

if.end270:                                        ; preds = %if.then268, %land.lhs.true265, %lor.lhs.false260, %lor.lhs.false250
  br label %if.end394

if.else271:                                       ; preds = %if.end178
  %181 = load i32, i32* %cflags, align 4
  %and272 = and i32 %181, 512
  %tobool273 = icmp ne i32 %and272, 0
  br i1 %tobool273, label %if.then274, label %if.end393

if.then274:                                       ; preds = %if.else271
  %182 = load %union.linkroot*, %union.linkroot** %preargs, align 4
  %list276 = bitcast %union.linkroot* %182 to %struct.linklist*
  %first277 = getelementptr inbounds %struct.linklist, %struct.linklist* %list276, i32 0, i32 0
  %183 = load %struct.linknode*, %struct.linknode** %first277, align 4
  store %struct.linknode* %183, %struct.linknode** %argnode275, align 4
  %184 = load %struct.linknode*, %struct.linknode** %argnode275, align 4
  %dat280 = getelementptr inbounds %struct.linknode, %struct.linknode* %184, i32 0, i32 2
  %185 = load i8*, i8** %dat280, align 4
  store i8* %185, i8** %argdata279, align 4
  store i8* null, i8** %exec_argv0, align 4
  br label %while.cond282

while.cond282:                                    ; preds = %if.end379, %if.then274
  %186 = load i8*, i8** %argdata279, align 4
  %tobool283 = icmp ne i8* %186, null
  br i1 %tobool283, label %land.lhs.true284, label %land.end

land.lhs.true284:                                 ; preds = %while.cond282
  %187 = load i8*, i8** %argdata279, align 4
  %188 = load i8, i8* %187, align 1
  %conv285 = sext i8 %188 to i32
  %cmp286 = icmp eq i32 %conv285, 45
  br i1 %cmp286, label %land.rhs, label %lor.lhs.false288

lor.lhs.false288:                                 ; preds = %land.lhs.true284
  %189 = load i8*, i8** %argdata279, align 4
  %190 = load i8, i8* %189, align 1
  %conv289 = sext i8 %190 to i32
  %cmp290 = icmp eq i32 %conv289, -101
  br i1 %cmp290, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %lor.lhs.false288, %land.lhs.true284
  %191 = load i8*, i8** %argdata279, align 4
  %call292 = call i32 @strlen(i8* %191)
  %cmp293 = icmp uge i32 %call292, 2
  br label %land.end

land.end:                                         ; preds = %land.rhs, %lor.lhs.false288, %while.cond282
  %192 = phi i1 [ false, %lor.lhs.false288 ], [ false, %while.cond282 ], [ %cmp293, %land.rhs ]
  br i1 %192, label %while.body295, label %while.end381

while.body295:                                    ; preds = %land.end
  %193 = load %struct.linknode*, %struct.linknode** %argnode275, align 4
  store %struct.linknode* %193, %struct.linknode** %oldnode278, align 4
  %194 = load %struct.linknode*, %struct.linknode** %oldnode278, align 4
  %next296 = getelementptr inbounds %struct.linknode, %struct.linknode* %194, i32 0, i32 0
  %195 = load %struct.linknode*, %struct.linknode** %next296, align 4
  store %struct.linknode* %195, %struct.linknode** %argnode275, align 4
  %196 = load %struct.linknode*, %struct.linknode** %argnode275, align 4
  %tobool297 = icmp ne %struct.linknode* %196, null
  br i1 %tobool297, label %if.end301, label %if.then298

if.then298:                                       ; preds = %while.body295
  %197 = load %union.linkroot*, %union.linkroot** %preargs, align 4
  %198 = load %union.linkroot*, %union.linkroot** %args, align 4
  %199 = load %struct.execcmd_params*, %struct.execcmd_params** %eparams.addr, align 4
  %htok299 = getelementptr inbounds %struct.execcmd_params, %struct.execcmd_params* %199, i32 0, i32 7
  %200 = load i32, i32* %htok299, align 4
  call void @execcmd_getargs(%union.linkroot* %197, %union.linkroot* %198, i32 %200)
  %201 = load %struct.linknode*, %struct.linknode** %oldnode278, align 4
  %next300 = getelementptr inbounds %struct.linknode, %struct.linknode* %201, i32 0, i32 0
  %202 = load %struct.linknode*, %struct.linknode** %next300, align 4
  store %struct.linknode* %202, %struct.linknode** %argnode275, align 4
  br label %if.end301

if.end301:                                        ; preds = %if.then298, %while.body295
  %203 = load %struct.linknode*, %struct.linknode** %argnode275, align 4
  %tobool302 = icmp ne %struct.linknode* %203, null
  br i1 %tobool302, label %if.end305, label %if.then303

if.then303:                                       ; preds = %if.end301
  call void (i8*, ...) @zerr(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.51, i32 0, i32 0))
  store i32 1, i32* @lastval, align 4
  %204 = load i32, i32* @errflag, align 4
  %or304 = or i32 %204, 1
  store i32 %or304, i32* @errflag, align 4
  br label %done

if.end305:                                        ; preds = %if.end301
  %205 = load %union.linkroot*, %union.linkroot** %preargs, align 4
  %206 = load %struct.linknode*, %struct.linknode** %oldnode278, align 4
  %call306 = call i8* @uremnode(%union.linkroot* %205, %struct.linknode* %206)
  %207 = load i8*, i8** %argdata279, align 4
  %arrayidx307 = getelementptr inbounds i8, i8* %207, i32 0
  %208 = load i8, i8* %arrayidx307, align 1
  %conv308 = sext i8 %208 to i32
  %cmp309 = icmp eq i32 %conv308, 45
  br i1 %cmp309, label %land.lhs.true316, label %lor.lhs.false311

lor.lhs.false311:                                 ; preds = %if.end305
  %209 = load i8*, i8** %argdata279, align 4
  %arrayidx312 = getelementptr inbounds i8, i8* %209, i32 0
  %210 = load i8, i8* %arrayidx312, align 1
  %conv313 = sext i8 %210 to i32
  %cmp314 = icmp eq i32 %conv313, -101
  br i1 %cmp314, label %land.lhs.true316, label %if.end330

land.lhs.true316:                                 ; preds = %lor.lhs.false311, %if.end305
  %211 = load i8*, i8** %argdata279, align 4
  %arrayidx317 = getelementptr inbounds i8, i8* %211, i32 1
  %212 = load i8, i8* %arrayidx317, align 1
  %conv318 = sext i8 %212 to i32
  %cmp319 = icmp eq i32 %conv318, 45
  br i1 %cmp319, label %land.lhs.true326, label %lor.lhs.false321

lor.lhs.false321:                                 ; preds = %land.lhs.true316
  %213 = load i8*, i8** %argdata279, align 4
  %arrayidx322 = getelementptr inbounds i8, i8* %213, i32 1
  %214 = load i8, i8* %arrayidx322, align 1
  %conv323 = sext i8 %214 to i32
  %cmp324 = icmp eq i32 %conv323, -101
  br i1 %cmp324, label %land.lhs.true326, label %if.end330

land.lhs.true326:                                 ; preds = %lor.lhs.false321, %land.lhs.true316
  %215 = load i8*, i8** %argdata279, align 4
  %arrayidx327 = getelementptr inbounds i8, i8* %215, i32 2
  %216 = load i8, i8* %arrayidx327, align 1
  %tobool328 = icmp ne i8 %216, 0
  br i1 %tobool328, label %if.end330, label %if.then329

if.then329:                                       ; preds = %land.lhs.true326
  br label %while.end381

if.end330:                                        ; preds = %land.lhs.true326, %lor.lhs.false321, %lor.lhs.false311
  %217 = load i8*, i8** %argdata279, align 4
  %arrayidx331 = getelementptr inbounds i8, i8* %217, i32 1
  store i8* %arrayidx331, i8** %cmdopt281, align 4
  br label %for.cond332

for.cond332:                                      ; preds = %for.inc374, %if.end330
  %218 = load i8*, i8** %cmdopt281, align 4
  %219 = load i8, i8* %218, align 1
  %tobool333 = icmp ne i8 %219, 0
  br i1 %tobool333, label %for.body334, label %for.end376

for.body334:                                      ; preds = %for.cond332
  %220 = load i8*, i8** %cmdopt281, align 4
  %221 = load i8, i8* %220, align 1
  %conv335 = sext i8 %221 to i32
  switch i32 %conv335, label %sw.default367 [
    i32 97, label %sw.bb336
    i32 99, label %sw.bb363
    i32 108, label %sw.bb365
  ]

sw.bb336:                                         ; preds = %for.body334
  %222 = load i8*, i8** %cmdopt281, align 4
  %arrayidx337 = getelementptr inbounds i8, i8* %222, i32 1
  %223 = load i8, i8* %arrayidx337, align 1
  %tobool338 = icmp ne i8 %223, 0
  br i1 %tobool338, label %if.then339, label %if.else344

if.then339:                                       ; preds = %sw.bb336
  %224 = load i8*, i8** %cmdopt281, align 4
  %add.ptr340 = getelementptr inbounds i8, i8* %224, i32 1
  store i8* %add.ptr340, i8** %exec_argv0, align 4
  %225 = load i8*, i8** %cmdopt281, align 4
  %add.ptr341 = getelementptr inbounds i8, i8* %225, i32 1
  %call342 = call i32 @strlen(i8* %add.ptr341)
  %226 = load i8*, i8** %cmdopt281, align 4
  %add.ptr343 = getelementptr inbounds i8, i8* %226, i32 %call342
  store i8* %add.ptr343, i8** %cmdopt281, align 4
  br label %if.end362

if.else344:                                       ; preds = %sw.bb336
  %227 = load %struct.linknode*, %struct.linknode** %argnode275, align 4
  %tobool345 = icmp ne %struct.linknode* %227, null
  br i1 %tobool345, label %if.end348, label %if.then346

if.then346:                                       ; preds = %if.else344
  call void (i8*, ...) @zerr(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.51, i32 0, i32 0))
  store i32 1, i32* @lastval, align 4
  %228 = load i32, i32* @errflag, align 4
  %or347 = or i32 %228, 1
  store i32 %or347, i32* @errflag, align 4
  br label %done

if.end348:                                        ; preds = %if.else344
  %229 = load %struct.linknode*, %struct.linknode** %argnode275, align 4
  %next349 = getelementptr inbounds %struct.linknode, %struct.linknode* %229, i32 0, i32 0
  %230 = load %struct.linknode*, %struct.linknode** %next349, align 4
  %tobool350 = icmp ne %struct.linknode* %230, null
  br i1 %tobool350, label %if.end353, label %if.then351

if.then351:                                       ; preds = %if.end348
  %231 = load %union.linkroot*, %union.linkroot** %preargs, align 4
  %232 = load %union.linkroot*, %union.linkroot** %args, align 4
  %233 = load %struct.execcmd_params*, %struct.execcmd_params** %eparams.addr, align 4
  %htok352 = getelementptr inbounds %struct.execcmd_params, %struct.execcmd_params* %233, i32 0, i32 7
  %234 = load i32, i32* %htok352, align 4
  call void @execcmd_getargs(%union.linkroot* %231, %union.linkroot* %232, i32 %234)
  br label %if.end353

if.end353:                                        ; preds = %if.then351, %if.end348
  %235 = load %struct.linknode*, %struct.linknode** %argnode275, align 4
  %next354 = getelementptr inbounds %struct.linknode, %struct.linknode* %235, i32 0, i32 0
  %236 = load %struct.linknode*, %struct.linknode** %next354, align 4
  %tobool355 = icmp ne %struct.linknode* %236, null
  br i1 %tobool355, label %if.end358, label %if.then356

if.then356:                                       ; preds = %if.end353
  call void (i8*, ...) @zerr(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.52, i32 0, i32 0))
  store i32 1, i32* @lastval, align 4
  %237 = load i32, i32* @errflag, align 4
  %or357 = or i32 %237, 1
  store i32 %or357, i32* @errflag, align 4
  br label %done

if.end358:                                        ; preds = %if.end353
  %238 = load %struct.linknode*, %struct.linknode** %argnode275, align 4
  %dat359 = getelementptr inbounds %struct.linknode, %struct.linknode* %238, i32 0, i32 2
  %239 = load i8*, i8** %dat359, align 4
  store i8* %239, i8** %exec_argv0, align 4
  %240 = load %struct.linknode*, %struct.linknode** %argnode275, align 4
  store %struct.linknode* %240, %struct.linknode** %oldnode278, align 4
  %241 = load %struct.linknode*, %struct.linknode** %argnode275, align 4
  %next360 = getelementptr inbounds %struct.linknode, %struct.linknode* %241, i32 0, i32 0
  %242 = load %struct.linknode*, %struct.linknode** %next360, align 4
  store %struct.linknode* %242, %struct.linknode** %argnode275, align 4
  %243 = load %union.linkroot*, %union.linkroot** %args, align 4
  %244 = load %struct.linknode*, %struct.linknode** %oldnode278, align 4
  %call361 = call i8* @uremnode(%union.linkroot* %243, %struct.linknode* %244)
  br label %if.end362

if.end362:                                        ; preds = %if.end358, %if.then339
  br label %sw.epilog373

sw.bb363:                                         ; preds = %for.body334
  %245 = load i32, i32* %cflags, align 4
  %or364 = or i32 %245, 65536
  store i32 %or364, i32* %cflags, align 4
  br label %sw.epilog373

sw.bb365:                                         ; preds = %for.body334
  %246 = load i32, i32* %cflags, align 4
  %or366 = or i32 %246, 64
  store i32 %or366, i32* %cflags, align 4
  br label %sw.epilog373

sw.default367:                                    ; preds = %for.body334
  %247 = load i8*, i8** %cmdopt281, align 4
  %248 = load i8, i8* %247, align 1
  %conv368 = sext i8 %248 to i32
  call void (i8*, ...) @zerr(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.53, i32 0, i32 0), i32 %conv368)
  store i32 1, i32* @lastval, align 4
  %249 = load i32, i32* @errflag, align 4
  %or369 = or i32 %249, 1
  store i32 %or369, i32* @errflag, align 4
  %250 = load i32, i32* %forked, align 4
  %tobool370 = icmp ne i32 %250, 0
  br i1 %tobool370, label %if.then371, label %if.end372

if.then371:                                       ; preds = %sw.default367
  %251 = load i32, i32* @lastval, align 4
  call void @_exit(i32 %251) #4
  unreachable

if.end372:                                        ; preds = %sw.default367
  br label %if.end2286

sw.epilog373:                                     ; preds = %sw.bb365, %sw.bb363, %if.end362
  br label %for.inc374

for.inc374:                                       ; preds = %sw.epilog373
  %252 = load i8*, i8** %cmdopt281, align 4
  %incdec.ptr375 = getelementptr inbounds i8, i8* %252, i32 1
  store i8* %incdec.ptr375, i8** %cmdopt281, align 4
  br label %for.cond332

for.end376:                                       ; preds = %for.cond332
  %253 = load %struct.linknode*, %struct.linknode** %argnode275, align 4
  %tobool377 = icmp ne %struct.linknode* %253, null
  br i1 %tobool377, label %if.end379, label %if.then378

if.then378:                                       ; preds = %for.end376
  br label %while.end381

if.end379:                                        ; preds = %for.end376
  %254 = load %struct.linknode*, %struct.linknode** %argnode275, align 4
  %dat380 = getelementptr inbounds %struct.linknode, %struct.linknode* %254, i32 0, i32 2
  %255 = load i8*, i8** %dat380, align 4
  store i8* %255, i8** %argdata279, align 4
  br label %while.cond282

while.end381:                                     ; preds = %if.then378, %if.then329, %land.end
  %256 = load i8*, i8** %exec_argv0, align 4
  %tobool382 = icmp ne i8* %256, null
  br i1 %tobool382, label %if.then383, label %if.end392

if.then383:                                       ; preds = %while.end381
  %257 = load i8*, i8** %exec_argv0, align 4
  %call384 = call i8* @dupstring(i8* %257)
  store i8* %call384, i8** %exec_argv0, align 4
  %258 = load i8*, i8** %exec_argv0, align 4
  call void @remnulargs(i8* %258)
  %259 = load i8*, i8** %exec_argv0, align 4
  call void @untokenize(i8* %259)
  %260 = load i8*, i8** %exec_argv0, align 4
  %call385 = call i32 @strlen(i8* %260)
  store i32 %call385, i32* %sz, align 4
  %261 = load i32, i32* %sz, align 4
  %add = add i32 6, %261
  %add386 = add i32 %add, 1
  %call387 = call i8* @zalloc(i32 %add386)
  store i8* %call387, i8** %s, align 4
  store i8* %call387, i8** %str, align 4
  %262 = load i8*, i8** %s, align 4
  %call388 = call i8* @strcpy(i8* %262, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.54, i32 0, i32 0))
  %263 = load i8*, i8** %s, align 4
  %add.ptr389 = getelementptr inbounds i8, i8* %263, i32 6
  store i8* %add.ptr389, i8** %s, align 4
  %264 = load i8*, i8** %s, align 4
  %265 = load i8*, i8** %exec_argv0, align 4
  %call390 = call i8* @strcpy(i8* %264, i8* %265)
  %266 = load i8*, i8** %str, align 4
  %call391 = call i32 @zputenv(i8* %266)
  br label %if.end392

if.end392:                                        ; preds = %if.then383, %while.end381
  br label %if.end393

if.end393:                                        ; preds = %if.end392, %if.else271
  br label %if.end394

if.end394:                                        ; preds = %if.end393, %if.end270
  store %struct.hashnode* null, %struct.hashnode** %hn, align 4
  %267 = load i32, i32* %cflags, align 4
  %and395 = and i32 %267, 256
  %tobool396 = icmp ne i32 %and395, 0
  br i1 %tobool396, label %land.lhs.true397, label %if.end400

land.lhs.true397:                                 ; preds = %if.end394
  %268 = load i8, i8* getelementptr inbounds ([181 x i8], [181 x i8]* @opts, i32 0, i32 132), align 1
  %tobool398 = icmp ne i8 %268, 0
  br i1 %tobool398, label %if.end400, label %if.then399

if.then399:                                       ; preds = %land.lhs.true397
  br label %while.end408

if.end400:                                        ; preds = %land.lhs.true397, %if.end394
  %269 = load %union.linkroot*, %union.linkroot** %preargs, align 4
  %list401 = bitcast %union.linkroot* %269 to %struct.linklist*
  %first402 = getelementptr inbounds %struct.linklist, %struct.linklist* %list401, i32 0, i32 0
  %270 = load %struct.linknode*, %struct.linknode** %first402, align 4
  %cmp403 = icmp ne %struct.linknode* %270, null
  br i1 %cmp403, label %if.end407, label %if.then405

if.then405:                                       ; preds = %if.end400
  %271 = load %union.linkroot*, %union.linkroot** %preargs, align 4
  %272 = load %union.linkroot*, %union.linkroot** %args, align 4
  %273 = load %struct.execcmd_params*, %struct.execcmd_params** %eparams.addr, align 4
  %htok406 = getelementptr inbounds %struct.execcmd_params, %struct.execcmd_params* %273, i32 0, i32 7
  %274 = load i32, i32* %htok406, align 4
  call void @execcmd_getargs(%union.linkroot* %271, %union.linkroot* %272, i32 %274)
  br label %if.end407

if.end407:                                        ; preds = %if.then405, %if.end400
  br label %while.cond

while.end408:                                     ; preds = %if.then399, %if.then234, %if.then176, %if.end163, %if.then137, %if.then132, %if.then125, %if.then111, %while.cond
  br label %if.end410

if.else409:                                       ; preds = %land.lhs.true95, %lor.lhs.false92
  store %union.linkroot* null, %union.linkroot** %preargs, align 4
  br label %if.end410

if.end410:                                        ; preds = %if.else409, %while.end408
  %275 = load i32, i32* @noerrexit, align 4
  %and411 = and i32 %275, 4
  %tobool412 = icmp ne i32 %and411, 0
  br i1 %tobool412, label %if.then413, label %if.end414

if.then413:                                       ; preds = %if.end410
  store i32 0, i32* @noerrexit, align 4
  br label %if.end414

if.end414:                                        ; preds = %if.then413, %if.end410
  %276 = load i32, i32* %magic_assign, align 4
  %tobool415 = icmp ne i32 %276, 0
  br i1 %tobool415, label %lor.end423, label %lor.rhs416

lor.rhs416:                                       ; preds = %if.end414
  %277 = load i8, i8* getelementptr inbounds ([181 x i8], [181 x i8]* @opts, i32 0, i32 113), align 1
  %conv417 = sext i8 %277 to i32
  %tobool418 = icmp ne i32 %conv417, 0
  br i1 %tobool418, label %land.rhs419, label %land.end422

land.rhs419:                                      ; preds = %lor.rhs416
  %278 = load i32, i32* %type, align 4
  %cmp420 = icmp ne i32 %278, 7
  br label %land.end422

land.end422:                                      ; preds = %land.rhs419, %lor.rhs416
  %279 = phi i1 [ false, %lor.rhs416 ], [ %cmp420, %land.rhs419 ]
  br label %lor.end423

lor.end423:                                       ; preds = %land.end422, %if.end414
  %280 = phi i1 [ true, %if.end414 ], [ %279, %land.end422 ]
  %cond424 = select i1 %280, i32 1, i32 0
  store i32 %cond424, i32* @esprefork, align 4
  %281 = load %union.linkroot*, %union.linkroot** %args, align 4
  %tobool425 = icmp ne %union.linkroot* %281, null
  br i1 %tobool425, label %if.then426, label %if.end435

if.then426:                                       ; preds = %lor.end423
  %282 = load %struct.execcmd_params*, %struct.execcmd_params** %eparams.addr, align 4
  %htok427 = getelementptr inbounds %struct.execcmd_params, %struct.execcmd_params* %282, i32 0, i32 7
  %283 = load i32, i32* %htok427, align 4
  %tobool428 = icmp ne i32 %283, 0
  br i1 %tobool428, label %if.then429, label %if.end430

if.then429:                                       ; preds = %if.then426
  %284 = load %union.linkroot*, %union.linkroot** %args, align 4
  %285 = load i32, i32* @esprefork, align 4
  call void @prefork(%union.linkroot* %284, i32 %285, i32* null)
  br label %if.end430

if.end430:                                        ; preds = %if.then429, %if.then426
  %286 = load %union.linkroot*, %union.linkroot** %preargs, align 4
  %tobool431 = icmp ne %union.linkroot* %286, null
  br i1 %tobool431, label %if.then432, label %if.end434

if.then432:                                       ; preds = %if.end430
  %287 = load %union.linkroot*, %union.linkroot** %preargs, align 4
  %288 = load %union.linkroot*, %union.linkroot** %args, align 4
  %call433 = call %union.linkroot* @joinlists(%union.linkroot* %287, %union.linkroot* %288)
  store %union.linkroot* %call433, %union.linkroot** %args, align 4
  br label %if.end434

if.end434:                                        ; preds = %if.then432, %if.end430
  br label %if.end435

if.end435:                                        ; preds = %if.end434, %lor.end423
  %289 = load i32, i32* %type, align 4
  %cmp436 = icmp eq i32 %289, 6
  br i1 %cmp436, label %if.then441, label %lor.lhs.false438

lor.lhs.false438:                                 ; preds = %if.end435
  %290 = load i32, i32* %type, align 4
  %cmp439 = icmp eq i32 %290, 7
  br i1 %cmp439, label %if.then441, label %if.end697

if.then441:                                       ; preds = %lor.lhs.false438, %if.end435
  store i32 0, i32* %unglobbed, align 4
  br label %for.cond442

for.cond442:                                      ; preds = %if.end689, %if.then441
  %291 = load i32, i32* %cflags, align 4
  %and444 = and i32 %291, 1024
  %tobool445 = icmp ne i32 %and444, 0
  br i1 %tobool445, label %if.else469, label %if.then446

if.then446:                                       ; preds = %for.cond442
  br label %while.cond447

while.cond447:                                    ; preds = %while.body465, %if.then446
  %292 = load i32, i32* %checked, align 4
  %tobool448 = icmp ne i32 %292, 0
  br i1 %tobool448, label %land.end464, label %land.lhs.true449

land.lhs.true449:                                 ; preds = %while.cond447
  %293 = load i32, i32* @errflag, align 4
  %tobool450 = icmp ne i32 %293, 0
  br i1 %tobool450, label %land.end464, label %land.lhs.true451

land.lhs.true451:                                 ; preds = %land.lhs.true449
  %294 = load %union.linkroot*, %union.linkroot** %args, align 4
  %tobool452 = icmp ne %union.linkroot* %294, null
  br i1 %tobool452, label %land.lhs.true453, label %land.end464

land.lhs.true453:                                 ; preds = %land.lhs.true451
  %295 = load %union.linkroot*, %union.linkroot** %args, align 4
  %list454 = bitcast %union.linkroot* %295 to %struct.linklist*
  %first455 = getelementptr inbounds %struct.linklist, %struct.linklist* %list454, i32 0, i32 0
  %296 = load %struct.linknode*, %struct.linknode** %first455, align 4
  %cmp456 = icmp ne %struct.linknode* %296, null
  br i1 %cmp456, label %land.rhs458, label %land.end464

land.rhs458:                                      ; preds = %land.lhs.true453
  %297 = load %union.linkroot*, %union.linkroot** %args, align 4
  %list459 = bitcast %union.linkroot* %297 to %struct.linklist*
  %first460 = getelementptr inbounds %struct.linklist, %struct.linklist* %list459, i32 0, i32 0
  %298 = load %struct.linknode*, %struct.linknode** %first460, align 4
  %dat461 = getelementptr inbounds %struct.linknode, %struct.linknode* %298, i32 0, i32 2
  %299 = load i8*, i8** %dat461, align 4
  %call462 = call i32 @has_token(i8* %299)
  %tobool463 = icmp ne i32 %call462, 0
  br label %land.end464

land.end464:                                      ; preds = %land.rhs458, %land.lhs.true453, %land.lhs.true451, %land.lhs.true449, %while.cond447
  %300 = phi i1 [ false, %land.lhs.true453 ], [ false, %land.lhs.true451 ], [ false, %land.lhs.true449 ], [ false, %while.cond447 ], [ %tobool463, %land.rhs458 ]
  br i1 %300, label %while.body465, label %while.end468

while.body465:                                    ; preds = %land.end464
  %301 = load %union.linkroot*, %union.linkroot** %args, align 4
  %302 = load %union.linkroot*, %union.linkroot** %args, align 4
  %list466 = bitcast %union.linkroot* %302 to %struct.linklist*
  %first467 = getelementptr inbounds %struct.linklist, %struct.linklist* %list466, i32 0, i32 0
  %303 = load %struct.linknode*, %struct.linknode** %first467, align 4
  call void @zglob(%union.linkroot* %301, %struct.linknode* %303, i32 0)
  br label %while.cond447

while.end468:                                     ; preds = %land.end464
  br label %if.end482

if.else469:                                       ; preds = %for.cond442
  %304 = load i32, i32* %unglobbed, align 4
  %tobool470 = icmp ne i32 %304, 0
  br i1 %tobool470, label %if.end481, label %if.then471

if.then471:                                       ; preds = %if.else469
  %305 = load %union.linkroot*, %union.linkroot** %args, align 4
  %list472 = bitcast %union.linkroot* %305 to %struct.linklist*
  %first473 = getelementptr inbounds %struct.linklist, %struct.linklist* %list472, i32 0, i32 0
  %306 = load %struct.linknode*, %struct.linknode** %first473, align 4
  store %struct.linknode* %306, %struct.linknode** %node, align 4
  br label %for.cond474

for.cond474:                                      ; preds = %for.inc478, %if.then471
  %307 = load %struct.linknode*, %struct.linknode** %node, align 4
  %tobool475 = icmp ne %struct.linknode* %307, null
  br i1 %tobool475, label %for.body476, label %for.end480

for.body476:                                      ; preds = %for.cond474
  %308 = load %struct.linknode*, %struct.linknode** %node, align 4
  %dat477 = getelementptr inbounds %struct.linknode, %struct.linknode* %308, i32 0, i32 2
  %309 = load i8*, i8** %dat477, align 4
  call void @untokenize(i8* %309)
  br label %for.inc478

for.inc478:                                       ; preds = %for.body476
  %310 = load %struct.linknode*, %struct.linknode** %node, align 4
  %next479 = getelementptr inbounds %struct.linknode, %struct.linknode* %310, i32 0, i32 0
  %311 = load %struct.linknode*, %struct.linknode** %next479, align 4
  store %struct.linknode* %311, %struct.linknode** %node, align 4
  br label %for.cond474

for.end480:                                       ; preds = %for.cond474
  store i32 1, i32* %unglobbed, align 4
  br label %if.end481

if.end481:                                        ; preds = %for.end480, %if.else469
  br label %if.end482

if.end482:                                        ; preds = %if.end481, %while.end468
  %312 = load i32, i32* %cflags, align 4
  %and483 = and i32 %312, 512
  %tobool484 = icmp ne i32 %and483, 0
  br i1 %tobool484, label %land.lhs.true485, label %if.end488

land.lhs.true485:                                 ; preds = %if.end482
  %313 = load i32, i32* %last1.addr, align 4
  %tobool486 = icmp ne i32 %313, 0
  br i1 %tobool486, label %if.then487, label %if.end488

if.then487:                                       ; preds = %land.lhs.true485
  store i32 1, i32* %do_exec, align 4
  br label %if.end488

if.end488:                                        ; preds = %if.then487, %land.lhs.true485, %if.end482
  %314 = load %union.linkroot*, %union.linkroot** %args, align 4
  %tobool489 = icmp ne %union.linkroot* %314, null
  br i1 %tobool489, label %lor.lhs.false490, label %if.then495

lor.lhs.false490:                                 ; preds = %if.end488
  %315 = load %union.linkroot*, %union.linkroot** %args, align 4
  %list491 = bitcast %union.linkroot* %315 to %struct.linklist*
  %first492 = getelementptr inbounds %struct.linklist, %struct.linklist* %list491, i32 0, i32 0
  %316 = load %struct.linknode*, %struct.linknode** %first492, align 4
  %cmp493 = icmp eq %struct.linknode* %316, null
  br i1 %cmp493, label %if.then495, label %if.else617

if.then495:                                       ; preds = %lor.lhs.false490, %if.end488
  %317 = load %union.linkroot*, %union.linkroot** %redir, align 4
  %tobool496 = icmp ne %union.linkroot* %317, null
  br i1 %tobool496, label %land.lhs.true497, label %if.else578

land.lhs.true497:                                 ; preds = %if.then495
  %318 = load %union.linkroot*, %union.linkroot** %redir, align 4
  %list498 = bitcast %union.linkroot* %318 to %struct.linklist*
  %first499 = getelementptr inbounds %struct.linklist, %struct.linklist* %list498, i32 0, i32 0
  %319 = load %struct.linknode*, %struct.linknode** %first499, align 4
  %cmp500 = icmp ne %struct.linknode* %319, null
  br i1 %cmp500, label %if.then502, label %if.else578

if.then502:                                       ; preds = %land.lhs.true497
  %320 = load i32, i32* %do_exec, align 4
  %tobool503 = icmp ne i32 %320, 0
  br i1 %tobool503, label %if.then504, label %if.else505

if.then504:                                       ; preds = %if.then502
  store i32 1, i32* %nullexec, align 4
  br label %for.end696

if.else505:                                       ; preds = %if.then502
  %321 = load i32*, i32** %varspc, align 4
  %tobool506 = icmp ne i32* %321, null
  br i1 %tobool506, label %if.then507, label %if.else508

if.then507:                                       ; preds = %if.else505
  store i32 2, i32* %nullexec, align 4
  br label %for.end696

if.else508:                                       ; preds = %if.else505
  %322 = load i8*, i8** @nullcmd, align 4
  %tobool509 = icmp ne i8* %322, null
  br i1 %tobool509, label %lor.lhs.false510, label %if.then518

lor.lhs.false510:                                 ; preds = %if.else508
  %323 = load i8*, i8** @nullcmd, align 4
  %324 = load i8, i8* %323, align 1
  %tobool511 = icmp ne i8 %324, 0
  br i1 %tobool511, label %lor.lhs.false512, label %if.then518

lor.lhs.false512:                                 ; preds = %lor.lhs.false510
  %325 = load i8, i8* getelementptr inbounds ([181 x i8], [181 x i8]* @opts, i32 0, i32 46), align 1
  %conv513 = sext i8 %325 to i32
  %tobool514 = icmp ne i32 %conv513, 0
  br i1 %tobool514, label %if.then518, label %lor.lhs.false515

lor.lhs.false515:                                 ; preds = %lor.lhs.false512
  %326 = load i32, i32* %cflags, align 4
  %and516 = and i32 %326, 32
  %tobool517 = icmp ne i32 %and516, 0
  br i1 %tobool517, label %if.then518, label %if.else523

if.then518:                                       ; preds = %lor.lhs.false515, %lor.lhs.false512, %lor.lhs.false510, %if.else508
  call void (i8*, ...) @zerr(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.55, i32 0, i32 0))
  store i32 1, i32* @lastval, align 4
  %327 = load i32, i32* @errflag, align 4
  %or519 = or i32 %327, 1
  store i32 %or519, i32* @errflag, align 4
  %328 = load i32, i32* %forked, align 4
  %tobool520 = icmp ne i32 %328, 0
  br i1 %tobool520, label %if.then521, label %if.end522

if.then521:                                       ; preds = %if.then518
  %329 = load i32, i32* @lastval, align 4
  call void @_exit(i32 %329) #4
  unreachable

if.end522:                                        ; preds = %if.then518
  br label %if.end2286

if.else523:                                       ; preds = %lor.lhs.false515
  %330 = load i8*, i8** @nullcmd, align 4
  %tobool524 = icmp ne i8* %330, null
  br i1 %tobool524, label %lor.lhs.false525, label %if.then530

lor.lhs.false525:                                 ; preds = %if.else523
  %331 = load i8*, i8** @nullcmd, align 4
  %332 = load i8, i8* %331, align 1
  %tobool526 = icmp ne i8 %332, 0
  br i1 %tobool526, label %lor.lhs.false527, label %if.then530

lor.lhs.false527:                                 ; preds = %lor.lhs.false525
  %333 = load i8, i8* getelementptr inbounds ([181 x i8], [181 x i8]* @opts, i32 0, i32 162), align 1
  %conv528 = sext i8 %333 to i32
  %tobool529 = icmp ne i32 %conv528, 0
  br i1 %tobool529, label %if.then530, label %if.else538

if.then530:                                       ; preds = %lor.lhs.false527, %lor.lhs.false525, %if.else523
  %334 = load %union.linkroot*, %union.linkroot** %args, align 4
  %tobool531 = icmp ne %union.linkroot* %334, null
  br i1 %tobool531, label %if.end534, label %if.then532

if.then532:                                       ; preds = %if.then530
  %call533 = call %union.linkroot* @newlinklist()
  store %union.linkroot* %call533, %union.linkroot** %args, align 4
  br label %if.end534

if.end534:                                        ; preds = %if.then532, %if.then530
  %335 = load %union.linkroot*, %union.linkroot** %args, align 4
  %336 = load %union.linkroot*, %union.linkroot** %args, align 4
  %list535 = bitcast %union.linkroot* %336 to %struct.linklist*
  %last = getelementptr inbounds %struct.linklist, %struct.linklist* %list535, i32 0, i32 1
  %337 = load %struct.linknode*, %struct.linknode** %last, align 4
  %call536 = call i8* @dupstring(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.56, i32 0, i32 0))
  %call537 = call %struct.linknode* @insertlinknode(%union.linkroot* %335, %struct.linknode* %337, i8* %call536)
  br label %if.end574

if.else538:                                       ; preds = %lor.lhs.false527
  %338 = load i8*, i8** @readnullcmd, align 4
  %tobool539 = icmp ne i8* %338, null
  br i1 %tobool539, label %land.lhs.true540, label %if.else564

land.lhs.true540:                                 ; preds = %if.else538
  %339 = load i8*, i8** @readnullcmd, align 4
  %340 = load i8, i8* %339, align 1
  %conv541 = sext i8 %340 to i32
  %tobool542 = icmp ne i32 %conv541, 0
  br i1 %tobool542, label %land.lhs.true543, label %if.else564

land.lhs.true543:                                 ; preds = %land.lhs.true540
  %341 = load %union.linkroot*, %union.linkroot** %redir, align 4
  %list544 = bitcast %union.linkroot* %341 to %struct.linklist*
  %first545 = getelementptr inbounds %struct.linklist, %struct.linklist* %list544, i32 0, i32 0
  %342 = load %struct.linknode*, %struct.linknode** %first545, align 4
  %dat546 = getelementptr inbounds %struct.linknode, %struct.linknode* %342, i32 0, i32 2
  %343 = load i8*, i8** %dat546, align 4
  %344 = bitcast i8* %343 to %struct.redir*
  %type547 = getelementptr inbounds %struct.redir, %struct.redir* %344, i32 0, i32 0
  %345 = load i32, i32* %type547, align 4
  %cmp548 = icmp eq i32 %345, 9
  br i1 %cmp548, label %land.lhs.true550, label %if.else564

land.lhs.true550:                                 ; preds = %land.lhs.true543
  %346 = load %union.linkroot*, %union.linkroot** %redir, align 4
  %list551 = bitcast %union.linkroot* %346 to %struct.linklist*
  %first552 = getelementptr inbounds %struct.linklist, %struct.linklist* %list551, i32 0, i32 0
  %347 = load %struct.linknode*, %struct.linknode** %first552, align 4
  %next553 = getelementptr inbounds %struct.linknode, %struct.linknode* %347, i32 0, i32 0
  %348 = load %struct.linknode*, %struct.linknode** %next553, align 4
  %tobool554 = icmp ne %struct.linknode* %348, null
  br i1 %tobool554, label %if.else564, label %if.then555

if.then555:                                       ; preds = %land.lhs.true550
  %349 = load %union.linkroot*, %union.linkroot** %args, align 4
  %tobool556 = icmp ne %union.linkroot* %349, null
  br i1 %tobool556, label %if.end559, label %if.then557

if.then557:                                       ; preds = %if.then555
  %call558 = call %union.linkroot* @newlinklist()
  store %union.linkroot* %call558, %union.linkroot** %args, align 4
  br label %if.end559

if.end559:                                        ; preds = %if.then557, %if.then555
  %350 = load %union.linkroot*, %union.linkroot** %args, align 4
  %351 = load %union.linkroot*, %union.linkroot** %args, align 4
  %list560 = bitcast %union.linkroot* %351 to %struct.linklist*
  %last561 = getelementptr inbounds %struct.linklist, %struct.linklist* %list560, i32 0, i32 1
  %352 = load %struct.linknode*, %struct.linknode** %last561, align 4
  %353 = load i8*, i8** @readnullcmd, align 4
  %call562 = call i8* @dupstring(i8* %353)
  %call563 = call %struct.linknode* @insertlinknode(%union.linkroot* %350, %struct.linknode* %352, i8* %call562)
  br label %if.end573

if.else564:                                       ; preds = %land.lhs.true550, %land.lhs.true543, %land.lhs.true540, %if.else538
  %354 = load %union.linkroot*, %union.linkroot** %args, align 4
  %tobool565 = icmp ne %union.linkroot* %354, null
  br i1 %tobool565, label %if.end568, label %if.then566

if.then566:                                       ; preds = %if.else564
  %call567 = call %union.linkroot* @newlinklist()
  store %union.linkroot* %call567, %union.linkroot** %args, align 4
  br label %if.end568

if.end568:                                        ; preds = %if.then566, %if.else564
  %355 = load %union.linkroot*, %union.linkroot** %args, align 4
  %356 = load %union.linkroot*, %union.linkroot** %args, align 4
  %list569 = bitcast %union.linkroot* %356 to %struct.linklist*
  %last570 = getelementptr inbounds %struct.linklist, %struct.linklist* %list569, i32 0, i32 1
  %357 = load %struct.linknode*, %struct.linknode** %last570, align 4
  %358 = load i8*, i8** @nullcmd, align 4
  %call571 = call i8* @dupstring(i8* %358)
  %call572 = call %struct.linknode* @insertlinknode(%union.linkroot* %355, %struct.linknode* %357, i8* %call571)
  br label %if.end573

if.end573:                                        ; preds = %if.end568, %if.end559
  br label %if.end574

if.end574:                                        ; preds = %if.end573, %if.end534
  br label %if.end575

if.end575:                                        ; preds = %if.end574
  br label %if.end576

if.end576:                                        ; preds = %if.end575
  br label %if.end577

if.end577:                                        ; preds = %if.end576
  br label %if.end616

if.else578:                                       ; preds = %land.lhs.true497, %if.then495
  %359 = load i32, i32* %cflags, align 4
  %and579 = and i32 %359, 32
  %tobool580 = icmp ne i32 %and579, 0
  br i1 %tobool580, label %land.lhs.true581, label %if.else588

land.lhs.true581:                                 ; preds = %if.else578
  %360 = load i32, i32* %cflags, align 4
  %and582 = and i32 %360, 256
  %tobool583 = icmp ne i32 %and582, 0
  br i1 %tobool583, label %if.then584, label %if.else588

if.then584:                                       ; preds = %land.lhs.true581
  store i32 0, i32* @lastval, align 4
  %361 = load i32, i32* %forked, align 4
  %tobool585 = icmp ne i32 %361, 0
  br i1 %tobool585, label %if.then586, label %if.end587

if.then586:                                       ; preds = %if.then584
  %362 = load i32, i32* @lastval, align 4
  call void @_exit(i32 %362) #4
  unreachable

if.end587:                                        ; preds = %if.then584
  br label %if.end2286

if.else588:                                       ; preds = %land.lhs.true581, %if.else578
  %363 = load i32, i32* @badcshglob, align 4
  %cmp589 = icmp eq i32 %363, 1
  br i1 %cmp589, label %if.then591, label %if.end595

if.then591:                                       ; preds = %if.else588
  call void (i8*, ...) @zerr(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.57, i32 0, i32 0))
  store i32 1, i32* @lastval, align 4
  %364 = load i32, i32* %forked, align 4
  %tobool592 = icmp ne i32 %364, 0
  br i1 %tobool592, label %if.then593, label %if.end594

if.then593:                                       ; preds = %if.then591
  %365 = load i32, i32* @lastval, align 4
  call void @_exit(i32 %365) #4
  unreachable

if.end594:                                        ; preds = %if.then591
  br label %if.end2286

if.end595:                                        ; preds = %if.else588
  %366 = load i32, i32* @use_cmdoutval, align 4
  %tobool596 = icmp ne i32 %366, 0
  br i1 %tobool596, label %cond.true597, label %cond.false598

cond.true597:                                     ; preds = %if.end595
  %367 = load i32, i32* @lastval, align 4
  br label %cond.end599

cond.false598:                                    ; preds = %if.end595
  br label %cond.end599

cond.end599:                                      ; preds = %cond.false598, %cond.true597
  %cond600 = phi i32 [ %367, %cond.true597 ], [ 0, %cond.false598 ]
  store i32 %cond600, i32* @cmdoutval, align 4
  %368 = load i32*, i32** %varspc, align 4
  %tobool601 = icmp ne i32* %368, null
  br i1 %tobool601, label %if.then602, label %if.end603

if.then602:                                       ; preds = %cond.end599
  %369 = load i32, i32* %old_lastval, align 4
  store i32 %369, i32* @lastval, align 4
  %370 = load %struct.estate*, %struct.estate** %state.addr, align 4
  %371 = load i32*, i32** %varspc, align 4
  call void @addvars(%struct.estate* %370, i32* %371, i32 0)
  br label %if.end603

if.end603:                                        ; preds = %if.then602, %cond.end599
  %372 = load i32, i32* @errflag, align 4
  %tobool604 = icmp ne i32 %372, 0
  br i1 %tobool604, label %if.then605, label %if.else606

if.then605:                                       ; preds = %if.end603
  store i32 1, i32* @lastval, align 4
  br label %if.end607

if.else606:                                       ; preds = %if.end603
  %373 = load i32, i32* @cmdoutval, align 4
  store i32 %373, i32* @lastval, align 4
  br label %if.end607

if.end607:                                        ; preds = %if.else606, %if.then605
  %374 = load i8, i8* getelementptr inbounds ([181 x i8], [181 x i8]* @opts, i32 0, i32 178), align 1
  %tobool608 = icmp ne i8 %374, 0
  br i1 %tobool608, label %if.then609, label %if.end612

if.then609:                                       ; preds = %if.end607
  %375 = load %struct._IO_FILE*, %struct._IO_FILE** @xtrerr, align 4
  %call610 = call i32 @fputc(i32 10, %struct._IO_FILE* %375)
  %376 = load %struct._IO_FILE*, %struct._IO_FILE** @xtrerr, align 4
  %call611 = call i32 @fflush(%struct._IO_FILE* %376)
  br label %if.end612

if.end612:                                        ; preds = %if.then609, %if.end607
  %377 = load i32, i32* %forked, align 4
  %tobool613 = icmp ne i32 %377, 0
  br i1 %tobool613, label %if.then614, label %if.end615

if.then614:                                       ; preds = %if.end612
  %378 = load i32, i32* @lastval, align 4
  call void @_exit(i32 %378) #4
  unreachable

if.end615:                                        ; preds = %if.end612
  br label %if.end2286

if.end616:                                        ; preds = %if.end577
  br label %if.end633

if.else617:                                       ; preds = %lor.lhs.false490
  %379 = load i8, i8* getelementptr inbounds ([181 x i8], [181 x i8]* @opts, i32 0, i32 155), align 1
  %conv618 = sext i8 %379 to i32
  %tobool619 = icmp ne i32 %conv618, 0
  br i1 %tobool619, label %land.lhs.true620, label %if.end632

land.lhs.true620:                                 ; preds = %if.else617
  %380 = load i32, i32* %cflags, align 4
  %and621 = and i32 %380, 512
  %tobool622 = icmp ne i32 %and621, 0
  br i1 %tobool622, label %land.lhs.true623, label %if.end632

land.lhs.true623:                                 ; preds = %land.lhs.true620
  %381 = load i32, i32* %do_exec, align 4
  %tobool624 = icmp ne i32 %381, 0
  br i1 %tobool624, label %if.then625, label %if.end632

if.then625:                                       ; preds = %land.lhs.true623
  %382 = load %union.linkroot*, %union.linkroot** %args, align 4
  %list626 = bitcast %union.linkroot* %382 to %struct.linklist*
  %first627 = getelementptr inbounds %struct.linklist, %struct.linklist* %list626, i32 0, i32 0
  %383 = load %struct.linknode*, %struct.linknode** %first627, align 4
  %dat628 = getelementptr inbounds %struct.linknode, %struct.linknode* %383, i32 0, i32 2
  %384 = load i8*, i8** %dat628, align 4
  call void (i8*, i8*, ...) @zerrnam(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.58, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.33, i32 0, i32 0), i8* %384)
  store i32 1, i32* @lastval, align 4
  %385 = load i32, i32* %forked, align 4
  %tobool629 = icmp ne i32 %385, 0
  br i1 %tobool629, label %if.then630, label %if.end631

if.then630:                                       ; preds = %if.then625
  %386 = load i32, i32* @lastval, align 4
  call void @_exit(i32 %386) #4
  unreachable

if.end631:                                        ; preds = %if.then625
  br label %if.end2286

if.end632:                                        ; preds = %land.lhs.true623, %land.lhs.true620, %if.else617
  br label %if.end633

if.end633:                                        ; preds = %if.end632, %if.end616
  %387 = load i32, i32* @errflag, align 4
  %tobool634 = icmp ne i32 %387, 0
  br i1 %tobool634, label %if.then648, label %lor.lhs.false635

lor.lhs.false635:                                 ; preds = %if.end633
  %388 = load i32, i32* %checked, align 4
  %tobool636 = icmp ne i32 %388, 0
  br i1 %tobool636, label %if.then648, label %lor.lhs.false637

lor.lhs.false637:                                 ; preds = %lor.lhs.false635
  %389 = load i32, i32* %is_builtin, align 4
  %tobool638 = icmp ne i32 %389, 0
  br i1 %tobool638, label %if.then648, label %lor.lhs.false639

lor.lhs.false639:                                 ; preds = %lor.lhs.false637
  %390 = load i8, i8* getelementptr inbounds ([181 x i8], [181 x i8]* @opts, i32 0, i32 132), align 1
  %conv640 = sext i8 %390 to i32
  %tobool641 = icmp ne i32 %conv640, 0
  br i1 %tobool641, label %cond.true642, label %cond.false645

cond.true642:                                     ; preds = %lor.lhs.false639
  %391 = load i32, i32* %cflags, align 4
  %and643 = and i32 %391, 512
  %tobool644 = icmp ne i32 %and643, 0
  br i1 %tobool644, label %if.then648, label %if.end649

cond.false645:                                    ; preds = %lor.lhs.false639
  %392 = load i32, i32* %cflags, align 4
  %and646 = and i32 %392, 256
  %tobool647 = icmp ne i32 %and646, 0
  br i1 %tobool647, label %if.then648, label %if.end649

if.then648:                                       ; preds = %cond.false645, %cond.true642, %lor.lhs.false637, %lor.lhs.false635, %if.end633
  br label %for.end696

if.end649:                                        ; preds = %cond.false645, %cond.true642
  %393 = load %union.linkroot*, %union.linkroot** %args, align 4
  %list650 = bitcast %union.linkroot* %393 to %struct.linklist*
  %first651 = getelementptr inbounds %struct.linklist, %struct.linklist* %list650, i32 0, i32 0
  %394 = load %struct.linknode*, %struct.linknode** %first651, align 4
  %dat652 = getelementptr inbounds %struct.linknode, %struct.linknode* %394, i32 0, i32 2
  %395 = load i8*, i8** %dat652, align 4
  store i8* %395, i8** %cmdarg443, align 4
  %396 = load i32, i32* %cflags, align 4
  %and653 = and i32 %396, 384
  %tobool654 = icmp ne i32 %and653, 0
  br i1 %tobool654, label %if.end660, label %land.lhs.true655

land.lhs.true655:                                 ; preds = %if.end649
  %397 = load %struct.hashtable*, %struct.hashtable** @shfunctab, align 4
  %getnode656 = getelementptr inbounds %struct.hashtable, %struct.hashtable* %397, i32 0, i32 9
  %398 = load %struct.hashnode* (%struct.hashtable*, i8*)*, %struct.hashnode* (%struct.hashtable*, i8*)** %getnode656, align 4
  %399 = load %struct.hashtable*, %struct.hashtable** @shfunctab, align 4
  %400 = load i8*, i8** %cmdarg443, align 4
  %call657 = call %struct.hashnode* %398(%struct.hashtable* %399, i8* %400)
  store %struct.hashnode* %call657, %struct.hashnode** %hn, align 4
  %tobool658 = icmp ne %struct.hashnode* %call657, null
  br i1 %tobool658, label %if.then659, label %if.end660

if.then659:                                       ; preds = %land.lhs.true655
  store i32 1, i32* %is_shfunc, align 4
  br label %for.end696

if.end660:                                        ; preds = %land.lhs.true655, %if.end649
  %401 = load %struct.hashtable*, %struct.hashtable** @builtintab, align 4
  %getnode661 = getelementptr inbounds %struct.hashtable, %struct.hashtable* %401, i32 0, i32 9
  %402 = load %struct.hashnode* (%struct.hashtable*, i8*)*, %struct.hashnode* (%struct.hashtable*, i8*)** %getnode661, align 4
  %403 = load %struct.hashtable*, %struct.hashtable** @builtintab, align 4
  %404 = load i8*, i8** %cmdarg443, align 4
  %call662 = call %struct.hashnode* %402(%struct.hashtable* %403, i8* %404)
  store %struct.hashnode* %call662, %struct.hashnode** %hn, align 4
  %tobool663 = icmp ne %struct.hashnode* %call662, null
  br i1 %tobool663, label %if.end677, label %if.then664

if.then664:                                       ; preds = %if.end660
  %405 = load i32, i32* %cflags, align 4
  %and665 = and i32 %405, 128
  %tobool666 = icmp ne i32 %and665, 0
  br i1 %tobool666, label %if.then667, label %if.end676

if.then667:                                       ; preds = %if.then664
  %406 = load i8*, i8** %cmdarg443, align 4
  call void (i8*, ...) @zwarn(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.59, i32 0, i32 0), i8* %406)
  store i32 1, i32* @lastval, align 4
  %407 = load i32, i32* %oautocont, align 4
  %cmp668 = icmp sge i32 %407, 0
  br i1 %cmp668, label %if.then670, label %if.end672

if.then670:                                       ; preds = %if.then667
  %408 = load i32, i32* %oautocont, align 4
  %conv671 = trunc i32 %408 to i8
  store i8 %conv671, i8* getelementptr inbounds ([181 x i8], [181 x i8]* @opts, i32 0, i32 8), align 1
  br label %if.end672

if.end672:                                        ; preds = %if.then670, %if.then667
  %409 = load i32, i32* %forked, align 4
  %tobool673 = icmp ne i32 %409, 0
  br i1 %tobool673, label %if.then674, label %if.end675

if.then674:                                       ; preds = %if.end672
  %410 = load i32, i32* @lastval, align 4
  call void @_exit(i32 %410) #4
  unreachable

if.end675:                                        ; preds = %if.end672
  br label %if.end2286

if.end676:                                        ; preds = %if.then664
  br label %for.end696

if.end677:                                        ; preds = %if.end660
  %411 = load %struct.hashnode*, %struct.hashnode** %hn, align 4
  %flags678 = getelementptr inbounds %struct.hashnode, %struct.hashnode* %411, i32 0, i32 2
  %412 = load i32, i32* %flags678, align 4
  %and679 = and i32 %412, 32
  %tobool680 = icmp ne i32 %and679, 0
  br i1 %tobool680, label %if.end689, label %if.then681

if.then681:                                       ; preds = %if.end677
  store i32 1, i32* %is_builtin, align 4
  %413 = load i8*, i8** %cmdarg443, align 4
  %414 = load %struct.hashnode*, %struct.hashnode** %hn, align 4
  %call682 = call %struct.hashnode* @resolvebuiltin(i8* %413, %struct.hashnode* %414)
  store %struct.hashnode* %call682, %struct.hashnode** %hn, align 4
  %tobool683 = icmp ne %struct.hashnode* %call682, null
  br i1 %tobool683, label %if.end688, label %if.then684

if.then684:                                       ; preds = %if.then681
  %415 = load i32, i32* %forked, align 4
  %tobool685 = icmp ne i32 %415, 0
  br i1 %tobool685, label %if.then686, label %if.end687

if.then686:                                       ; preds = %if.then684
  %416 = load i32, i32* @lastval, align 4
  call void @_exit(i32 %416) #4
  unreachable

if.end687:                                        ; preds = %if.then684
  br label %if.end2286

if.end688:                                        ; preds = %if.then681
  br label %for.end696

if.end689:                                        ; preds = %if.end677
  %417 = load i32, i32* %cflags, align 4
  %and690 = and i32 %417, -385
  store i32 %and690, i32* %cflags, align 4
  %418 = load %struct.hashnode*, %struct.hashnode** %hn, align 4
  %flags691 = getelementptr inbounds %struct.hashnode, %struct.hashnode* %418, i32 0, i32 2
  %419 = load i32, i32* %flags691, align 4
  %420 = load i32, i32* %cflags, align 4
  %or692 = or i32 %420, %419
  store i32 %or692, i32* %cflags, align 4
  %421 = load %union.linkroot*, %union.linkroot** %args, align 4
  %422 = load %union.linkroot*, %union.linkroot** %args, align 4
  %list693 = bitcast %union.linkroot* %422 to %struct.linklist*
  %first694 = getelementptr inbounds %struct.linklist, %struct.linklist* %list693, i32 0, i32 0
  %423 = load %struct.linknode*, %struct.linknode** %first694, align 4
  %call695 = call i8* @uremnode(%union.linkroot* %421, %struct.linknode* %423)
  store %struct.hashnode* null, %struct.hashnode** %hn, align 4
  br label %for.cond442

for.end696:                                       ; preds = %if.end688, %if.end676, %if.then659, %if.then648, %if.then507, %if.then504
  br label %if.end697

if.end697:                                        ; preds = %for.end696, %lor.lhs.false438
  %424 = load i32, i32* @errflag, align 4
  %tobool698 = icmp ne i32 %424, 0
  br i1 %tobool698, label %if.then699, label %if.end711

if.then699:                                       ; preds = %if.end697
  %425 = load i32, i32* @lastval, align 4
  %tobool700 = icmp ne i32 %425, 0
  br i1 %tobool700, label %if.end702, label %if.then701

if.then701:                                       ; preds = %if.then699
  store i32 1, i32* @lastval, align 4
  br label %if.end702

if.end702:                                        ; preds = %if.then701, %if.then699
  %426 = load i32, i32* %oautocont, align 4
  %cmp703 = icmp sge i32 %426, 0
  br i1 %cmp703, label %if.then705, label %if.end707

if.then705:                                       ; preds = %if.end702
  %427 = load i32, i32* %oautocont, align 4
  %conv706 = trunc i32 %427 to i8
  store i8 %conv706, i8* getelementptr inbounds ([181 x i8], [181 x i8]* @opts, i32 0, i32 8), align 1
  br label %if.end707

if.end707:                                        ; preds = %if.then705, %if.end702
  %428 = load i32, i32* %forked, align 4
  %tobool708 = icmp ne i32 %428, 0
  br i1 %tobool708, label %if.then709, label %if.end710

if.then709:                                       ; preds = %if.end707
  %429 = load i32, i32* @lastval, align 4
  call void @_exit(i32 %429) #4
  unreachable

if.end710:                                        ; preds = %if.end707
  br label %if.end2286

if.end711:                                        ; preds = %if.end697
  %430 = load i8*, i8** %text, align 4
  %tobool712 = icmp ne i8* %430, null
  br i1 %tobool712, label %if.end725, label %land.lhs.true713

land.lhs.true713:                                 ; preds = %if.end711
  %431 = load i32, i32* @sfcontext, align 4
  %tobool714 = icmp ne i32 %431, 0
  br i1 %tobool714, label %if.end725, label %land.lhs.true715

land.lhs.true715:                                 ; preds = %land.lhs.true713
  %432 = load i8, i8* getelementptr inbounds ([181 x i8], [181 x i8]* @opts, i32 0, i32 117), align 1
  %conv716 = sext i8 %432 to i32
  %tobool717 = icmp ne i32 %conv716, 0
  br i1 %tobool717, label %if.then721, label %lor.lhs.false718

lor.lhs.false718:                                 ; preds = %land.lhs.true715
  %433 = load i32, i32* %how.addr, align 4
  %and719 = and i32 %433, 1
  %tobool720 = icmp ne i32 %and719, 0
  br i1 %tobool720, label %if.then721, label %if.end725

if.then721:                                       ; preds = %lor.lhs.false718, %land.lhs.true715
  %434 = load %struct.estate*, %struct.estate** %state.addr, align 4
  %prog722 = getelementptr inbounds %struct.estate, %struct.estate* %434, i32 0, i32 0
  %435 = load %struct.eprog*, %struct.eprog** %prog722, align 4
  %436 = load %struct.execcmd_params*, %struct.execcmd_params** %eparams.addr, align 4
  %beg723 = getelementptr inbounds %struct.execcmd_params, %struct.execcmd_params* %436, i32 0, i32 2
  %437 = load i32*, i32** %beg723, align 4
  %call724 = call i8* @getjobtext(%struct.eprog* %435, i32* %437)
  store i8* %call724, i8** %text, align 4
  br label %if.end725

if.end725:                                        ; preds = %if.then721, %lor.lhs.false718, %land.lhs.true713, %if.end711
  %438 = load i32, i32* %type, align 4
  %cmp726 = icmp ne i32 %438, 11
  br i1 %cmp726, label %if.then728, label %if.end742

if.then728:                                       ; preds = %if.end725
  %439 = load %union.linkroot*, %union.linkroot** %args, align 4
  %tobool729 = icmp ne %union.linkroot* %439, null
  br i1 %tobool729, label %land.lhs.true730, label %cond.false739

land.lhs.true730:                                 ; preds = %if.then728
  %440 = load %union.linkroot*, %union.linkroot** %args, align 4
  %list731 = bitcast %union.linkroot* %440 to %struct.linklist*
  %first732 = getelementptr inbounds %struct.linklist, %struct.linklist* %list731, i32 0, i32 0
  %441 = load %struct.linknode*, %struct.linknode** %first732, align 4
  %cmp733 = icmp ne %struct.linknode* %441, null
  br i1 %cmp733, label %cond.true735, label %cond.false739

cond.true735:                                     ; preds = %land.lhs.true730
  %442 = load %union.linkroot*, %union.linkroot** %args, align 4
  %list736 = bitcast %union.linkroot* %442 to %struct.linklist*
  %last737 = getelementptr inbounds %struct.linklist, %struct.linklist* %list736, i32 0, i32 1
  %443 = load %struct.linknode*, %struct.linknode** %last737, align 4
  %dat738 = getelementptr inbounds %struct.linknode, %struct.linknode* %443, i32 0, i32 2
  %444 = load i8*, i8** %dat738, align 4
  br label %cond.end740

cond.false739:                                    ; preds = %land.lhs.true730, %if.then728
  br label %cond.end740

cond.end740:                                      ; preds = %cond.false739, %cond.true735
  %cond741 = phi i8* [ %444, %cond.true735 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i32 0, i32 0), %cond.false739 ]
  call void @setunderscore(i8* %cond741)
  br label %if.end742

if.end742:                                        ; preds = %cond.end740, %if.end725
  %445 = load i32, i32* %type, align 4
  %cmp743 = icmp eq i32 %445, 6
  br i1 %cmp743, label %land.lhs.true745, label %if.end832

land.lhs.true745:                                 ; preds = %if.end742
  %446 = load i8, i8* getelementptr inbounds ([181 x i8], [181 x i8]* @opts, i32 0, i32 94), align 1
  %conv746 = sext i8 %446 to i32
  %tobool747 = icmp ne i32 %conv746, 0
  br i1 %tobool747, label %land.lhs.true748, label %if.end832

land.lhs.true748:                                 ; preds = %land.lhs.true745
  %447 = load i8, i8* getelementptr inbounds ([181 x i8], [181 x i8]* @opts, i32 0, i32 156), align 1
  %tobool749 = icmp ne i8 %447, 0
  br i1 %tobool749, label %if.end832, label %land.lhs.true750

land.lhs.true750:                                 ; preds = %land.lhs.true748
  %448 = load i8, i8* getelementptr inbounds ([181 x i8], [181 x i8]* @opts, i32 0, i32 161), align 1
  %conv751 = sext i8 %448 to i32
  %tobool752 = icmp ne i32 %conv751, 0
  br i1 %tobool752, label %land.lhs.true753, label %if.end832

land.lhs.true753:                                 ; preds = %land.lhs.true750
  %449 = load %union.linkroot*, %union.linkroot** %args, align 4
  %tobool754 = icmp ne %union.linkroot* %449, null
  br i1 %tobool754, label %land.lhs.true755, label %if.end832

land.lhs.true755:                                 ; preds = %land.lhs.true753
  %450 = load %union.linkroot*, %union.linkroot** %args, align 4
  %list756 = bitcast %union.linkroot* %450 to %struct.linklist*
  %first757 = getelementptr inbounds %struct.linklist, %struct.linklist* %list756, i32 0, i32 0
  %451 = load %struct.linknode*, %struct.linknode** %first757, align 4
  %cmp758 = icmp ne %struct.linknode* %451, null
  br i1 %cmp758, label %land.lhs.true760, label %if.end832

land.lhs.true760:                                 ; preds = %land.lhs.true755
  %452 = load %union.linkroot*, %union.linkroot** %args, align 4
  %list761 = bitcast %union.linkroot* %452 to %struct.linklist*
  %first762 = getelementptr inbounds %struct.linklist, %struct.linklist* %list761, i32 0, i32 0
  %453 = load %struct.linknode*, %struct.linknode** %first762, align 4
  %next763 = getelementptr inbounds %struct.linknode, %struct.linknode* %453, i32 0, i32 0
  %454 = load %struct.linknode*, %struct.linknode** %next763, align 4
  %tobool764 = icmp ne %struct.linknode* %454, null
  br i1 %tobool764, label %land.lhs.true765, label %if.end832

land.lhs.true765:                                 ; preds = %land.lhs.true760
  %455 = load %union.linkroot*, %union.linkroot** %args, align 4
  %list766 = bitcast %union.linkroot* %455 to %struct.linklist*
  %first767 = getelementptr inbounds %struct.linklist, %struct.linklist* %list766, i32 0, i32 0
  %456 = load %struct.linknode*, %struct.linknode** %first767, align 4
  %dat768 = getelementptr inbounds %struct.linknode, %struct.linknode* %456, i32 0, i32 2
  %457 = load i8*, i8** %dat768, align 4
  %call769 = call i32 @strcmp(i8* %457, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.60, i32 0, i32 0))
  %tobool770 = icmp ne i32 %call769, 0
  br i1 %tobool770, label %if.end832, label %if.then771

if.then771:                                       ; preds = %land.lhs.true765
  %458 = load %union.linkroot*, %union.linkroot** %args, align 4
  %list774 = bitcast %union.linkroot* %458 to %struct.linklist*
  %first775 = getelementptr inbounds %struct.linklist, %struct.linklist* %list774, i32 0, i32 0
  %459 = load %struct.linknode*, %struct.linknode** %first775, align 4
  %next776 = getelementptr inbounds %struct.linknode, %struct.linknode* %459, i32 0, i32 0
  %460 = load %struct.linknode*, %struct.linknode** %next776, align 4
  store %struct.linknode* %460, %struct.linknode** %node772, align 4
  br label %for.cond777

for.cond777:                                      ; preds = %for.inc830, %if.then771
  %461 = load %struct.linknode*, %struct.linknode** %node772, align 4
  %tobool778 = icmp ne %struct.linknode* %461, null
  br i1 %tobool778, label %land.rhs779, label %land.end783

land.rhs779:                                      ; preds = %for.cond777
  %462 = load i32, i32* @errflag, align 4
  %tobool780 = icmp ne i32 %462, 0
  %lnot781 = xor i1 %tobool780, true
  br label %land.end783

land.end783:                                      ; preds = %land.rhs779, %for.cond777
  %463 = phi i1 [ false, %for.cond777 ], [ %lnot781, %land.rhs779 ]
  br i1 %463, label %for.body784, label %for.end831

for.body784:                                      ; preds = %land.end783
  %464 = load %struct.linknode*, %struct.linknode** %node772, align 4
  %dat786 = getelementptr inbounds %struct.linknode, %struct.linknode* %464, i32 0, i32 2
  %465 = load i8*, i8** %dat786, align 4
  store i8* %465, i8** %s785, align 4
  %466 = load i8*, i8** %s785, align 4
  %call787 = call i32 @strlen(i8* %466)
  store i32 %call787, i32* %l, align 4
  %467 = load %struct.linknode*, %struct.linknode** %node772, align 4
  %next788 = getelementptr inbounds %struct.linknode, %struct.linknode* %467, i32 0, i32 0
  %468 = load %struct.linknode*, %struct.linknode** %next788, align 4
  store %struct.linknode* %468, %struct.linknode** %next773, align 4
  %469 = load i8*, i8** %s785, align 4
  %arrayidx789 = getelementptr inbounds i8, i8* %469, i32 0
  %470 = load i8, i8* %arrayidx789, align 1
  %conv790 = sext i8 %470 to i32
  %cmp791 = icmp eq i32 %conv790, -121
  br i1 %cmp791, label %land.lhs.true793, label %if.else802

land.lhs.true793:                                 ; preds = %for.body784
  %471 = load i8*, i8** %s785, align 4
  %arrayidx794 = getelementptr inbounds i8, i8* %471, i32 1
  %472 = load i8, i8* %arrayidx794, align 1
  %tobool795 = icmp ne i8 %472, 0
  br i1 %tobool795, label %if.else802, label %if.then796

if.then796:                                       ; preds = %land.lhs.true793
  %473 = load i8*, i8** @pwd, align 4
  %call797 = call i32 @checkrmall(i8* %473)
  %tobool798 = icmp ne i32 %call797, 0
  br i1 %tobool798, label %if.end801, label %if.then799

if.then799:                                       ; preds = %if.then796
  %474 = load i32, i32* @errflag, align 4
  %or800 = or i32 %474, 1
  store i32 %or800, i32* @errflag, align 4
  br label %for.end831

if.end801:                                        ; preds = %if.then796
  br label %if.end829

if.else802:                                       ; preds = %land.lhs.true793, %for.body784
  %475 = load i32, i32* %l, align 4
  %cmp803 = icmp sge i32 %475, 2
  br i1 %cmp803, label %land.lhs.true805, label %if.end828

land.lhs.true805:                                 ; preds = %if.else802
  %476 = load i8*, i8** %s785, align 4
  %477 = load i32, i32* %l, align 4
  %sub = sub nsw i32 %477, 2
  %arrayidx806 = getelementptr inbounds i8, i8* %476, i32 %sub
  %478 = load i8, i8* %arrayidx806, align 1
  %conv807 = sext i8 %478 to i32
  %cmp808 = icmp eq i32 %conv807, 47
  br i1 %cmp808, label %land.lhs.true810, label %if.end828

land.lhs.true810:                                 ; preds = %land.lhs.true805
  %479 = load i8*, i8** %s785, align 4
  %480 = load i32, i32* %l, align 4
  %sub811 = sub nsw i32 %480, 1
  %arrayidx812 = getelementptr inbounds i8, i8* %479, i32 %sub811
  %481 = load i8, i8* %arrayidx812, align 1
  %conv813 = sext i8 %481 to i32
  %cmp814 = icmp eq i32 %conv813, -121
  br i1 %cmp814, label %if.then816, label %if.end828

if.then816:                                       ; preds = %land.lhs.true810
  %482 = load i8*, i8** %s785, align 4
  %483 = load i32, i32* %l, align 4
  %sub817 = sub nsw i32 %483, 2
  %arrayidx818 = getelementptr inbounds i8, i8* %482, i32 %sub817
  %484 = load i8, i8* %arrayidx818, align 1
  store i8 %484, i8* %t, align 1
  %485 = load i8*, i8** %s785, align 4
  %486 = load i32, i32* %l, align 4
  %sub819 = sub nsw i32 %486, 2
  %arrayidx820 = getelementptr inbounds i8, i8* %485, i32 %sub819
  store i8 0, i8* %arrayidx820, align 1
  %487 = load i8*, i8** %s785, align 4
  %call821 = call i32 @checkrmall(i8* %487)
  store i32 %call821, i32* %rmall, align 4
  %488 = load i8, i8* %t, align 1
  %489 = load i8*, i8** %s785, align 4
  %490 = load i32, i32* %l, align 4
  %sub822 = sub nsw i32 %490, 2
  %arrayidx823 = getelementptr inbounds i8, i8* %489, i32 %sub822
  store i8 %488, i8* %arrayidx823, align 1
  %491 = load i32, i32* %rmall, align 4
  %tobool824 = icmp ne i32 %491, 0
  br i1 %tobool824, label %if.end827, label %if.then825

if.then825:                                       ; preds = %if.then816
  %492 = load i32, i32* @errflag, align 4
  %or826 = or i32 %492, 1
  store i32 %or826, i32* @errflag, align 4
  br label %for.end831

if.end827:                                        ; preds = %if.then816
  br label %if.end828

if.end828:                                        ; preds = %if.end827, %land.lhs.true810, %land.lhs.true805, %if.else802
  br label %if.end829

if.end829:                                        ; preds = %if.end828, %if.end801
  br label %for.inc830

for.inc830:                                       ; preds = %if.end829
  %493 = load %struct.linknode*, %struct.linknode** %next773, align 4
  store %struct.linknode* %493, %struct.linknode** %node772, align 4
  br label %for.cond777

for.end831:                                       ; preds = %if.then825, %if.then799, %land.end783
  br label %if.end832

if.end832:                                        ; preds = %for.end831, %land.lhs.true765, %land.lhs.true760, %land.lhs.true755, %land.lhs.true753, %land.lhs.true750, %land.lhs.true748, %land.lhs.true745, %if.end742
  %494 = load i32, i32* %type, align 4
  %cmp833 = icmp eq i32 %494, 11
  br i1 %cmp833, label %if.then835, label %if.else840

if.then835:                                       ; preds = %if.end832
  %495 = load %struct.estate*, %struct.estate** %state.addr, align 4
  %pc = getelementptr inbounds %struct.estate, %struct.estate* %495, i32 0, i32 1
  %496 = load i32*, i32** %pc, align 4
  %497 = load i32, i32* %496, align 4
  %cmp836 = icmp ne i32 %497, 0
  br i1 %cmp836, label %if.then838, label %if.end839

if.then838:                                       ; preds = %if.then835
  store %union.linkroot* null, %union.linkroot** %redir, align 4
  br label %if.end839

if.end839:                                        ; preds = %if.then838, %if.then835
  br label %if.end897

if.else840:                                       ; preds = %if.end832
  %498 = load i32, i32* %is_shfunc, align 4
  %tobool841 = icmp ne i32 %498, 0
  br i1 %tobool841, label %if.then845, label %lor.lhs.false842

lor.lhs.false842:                                 ; preds = %if.else840
  %499 = load i32, i32* %type, align 4
  %cmp843 = icmp eq i32 %499, 20
  br i1 %cmp843, label %if.then845, label %if.end896

if.then845:                                       ; preds = %lor.lhs.false842, %if.else840
  %500 = load i32, i32* %is_shfunc, align 4
  %tobool846 = icmp ne i32 %500, 0
  br i1 %tobool846, label %if.then847, label %if.else848

if.then847:                                       ; preds = %if.then845
  %501 = load %struct.hashnode*, %struct.hashnode** %hn, align 4
  %502 = bitcast %struct.hashnode* %501 to %struct.shfunc*
  store %struct.shfunc* %502, %struct.shfunc** %shf, align 4
  br label %if.end866

if.else848:                                       ; preds = %if.then845
  %503 = load %struct.estate*, %struct.estate** %state.addr, align 4
  %prog849 = getelementptr inbounds %struct.estate, %struct.estate* %503, i32 0, i32 0
  %504 = load %struct.eprog*, %struct.eprog** %prog849, align 4
  %shf850 = getelementptr inbounds %struct.eprog, %struct.eprog* %504, i32 0, i32 7
  %505 = load %struct.shfunc*, %struct.shfunc** %shf850, align 4
  %call851 = call %struct.shfunc* @loadautofn(%struct.shfunc* %505, i32 1, i32 0, i32 0)
  store %struct.shfunc* %call851, %struct.shfunc** %shf, align 4
  %506 = load %struct.shfunc*, %struct.shfunc** %shf, align 4
  %tobool852 = icmp ne %struct.shfunc* %506, null
  br i1 %tobool852, label %if.then853, label %if.else856

if.then853:                                       ; preds = %if.else848
  %507 = load %struct.shfunc*, %struct.shfunc** %shf, align 4
  %508 = load %struct.estate*, %struct.estate** %state.addr, align 4
  %prog854 = getelementptr inbounds %struct.estate, %struct.estate* %508, i32 0, i32 0
  %509 = load %struct.eprog*, %struct.eprog** %prog854, align 4
  %shf855 = getelementptr inbounds %struct.eprog, %struct.eprog* %509, i32 0, i32 7
  store %struct.shfunc* %507, %struct.shfunc** %shf855, align 4
  br label %if.end865

if.else856:                                       ; preds = %if.else848
  store i32 1, i32* @lastval, align 4
  %510 = load i32, i32* %oautocont, align 4
  %cmp857 = icmp sge i32 %510, 0
  br i1 %cmp857, label %if.then859, label %if.end861

if.then859:                                       ; preds = %if.else856
  %511 = load i32, i32* %oautocont, align 4
  %conv860 = trunc i32 %511 to i8
  store i8 %conv860, i8* getelementptr inbounds ([181 x i8], [181 x i8]* @opts, i32 0, i32 8), align 1
  br label %if.end861

if.end861:                                        ; preds = %if.then859, %if.else856
  %512 = load i32, i32* %forked, align 4
  %tobool862 = icmp ne i32 %512, 0
  br i1 %tobool862, label %if.then863, label %if.end864

if.then863:                                       ; preds = %if.end861
  %513 = load i32, i32* @lastval, align 4
  call void @_exit(i32 %513) #4
  unreachable

if.end864:                                        ; preds = %if.end861
  br label %if.end2286

if.end865:                                        ; preds = %if.then853
  br label %if.end866

if.end866:                                        ; preds = %if.end865, %if.then847
  %514 = load %struct.shfunc*, %struct.shfunc** %shf, align 4
  %redir867 = getelementptr inbounds %struct.shfunc, %struct.shfunc* %514, i32 0, i32 4
  %515 = load %struct.eprog*, %struct.eprog** %redir867, align 4
  %tobool868 = icmp ne %struct.eprog* %515, null
  br i1 %tobool868, label %if.then869, label %if.end895

if.then869:                                       ; preds = %if.end866
  %516 = load %struct.shfunc*, %struct.shfunc** %shf, align 4
  %redir872 = getelementptr inbounds %struct.shfunc, %struct.shfunc* %516, i32 0, i32 4
  %517 = load %struct.eprog*, %struct.eprog** %redir872, align 4
  %prog873 = getelementptr inbounds %struct.estate, %struct.estate* %s870, i32 0, i32 0
  store %struct.eprog* %517, %struct.eprog** %prog873, align 4
  %518 = load %struct.shfunc*, %struct.shfunc** %shf, align 4
  %redir874 = getelementptr inbounds %struct.shfunc, %struct.shfunc* %518, i32 0, i32 4
  %519 = load %struct.eprog*, %struct.eprog** %redir874, align 4
  %prog875 = getelementptr inbounds %struct.eprog, %struct.eprog* %519, i32 0, i32 5
  %520 = load i32*, i32** %prog875, align 4
  %pc876 = getelementptr inbounds %struct.estate, %struct.estate* %s870, i32 0, i32 1
  store i32* %520, i32** %pc876, align 4
  %521 = load %struct.shfunc*, %struct.shfunc** %shf, align 4
  %redir877 = getelementptr inbounds %struct.shfunc, %struct.shfunc* %521, i32 0, i32 4
  %522 = load %struct.eprog*, %struct.eprog** %redir877, align 4
  %strs = getelementptr inbounds %struct.eprog, %struct.eprog* %522, i32 0, i32 6
  %523 = load i8*, i8** %strs, align 4
  %strs878 = getelementptr inbounds %struct.estate, %struct.estate* %s870, i32 0, i32 2
  store i8* %523, i8** %strs878, align 4
  %call879 = call %union.linkroot* @ecgetredirs(%struct.estate* %s870)
  store %union.linkroot* %call879, %union.linkroot** %redir2871, align 4
  %524 = load %union.linkroot*, %union.linkroot** %redir, align 4
  %tobool880 = icmp ne %union.linkroot* %524, null
  br i1 %tobool880, label %if.else882, label %if.then881

if.then881:                                       ; preds = %if.then869
  %525 = load %union.linkroot*, %union.linkroot** %redir2871, align 4
  store %union.linkroot* %525, %union.linkroot** %redir, align 4
  br label %if.end894

if.else882:                                       ; preds = %if.then869
  br label %while.cond883

while.cond883:                                    ; preds = %while.body888, %if.else882
  %526 = load %union.linkroot*, %union.linkroot** %redir2871, align 4
  %list884 = bitcast %union.linkroot* %526 to %struct.linklist*
  %first885 = getelementptr inbounds %struct.linklist, %struct.linklist* %list884, i32 0, i32 0
  %527 = load %struct.linknode*, %struct.linknode** %first885, align 4
  %cmp886 = icmp ne %struct.linknode* %527, null
  br i1 %cmp886, label %while.body888, label %while.end893

while.body888:                                    ; preds = %while.cond883
  %528 = load %union.linkroot*, %union.linkroot** %redir, align 4
  %529 = load %union.linkroot*, %union.linkroot** %redir, align 4
  %list889 = bitcast %union.linkroot* %529 to %struct.linklist*
  %last890 = getelementptr inbounds %struct.linklist, %struct.linklist* %list889, i32 0, i32 1
  %530 = load %struct.linknode*, %struct.linknode** %last890, align 4
  %531 = load %union.linkroot*, %union.linkroot** %redir2871, align 4
  %call891 = call i8* @ugetnode(%union.linkroot* %531)
  %call892 = call %struct.linknode* @insertlinknode(%union.linkroot* %528, %struct.linknode* %530, i8* %call891)
  br label %while.cond883

while.end893:                                     ; preds = %while.cond883
  br label %if.end894

if.end894:                                        ; preds = %while.end893, %if.then881
  br label %if.end895

if.end895:                                        ; preds = %if.end894, %if.end866
  br label %if.end896

if.end896:                                        ; preds = %if.end895, %lor.lhs.false842
  br label %if.end897

if.end897:                                        ; preds = %if.end896, %if.end839
  %532 = load i32, i32* @errflag, align 4
  %tobool898 = icmp ne i32 %532, 0
  br i1 %tobool898, label %if.then899, label %if.end908

if.then899:                                       ; preds = %if.end897
  store i32 1, i32* @lastval, align 4
  %533 = load i32, i32* %oautocont, align 4
  %cmp900 = icmp sge i32 %533, 0
  br i1 %cmp900, label %if.then902, label %if.end904

if.then902:                                       ; preds = %if.then899
  %534 = load i32, i32* %oautocont, align 4
  %conv903 = trunc i32 %534 to i8
  store i8 %conv903, i8* getelementptr inbounds ([181 x i8], [181 x i8]* @opts, i32 0, i32 8), align 1
  br label %if.end904

if.end904:                                        ; preds = %if.then902, %if.then899
  %535 = load i32, i32* %forked, align 4
  %tobool905 = icmp ne i32 %535, 0
  br i1 %tobool905, label %if.then906, label %if.end907

if.then906:                                       ; preds = %if.end904
  %536 = load i32, i32* @lastval, align 4
  call void @_exit(i32 %536) #4
  unreachable

if.end907:                                        ; preds = %if.end904
  br label %if.end2286

if.end908:                                        ; preds = %if.end897
  %537 = load i32, i32* %type, align 4
  %cmp909 = icmp eq i32 %537, 6
  br i1 %cmp909, label %land.lhs.true914, label %lor.lhs.false911

lor.lhs.false911:                                 ; preds = %if.end908
  %538 = load i32, i32* %type, align 4
  %cmp912 = icmp eq i32 %538, 7
  br i1 %cmp912, label %land.lhs.true914, label %if.end1027

land.lhs.true914:                                 ; preds = %lor.lhs.false911, %if.end908
  %539 = load i32, i32* %nullexec, align 4
  %tobool915 = icmp ne i32 %539, 0
  br i1 %tobool915, label %if.end1027, label %if.then916

if.then916:                                       ; preds = %land.lhs.true914
  %540 = load i8, i8* getelementptr inbounds ([181 x i8], [181 x i8]* @opts, i32 0, i32 7), align 1
  %conv918 = sext i8 %540 to i32
  %tobool919 = icmp ne i32 %conv918, 0
  br i1 %tobool919, label %land.lhs.true920, label %land.end948

land.lhs.true920:                                 ; preds = %if.then916
  %541 = load i8, i8* getelementptr inbounds ([181 x i8], [181 x i8]* @opts, i32 0, i32 161), align 1
  %conv921 = sext i8 %541 to i32
  %tobool922 = icmp ne i32 %conv921, 0
  br i1 %tobool922, label %land.lhs.true923, label %land.end948

land.lhs.true923:                                 ; preds = %land.lhs.true920
  %542 = load %union.linkroot*, %union.linkroot** %redir, align 4
  %tobool924 = icmp ne %union.linkroot* %542, null
  br i1 %tobool924, label %lor.lhs.false925, label %land.lhs.true930

lor.lhs.false925:                                 ; preds = %land.lhs.true923
  %543 = load %union.linkroot*, %union.linkroot** %redir, align 4
  %list926 = bitcast %union.linkroot* %543 to %struct.linklist*
  %first927 = getelementptr inbounds %struct.linklist, %struct.linklist* %list926, i32 0, i32 0
  %544 = load %struct.linknode*, %struct.linknode** %first927, align 4
  %cmp928 = icmp eq %struct.linknode* %544, null
  br i1 %cmp928, label %land.lhs.true930, label %land.end948

land.lhs.true930:                                 ; preds = %lor.lhs.false925, %land.lhs.true923
  %545 = load %union.linkroot*, %union.linkroot** %args, align 4
  %tobool931 = icmp ne %union.linkroot* %545, null
  br i1 %tobool931, label %land.lhs.true932, label %land.end948

land.lhs.true932:                                 ; preds = %land.lhs.true930
  %546 = load %union.linkroot*, %union.linkroot** %args, align 4
  %list933 = bitcast %union.linkroot* %546 to %struct.linklist*
  %first934 = getelementptr inbounds %struct.linklist, %struct.linklist* %list933, i32 0, i32 0
  %547 = load %struct.linknode*, %struct.linknode** %first934, align 4
  %cmp935 = icmp eq %struct.linknode* %547, null
  br i1 %cmp935, label %land.end948, label %land.lhs.true937

land.lhs.true937:                                 ; preds = %land.lhs.true932
  %548 = load %union.linkroot*, %union.linkroot** %args, align 4
  %list938 = bitcast %union.linkroot* %548 to %struct.linklist*
  %first939 = getelementptr inbounds %struct.linklist, %struct.linklist* %list938, i32 0, i32 0
  %549 = load %struct.linknode*, %struct.linknode** %first939, align 4
  %next940 = getelementptr inbounds %struct.linknode, %struct.linknode* %549, i32 0, i32 0
  %550 = load %struct.linknode*, %struct.linknode** %next940, align 4
  %tobool941 = icmp ne %struct.linknode* %550, null
  br i1 %tobool941, label %land.end948, label %land.rhs942

land.rhs942:                                      ; preds = %land.lhs.true937
  %551 = load %union.linkroot*, %union.linkroot** %args, align 4
  %list943 = bitcast %union.linkroot* %551 to %struct.linklist*
  %first944 = getelementptr inbounds %struct.linklist, %struct.linklist* %list943, i32 0, i32 0
  %552 = load %struct.linknode*, %struct.linknode** %first944, align 4
  %dat945 = getelementptr inbounds %struct.linknode, %struct.linknode* %552, i32 0, i32 2
  %553 = load i8*, i8** %dat945, align 4
  %554 = load i8, i8* %553, align 1
  %conv946 = sext i8 %554 to i32
  %tobool947 = icmp ne i32 %conv946, 0
  br label %land.end948

land.end948:                                      ; preds = %land.rhs942, %land.lhs.true937, %land.lhs.true932, %land.lhs.true930, %lor.lhs.false925, %land.lhs.true920, %if.then916
  %555 = phi i1 [ false, %land.lhs.true937 ], [ false, %land.lhs.true932 ], [ false, %land.lhs.true930 ], [ false, %lor.lhs.false925 ], [ false, %land.lhs.true920 ], [ false, %if.then916 ], [ %tobool947, %land.rhs942 ]
  %land.ext = zext i1 %555 to i32
  %conv949 = trunc i32 %land.ext to i8
  store i8 %conv949, i8* %trycd, align 1
  %556 = load %struct.hashnode*, %struct.hashnode** %hn, align 4
  %tobool950 = icmp ne %struct.hashnode* %556, null
  br i1 %tobool950, label %if.end1000, label %if.then951

if.then951:                                       ; preds = %land.end948
  %557 = load %union.linkroot*, %union.linkroot** %args, align 4
  %list953 = bitcast %union.linkroot* %557 to %struct.linklist*
  %first954 = getelementptr inbounds %struct.linklist, %struct.linklist* %list953, i32 0, i32 0
  %558 = load %struct.linknode*, %struct.linknode** %first954, align 4
  %dat955 = getelementptr inbounds %struct.linknode, %struct.linknode* %558, i32 0, i32 2
  %559 = load i8*, i8** %dat955, align 4
  store i8* %559, i8** %cmdarg952, align 4
  %560 = load i8**, i8*** @pathchecked, align 4
  store i8** %560, i8*** %checkpath, align 4
  %561 = load i8, i8* getelementptr inbounds ([181 x i8], [181 x i8]* @opts, i32 0, i32 68), align 1
  %conv956 = sext i8 %561 to i32
  store i32 %conv956, i32* %dohashcmd, align 4
  %562 = load %struct.hashtable*, %struct.hashtable** @cmdnamtab, align 4
  %getnode957 = getelementptr inbounds %struct.hashtable, %struct.hashtable* %562, i32 0, i32 9
  %563 = load %struct.hashnode* (%struct.hashtable*, i8*)*, %struct.hashnode* (%struct.hashtable*, i8*)** %getnode957, align 4
  %564 = load %struct.hashtable*, %struct.hashtable** @cmdnamtab, align 4
  %565 = load i8*, i8** %cmdarg952, align 4
  %call958 = call %struct.hashnode* %563(%struct.hashtable* %564, i8* %565)
  store %struct.hashnode* %call958, %struct.hashnode** %hn, align 4
  %566 = load %struct.hashnode*, %struct.hashnode** %hn, align 4
  %tobool959 = icmp ne %struct.hashnode* %566, null
  br i1 %tobool959, label %land.lhs.true960, label %if.end974

land.lhs.true960:                                 ; preds = %if.then951
  %567 = load i8, i8* %trycd, align 1
  %conv961 = sext i8 %567 to i32
  %tobool962 = icmp ne i32 %conv961, 0
  br i1 %tobool962, label %land.lhs.true963, label %if.end974

land.lhs.true963:                                 ; preds = %land.lhs.true960
  %568 = load %struct.hashnode*, %struct.hashnode** %hn, align 4
  %569 = bitcast %struct.hashnode* %568 to %struct.cmdnam*
  %call964 = call i32 @isreallycom(%struct.cmdnam* %569)
  %tobool965 = icmp ne i32 %call964, 0
  br i1 %tobool965, label %if.end974, label %if.then966

if.then966:                                       ; preds = %land.lhs.true963
  %570 = load %struct.hashnode*, %struct.hashnode** %hn, align 4
  %571 = bitcast %struct.hashnode* %570 to %struct.cmdnam*
  %node967 = getelementptr inbounds %struct.cmdnam, %struct.cmdnam* %571, i32 0, i32 0
  %flags968 = getelementptr inbounds %struct.hashnode, %struct.hashnode* %node967, i32 0, i32 2
  %572 = load i32, i32* %flags968, align 4
  %and969 = and i32 %572, 2
  %tobool970 = icmp ne i32 %and969, 0
  br i1 %tobool970, label %if.end972, label %if.then971

if.then971:                                       ; preds = %if.then966
  %573 = load i8**, i8*** @path, align 4
  store i8** %573, i8*** %checkpath, align 4
  store i32 1, i32* %dohashcmd, align 4
  br label %if.end972

if.end972:                                        ; preds = %if.then971, %if.then966
  %574 = load %struct.hashtable*, %struct.hashtable** @cmdnamtab, align 4
  %removenode = getelementptr inbounds %struct.hashtable, %struct.hashtable* %574, i32 0, i32 11
  %575 = load %struct.hashnode* (%struct.hashtable*, i8*)*, %struct.hashnode* (%struct.hashtable*, i8*)** %removenode, align 4
  %576 = load %struct.hashtable*, %struct.hashtable** @cmdnamtab, align 4
  %577 = load i8*, i8** %cmdarg952, align 4
  %call973 = call %struct.hashnode* %575(%struct.hashtable* %576, i8* %577)
  %578 = load %struct.hashtable*, %struct.hashtable** @cmdnamtab, align 4
  %freenode = getelementptr inbounds %struct.hashtable, %struct.hashtable* %578, i32 0, i32 14
  %579 = load void (%struct.hashnode*)*, void (%struct.hashnode*)** %freenode, align 4
  %580 = load %struct.hashnode*, %struct.hashnode** %hn, align 4
  call void %579(%struct.hashnode* %580)
  store %struct.hashnode* null, %struct.hashnode** %hn, align 4
  br label %if.end974

if.end974:                                        ; preds = %if.end972, %land.lhs.true963, %land.lhs.true960, %if.then951
  %581 = load %struct.hashnode*, %struct.hashnode** %hn, align 4
  %tobool975 = icmp ne %struct.hashnode* %581, null
  br i1 %tobool975, label %if.end999, label %land.lhs.true976

land.lhs.true976:                                 ; preds = %if.end974
  %582 = load i32, i32* %dohashcmd, align 4
  %tobool977 = icmp ne i32 %582, 0
  br i1 %tobool977, label %land.lhs.true978, label %if.end999

land.lhs.true978:                                 ; preds = %land.lhs.true976
  %583 = load i8*, i8** %cmdarg952, align 4
  %call979 = call i32 @strcmp(i8* %583, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.61, i32 0, i32 0))
  %tobool980 = icmp ne i32 %call979, 0
  br i1 %tobool980, label %if.then981, label %if.end999

if.then981:                                       ; preds = %land.lhs.true978
  %584 = load i8*, i8** %cmdarg952, align 4
  store i8* %584, i8** %s917, align 4
  br label %for.cond982

for.cond982:                                      ; preds = %for.inc992, %if.then981
  %585 = load i8*, i8** %s917, align 4
  %586 = load i8, i8* %585, align 1
  %conv983 = sext i8 %586 to i32
  %tobool984 = icmp ne i32 %conv983, 0
  br i1 %tobool984, label %land.rhs985, label %land.end989

land.rhs985:                                      ; preds = %for.cond982
  %587 = load i8*, i8** %s917, align 4
  %588 = load i8, i8* %587, align 1
  %conv986 = sext i8 %588 to i32
  %cmp987 = icmp ne i32 %conv986, 47
  br label %land.end989

land.end989:                                      ; preds = %land.rhs985, %for.cond982
  %589 = phi i1 [ false, %for.cond982 ], [ %cmp987, %land.rhs985 ]
  br i1 %589, label %for.body991, label %for.end994

for.body991:                                      ; preds = %land.end989
  br label %for.inc992

for.inc992:                                       ; preds = %for.body991
  %590 = load i8*, i8** %s917, align 4
  %incdec.ptr993 = getelementptr inbounds i8, i8* %590, i32 1
  store i8* %incdec.ptr993, i8** %s917, align 4
  br label %for.cond982

for.end994:                                       ; preds = %land.end989
  %591 = load i8*, i8** %s917, align 4
  %592 = load i8, i8* %591, align 1
  %tobool995 = icmp ne i8 %592, 0
  br i1 %tobool995, label %if.end998, label %if.then996

if.then996:                                       ; preds = %for.end994
  %593 = load i8*, i8** %cmdarg952, align 4
  %594 = load i8**, i8*** %checkpath, align 4
  %call997 = call %struct.cmdnam* @hashcmd(i8* %593, i8** %594)
  %595 = bitcast %struct.cmdnam* %call997 to %struct.hashnode*
  store %struct.hashnode* %595, %struct.hashnode** %hn, align 4
  br label %if.end998

if.end998:                                        ; preds = %if.then996, %for.end994
  br label %if.end999

if.end999:                                        ; preds = %if.end998, %land.lhs.true978, %land.lhs.true976, %if.end974
  br label %if.end1000

if.end1000:                                       ; preds = %if.end999, %land.end948
  %596 = load %struct.hashnode*, %struct.hashnode** %hn, align 4
  %tobool1001 = icmp ne %struct.hashnode* %596, null
  br i1 %tobool1001, label %if.end1026, label %land.lhs.true1002

land.lhs.true1002:                                ; preds = %if.end1000
  %597 = load i8, i8* %trycd, align 1
  %conv1003 = sext i8 %597 to i32
  %tobool1004 = icmp ne i32 %conv1003, 0
  br i1 %tobool1004, label %land.lhs.true1005, label %if.end1026

land.lhs.true1005:                                ; preds = %land.lhs.true1002
  %598 = load %union.linkroot*, %union.linkroot** %args, align 4
  %list1006 = bitcast %union.linkroot* %598 to %struct.linklist*
  %first1007 = getelementptr inbounds %struct.linklist, %struct.linklist* %list1006, i32 0, i32 0
  %599 = load %struct.linknode*, %struct.linknode** %first1007, align 4
  %dat1008 = getelementptr inbounds %struct.linknode, %struct.linknode* %599, i32 0, i32 2
  %600 = load i8*, i8** %dat1008, align 4
  %call1009 = call i8* @cancd(i8* %600)
  store i8* %call1009, i8** %s917, align 4
  %tobool1010 = icmp ne i8* %call1009, null
  br i1 %tobool1010, label %if.then1011, label %if.end1026

if.then1011:                                      ; preds = %land.lhs.true1005
  %601 = load i8*, i8** %s917, align 4
  %602 = load %union.linkroot*, %union.linkroot** %args, align 4
  %list1012 = bitcast %union.linkroot* %602 to %struct.linklist*
  %first1013 = getelementptr inbounds %struct.linklist, %struct.linklist* %list1012, i32 0, i32 0
  %603 = load %struct.linknode*, %struct.linknode** %first1013, align 4
  %dat1014 = getelementptr inbounds %struct.linknode, %struct.linknode* %603, i32 0, i32 2
  store i8* %601, i8** %dat1014, align 4
  %604 = load %union.linkroot*, %union.linkroot** %args, align 4
  %605 = load %union.linkroot*, %union.linkroot** %args, align 4
  %node1015 = bitcast %union.linkroot* %605 to %struct.linknode*
  %call1016 = call i8* @dupstring(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.62, i32 0, i32 0))
  %call1017 = call %struct.linknode* @insertlinknode(%union.linkroot* %604, %struct.linknode* %node1015, i8* %call1016)
  %606 = load %union.linkroot*, %union.linkroot** %args, align 4
  %607 = load %union.linkroot*, %union.linkroot** %args, align 4
  %node1018 = bitcast %union.linkroot* %607 to %struct.linknode*
  %call1019 = call i8* @dupstring(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.63, i32 0, i32 0))
  %call1020 = call %struct.linknode* @insertlinknode(%union.linkroot* %606, %struct.linknode* %node1018, i8* %call1019)
  %608 = load %struct.hashtable*, %struct.hashtable** @builtintab, align 4
  %getnode1021 = getelementptr inbounds %struct.hashtable, %struct.hashtable* %608, i32 0, i32 9
  %609 = load %struct.hashnode* (%struct.hashtable*, i8*)*, %struct.hashnode* (%struct.hashtable*, i8*)** %getnode1021, align 4
  %610 = load %struct.hashtable*, %struct.hashtable** @builtintab, align 4
  %call1022 = call %struct.hashnode* %609(%struct.hashtable* %610, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.63, i32 0, i32 0))
  store %struct.hashnode* %call1022, %struct.hashnode** %hn, align 4
  %tobool1023 = icmp ne %struct.hashnode* %call1022, null
  br i1 %tobool1023, label %if.then1024, label %if.end1025

if.then1024:                                      ; preds = %if.then1011
  store i32 1, i32* %is_builtin, align 4
  br label %if.end1025

if.end1025:                                       ; preds = %if.then1024, %if.then1011
  br label %if.end1026

if.end1026:                                       ; preds = %if.end1025, %land.lhs.true1005, %land.lhs.true1002, %if.end1000
  br label %if.end1027

if.end1027:                                       ; preds = %if.end1026, %land.lhs.true914, %lor.lhs.false911
  %611 = load i32, i32* %is_builtin, align 4
  %tobool1028 = icmp ne i32 %611, 0
  br i1 %tobool1028, label %lor.end1036, label %lor.lhs.false1029

lor.lhs.false1029:                                ; preds = %if.end1027
  %612 = load i32, i32* %is_shfunc, align 4
  %tobool1030 = icmp ne i32 %612, 0
  br i1 %tobool1030, label %lor.end1036, label %lor.lhs.false1031

lor.lhs.false1031:                                ; preds = %lor.lhs.false1029
  %613 = load i32, i32* %nullexec, align 4
  %tobool1032 = icmp ne i32 %613, 0
  br i1 %tobool1032, label %lor.end1036, label %lor.rhs1033

lor.rhs1033:                                      ; preds = %lor.lhs.false1031
  %614 = load i32, i32* %type, align 4
  %cmp1034 = icmp sge i32 %614, 9
  br label %lor.end1036

lor.end1036:                                      ; preds = %lor.rhs1033, %lor.lhs.false1031, %lor.lhs.false1029, %if.end1027
  %615 = phi i1 [ true, %lor.lhs.false1031 ], [ true, %lor.lhs.false1029 ], [ true, %if.end1027 ], [ %cmp1034, %lor.rhs1033 ]
  %lor.ext = zext i1 %615 to i32
  store i32 %lor.ext, i32* %is_cursh, align 4
  %616 = load i32, i32* %forked, align 4
  %tobool1037 = icmp ne i32 %616, 0
  br i1 %tobool1037, label %if.end1089, label %if.then1038

if.then1038:                                      ; preds = %lor.end1036
  %617 = load i32, i32* %do_exec, align 4
  %tobool1039 = icmp ne i32 %617, 0
  br i1 %tobool1039, label %if.else1064, label %land.lhs.true1040

land.lhs.true1040:                                ; preds = %if.then1038
  %618 = load i32, i32* %is_builtin, align 4
  %tobool1041 = icmp ne i32 %618, 0
  br i1 %tobool1041, label %land.lhs.true1044, label %lor.lhs.false1042

lor.lhs.false1042:                                ; preds = %land.lhs.true1040
  %619 = load i32, i32* %is_shfunc, align 4
  %tobool1043 = icmp ne i32 %619, 0
  br i1 %tobool1043, label %land.lhs.true1044, label %lor.lhs.false1046

land.lhs.true1044:                                ; preds = %lor.lhs.false1042, %land.lhs.true1040
  %620 = load i32, i32* %output.addr, align 4
  %tobool1045 = icmp ne i32 %620, 0
  br i1 %tobool1045, label %if.then1058, label %lor.lhs.false1046

lor.lhs.false1046:                                ; preds = %land.lhs.true1044, %lor.lhs.false1042
  %621 = load i32, i32* %is_cursh, align 4
  %tobool1047 = icmp ne i32 %621, 0
  br i1 %tobool1047, label %if.else1064, label %land.lhs.true1048

land.lhs.true1048:                                ; preds = %lor.lhs.false1046
  %622 = load i32, i32* %last1.addr, align 4
  %cmp1049 = icmp ne i32 %622, 1
  br i1 %cmp1049, label %if.then1058, label %lor.lhs.false1051

lor.lhs.false1051:                                ; preds = %land.lhs.true1048
  %623 = load i32, i32* @nsigtrapped, align 4
  %tobool1052 = icmp ne i32 %623, 0
  br i1 %tobool1052, label %if.then1058, label %lor.lhs.false1053

lor.lhs.false1053:                                ; preds = %lor.lhs.false1051
  %call1054 = call i32 @havefiles()
  %tobool1055 = icmp ne i32 %call1054, 0
  br i1 %tobool1055, label %if.then1058, label %lor.lhs.false1056

lor.lhs.false1056:                                ; preds = %lor.lhs.false1053
  %624 = load i32, i32* @fdtable_flocks, align 4
  %tobool1057 = icmp ne i32 %624, 0
  br i1 %tobool1057, label %if.then1058, label %if.else1064

if.then1058:                                      ; preds = %lor.lhs.false1056, %lor.lhs.false1053, %lor.lhs.false1051, %land.lhs.true1048, %land.lhs.true1044
  %625 = load %struct.estate*, %struct.estate** %state.addr, align 4
  %626 = load i32, i32* %how.addr, align 4
  %627 = load i32, i32* %type, align 4
  %628 = load i32*, i32** %varspc, align 4
  %629 = load i8*, i8** %text, align 4
  %630 = load i32, i32* %oautocont, align 4
  %631 = load i32, i32* %close_if_forked.addr, align 4
  %call1059 = call i32 @execcmd_fork(%struct.estate* %625, i32 %626, i32 %627, i32* %628, %union.linkroot** %filelist, i8* %629, i32 %630, i32 %631)
  switch i32 %call1059, label %sw.default1062 [
    i32 -1, label %sw.bb1060
    i32 0, label %sw.bb1061
  ]

sw.bb1060:                                        ; preds = %if.then1058
  br label %fatal

sw.bb1061:                                        ; preds = %if.then1058
  br label %sw.epilog1063

sw.default1062:                                   ; preds = %if.then1058
  br label %if.end2286

sw.epilog1063:                                    ; preds = %sw.bb1061
  store i32 1, i32* %forked, align 4
  br label %if.end1088

if.else1064:                                      ; preds = %lor.lhs.false1056, %lor.lhs.false1046, %if.then1038
  %632 = load i32, i32* %is_cursh, align 4
  %tobool1065 = icmp ne i32 %632, 0
  br i1 %tobool1065, label %if.then1066, label %if.else1082

if.then1066:                                      ; preds = %if.else1064
  %633 = load %struct.job*, %struct.job** @jobtab, align 4
  %634 = load i32, i32* @thisjob, align 4
  %arrayidx1067 = getelementptr inbounds %struct.job, %struct.job* %633, i32 %634
  %stat = getelementptr inbounds %struct.job, %struct.job* %arrayidx1067, i32 0, i32 2
  %635 = load i32, i32* %stat, align 4
  %or1068 = or i32 %635, 1024
  store i32 %or1068, i32* %stat, align 4
  %636 = load %struct.job*, %struct.job** @jobtab, align 4
  %637 = load i32, i32* @thisjob, align 4
  %arrayidx1069 = getelementptr inbounds %struct.job, %struct.job* %636, i32 %637
  %procs = getelementptr inbounds %struct.job, %struct.job* %arrayidx1069, i32 0, i32 4
  %638 = load %struct.process*, %struct.process** %procs, align 4
  %tobool1070 = icmp ne %struct.process* %638, null
  br i1 %tobool1070, label %if.end1075, label %if.then1071

if.then1071:                                      ; preds = %if.then1066
  %639 = load %struct.job*, %struct.job** @jobtab, align 4
  %640 = load i32, i32* @thisjob, align 4
  %arrayidx1072 = getelementptr inbounds %struct.job, %struct.job* %639, i32 %640
  %stat1073 = getelementptr inbounds %struct.job, %struct.job* %arrayidx1072, i32 0, i32 2
  %641 = load i32, i32* %stat1073, align 4
  %or1074 = or i32 %641, 32
  store i32 %or1074, i32* %stat1073, align 4
  br label %if.end1075

if.end1075:                                       ; preds = %if.then1071, %if.then1066
  %642 = load i32, i32* %is_builtin, align 4
  %tobool1076 = icmp ne i32 %642, 0
  br i1 %tobool1076, label %if.then1077, label %if.end1081

if.then1077:                                      ; preds = %if.end1075
  %643 = load %struct.job*, %struct.job** @jobtab, align 4
  %644 = load i32, i32* @thisjob, align 4
  %arrayidx1078 = getelementptr inbounds %struct.job, %struct.job* %643, i32 %644
  %stat1079 = getelementptr inbounds %struct.job, %struct.job* %arrayidx1078, i32 0, i32 2
  %645 = load i32, i32* %stat1079, align 4
  %or1080 = or i32 %645, 16384
  store i32 %or1080, i32* %stat1079, align 4
  br label %if.end1081

if.end1081:                                       ; preds = %if.then1077, %if.end1075
  br label %if.end1087

if.else1082:                                      ; preds = %if.else1064
  store i32 1, i32* %is_exec, align 4
  %646 = load i32, i32* %type, align 4
  %cmp1083 = icmp eq i32 %646, 8
  br i1 %cmp1083, label %if.then1085, label %if.end1086

if.then1085:                                      ; preds = %if.else1082
  store i32 1, i32* %forked, align 4
  br label %if.end1086

if.end1086:                                       ; preds = %if.then1085, %if.else1082
  br label %if.end1087

if.end1087:                                       ; preds = %if.end1086, %if.end1081
  br label %if.end1088

if.end1088:                                       ; preds = %if.end1087, %sw.epilog1063
  br label %if.end1089

if.end1089:                                       ; preds = %if.end1088, %lor.end1036
  %647 = load i32, i32* %cflags, align 4
  %and1090 = and i32 %647, 1024
  %tobool1091 = icmp ne i32 %and1090, 0
  %lnot1092 = xor i1 %tobool1091, true
  %lnot.ext1093 = zext i1 %lnot1092 to i32
  store i32 %lnot.ext1093, i32* @esglob, align 4
  br i1 %lnot1092, label %land.lhs.true1094, label %if.end1100

land.lhs.true1094:                                ; preds = %if.end1089
  %648 = load %union.linkroot*, %union.linkroot** %args, align 4
  %tobool1095 = icmp ne %union.linkroot* %648, null
  br i1 %tobool1095, label %land.lhs.true1096, label %if.end1100

land.lhs.true1096:                                ; preds = %land.lhs.true1094
  %649 = load %struct.execcmd_params*, %struct.execcmd_params** %eparams.addr, align 4
  %htok1097 = getelementptr inbounds %struct.execcmd_params, %struct.execcmd_params* %649, i32 0, i32 7
  %650 = load i32, i32* %htok1097, align 4
  %tobool1098 = icmp ne i32 %650, 0
  br i1 %tobool1098, label %if.then1099, label %if.end1100

if.then1099:                                      ; preds = %land.lhs.true1096
  %651 = load %union.linkroot*, %union.linkroot** %args, align 4
  store %union.linkroot* %651, %union.linkroot** %oargs, align 4
  %652 = load %union.linkroot*, %union.linkroot** %args, align 4
  call void @globlist(%union.linkroot* %652, i32 0)
  %653 = load %union.linkroot*, %union.linkroot** %oargs, align 4
  store %union.linkroot* %653, %union.linkroot** %args, align 4
  br label %if.end1100

if.end1100:                                       ; preds = %if.then1099, %land.lhs.true1096, %land.lhs.true1094, %if.end1089
  %654 = load i32, i32* @errflag, align 4
  %tobool1101 = icmp ne i32 %654, 0
  br i1 %tobool1101, label %if.then1102, label %if.end1103

if.then1102:                                      ; preds = %if.end1100
  store i32 1, i32* @lastval, align 4
  br label %err

if.end1103:                                       ; preds = %if.end1100
  %655 = load %struct._IO_FILE*, %struct._IO_FILE** @xtrerr, align 4
  %call1104 = call i32 @fflush(%struct._IO_FILE* %655)
  %656 = load i8, i8* getelementptr inbounds ([181 x i8], [181 x i8]* @opts, i32 0, i32 178), align 1
  %conv1105 = sext i8 %656 to i32
  %tobool1106 = icmp ne i32 %conv1105, 0
  br i1 %tobool1106, label %land.lhs.true1107, label %if.end1126

land.lhs.true1107:                                ; preds = %if.end1103
  %657 = load %struct._IO_FILE*, %struct._IO_FILE** @xtrerr, align 4
  %658 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 4
  %cmp1108 = icmp eq %struct._IO_FILE* %657, %658
  br i1 %cmp1108, label %land.lhs.true1110, label %if.end1126

land.lhs.true1110:                                ; preds = %land.lhs.true1107
  %659 = load i32, i32* %type, align 4
  %cmp1111 = icmp slt i32 %659, 8
  br i1 %cmp1111, label %if.then1116, label %lor.lhs.false1113

lor.lhs.false1113:                                ; preds = %land.lhs.true1110
  %660 = load i32, i32* %type, align 4
  %cmp1114 = icmp eq i32 %660, 10
  br i1 %cmp1114, label %if.then1116, label %if.end1126

if.then1116:                                      ; preds = %lor.lhs.false1113, %land.lhs.true1110
  %661 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 4
  %call1117 = call i32 @fileno(%struct._IO_FILE* %661)
  %call1118 = call i32 @dup(i32 %call1117)
  %call1119 = call i32 @movefd(i32 %call1118)
  %call1120 = call %struct._IO_FILE* @fdopen(i32 %call1119, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.64, i32 0, i32 0))
  store %struct._IO_FILE* %call1120, %struct._IO_FILE** %newxtrerr, align 4
  %tobool1121 = icmp ne %struct._IO_FILE* %call1120, null
  br i1 %tobool1121, label %if.then1122, label %if.end1125

if.then1122:                                      ; preds = %if.then1116
  %662 = load %struct._IO_FILE*, %struct._IO_FILE** %newxtrerr, align 4
  store %struct._IO_FILE* %662, %struct._IO_FILE** @xtrerr, align 4
  %663 = load i8*, i8** @fdtable, align 4
  %664 = load %struct._IO_FILE*, %struct._IO_FILE** @xtrerr, align 4
  %call1123 = call i32 @fileno(%struct._IO_FILE* %664)
  %arrayidx1124 = getelementptr inbounds i8, i8* %663, i32 %call1123
  store i8 4, i8* %arrayidx1124, align 1
  br label %if.end1125

if.end1125:                                       ; preds = %if.then1122, %if.then1116
  br label %if.end1126

if.end1126:                                       ; preds = %if.end1125, %lor.lhs.false1113, %land.lhs.true1107, %if.end1103
  %665 = load i32, i32* %input.addr, align 4
  %tobool1127 = icmp ne i32 %665, 0
  br i1 %tobool1127, label %if.then1128, label %if.end1130

if.then1128:                                      ; preds = %if.end1126
  %666 = load i32, i32* %forked, align 4
  %arraydecay = getelementptr inbounds [10 x i32], [10 x i32]* %save, i32 0, i32 0
  %arraydecay1129 = getelementptr inbounds [10 x %struct.multio*], [10 x %struct.multio*]* %mfds, i32 0, i32 0
  %667 = load i32, i32* %input.addr, align 4
  call void @addfd(i32 %666, i32* %arraydecay, %struct.multio** %arraydecay1129, i32 0, i32 %667, i32 0, i8* null)
  br label %if.end1130

if.end1130:                                       ; preds = %if.then1128, %if.end1126
  %668 = load i32, i32* %output.addr, align 4
  %tobool1131 = icmp ne i32 %668, 0
  br i1 %tobool1131, label %if.then1132, label %if.end1135

if.then1132:                                      ; preds = %if.end1130
  %669 = load i32, i32* %forked, align 4
  %arraydecay1133 = getelementptr inbounds [10 x i32], [10 x i32]* %save, i32 0, i32 0
  %arraydecay1134 = getelementptr inbounds [10 x %struct.multio*], [10 x %struct.multio*]* %mfds, i32 0, i32 0
  %670 = load i32, i32* %output.addr, align 4
  call void @addfd(i32 %669, i32* %arraydecay1133, %struct.multio** %arraydecay1134, i32 1, i32 %670, i32 1, i8* null)
  br label %if.end1135

if.end1135:                                       ; preds = %if.then1132, %if.end1130
  %671 = load %union.linkroot*, %union.linkroot** %redir, align 4
  %tobool1136 = icmp ne %union.linkroot* %671, null
  br i1 %tobool1136, label %if.then1137, label %if.end1138

if.then1137:                                      ; preds = %if.end1135
  %672 = load %union.linkroot*, %union.linkroot** %redir, align 4
  %673 = load i32, i32* %nullexec, align 4
  call void @spawnpipes(%union.linkroot* %672, i32 %673)
  br label %if.end1138

if.end1138:                                       ; preds = %if.then1137, %if.end1135
  br label %while.cond1139

while.cond1139:                                   ; preds = %if.end1684, %if.then1245, %if.then1215, %if.end1138
  %674 = load %union.linkroot*, %union.linkroot** %redir, align 4
  %tobool1140 = icmp ne %union.linkroot* %674, null
  br i1 %tobool1140, label %land.rhs1141, label %land.end1146

land.rhs1141:                                     ; preds = %while.cond1139
  %675 = load %union.linkroot*, %union.linkroot** %redir, align 4
  %list1142 = bitcast %union.linkroot* %675 to %struct.linklist*
  %first1143 = getelementptr inbounds %struct.linklist, %struct.linklist* %list1142, i32 0, i32 0
  %676 = load %struct.linknode*, %struct.linknode** %first1143, align 4
  %cmp1144 = icmp ne %struct.linknode* %676, null
  br label %land.end1146

land.end1146:                                     ; preds = %land.rhs1141, %while.cond1139
  %677 = phi i1 [ false, %while.cond1139 ], [ %cmp1144, %land.rhs1141 ]
  br i1 %677, label %while.body1148, label %while.end1685

while.body1148:                                   ; preds = %land.end1146
  %678 = load %union.linkroot*, %union.linkroot** %redir, align 4
  %call1149 = call i8* @ugetnode(%union.linkroot* %678)
  %679 = bitcast i8* %call1149 to %struct.redir*
  store %struct.redir* %679, %struct.redir** %fn, align 4
  %680 = load %struct.redir*, %struct.redir** %fn, align 4
  %type1150 = getelementptr inbounds %struct.redir, %struct.redir* %680, i32 0, i32 0
  %681 = load i32, i32* %type1150, align 4
  %cmp1151 = icmp eq i32 %681, 16
  br i1 %cmp1151, label %if.then1153, label %if.else1176

if.then1153:                                      ; preds = %while.body1148
  %682 = load %struct.redir*, %struct.redir** %fn, align 4
  %call1154 = call i32 @checkclobberparam(%struct.redir* %682)
  %tobool1155 = icmp ne i32 %call1154, 0
  br i1 %tobool1155, label %lor.lhs.false1156, label %if.then1159

lor.lhs.false1156:                                ; preds = %if.then1153
  %683 = load %struct.redir*, %struct.redir** %fn, align 4
  %fd2 = getelementptr inbounds %struct.redir, %struct.redir* %683, i32 0, i32 3
  %684 = load i32, i32* %fd2, align 4
  %cmp1157 = icmp eq i32 %684, -1
  br i1 %cmp1157, label %if.then1159, label %if.end1172

if.then1159:                                      ; preds = %lor.lhs.false1156, %if.then1153
  %685 = load %struct.redir*, %struct.redir** %fn, align 4
  %fd21160 = getelementptr inbounds %struct.redir, %struct.redir* %685, i32 0, i32 3
  %686 = load i32, i32* %fd21160, align 4
  %cmp1161 = icmp ne i32 %686, -1
  br i1 %cmp1161, label %if.then1163, label %if.end1166

if.then1163:                                      ; preds = %if.then1159
  %687 = load %struct.redir*, %struct.redir** %fn, align 4
  %fd21164 = getelementptr inbounds %struct.redir, %struct.redir* %687, i32 0, i32 3
  %688 = load i32, i32* %fd21164, align 4
  %call1165 = call i32 @zclose(i32 %688)
  br label %if.end1166

if.end1166:                                       ; preds = %if.then1163, %if.then1159
  %arraydecay1167 = getelementptr inbounds [10 x %struct.multio*], [10 x %struct.multio*]* %mfds, i32 0, i32 0
  call void @closemnodes(%struct.multio** %arraydecay1167)
  %arraydecay1168 = getelementptr inbounds [10 x i32], [10 x i32]* %save, i32 0, i32 0
  call void @fixfds(i32* %arraydecay1168)
  br label %do.body

do.body:                                          ; preds = %if.end1166
  %689 = load i32, i32* %forked, align 4
  %tobool1169 = icmp ne i32 %689, 0
  br i1 %tobool1169, label %if.else1171, label %if.then1170

if.then1170:                                      ; preds = %do.body
  store i32 1, i32* @lastval, align 4
  store i32 1, i32* %redir_err, align 4
  br label %done

if.else1171:                                      ; preds = %do.body
  call void @_exit(i32 1) #4
  unreachable

do.end:                                           ; No predecessors!
  br label %if.end1172

if.end1172:                                       ; preds = %do.end, %lor.lhs.false1156
  %690 = load i32, i32* %forked, align 4
  %arraydecay1173 = getelementptr inbounds [10 x i32], [10 x i32]* %save, i32 0, i32 0
  %arraydecay1174 = getelementptr inbounds [10 x %struct.multio*], [10 x %struct.multio*]* %mfds, i32 0, i32 0
  %691 = load %struct.redir*, %struct.redir** %fn, align 4
  %fd1 = getelementptr inbounds %struct.redir, %struct.redir* %691, i32 0, i32 2
  %692 = load i32, i32* %fd1, align 4
  %693 = load %struct.redir*, %struct.redir** %fn, align 4
  %fd21175 = getelementptr inbounds %struct.redir, %struct.redir* %693, i32 0, i32 3
  %694 = load i32, i32* %fd21175, align 4
  %695 = load %struct.redir*, %struct.redir** %fn, align 4
  %varid = getelementptr inbounds %struct.redir, %struct.redir* %695, i32 0, i32 5
  %696 = load i8*, i8** %varid, align 4
  call void @addfd(i32 %690, i32* %arraydecay1173, %struct.multio** %arraydecay1174, i32 %692, i32 %694, i32 0, i8* %696)
  br label %if.end1684

if.else1176:                                      ; preds = %while.body1148
  %697 = load %struct.redir*, %struct.redir** %fn, align 4
  %type1177 = getelementptr inbounds %struct.redir, %struct.redir* %697, i32 0, i32 0
  %698 = load i32, i32* %type1177, align 4
  %cmp1178 = icmp eq i32 %698, 17
  br i1 %cmp1178, label %if.then1180, label %if.else1208

if.then1180:                                      ; preds = %if.else1176
  %699 = load %struct.redir*, %struct.redir** %fn, align 4
  %call1181 = call i32 @checkclobberparam(%struct.redir* %699)
  %tobool1182 = icmp ne i32 %call1181, 0
  br i1 %tobool1182, label %lor.lhs.false1183, label %if.then1187

lor.lhs.false1183:                                ; preds = %if.then1180
  %700 = load %struct.redir*, %struct.redir** %fn, align 4
  %fd21184 = getelementptr inbounds %struct.redir, %struct.redir* %700, i32 0, i32 3
  %701 = load i32, i32* %fd21184, align 4
  %cmp1185 = icmp eq i32 %701, -1
  br i1 %cmp1185, label %if.then1187, label %if.end1202

if.then1187:                                      ; preds = %lor.lhs.false1183, %if.then1180
  %702 = load %struct.redir*, %struct.redir** %fn, align 4
  %fd21188 = getelementptr inbounds %struct.redir, %struct.redir* %702, i32 0, i32 3
  %703 = load i32, i32* %fd21188, align 4
  %cmp1189 = icmp ne i32 %703, -1
  br i1 %cmp1189, label %if.then1191, label %if.end1194

if.then1191:                                      ; preds = %if.then1187
  %704 = load %struct.redir*, %struct.redir** %fn, align 4
  %fd21192 = getelementptr inbounds %struct.redir, %struct.redir* %704, i32 0, i32 3
  %705 = load i32, i32* %fd21192, align 4
  %call1193 = call i32 @zclose(i32 %705)
  br label %if.end1194

if.end1194:                                       ; preds = %if.then1191, %if.then1187
  %arraydecay1195 = getelementptr inbounds [10 x %struct.multio*], [10 x %struct.multio*]* %mfds, i32 0, i32 0
  call void @closemnodes(%struct.multio** %arraydecay1195)
  %arraydecay1196 = getelementptr inbounds [10 x i32], [10 x i32]* %save, i32 0, i32 0
  call void @fixfds(i32* %arraydecay1196)
  br label %do.body1197

do.body1197:                                      ; preds = %if.end1194
  %706 = load i32, i32* %forked, align 4
  %tobool1198 = icmp ne i32 %706, 0
  br i1 %tobool1198, label %if.else1200, label %if.then1199

if.then1199:                                      ; preds = %do.body1197
  store i32 1, i32* @lastval, align 4
  store i32 1, i32* %redir_err, align 4
  br label %done

if.else1200:                                      ; preds = %do.body1197
  call void @_exit(i32 1) #4
  unreachable

do.end1201:                                       ; No predecessors!
  br label %if.end1202

if.end1202:                                       ; preds = %do.end1201, %lor.lhs.false1183
  %707 = load i32, i32* %forked, align 4
  %arraydecay1203 = getelementptr inbounds [10 x i32], [10 x i32]* %save, i32 0, i32 0
  %arraydecay1204 = getelementptr inbounds [10 x %struct.multio*], [10 x %struct.multio*]* %mfds, i32 0, i32 0
  %708 = load %struct.redir*, %struct.redir** %fn, align 4
  %fd11205 = getelementptr inbounds %struct.redir, %struct.redir* %708, i32 0, i32 2
  %709 = load i32, i32* %fd11205, align 4
  %710 = load %struct.redir*, %struct.redir** %fn, align 4
  %fd21206 = getelementptr inbounds %struct.redir, %struct.redir* %710, i32 0, i32 3
  %711 = load i32, i32* %fd21206, align 4
  %712 = load %struct.redir*, %struct.redir** %fn, align 4
  %varid1207 = getelementptr inbounds %struct.redir, %struct.redir* %712, i32 0, i32 5
  %713 = load i8*, i8** %varid1207, align 4
  call void @addfd(i32 %707, i32* %arraydecay1203, %struct.multio** %arraydecay1204, i32 %709, i32 %711, i32 1, i8* %713)
  br label %if.end1683

if.else1208:                                      ; preds = %if.else1176
  %714 = load %struct.redir*, %struct.redir** %fn, align 4
  %type1209 = getelementptr inbounds %struct.redir, %struct.redir* %714, i32 0, i32 0
  %715 = load i32, i32* %type1209, align 4
  %cmp1210 = icmp ne i32 %715, 12
  br i1 %cmp1210, label %land.lhs.true1212, label %if.end1216

land.lhs.true1212:                                ; preds = %if.else1208
  %716 = load %struct.redir*, %struct.redir** %fn, align 4
  %717 = load %union.linkroot*, %union.linkroot** %redir, align 4
  %call1213 = call i32 @xpandredir(%struct.redir* %716, %union.linkroot* %717)
  %tobool1214 = icmp ne i32 %call1213, 0
  br i1 %tobool1214, label %if.then1215, label %if.end1216

if.then1215:                                      ; preds = %land.lhs.true1212
  br label %while.cond1139

if.end1216:                                       ; preds = %land.lhs.true1212, %if.else1208
  %718 = load i32, i32* @errflag, align 4
  %tobool1217 = icmp ne i32 %718, 0
  br i1 %tobool1217, label %if.then1218, label %if.end1226

if.then1218:                                      ; preds = %if.end1216
  %arraydecay1219 = getelementptr inbounds [10 x %struct.multio*], [10 x %struct.multio*]* %mfds, i32 0, i32 0
  call void @closemnodes(%struct.multio** %arraydecay1219)
  %arraydecay1220 = getelementptr inbounds [10 x i32], [10 x i32]* %save, i32 0, i32 0
  call void @fixfds(i32* %arraydecay1220)
  br label %do.body1221

do.body1221:                                      ; preds = %if.then1218
  %719 = load i32, i32* %forked, align 4
  %tobool1222 = icmp ne i32 %719, 0
  br i1 %tobool1222, label %if.else1224, label %if.then1223

if.then1223:                                      ; preds = %do.body1221
  store i32 1, i32* @lastval, align 4
  store i32 1, i32* %redir_err, align 4
  br label %done

if.else1224:                                      ; preds = %do.body1221
  call void @_exit(i32 1) #4
  unreachable

do.end1225:                                       ; No predecessors!
  br label %if.end1226

if.end1226:                                       ; preds = %do.end1225, %if.end1216
  %720 = load i8, i8* getelementptr inbounds ([181 x i8], [181 x i8]* @opts, i32 0, i32 155), align 1
  %conv1227 = sext i8 %720 to i32
  %tobool1228 = icmp ne i32 %conv1227, 0
  br i1 %tobool1228, label %land.lhs.true1229, label %if.end1243

land.lhs.true1229:                                ; preds = %if.end1226
  %721 = load %struct.redir*, %struct.redir** %fn, align 4
  %type1230 = getelementptr inbounds %struct.redir, %struct.redir* %721, i32 0, i32 0
  %722 = load i32, i32* %type1230, align 4
  %cmp1231 = icmp sge i32 %722, 0
  br i1 %cmp1231, label %land.lhs.true1233, label %if.end1243

land.lhs.true1233:                                ; preds = %land.lhs.true1229
  %723 = load %struct.redir*, %struct.redir** %fn, align 4
  %type1234 = getelementptr inbounds %struct.redir, %struct.redir* %723, i32 0, i32 0
  %724 = load i32, i32* %type1234, align 4
  %cmp1235 = icmp sle i32 %724, 8
  br i1 %cmp1235, label %if.then1237, label %if.end1243

if.then1237:                                      ; preds = %land.lhs.true1233
  call void (i8*, ...) @zwarn(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.65, i32 0, i32 0))
  br label %do.body1238

do.body1238:                                      ; preds = %if.then1237
  %725 = load i32, i32* %forked, align 4
  %tobool1239 = icmp ne i32 %725, 0
  br i1 %tobool1239, label %if.else1241, label %if.then1240

if.then1240:                                      ; preds = %do.body1238
  store i32 1, i32* @lastval, align 4
  store i32 1, i32* %redir_err, align 4
  br label %done

if.else1241:                                      ; preds = %do.body1238
  call void @_exit(i32 1) #4
  unreachable

do.end1242:                                       ; No predecessors!
  br label %if.end1243

if.end1243:                                       ; preds = %do.end1242, %land.lhs.true1233, %land.lhs.true1229, %if.end1226
  %726 = load i8, i8* getelementptr inbounds ([181 x i8], [181 x i8]* @opts, i32 0, i32 53), align 1
  %tobool1244 = icmp ne i8 %726, 0
  br i1 %tobool1244, label %if.end1246, label %if.then1245

if.then1245:                                      ; preds = %if.end1243
  br label %while.cond1139

if.end1246:                                       ; preds = %if.end1243
  %727 = load %struct.redir*, %struct.redir** %fn, align 4
  %type1247 = getelementptr inbounds %struct.redir, %struct.redir* %727, i32 0, i32 0
  %728 = load i32, i32* %type1247, align 4
  switch i32 %728, label %sw.default1567 [
    i32 12, label %sw.bb1248
    i32 9, label %sw.bb1279
    i32 8, label %sw.bb1279
    i32 15, label %sw.bb1334
    i32 13, label %sw.bb1469
    i32 14, label %sw.bb1469
  ]

sw.bb1248:                                        ; preds = %if.end1246
  %729 = load %struct.redir*, %struct.redir** %fn, align 4
  %call1249 = call i32 @checkclobberparam(%struct.redir* %729)
  %tobool1250 = icmp ne i32 %call1249, 0
  br i1 %tobool1250, label %if.else1252, label %if.then1251

if.then1251:                                      ; preds = %sw.bb1248
  store i32 -1, i32* %fil, align 4
  br label %if.end1254

if.else1252:                                      ; preds = %sw.bb1248
  %730 = load %struct.redir*, %struct.redir** %fn, align 4
  %call1253 = call i32 @getherestr(%struct.redir* %730)
  store i32 %call1253, i32* %fil, align 4
  br label %if.end1254

if.end1254:                                       ; preds = %if.else1252, %if.then1251
  %731 = load i32, i32* %fil, align 4
  %cmp1255 = icmp eq i32 %731, -1
  br i1 %cmp1255, label %if.then1257, label %if.end1274

if.then1257:                                      ; preds = %if.end1254
  %call1258 = call i32* @__errno_location()
  %732 = load i32, i32* %call1258, align 4
  %tobool1259 = icmp ne i32 %732, 0
  br i1 %tobool1259, label %land.lhs.true1260, label %if.end1266

land.lhs.true1260:                                ; preds = %if.then1257
  %call1261 = call i32* @__errno_location()
  %733 = load i32, i32* %call1261, align 4
  %cmp1262 = icmp ne i32 %733, 4
  br i1 %cmp1262, label %if.then1264, label %if.end1266

if.then1264:                                      ; preds = %land.lhs.true1260
  %call1265 = call i32* @__errno_location()
  %734 = load i32, i32* %call1265, align 4
  call void (i8*, ...) @zwarn(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.66, i32 0, i32 0), i32 %734)
  br label %if.end1266

if.end1266:                                       ; preds = %if.then1264, %land.lhs.true1260, %if.then1257
  %arraydecay1267 = getelementptr inbounds [10 x %struct.multio*], [10 x %struct.multio*]* %mfds, i32 0, i32 0
  call void @closemnodes(%struct.multio** %arraydecay1267)
  %arraydecay1268 = getelementptr inbounds [10 x i32], [10 x i32]* %save, i32 0, i32 0
  call void @fixfds(i32* %arraydecay1268)
  br label %do.body1269

do.body1269:                                      ; preds = %if.end1266
  %735 = load i32, i32* %forked, align 4
  %tobool1270 = icmp ne i32 %735, 0
  br i1 %tobool1270, label %if.else1272, label %if.then1271

if.then1271:                                      ; preds = %do.body1269
  store i32 1, i32* @lastval, align 4
  store i32 1, i32* %redir_err, align 4
  br label %done

if.else1272:                                      ; preds = %do.body1269
  call void @_exit(i32 1) #4
  unreachable

do.end1273:                                       ; No predecessors!
  br label %if.end1274

if.end1274:                                       ; preds = %do.end1273, %if.end1254
  %736 = load i32, i32* %forked, align 4
  %arraydecay1275 = getelementptr inbounds [10 x i32], [10 x i32]* %save, i32 0, i32 0
  %arraydecay1276 = getelementptr inbounds [10 x %struct.multio*], [10 x %struct.multio*]* %mfds, i32 0, i32 0
  %737 = load %struct.redir*, %struct.redir** %fn, align 4
  %fd11277 = getelementptr inbounds %struct.redir, %struct.redir* %737, i32 0, i32 2
  %738 = load i32, i32* %fd11277, align 4
  %739 = load i32, i32* %fil, align 4
  %740 = load %struct.redir*, %struct.redir** %fn, align 4
  %varid1278 = getelementptr inbounds %struct.redir, %struct.redir* %740, i32 0, i32 5
  %741 = load i8*, i8** %varid1278, align 4
  call void @addfd(i32 %736, i32* %arraydecay1275, %struct.multio** %arraydecay1276, i32 %738, i32 %739, i32 0, i8* %741)
  br label %sw.epilog1672

sw.bb1279:                                        ; preds = %if.end1246, %if.end1246
  %742 = load %struct.redir*, %struct.redir** %fn, align 4
  %call1280 = call i32 @checkclobberparam(%struct.redir* %742)
  %tobool1281 = icmp ne i32 %call1280, 0
  br i1 %tobool1281, label %if.else1283, label %if.then1282

if.then1282:                                      ; preds = %sw.bb1279
  store i32 -1, i32* %fil, align 4
  br label %if.end1295

if.else1283:                                      ; preds = %sw.bb1279
  %743 = load %struct.redir*, %struct.redir** %fn, align 4
  %type1284 = getelementptr inbounds %struct.redir, %struct.redir* %743, i32 0, i32 0
  %744 = load i32, i32* %type1284, align 4
  %cmp1285 = icmp eq i32 %744, 9
  br i1 %cmp1285, label %if.then1287, label %if.else1290

if.then1287:                                      ; preds = %if.else1283
  %745 = load %struct.redir*, %struct.redir** %fn, align 4
  %name = getelementptr inbounds %struct.redir, %struct.redir* %745, i32 0, i32 4
  %746 = load i8*, i8** %name, align 4
  %call1288 = call i8* @unmeta(i8* %746)
  %call1289 = call i32 (i8*, i32, ...) @open(i8* %call1288, i32 256)
  store i32 %call1289, i32* %fil, align 4
  br label %if.end1294

if.else1290:                                      ; preds = %if.else1283
  %747 = load %struct.redir*, %struct.redir** %fn, align 4
  %name1291 = getelementptr inbounds %struct.redir, %struct.redir* %747, i32 0, i32 4
  %748 = load i8*, i8** %name1291, align 4
  %call1292 = call i8* @unmeta(i8* %748)
  %call1293 = call i32 (i8*, i32, ...) @open(i8* %call1292, i32 322, i32 438)
  store i32 %call1293, i32* %fil, align 4
  br label %if.end1294

if.end1294:                                       ; preds = %if.else1290, %if.then1287
  br label %if.end1295

if.end1295:                                       ; preds = %if.end1294, %if.then1282
  %749 = load i32, i32* %fil, align 4
  %cmp1296 = icmp eq i32 %749, -1
  br i1 %cmp1296, label %if.then1298, label %if.end1313

if.then1298:                                      ; preds = %if.end1295
  %arraydecay1299 = getelementptr inbounds [10 x %struct.multio*], [10 x %struct.multio*]* %mfds, i32 0, i32 0
  call void @closemnodes(%struct.multio** %arraydecay1299)
  %arraydecay1300 = getelementptr inbounds [10 x i32], [10 x i32]* %save, i32 0, i32 0
  call void @fixfds(i32* %arraydecay1300)
  %call1301 = call i32* @__errno_location()
  %750 = load i32, i32* %call1301, align 4
  %cmp1302 = icmp ne i32 %750, 4
  br i1 %cmp1302, label %if.then1304, label %if.end1307

if.then1304:                                      ; preds = %if.then1298
  %call1305 = call i32* @__errno_location()
  %751 = load i32, i32* %call1305, align 4
  %752 = load %struct.redir*, %struct.redir** %fn, align 4
  %name1306 = getelementptr inbounds %struct.redir, %struct.redir* %752, i32 0, i32 4
  %753 = load i8*, i8** %name1306, align 4
  call void (i8*, ...) @zwarn(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.9, i32 0, i32 0), i32 %751, i8* %753)
  br label %if.end1307

if.end1307:                                       ; preds = %if.then1304, %if.then1298
  br label %do.body1308

do.body1308:                                      ; preds = %if.end1307
  %754 = load i32, i32* %forked, align 4
  %tobool1309 = icmp ne i32 %754, 0
  br i1 %tobool1309, label %if.else1311, label %if.then1310

if.then1310:                                      ; preds = %do.body1308
  store i32 1, i32* @lastval, align 4
  store i32 1, i32* %redir_err, align 4
  br label %done

if.else1311:                                      ; preds = %do.body1308
  call void @_exit(i32 1) #4
  unreachable

do.end1312:                                       ; No predecessors!
  br label %if.end1313

if.end1313:                                       ; preds = %do.end1312, %if.end1295
  %755 = load i32, i32* %forked, align 4
  %arraydecay1314 = getelementptr inbounds [10 x i32], [10 x i32]* %save, i32 0, i32 0
  %arraydecay1315 = getelementptr inbounds [10 x %struct.multio*], [10 x %struct.multio*]* %mfds, i32 0, i32 0
  %756 = load %struct.redir*, %struct.redir** %fn, align 4
  %fd11316 = getelementptr inbounds %struct.redir, %struct.redir* %756, i32 0, i32 2
  %757 = load i32, i32* %fd11316, align 4
  %758 = load i32, i32* %fil, align 4
  %759 = load %struct.redir*, %struct.redir** %fn, align 4
  %varid1317 = getelementptr inbounds %struct.redir, %struct.redir* %759, i32 0, i32 5
  %760 = load i8*, i8** %varid1317, align 4
  call void @addfd(i32 %755, i32* %arraydecay1314, %struct.multio** %arraydecay1315, i32 %757, i32 %758, i32 0, i8* %760)
  %761 = load i32, i32* %nullexec, align 4
  %cmp1318 = icmp eq i32 %761, 1
  br i1 %cmp1318, label %land.lhs.true1320, label %if.end1333

land.lhs.true1320:                                ; preds = %if.end1313
  %762 = load %struct.redir*, %struct.redir** %fn, align 4
  %fd11321 = getelementptr inbounds %struct.redir, %struct.redir* %762, i32 0, i32 2
  %763 = load i32, i32* %fd11321, align 4
  %cmp1322 = icmp eq i32 %763, 0
  br i1 %cmp1322, label %land.lhs.true1324, label %if.end1333

land.lhs.true1324:                                ; preds = %land.lhs.true1320
  %764 = load i8, i8* getelementptr inbounds ([181 x i8], [181 x i8]* @opts, i32 0, i32 161), align 1
  %conv1325 = sext i8 %764 to i32
  %tobool1326 = icmp ne i32 %conv1325, 0
  br i1 %tobool1326, label %land.lhs.true1327, label %if.end1333

land.lhs.true1327:                                ; preds = %land.lhs.true1324
  %765 = load i8, i8* getelementptr inbounds ([181 x i8], [181 x i8]* @opts, i32 0, i32 94), align 1
  %conv1328 = sext i8 %765 to i32
  %tobool1329 = icmp ne i32 %conv1328, 0
  br i1 %tobool1329, label %land.lhs.true1330, label %if.end1333

land.lhs.true1330:                                ; preds = %land.lhs.true1327
  %766 = load i32, i32* @zleactive, align 4
  %tobool1331 = icmp ne i32 %766, 0
  br i1 %tobool1331, label %if.end1333, label %if.then1332

if.then1332:                                      ; preds = %land.lhs.true1330
  call void @init_io(i8* null)
  br label %if.end1333

if.end1333:                                       ; preds = %if.then1332, %land.lhs.true1330, %land.lhs.true1327, %land.lhs.true1324, %land.lhs.true1320, %if.end1313
  br label %sw.epilog1672

sw.bb1334:                                        ; preds = %if.end1246
  %767 = load %struct.redir*, %struct.redir** %fn, align 4
  %varid1335 = getelementptr inbounds %struct.redir, %struct.redir* %767, i32 0, i32 5
  %768 = load i8*, i8** %varid1335, align 4
  %tobool1336 = icmp ne i8* %768, null
  br i1 %tobool1336, label %if.then1337, label %if.end1426

if.then1337:                                      ; preds = %sw.bb1334
  %769 = load %struct.redir*, %struct.redir** %fn, align 4
  %varid1339 = getelementptr inbounds %struct.redir, %struct.redir* %769, i32 0, i32 5
  %770 = load i8*, i8** %varid1339, align 4
  store i8* %770, i8** %s1338, align 4
  store i32 0, i32* %bad, align 4
  %call1341 = call %struct.value* @getvalue(%struct.value* %vbuf, i8** %s1338, i32 0)
  store %struct.value* %call1341, %struct.value** %v, align 4
  %tobool1342 = icmp ne %struct.value* %call1341, null
  br i1 %tobool1342, label %if.else1344, label %if.then1343

if.then1343:                                      ; preds = %if.then1337
  store i32 1, i32* %bad, align 4
  br label %if.end1406

if.else1344:                                      ; preds = %if.then1337
  %771 = load %struct.value*, %struct.value** %v, align 4
  %pm = getelementptr inbounds %struct.value, %struct.value* %771, i32 0, i32 1
  %772 = load %struct.param*, %struct.param** %pm, align 4
  %node1345 = getelementptr inbounds %struct.param, %struct.param* %772, i32 0, i32 0
  %flags1346 = getelementptr inbounds %struct.hashnode, %struct.hashnode* %node1345, i32 0, i32 2
  %773 = load i32, i32* %flags1346, align 8
  %and1347 = and i32 %773, 1024
  %tobool1348 = icmp ne i32 %and1347, 0
  br i1 %tobool1348, label %if.then1349, label %if.else1350

if.then1349:                                      ; preds = %if.else1344
  store i32 2, i32* %bad, align 4
  br label %if.end1405

if.else1350:                                      ; preds = %if.else1344
  %774 = load %struct.value*, %struct.value** %v, align 4
  %call1351 = call i8* @getstrvalue(%struct.value* %774)
  store i8* %call1351, i8** %s1338, align 4
  %775 = load i32, i32* @errflag, align 4
  %tobool1352 = icmp ne i32 %775, 0
  br i1 %tobool1352, label %if.then1353, label %if.else1354

if.then1353:                                      ; preds = %if.else1350
  store i32 1, i32* %bad, align 4
  br label %if.end1404

if.else1354:                                      ; preds = %if.else1350
  %776 = load i8*, i8** %s1338, align 4
  %call1355 = call i32 @zstrtol(i8* %776, i8** %t1340, i32 0)
  %777 = load %struct.redir*, %struct.redir** %fn, align 4
  %fd11356 = getelementptr inbounds %struct.redir, %struct.redir* %777, i32 0, i32 2
  store i32 %call1355, i32* %fd11356, align 4
  %778 = load i8*, i8** %s1338, align 4
  %779 = load i8*, i8** %t1340, align 4
  %cmp1357 = icmp eq i8* %778, %779
  br i1 %cmp1357, label %if.then1359, label %if.else1360

if.then1359:                                      ; preds = %if.else1354
  store i32 1, i32* %bad, align 4
  br label %if.end1384

if.else1360:                                      ; preds = %if.else1354
  %780 = load i8*, i8** %t1340, align 4
  %781 = load i8, i8* %780, align 1
  %tobool1361 = icmp ne i8 %781, 0
  br i1 %tobool1361, label %if.then1362, label %if.end1383

if.then1362:                                      ; preds = %if.else1360
  %782 = load i8*, i8** %t1340, align 4
  %783 = load i8, i8* %782, align 1
  %conv1363 = sext i8 %783 to i32
  %cmp1364 = icmp eq i32 %conv1363, 35
  br i1 %cmp1364, label %land.lhs.true1366, label %if.end1375

land.lhs.true1366:                                ; preds = %if.then1362
  %784 = load i8*, i8** %s1338, align 4
  %785 = load i8, i8* %784, align 1
  %conv1367 = sext i8 %785 to i32
  %cmp1368 = icmp ne i32 %conv1367, 48
  br i1 %cmp1368, label %if.then1370, label %if.end1375

if.then1370:                                      ; preds = %land.lhs.true1366
  %786 = load i8*, i8** %t1340, align 4
  %add.ptr1371 = getelementptr inbounds i8, i8* %786, i32 1
  store i8* %add.ptr1371, i8** %s1338, align 4
  %787 = load %struct.redir*, %struct.redir** %fn, align 4
  %fd11372 = getelementptr inbounds %struct.redir, %struct.redir* %787, i32 0, i32 2
  %788 = load i32, i32* %fd11372, align 4
  %call1373 = call i32 @zstrtol(i8* %add.ptr1371, i8** %t1340, i32 %788)
  %789 = load %struct.redir*, %struct.redir** %fn, align 4
  %fd11374 = getelementptr inbounds %struct.redir, %struct.redir* %789, i32 0, i32 2
  store i32 %call1373, i32* %fd11374, align 4
  br label %if.end1375

if.end1375:                                       ; preds = %if.then1370, %land.lhs.true1366, %if.then1362
  %790 = load i8*, i8** %s1338, align 4
  %791 = load i8*, i8** %t1340, align 4
  %cmp1376 = icmp eq i8* %790, %791
  br i1 %cmp1376, label %if.then1381, label %lor.lhs.false1378

lor.lhs.false1378:                                ; preds = %if.end1375
  %792 = load i8*, i8** %t1340, align 4
  %793 = load i8, i8* %792, align 1
  %conv1379 = sext i8 %793 to i32
  %tobool1380 = icmp ne i32 %conv1379, 0
  br i1 %tobool1380, label %if.then1381, label %if.end1382

if.then1381:                                      ; preds = %lor.lhs.false1378, %if.end1375
  store i32 1, i32* %bad, align 4
  br label %if.end1382

if.end1382:                                       ; preds = %if.then1381, %lor.lhs.false1378
  br label %if.end1383

if.end1383:                                       ; preds = %if.end1382, %if.else1360
  br label %if.end1384

if.end1384:                                       ; preds = %if.end1383, %if.then1359
  %794 = load i32, i32* %bad, align 4
  %tobool1385 = icmp ne i32 %794, 0
  br i1 %tobool1385, label %if.end1403, label %land.lhs.true1386

land.lhs.true1386:                                ; preds = %if.end1384
  %795 = load %struct.redir*, %struct.redir** %fn, align 4
  %fd11387 = getelementptr inbounds %struct.redir, %struct.redir* %795, i32 0, i32 2
  %796 = load i32, i32* %fd11387, align 4
  %797 = load i32, i32* @max_zsh_fd, align 4
  %cmp1388 = icmp sle i32 %796, %797
  br i1 %cmp1388, label %if.then1390, label %if.end1403

if.then1390:                                      ; preds = %land.lhs.true1386
  %798 = load %struct.redir*, %struct.redir** %fn, align 4
  %fd11391 = getelementptr inbounds %struct.redir, %struct.redir* %798, i32 0, i32 2
  %799 = load i32, i32* %fd11391, align 4
  %cmp1392 = icmp sge i32 %799, 10
  br i1 %cmp1392, label %land.lhs.true1394, label %if.end1402

land.lhs.true1394:                                ; preds = %if.then1390
  %800 = load i8*, i8** @fdtable, align 4
  %801 = load %struct.redir*, %struct.redir** %fn, align 4
  %fd11395 = getelementptr inbounds %struct.redir, %struct.redir* %801, i32 0, i32 2
  %802 = load i32, i32* %fd11395, align 4
  %arrayidx1396 = getelementptr inbounds i8, i8* %800, i32 %802
  %803 = load i8, i8* %arrayidx1396, align 1
  %conv1397 = zext i8 %803 to i32
  %and1398 = and i32 %conv1397, 15
  %cmp1399 = icmp eq i32 %and1398, 1
  br i1 %cmp1399, label %if.then1401, label %if.end1402

if.then1401:                                      ; preds = %land.lhs.true1394
  store i32 3, i32* %bad, align 4
  br label %if.end1402

if.end1402:                                       ; preds = %if.then1401, %land.lhs.true1394, %if.then1390
  br label %if.end1403

if.end1403:                                       ; preds = %if.end1402, %land.lhs.true1386, %if.end1384
  br label %if.end1404

if.end1404:                                       ; preds = %if.end1403, %if.then1353
  br label %if.end1405

if.end1405:                                       ; preds = %if.end1404, %if.then1349
  br label %if.end1406

if.end1406:                                       ; preds = %if.end1405, %if.then1343
  %804 = load i32, i32* %bad, align 4
  %tobool1407 = icmp ne i32 %804, 0
  br i1 %tobool1407, label %if.then1408, label %if.end1425

if.then1408:                                      ; preds = %if.end1406
  %805 = bitcast [3 x i8*]* %bad_msg to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %805, i8* bitcast ([3 x i8*]* @execcmd_exec.bad_msg to i8*), i32 12, i32 4, i1 false)
  %806 = load i32, i32* %bad, align 4
  %cmp1409 = icmp sgt i32 %806, 2
  br i1 %cmp1409, label %if.then1411, label %if.else1415

if.then1411:                                      ; preds = %if.then1408
  %807 = load i32, i32* %bad, align 4
  %sub1412 = sub nsw i32 %807, 1
  %arrayidx1413 = getelementptr inbounds [3 x i8*], [3 x i8*]* %bad_msg, i32 0, i32 %sub1412
  %808 = load i8*, i8** %arrayidx1413, align 4
  %809 = load %struct.redir*, %struct.redir** %fn, align 4
  %fd11414 = getelementptr inbounds %struct.redir, %struct.redir* %809, i32 0, i32 2
  %810 = load i32, i32* %fd11414, align 4
  call void (i8*, ...) @zwarn(i8* %808, i32 %810)
  br label %if.end1419

if.else1415:                                      ; preds = %if.then1408
  %811 = load i32, i32* %bad, align 4
  %sub1416 = sub nsw i32 %811, 1
  %arrayidx1417 = getelementptr inbounds [3 x i8*], [3 x i8*]* %bad_msg, i32 0, i32 %sub1416
  %812 = load i8*, i8** %arrayidx1417, align 4
  %813 = load %struct.redir*, %struct.redir** %fn, align 4
  %varid1418 = getelementptr inbounds %struct.redir, %struct.redir* %813, i32 0, i32 5
  %814 = load i8*, i8** %varid1418, align 4
  call void (i8*, ...) @zwarn(i8* %812, i8* %814)
  br label %if.end1419

if.end1419:                                       ; preds = %if.else1415, %if.then1411
  br label %do.body1420

do.body1420:                                      ; preds = %if.end1419
  %815 = load i32, i32* %forked, align 4
  %tobool1421 = icmp ne i32 %815, 0
  br i1 %tobool1421, label %if.else1423, label %if.then1422

if.then1422:                                      ; preds = %do.body1420
  store i32 1, i32* @lastval, align 4
  store i32 1, i32* %redir_err, align 4
  br label %done

if.else1423:                                      ; preds = %do.body1420
  call void @_exit(i32 1) #4
  unreachable

do.end1424:                                       ; No predecessors!
  br label %if.end1425

if.end1425:                                       ; preds = %do.end1424, %if.end1406
  br label %if.end1426

if.end1426:                                       ; preds = %if.end1425, %sw.bb1334
  store i32 0, i32* %closed, align 4
  %816 = load i32, i32* %forked, align 4
  %tobool1427 = icmp ne i32 %816, 0
  br i1 %tobool1427, label %if.end1448, label %land.lhs.true1428

land.lhs.true1428:                                ; preds = %if.end1426
  %817 = load %struct.redir*, %struct.redir** %fn, align 4
  %fd11429 = getelementptr inbounds %struct.redir, %struct.redir* %817, i32 0, i32 2
  %818 = load i32, i32* %fd11429, align 4
  %cmp1430 = icmp slt i32 %818, 10
  br i1 %cmp1430, label %land.lhs.true1432, label %if.end1448

land.lhs.true1432:                                ; preds = %land.lhs.true1428
  %819 = load %struct.redir*, %struct.redir** %fn, align 4
  %fd11433 = getelementptr inbounds %struct.redir, %struct.redir* %819, i32 0, i32 2
  %820 = load i32, i32* %fd11433, align 4
  %arrayidx1434 = getelementptr inbounds [10 x i32], [10 x i32]* %save, i32 0, i32 %820
  %821 = load i32, i32* %arrayidx1434, align 4
  %cmp1435 = icmp eq i32 %821, -2
  br i1 %cmp1435, label %if.then1437, label %if.end1448

if.then1437:                                      ; preds = %land.lhs.true1432
  %822 = load %struct.redir*, %struct.redir** %fn, align 4
  %fd11438 = getelementptr inbounds %struct.redir, %struct.redir* %822, i32 0, i32 2
  %823 = load i32, i32* %fd11438, align 4
  %call1439 = call i32 @movefd(i32 %823)
  %824 = load %struct.redir*, %struct.redir** %fn, align 4
  %fd11440 = getelementptr inbounds %struct.redir, %struct.redir* %824, i32 0, i32 2
  %825 = load i32, i32* %fd11440, align 4
  %arrayidx1441 = getelementptr inbounds [10 x i32], [10 x i32]* %save, i32 0, i32 %825
  store i32 %call1439, i32* %arrayidx1441, align 4
  %826 = load %struct.redir*, %struct.redir** %fn, align 4
  %fd11442 = getelementptr inbounds %struct.redir, %struct.redir* %826, i32 0, i32 2
  %827 = load i32, i32* %fd11442, align 4
  %arrayidx1443 = getelementptr inbounds [10 x i32], [10 x i32]* %save, i32 0, i32 %827
  %828 = load i32, i32* %arrayidx1443, align 4
  %cmp1444 = icmp sge i32 %828, 0
  br i1 %cmp1444, label %if.then1446, label %if.end1447

if.then1446:                                      ; preds = %if.then1437
  store i32 1, i32* %closed, align 4
  br label %if.end1447

if.end1447:                                       ; preds = %if.then1446, %if.then1437
  br label %if.end1448

if.end1448:                                       ; preds = %if.end1447, %land.lhs.true1432, %land.lhs.true1428, %if.end1426
  %829 = load %struct.redir*, %struct.redir** %fn, align 4
  %fd11449 = getelementptr inbounds %struct.redir, %struct.redir* %829, i32 0, i32 2
  %830 = load i32, i32* %fd11449, align 4
  %cmp1450 = icmp slt i32 %830, 10
  br i1 %cmp1450, label %if.then1452, label %if.end1455

if.then1452:                                      ; preds = %if.end1448
  %arraydecay1453 = getelementptr inbounds [10 x %struct.multio*], [10 x %struct.multio*]* %mfds, i32 0, i32 0
  %831 = load %struct.redir*, %struct.redir** %fn, align 4
  %fd11454 = getelementptr inbounds %struct.redir, %struct.redir* %831, i32 0, i32 2
  %832 = load i32, i32* %fd11454, align 4
  call void @closemn(%struct.multio** %arraydecay1453, i32 %832, i32 15)
  br label %if.end1455

if.end1455:                                       ; preds = %if.then1452, %if.end1448
  %833 = load i32, i32* %closed, align 4
  %tobool1456 = icmp ne i32 %833, 0
  br i1 %tobool1456, label %if.end1468, label %land.lhs.true1457

land.lhs.true1457:                                ; preds = %if.end1455
  %834 = load %struct.redir*, %struct.redir** %fn, align 4
  %fd11458 = getelementptr inbounds %struct.redir, %struct.redir* %834, i32 0, i32 2
  %835 = load i32, i32* %fd11458, align 4
  %call1459 = call i32 @zclose(i32 %835)
  %cmp1460 = icmp slt i32 %call1459, 0
  br i1 %cmp1460, label %land.lhs.true1462, label %if.end1468

land.lhs.true1462:                                ; preds = %land.lhs.true1457
  %836 = load %struct.redir*, %struct.redir** %fn, align 4
  %varid1463 = getelementptr inbounds %struct.redir, %struct.redir* %836, i32 0, i32 5
  %837 = load i8*, i8** %varid1463, align 4
  %tobool1464 = icmp ne i8* %837, null
  br i1 %tobool1464, label %if.then1465, label %if.end1468

if.then1465:                                      ; preds = %land.lhs.true1462
  %838 = load %struct.redir*, %struct.redir** %fn, align 4
  %fd11466 = getelementptr inbounds %struct.redir, %struct.redir* %838, i32 0, i32 2
  %839 = load i32, i32* %fd11466, align 4
  %call1467 = call i32* @__errno_location()
  %840 = load i32, i32* %call1467, align 4
  call void (i8*, ...) @zwarn(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.70, i32 0, i32 0), i32 %839, i32 %840)
  br label %if.end1468

if.end1468:                                       ; preds = %if.then1465, %land.lhs.true1462, %land.lhs.true1457, %if.end1455
  br label %sw.epilog1672

sw.bb1469:                                        ; preds = %if.end1246, %if.end1246
  %841 = load %struct.redir*, %struct.redir** %fn, align 4
  %fd21470 = getelementptr inbounds %struct.redir, %struct.redir* %841, i32 0, i32 3
  %842 = load i32, i32* %fd21470, align 4
  %cmp1471 = icmp slt i32 %842, 10
  br i1 %cmp1471, label %if.then1473, label %if.end1477

if.then1473:                                      ; preds = %sw.bb1469
  %arraydecay1474 = getelementptr inbounds [10 x %struct.multio*], [10 x %struct.multio*]* %mfds, i32 0, i32 0
  %843 = load %struct.redir*, %struct.redir** %fn, align 4
  %fd21475 = getelementptr inbounds %struct.redir, %struct.redir* %843, i32 0, i32 3
  %844 = load i32, i32* %fd21475, align 4
  %845 = load %struct.redir*, %struct.redir** %fn, align 4
  %type1476 = getelementptr inbounds %struct.redir, %struct.redir* %845, i32 0, i32 0
  %846 = load i32, i32* %type1476, align 4
  call void @closemn(%struct.multio** %arraydecay1474, i32 %844, i32 %846)
  br label %if.end1477

if.end1477:                                       ; preds = %if.then1473, %sw.bb1469
  %847 = load %struct.redir*, %struct.redir** %fn, align 4
  %call1478 = call i32 @checkclobberparam(%struct.redir* %847)
  %tobool1479 = icmp ne i32 %call1478, 0
  br i1 %tobool1479, label %if.else1481, label %if.then1480

if.then1480:                                      ; preds = %if.end1477
  store i32 -1, i32* %fil, align 4
  br label %if.end1527

if.else1481:                                      ; preds = %if.end1477
  %848 = load %struct.redir*, %struct.redir** %fn, align 4
  %fd21482 = getelementptr inbounds %struct.redir, %struct.redir* %848, i32 0, i32 3
  %849 = load i32, i32* %fd21482, align 4
  %cmp1483 = icmp sgt i32 %849, 9
  br i1 %cmp1483, label %land.lhs.true1485, label %if.else1511

land.lhs.true1485:                                ; preds = %if.else1481
  %850 = load %struct.redir*, %struct.redir** %fn, align 4
  %fd21486 = getelementptr inbounds %struct.redir, %struct.redir* %850, i32 0, i32 3
  %851 = load i32, i32* %fd21486, align 4
  %852 = load i32, i32* @max_zsh_fd, align 4
  %cmp1487 = icmp sle i32 %851, %852
  br i1 %cmp1487, label %land.lhs.true1489, label %if.else1511

land.lhs.true1489:                                ; preds = %land.lhs.true1485
  %853 = load i8*, i8** @fdtable, align 4
  %854 = load %struct.redir*, %struct.redir** %fn, align 4
  %fd21490 = getelementptr inbounds %struct.redir, %struct.redir* %854, i32 0, i32 3
  %855 = load i32, i32* %fd21490, align 4
  %arrayidx1491 = getelementptr inbounds i8, i8* %853, i32 %855
  %856 = load i8, i8* %arrayidx1491, align 1
  %conv1492 = zext i8 %856 to i32
  %cmp1493 = icmp ne i32 %conv1492, 0
  br i1 %cmp1493, label %land.lhs.true1495, label %lor.lhs.false1501

land.lhs.true1495:                                ; preds = %land.lhs.true1489
  %857 = load i8*, i8** @fdtable, align 4
  %858 = load %struct.redir*, %struct.redir** %fn, align 4
  %fd21496 = getelementptr inbounds %struct.redir, %struct.redir* %858, i32 0, i32 3
  %859 = load i32, i32* %fd21496, align 4
  %arrayidx1497 = getelementptr inbounds i8, i8* %857, i32 %859
  %860 = load i8, i8* %arrayidx1497, align 1
  %conv1498 = zext i8 %860 to i32
  %cmp1499 = icmp ne i32 %conv1498, 2
  br i1 %cmp1499, label %if.then1509, label %lor.lhs.false1501

lor.lhs.false1501:                                ; preds = %land.lhs.true1495, %land.lhs.true1489
  %861 = load %struct.redir*, %struct.redir** %fn, align 4
  %fd21502 = getelementptr inbounds %struct.redir, %struct.redir* %861, i32 0, i32 3
  %862 = load i32, i32* %fd21502, align 4
  %863 = load i32, i32* @coprocin, align 4
  %cmp1503 = icmp eq i32 %862, %863
  br i1 %cmp1503, label %if.then1509, label %lor.lhs.false1505

lor.lhs.false1505:                                ; preds = %lor.lhs.false1501
  %864 = load %struct.redir*, %struct.redir** %fn, align 4
  %fd21506 = getelementptr inbounds %struct.redir, %struct.redir* %864, i32 0, i32 3
  %865 = load i32, i32* %fd21506, align 4
  %866 = load i32, i32* @coprocout, align 4
  %cmp1507 = icmp eq i32 %865, %866
  br i1 %cmp1507, label %if.then1509, label %if.else1511

if.then1509:                                      ; preds = %lor.lhs.false1505, %lor.lhs.false1501, %land.lhs.true1495
  store i32 -1, i32* %fil, align 4
  %call1510 = call i32* @__errno_location()
  store i32 9, i32* %call1510, align 4
  br label %if.end1526

if.else1511:                                      ; preds = %lor.lhs.false1505, %land.lhs.true1485, %if.else1481
  %867 = load %struct.redir*, %struct.redir** %fn, align 4
  %fd21512 = getelementptr inbounds %struct.redir, %struct.redir* %867, i32 0, i32 3
  %868 = load i32, i32* %fd21512, align 4
  store i32 %868, i32* %fd, align 4
  %869 = load i32, i32* %fd, align 4
  %cmp1513 = icmp eq i32 %869, -2
  br i1 %cmp1513, label %if.then1515, label %if.end1523

if.then1515:                                      ; preds = %if.else1511
  %870 = load %struct.redir*, %struct.redir** %fn, align 4
  %type1516 = getelementptr inbounds %struct.redir, %struct.redir* %870, i32 0, i32 0
  %871 = load i32, i32* %type1516, align 4
  %cmp1517 = icmp eq i32 %871, 14
  br i1 %cmp1517, label %cond.true1519, label %cond.false1520

cond.true1519:                                    ; preds = %if.then1515
  %872 = load i32, i32* @coprocout, align 4
  br label %cond.end1521

cond.false1520:                                   ; preds = %if.then1515
  %873 = load i32, i32* @coprocin, align 4
  br label %cond.end1521

cond.end1521:                                     ; preds = %cond.false1520, %cond.true1519
  %cond1522 = phi i32 [ %872, %cond.true1519 ], [ %873, %cond.false1520 ]
  store i32 %cond1522, i32* %fd, align 4
  br label %if.end1523

if.end1523:                                       ; preds = %cond.end1521, %if.else1511
  %874 = load i32, i32* %fd, align 4
  %call1524 = call i32 @dup(i32 %874)
  %call1525 = call i32 @movefd(i32 %call1524)
  store i32 %call1525, i32* %fil, align 4
  br label %if.end1526

if.end1526:                                       ; preds = %if.end1523, %if.then1509
  br label %if.end1527

if.end1527:                                       ; preds = %if.end1526, %if.then1480
  %875 = load i32, i32* %fil, align 4
  %cmp1528 = icmp eq i32 %875, -1
  br i1 %cmp1528, label %if.then1530, label %if.end1559

if.then1530:                                      ; preds = %if.end1527
  %arraydecay1531 = getelementptr inbounds [10 x %struct.multio*], [10 x %struct.multio*]* %mfds, i32 0, i32 0
  call void @closemnodes(%struct.multio** %arraydecay1531)
  %arraydecay1532 = getelementptr inbounds [10 x i32], [10 x i32]* %save, i32 0, i32 0
  call void @fixfds(i32* %arraydecay1532)
  %876 = load %struct.redir*, %struct.redir** %fn, align 4
  %fd21533 = getelementptr inbounds %struct.redir, %struct.redir* %876, i32 0, i32 3
  %877 = load i32, i32* %fd21533, align 4
  %cmp1534 = icmp ne i32 %877, -2
  br i1 %cmp1534, label %if.then1536, label %if.end1540

if.then1536:                                      ; preds = %if.then1530
  %arraydecay1537 = getelementptr inbounds [12 x i8], [12 x i8]* %fdstr, i32 0, i32 0
  %878 = load %struct.redir*, %struct.redir** %fn, align 4
  %fd21538 = getelementptr inbounds %struct.redir, %struct.redir* %878, i32 0, i32 3
  %879 = load i32, i32* %fd21538, align 4
  %call1539 = call i32 (i8*, i8*, ...) @sprintf(i8* %arraydecay1537, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.71, i32 0, i32 0), i32 %879)
  br label %if.end1540

if.end1540:                                       ; preds = %if.then1536, %if.then1530
  %call1541 = call i32* @__errno_location()
  %880 = load i32, i32* %call1541, align 4
  %tobool1542 = icmp ne i32 %880, 0
  br i1 %tobool1542, label %if.then1543, label %if.end1553

if.then1543:                                      ; preds = %if.end1540
  %881 = load %struct.redir*, %struct.redir** %fn, align 4
  %fd21544 = getelementptr inbounds %struct.redir, %struct.redir* %881, i32 0, i32 3
  %882 = load i32, i32* %fd21544, align 4
  %cmp1545 = icmp eq i32 %882, -2
  br i1 %cmp1545, label %cond.true1547, label %cond.false1548

cond.true1547:                                    ; preds = %if.then1543
  br label %cond.end1550

cond.false1548:                                   ; preds = %if.then1543
  %arraydecay1549 = getelementptr inbounds [12 x i8], [12 x i8]* %fdstr, i32 0, i32 0
  br label %cond.end1550

cond.end1550:                                     ; preds = %cond.false1548, %cond.true1547
  %cond1551 = phi i8* [ getelementptr inbounds ([10 x i8], [10 x i8]* @.str.73, i32 0, i32 0), %cond.true1547 ], [ %arraydecay1549, %cond.false1548 ]
  %call1552 = call i32* @__errno_location()
  %883 = load i32, i32* %call1552, align 4
  call void (i8*, ...) @zwarn(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.72, i32 0, i32 0), i8* %cond1551, i32 %883)
  br label %if.end1553

if.end1553:                                       ; preds = %cond.end1550, %if.end1540
  br label %do.body1554

do.body1554:                                      ; preds = %if.end1553
  %884 = load i32, i32* %forked, align 4
  %tobool1555 = icmp ne i32 %884, 0
  br i1 %tobool1555, label %if.else1557, label %if.then1556

if.then1556:                                      ; preds = %do.body1554
  store i32 1, i32* @lastval, align 4
  store i32 1, i32* %redir_err, align 4
  br label %done

if.else1557:                                      ; preds = %do.body1554
  call void @_exit(i32 1) #4
  unreachable

do.end1558:                                       ; No predecessors!
  br label %if.end1559

if.end1559:                                       ; preds = %do.end1558, %if.end1527
  %885 = load i32, i32* %forked, align 4
  %arraydecay1560 = getelementptr inbounds [10 x i32], [10 x i32]* %save, i32 0, i32 0
  %arraydecay1561 = getelementptr inbounds [10 x %struct.multio*], [10 x %struct.multio*]* %mfds, i32 0, i32 0
  %886 = load %struct.redir*, %struct.redir** %fn, align 4
  %fd11562 = getelementptr inbounds %struct.redir, %struct.redir* %886, i32 0, i32 2
  %887 = load i32, i32* %fd11562, align 4
  %888 = load i32, i32* %fil, align 4
  %889 = load %struct.redir*, %struct.redir** %fn, align 4
  %type1563 = getelementptr inbounds %struct.redir, %struct.redir* %889, i32 0, i32 0
  %890 = load i32, i32* %type1563, align 4
  %cmp1564 = icmp eq i32 %890, 14
  %conv1565 = zext i1 %cmp1564 to i32
  %891 = load %struct.redir*, %struct.redir** %fn, align 4
  %varid1566 = getelementptr inbounds %struct.redir, %struct.redir* %891, i32 0, i32 5
  %892 = load i8*, i8** %varid1566, align 4
  call void @addfd(i32 %885, i32* %arraydecay1560, %struct.multio** %arraydecay1561, i32 %887, i32 %888, i32 %conv1565, i8* %892)
  br label %sw.epilog1672

sw.default1567:                                   ; preds = %if.end1246
  %893 = load %struct.redir*, %struct.redir** %fn, align 4
  %call1568 = call i32 @checkclobberparam(%struct.redir* %893)
  %tobool1569 = icmp ne i32 %call1568, 0
  br i1 %tobool1569, label %if.else1571, label %if.then1570

if.then1570:                                      ; preds = %sw.default1567
  store i32 -1, i32* %fil, align 4
  br label %if.end1612

if.else1571:                                      ; preds = %sw.default1567
  %894 = load %struct.redir*, %struct.redir** %fn, align 4
  %type1572 = getelementptr inbounds %struct.redir, %struct.redir* %894, i32 0, i32 0
  %895 = load i32, i32* %type1572, align 4
  %cmp1573 = icmp sge i32 %895, 0
  br i1 %cmp1573, label %land.lhs.true1575, label %if.else1609

land.lhs.true1575:                                ; preds = %if.else1571
  %896 = load %struct.redir*, %struct.redir** %fn, align 4
  %type1576 = getelementptr inbounds %struct.redir, %struct.redir* %896, i32 0, i32 0
  %897 = load i32, i32* %type1576, align 4
  %cmp1577 = icmp sle i32 %897, 8
  br i1 %cmp1577, label %land.lhs.true1579, label %if.else1609

land.lhs.true1579:                                ; preds = %land.lhs.true1575
  %898 = load %struct.redir*, %struct.redir** %fn, align 4
  %type1580 = getelementptr inbounds %struct.redir, %struct.redir* %898, i32 0, i32 0
  %899 = load i32, i32* %type1580, align 4
  %and1581 = and i32 %899, 2
  %tobool1582 = icmp ne i32 %and1581, 0
  br i1 %tobool1582, label %if.then1583, label %if.else1609

if.then1583:                                      ; preds = %land.lhs.true1579
  %900 = load %struct.redir*, %struct.redir** %fn, align 4
  %name1584 = getelementptr inbounds %struct.redir, %struct.redir* %900, i32 0, i32 4
  %901 = load i8*, i8** %name1584, align 4
  %call1585 = call i8* @unmeta(i8* %901)
  %902 = load i8, i8* getelementptr inbounds ([181 x i8], [181 x i8]* @opts, i32 0, i32 34), align 1
  %tobool1586 = icmp ne i8 %902, 0
  br i1 %tobool1586, label %land.end1605, label %land.lhs.true1587

land.lhs.true1587:                                ; preds = %if.then1583
  %903 = load i8, i8* getelementptr inbounds ([181 x i8], [181 x i8]* @opts, i32 0, i32 35), align 1
  %tobool1588 = icmp ne i8 %903, 0
  br i1 %tobool1588, label %land.end1605, label %land.rhs1589

land.rhs1589:                                     ; preds = %land.lhs.true1587
  %904 = load %struct.redir*, %struct.redir** %fn, align 4
  %type1590 = getelementptr inbounds %struct.redir, %struct.redir* %904, i32 0, i32 0
  %905 = load i32, i32* %type1590, align 4
  %cmp1591 = icmp sge i32 %905, 0
  br i1 %cmp1591, label %land.lhs.true1593, label %land.end1601

land.lhs.true1593:                                ; preds = %land.rhs1589
  %906 = load %struct.redir*, %struct.redir** %fn, align 4
  %type1594 = getelementptr inbounds %struct.redir, %struct.redir* %906, i32 0, i32 0
  %907 = load i32, i32* %type1594, align 4
  %cmp1595 = icmp sle i32 %907, 8
  br i1 %cmp1595, label %land.rhs1597, label %land.end1601

land.rhs1597:                                     ; preds = %land.lhs.true1593
  %908 = load %struct.redir*, %struct.redir** %fn, align 4
  %type1598 = getelementptr inbounds %struct.redir, %struct.redir* %908, i32 0, i32 0
  %909 = load i32, i32* %type1598, align 4
  %and1599 = and i32 %909, 1
  %tobool1600 = icmp ne i32 %and1599, 0
  br label %land.end1601

land.end1601:                                     ; preds = %land.rhs1597, %land.lhs.true1593, %land.rhs1589
  %910 = phi i1 [ false, %land.lhs.true1593 ], [ false, %land.rhs1589 ], [ %tobool1600, %land.rhs1597 ]
  %lnot1603 = xor i1 %910, true
  br label %land.end1605

land.end1605:                                     ; preds = %land.end1601, %land.lhs.true1587, %if.then1583
  %911 = phi i1 [ false, %land.lhs.true1587 ], [ false, %if.then1583 ], [ %lnot1603, %land.end1601 ]
  %cond1607 = select i1 %911, i32 1281, i32 1345
  %call1608 = call i32 (i8*, i32, ...) @open(i8* %call1585, i32 %cond1607, i32 438)
  store i32 %call1608, i32* %fil, align 4
  br label %if.end1611

if.else1609:                                      ; preds = %land.lhs.true1579, %land.lhs.true1575, %if.else1571
  %912 = load %struct.redir*, %struct.redir** %fn, align 4
  %call1610 = call i32 @clobber_open(%struct.redir* %912)
  store i32 %call1610, i32* %fil, align 4
  br label %if.end1611

if.end1611:                                       ; preds = %if.else1609, %land.end1605
  br label %if.end1612

if.end1612:                                       ; preds = %if.end1611, %if.then1570
  %913 = load i32, i32* %fil, align 4
  %cmp1613 = icmp ne i32 %913, -1
  br i1 %cmp1613, label %land.lhs.true1615, label %if.else1626

land.lhs.true1615:                                ; preds = %if.end1612
  %914 = load %struct.redir*, %struct.redir** %fn, align 4
  %type1616 = getelementptr inbounds %struct.redir, %struct.redir* %914, i32 0, i32 0
  %915 = load i32, i32* %type1616, align 4
  %cmp1617 = icmp sge i32 %915, 4
  br i1 %cmp1617, label %land.lhs.true1619, label %if.else1626

land.lhs.true1619:                                ; preds = %land.lhs.true1615
  %916 = load %struct.redir*, %struct.redir** %fn, align 4
  %type1620 = getelementptr inbounds %struct.redir, %struct.redir* %916, i32 0, i32 0
  %917 = load i32, i32* %type1620, align 4
  %cmp1621 = icmp sle i32 %917, 7
  br i1 %cmp1621, label %if.then1623, label %if.else1626

if.then1623:                                      ; preds = %land.lhs.true1619
  %918 = load i32, i32* %fil, align 4
  %call1624 = call i32 @dup(i32 %918)
  %call1625 = call i32 @movefd(i32 %call1624)
  store i32 %call1625, i32* %dfil, align 4
  br label %if.end1627

if.else1626:                                      ; preds = %land.lhs.true1619, %land.lhs.true1615, %if.end1612
  store i32 0, i32* %dfil, align 4
  br label %if.end1627

if.end1627:                                       ; preds = %if.else1626, %if.then1623
  %919 = load i32, i32* %fil, align 4
  %cmp1628 = icmp eq i32 %919, -1
  br i1 %cmp1628, label %if.then1633, label %lor.lhs.false1630

lor.lhs.false1630:                                ; preds = %if.end1627
  %920 = load i32, i32* %dfil, align 4
  %cmp1631 = icmp eq i32 %920, -1
  br i1 %cmp1631, label %if.then1633, label %if.end1656

if.then1633:                                      ; preds = %lor.lhs.false1630, %if.end1627
  %921 = load i32, i32* %fil, align 4
  %cmp1634 = icmp ne i32 %921, -1
  br i1 %cmp1634, label %if.then1636, label %if.end1638

if.then1636:                                      ; preds = %if.then1633
  %922 = load i32, i32* %fil, align 4
  %call1637 = call i32 @close(i32 %922)
  br label %if.end1638

if.end1638:                                       ; preds = %if.then1636, %if.then1633
  %arraydecay1639 = getelementptr inbounds [10 x %struct.multio*], [10 x %struct.multio*]* %mfds, i32 0, i32 0
  call void @closemnodes(%struct.multio** %arraydecay1639)
  %arraydecay1640 = getelementptr inbounds [10 x i32], [10 x i32]* %save, i32 0, i32 0
  call void @fixfds(i32* %arraydecay1640)
  %call1641 = call i32* @__errno_location()
  %923 = load i32, i32* %call1641, align 4
  %tobool1642 = icmp ne i32 %923, 0
  br i1 %tobool1642, label %land.lhs.true1643, label %if.end1650

land.lhs.true1643:                                ; preds = %if.end1638
  %call1644 = call i32* @__errno_location()
  %924 = load i32, i32* %call1644, align 4
  %cmp1645 = icmp ne i32 %924, 4
  br i1 %cmp1645, label %if.then1647, label %if.end1650

if.then1647:                                      ; preds = %land.lhs.true1643
  %call1648 = call i32* @__errno_location()
  %925 = load i32, i32* %call1648, align 4
  %926 = load %struct.redir*, %struct.redir** %fn, align 4
  %name1649 = getelementptr inbounds %struct.redir, %struct.redir* %926, i32 0, i32 4
  %927 = load i8*, i8** %name1649, align 4
  call void (i8*, ...) @zwarn(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.9, i32 0, i32 0), i32 %925, i8* %927)
  br label %if.end1650

if.end1650:                                       ; preds = %if.then1647, %land.lhs.true1643, %if.end1638
  br label %do.body1651

do.body1651:                                      ; preds = %if.end1650
  %928 = load i32, i32* %forked, align 4
  %tobool1652 = icmp ne i32 %928, 0
  br i1 %tobool1652, label %if.else1654, label %if.then1653

if.then1653:                                      ; preds = %do.body1651
  store i32 1, i32* @lastval, align 4
  store i32 1, i32* %redir_err, align 4
  br label %done

if.else1654:                                      ; preds = %do.body1651
  call void @_exit(i32 1) #4
  unreachable

do.end1655:                                       ; No predecessors!
  br label %if.end1656

if.end1656:                                       ; preds = %do.end1655, %lor.lhs.false1630
  %929 = load i32, i32* %forked, align 4
  %arraydecay1657 = getelementptr inbounds [10 x i32], [10 x i32]* %save, i32 0, i32 0
  %arraydecay1658 = getelementptr inbounds [10 x %struct.multio*], [10 x %struct.multio*]* %mfds, i32 0, i32 0
  %930 = load %struct.redir*, %struct.redir** %fn, align 4
  %fd11659 = getelementptr inbounds %struct.redir, %struct.redir* %930, i32 0, i32 2
  %931 = load i32, i32* %fd11659, align 4
  %932 = load i32, i32* %fil, align 4
  %933 = load %struct.redir*, %struct.redir** %fn, align 4
  %varid1660 = getelementptr inbounds %struct.redir, %struct.redir* %933, i32 0, i32 5
  %934 = load i8*, i8** %varid1660, align 4
  call void @addfd(i32 %929, i32* %arraydecay1657, %struct.multio** %arraydecay1658, i32 %931, i32 %932, i32 1, i8* %934)
  %935 = load %struct.redir*, %struct.redir** %fn, align 4
  %type1661 = getelementptr inbounds %struct.redir, %struct.redir* %935, i32 0, i32 0
  %936 = load i32, i32* %type1661, align 4
  %cmp1662 = icmp sge i32 %936, 4
  br i1 %cmp1662, label %land.lhs.true1664, label %if.end1671

land.lhs.true1664:                                ; preds = %if.end1656
  %937 = load %struct.redir*, %struct.redir** %fn, align 4
  %type1665 = getelementptr inbounds %struct.redir, %struct.redir* %937, i32 0, i32 0
  %938 = load i32, i32* %type1665, align 4
  %cmp1666 = icmp sle i32 %938, 7
  br i1 %cmp1666, label %if.then1668, label %if.end1671

if.then1668:                                      ; preds = %land.lhs.true1664
  %939 = load i32, i32* %forked, align 4
  %arraydecay1669 = getelementptr inbounds [10 x i32], [10 x i32]* %save, i32 0, i32 0
  %arraydecay1670 = getelementptr inbounds [10 x %struct.multio*], [10 x %struct.multio*]* %mfds, i32 0, i32 0
  %940 = load i32, i32* %dfil, align 4
  call void @addfd(i32 %939, i32* %arraydecay1669, %struct.multio** %arraydecay1670, i32 2, i32 %940, i32 1, i8* null)
  br label %if.end1671

if.end1671:                                       ; preds = %if.then1668, %land.lhs.true1664, %if.end1656
  br label %sw.epilog1672

sw.epilog1672:                                    ; preds = %if.end1671, %if.end1559, %if.end1468, %if.end1333, %if.end1274
  %941 = load i32, i32* @errflag, align 4
  %tobool1673 = icmp ne i32 %941, 0
  br i1 %tobool1673, label %if.then1674, label %if.end1682

if.then1674:                                      ; preds = %sw.epilog1672
  %arraydecay1675 = getelementptr inbounds [10 x %struct.multio*], [10 x %struct.multio*]* %mfds, i32 0, i32 0
  call void @closemnodes(%struct.multio** %arraydecay1675)
  %arraydecay1676 = getelementptr inbounds [10 x i32], [10 x i32]* %save, i32 0, i32 0
  call void @fixfds(i32* %arraydecay1676)
  br label %do.body1677

do.body1677:                                      ; preds = %if.then1674
  %942 = load i32, i32* %forked, align 4
  %tobool1678 = icmp ne i32 %942, 0
  br i1 %tobool1678, label %if.else1680, label %if.then1679

if.then1679:                                      ; preds = %do.body1677
  store i32 1, i32* @lastval, align 4
  store i32 1, i32* %redir_err, align 4
  br label %done

if.else1680:                                      ; preds = %do.body1677
  call void @_exit(i32 1) #4
  unreachable

do.end1681:                                       ; No predecessors!
  br label %if.end1682

if.end1682:                                       ; preds = %do.end1681, %sw.epilog1672
  br label %if.end1683

if.end1683:                                       ; preds = %if.end1682, %if.end1202
  br label %if.end1684

if.end1684:                                       ; preds = %if.end1683, %if.end1172
  br label %while.cond1139

while.end1685:                                    ; preds = %land.end1146
  store i32 0, i32* %i, align 4
  br label %for.cond1686

for.cond1686:                                     ; preds = %for.inc1699, %while.end1685
  %943 = load i32, i32* %i, align 4
  %cmp1687 = icmp slt i32 %943, 10
  br i1 %cmp1687, label %for.body1689, label %for.end1701

for.body1689:                                     ; preds = %for.cond1686
  %944 = load i32, i32* %i, align 4
  %arrayidx1690 = getelementptr inbounds [10 x %struct.multio*], [10 x %struct.multio*]* %mfds, i32 0, i32 %944
  %945 = load %struct.multio*, %struct.multio** %arrayidx1690, align 4
  %tobool1691 = icmp ne %struct.multio* %945, null
  br i1 %tobool1691, label %land.lhs.true1692, label %if.end1698

land.lhs.true1692:                                ; preds = %for.body1689
  %946 = load i32, i32* %i, align 4
  %arrayidx1693 = getelementptr inbounds [10 x %struct.multio*], [10 x %struct.multio*]* %mfds, i32 0, i32 %946
  %947 = load %struct.multio*, %struct.multio** %arrayidx1693, align 4
  %ct = getelementptr inbounds %struct.multio, %struct.multio* %947, i32 0, i32 0
  %948 = load i32, i32* %ct, align 4
  %cmp1694 = icmp sge i32 %948, 2
  br i1 %cmp1694, label %if.then1696, label %if.end1698

if.then1696:                                      ; preds = %land.lhs.true1692
  %arraydecay1697 = getelementptr inbounds [10 x %struct.multio*], [10 x %struct.multio*]* %mfds, i32 0, i32 0
  %949 = load i32, i32* %i, align 4
  call void @closemn(%struct.multio** %arraydecay1697, i32 %949, i32 15)
  br label %if.end1698

if.end1698:                                       ; preds = %if.then1696, %land.lhs.true1692, %for.body1689
  br label %for.inc1699

for.inc1699:                                      ; preds = %if.end1698
  %950 = load i32, i32* %i, align 4
  %inc1700 = add nsw i32 %950, 1
  store i32 %inc1700, i32* %i, align 4
  br label %for.cond1686

for.end1701:                                      ; preds = %for.cond1686
  %951 = load i32, i32* %nullexec, align 4
  %tobool1702 = icmp ne i32 %951, 0
  br i1 %tobool1702, label %if.then1703, label %if.else1744

if.then1703:                                      ; preds = %for.end1701
  %952 = load i32*, i32** %varspc, align 4
  %tobool1704 = icmp ne i32* %952, null
  br i1 %tobool1704, label %if.then1705, label %if.end1715

if.then1705:                                      ; preds = %if.then1703
  store %union.linkroot* null, %union.linkroot** %restorelist, align 4
  store %union.linkroot* null, %union.linkroot** %removelist, align 4
  %953 = load i8, i8* getelementptr inbounds ([181 x i8], [181 x i8]* @opts, i32 0, i32 132), align 1
  %tobool1706 = icmp ne i8 %953, 0
  br i1 %tobool1706, label %if.end1711, label %land.lhs.true1707

land.lhs.true1707:                                ; preds = %if.then1705
  %954 = load i32, i32* %nullexec, align 4
  %cmp1708 = icmp ne i32 %954, 2
  br i1 %cmp1708, label %if.then1710, label %if.end1711

if.then1710:                                      ; preds = %land.lhs.true1707
  %955 = load %struct.estate*, %struct.estate** %state.addr, align 4
  %956 = load i32*, i32** %varspc, align 4
  call void @save_params(%struct.estate* %955, i32* %956, %union.linkroot** %restorelist, %union.linkroot** %removelist)
  br label %if.end1711

if.end1711:                                       ; preds = %if.then1710, %land.lhs.true1707, %if.then1705
  %957 = load %struct.estate*, %struct.estate** %state.addr, align 4
  %958 = load i32*, i32** %varspc, align 4
  call void @addvars(%struct.estate* %957, i32* %958, i32 0)
  %959 = load %union.linkroot*, %union.linkroot** %restorelist, align 4
  %tobool1712 = icmp ne %union.linkroot* %959, null
  br i1 %tobool1712, label %if.then1713, label %if.end1714

if.then1713:                                      ; preds = %if.end1711
  %960 = load %union.linkroot*, %union.linkroot** %restorelist, align 4
  %961 = load %union.linkroot*, %union.linkroot** %removelist, align 4
  call void @restore_params(%union.linkroot* %960, %union.linkroot* %961)
  br label %if.end1714

if.end1714:                                       ; preds = %if.then1713, %if.end1711
  br label %if.end1715

if.end1715:                                       ; preds = %if.end1714, %if.then1703
  %962 = load i32, i32* @errflag, align 4
  %tobool1716 = icmp ne i32 %962, 0
  br i1 %tobool1716, label %cond.true1717, label %cond.false1718

cond.true1717:                                    ; preds = %if.end1715
  %963 = load i32, i32* @errflag, align 4
  br label %cond.end1719

cond.false1718:                                   ; preds = %if.end1715
  %964 = load i32, i32* @cmdoutval, align 4
  br label %cond.end1719

cond.end1719:                                     ; preds = %cond.false1718, %cond.true1717
  %cond1720 = phi i32 [ %963, %cond.true1717 ], [ %964, %cond.false1718 ]
  store i32 %cond1720, i32* @lastval, align 4
  %965 = load i32, i32* %nullexec, align 4
  %cmp1721 = icmp eq i32 %965, 1
  br i1 %cmp1721, label %if.then1723, label %if.end1738

if.then1723:                                      ; preds = %cond.end1719
  store i32 0, i32* %i, align 4
  br label %for.cond1724

for.cond1724:                                     ; preds = %for.inc1735, %if.then1723
  %966 = load i32, i32* %i, align 4
  %cmp1725 = icmp slt i32 %966, 10
  br i1 %cmp1725, label %for.body1727, label %for.end1737

for.body1727:                                     ; preds = %for.cond1724
  %967 = load i32, i32* %i, align 4
  %arrayidx1728 = getelementptr inbounds [10 x i32], [10 x i32]* %save, i32 0, i32 %967
  %968 = load i32, i32* %arrayidx1728, align 4
  %cmp1729 = icmp ne i32 %968, -2
  br i1 %cmp1729, label %if.then1731, label %if.end1734

if.then1731:                                      ; preds = %for.body1727
  %969 = load i32, i32* %i, align 4
  %arrayidx1732 = getelementptr inbounds [10 x i32], [10 x i32]* %save, i32 0, i32 %969
  %970 = load i32, i32* %arrayidx1732, align 4
  %call1733 = call i32 @zclose(i32 %970)
  br label %if.end1734

if.end1734:                                       ; preds = %if.then1731, %for.body1727
  br label %for.inc1735

for.inc1735:                                      ; preds = %if.end1734
  %971 = load i32, i32* %i, align 4
  %inc1736 = add nsw i32 %971, 1
  store i32 %inc1736, i32* %i, align 4
  br label %for.cond1724

for.end1737:                                      ; preds = %for.cond1724
  br label %done

if.end1738:                                       ; preds = %cond.end1719
  %972 = load i8, i8* getelementptr inbounds ([181 x i8], [181 x i8]* @opts, i32 0, i32 178), align 1
  %tobool1739 = icmp ne i8 %972, 0
  br i1 %tobool1739, label %if.then1740, label %if.end1743

if.then1740:                                      ; preds = %if.end1738
  %973 = load %struct._IO_FILE*, %struct._IO_FILE** @xtrerr, align 4
  %call1741 = call i32 @fputc(i32 10, %struct._IO_FILE* %973)
  %974 = load %struct._IO_FILE*, %struct._IO_FILE** @xtrerr, align 4
  %call1742 = call i32 @fflush(%struct._IO_FILE* %974)
  br label %if.end1743

if.end1743:                                       ; preds = %if.then1740, %if.end1738
  br label %if.end2230

if.else1744:                                      ; preds = %for.end1701
  %975 = load i8, i8* getelementptr inbounds ([181 x i8], [181 x i8]* @opts, i32 0, i32 53), align 1
  %conv1745 = sext i8 %975 to i32
  %tobool1746 = icmp ne i32 %conv1745, 0
  br i1 %tobool1746, label %land.lhs.true1747, label %if.end2229

land.lhs.true1747:                                ; preds = %if.else1744
  %976 = load i32, i32* @errflag, align 4
  %tobool1748 = icmp ne i32 %976, 0
  br i1 %tobool1748, label %if.end2229, label %if.then1749

if.then1749:                                      ; preds = %land.lhs.true1747
  %977 = load i32, i32* @queueing_enabled, align 4
  store i32 %977, i32* %q, align 4
  %978 = load i32, i32* %is_exec, align 4
  %tobool1750 = icmp ne i32 %978, 0
  br i1 %tobool1750, label %if.then1751, label %if.end1775

if.then1751:                                      ; preds = %if.then1749
  %979 = load i32, i32* %how.addr, align 4
  %and1753 = and i32 %979, 4
  %tobool1754 = icmp ne i32 %and1753, 0
  %cond1755 = select i1 %tobool1754, i32 1, i32 0
  %or1756 = or i32 %cond1755, 2
  %or1757 = or i32 %or1756, 8
  store i32 %or1757, i32* %flags1752, align 4
  %980 = load i32, i32* %type, align 4
  %cmp1758 = icmp ne i32 %980, 8
  br i1 %cmp1758, label %if.then1760, label %if.end1762

if.then1760:                                      ; preds = %if.then1751
  %981 = load i32, i32* %flags1752, align 4
  %or1761 = or i32 %981, 4
  store i32 %or1761, i32* %flags1752, align 4
  br label %if.end1762

if.end1762:                                       ; preds = %if.then1760, %if.then1751
  %982 = load i32, i32* %do_exec, align 4
  %tobool1763 = icmp ne i32 %982, 0
  br i1 %tobool1763, label %land.lhs.true1770, label %lor.lhs.false1764

lor.lhs.false1764:                                ; preds = %if.end1762
  %983 = load i32, i32* %type, align 4
  %cmp1765 = icmp sge i32 %983, 9
  br i1 %cmp1765, label %land.lhs.true1767, label %if.end1774

land.lhs.true1767:                                ; preds = %lor.lhs.false1764
  %984 = load i32, i32* %last1.addr, align 4
  %cmp1768 = icmp eq i32 %984, 1
  br i1 %cmp1768, label %land.lhs.true1770, label %if.end1774

land.lhs.true1770:                                ; preds = %land.lhs.true1767, %if.end1762
  %985 = load i32, i32* %forked, align 4
  %tobool1771 = icmp ne i32 %985, 0
  br i1 %tobool1771, label %if.end1774, label %if.then1772

if.then1772:                                      ; preds = %land.lhs.true1770
  %986 = load i32, i32* %flags1752, align 4
  %or1773 = or i32 %986, 16
  store i32 %or1773, i32* %flags1752, align 4
  br label %if.end1774

if.end1774:                                       ; preds = %if.then1772, %land.lhs.true1770, %land.lhs.true1767, %lor.lhs.false1764
  %987 = load i32, i32* %flags1752, align 4
  call void @entersubsh(i32 %987)
  br label %if.end1775

if.end1775:                                       ; preds = %if.end1774, %if.then1749
  %988 = load i32, i32* %type, align 4
  %cmp1776 = icmp eq i32 %988, 11
  br i1 %cmp1776, label %if.then1778, label %if.else1811

if.then1778:                                      ; preds = %if.end1775
  %989 = load %union.linkroot*, %union.linkroot** %redir, align 4
  %tobool1779 = icmp ne %union.linkroot* %989, null
  br i1 %tobool1779, label %if.else1795, label %land.lhs.true1780

land.lhs.true1780:                                ; preds = %if.then1778
  %990 = load %struct.execcmd_params*, %struct.execcmd_params** %eparams.addr, align 4
  %beg1781 = getelementptr inbounds %struct.execcmd_params, %struct.execcmd_params* %990, i32 0, i32 2
  %991 = load i32*, i32** %beg1781, align 4
  %992 = load i32, i32* %991, align 4
  %and1782 = and i32 %992, 31
  %cmp1783 = icmp eq i32 %and1782, 4
  br i1 %cmp1783, label %if.then1785, label %if.else1795

if.then1785:                                      ; preds = %land.lhs.true1780
  %993 = load %struct.estate*, %struct.estate** %state.addr, align 4
  %prog1787 = getelementptr inbounds %struct.estate, %struct.estate* %993, i32 0, i32 0
  %994 = load %struct.eprog*, %struct.eprog** %prog1787, align 4
  %prog1788 = getelementptr inbounds %struct.estate, %struct.estate* %s1786, i32 0, i32 0
  store %struct.eprog* %994, %struct.eprog** %prog1788, align 4
  %995 = load %struct.execcmd_params*, %struct.execcmd_params** %eparams.addr, align 4
  %beg1789 = getelementptr inbounds %struct.execcmd_params, %struct.execcmd_params* %995, i32 0, i32 2
  %996 = load i32*, i32** %beg1789, align 4
  %pc1790 = getelementptr inbounds %struct.estate, %struct.estate* %s1786, i32 0, i32 1
  store i32* %996, i32** %pc1790, align 4
  %997 = load %struct.estate*, %struct.estate** %state.addr, align 4
  %prog1791 = getelementptr inbounds %struct.estate, %struct.estate* %997, i32 0, i32 0
  %998 = load %struct.eprog*, %struct.eprog** %prog1791, align 4
  %strs1792 = getelementptr inbounds %struct.eprog, %struct.eprog* %998, i32 0, i32 6
  %999 = load i8*, i8** %strs1792, align 4
  %strs1793 = getelementptr inbounds %struct.estate, %struct.estate* %s1786, i32 0, i32 2
  store i8* %999, i8** %strs1793, align 4
  call void @zcontext_save()
  %call1794 = call %struct.eprog* @eccopyredirs(%struct.estate* %s1786)
  store %struct.eprog* %call1794, %struct.eprog** %redir_prog, align 4
  call void @zcontext_restore()
  br label %if.end1796

if.else1795:                                      ; preds = %land.lhs.true1780, %if.then1778
  store %struct.eprog* null, %struct.eprog** %redir_prog, align 4
  br label %if.end1796

if.end1796:                                       ; preds = %if.else1795, %if.then1785
  br label %do.body1797

do.body1797:                                      ; preds = %if.end1796
  store i32 0, i32* @queueing_enabled, align 4
  br label %do.body1798

do.body1798:                                      ; preds = %do.body1797
  br label %while.cond1799

while.cond1799:                                   ; preds = %while.body1802, %do.body1798
  %1000 = load i32, i32* @queue_front, align 4
  %1001 = load i32, i32* @queue_rear, align 4
  %cmp1800 = icmp ne i32 %1000, %1001
  br i1 %cmp1800, label %while.body1802, label %while.end1807

while.body1802:                                   ; preds = %while.cond1799
  %1002 = load i32, i32* @queue_front, align 4
  %add1803 = add nsw i32 %1002, 1
  %rem = srem i32 %add1803, 128
  store i32 %rem, i32* @queue_front, align 4
  %1003 = load i32, i32* @queue_front, align 4
  %arrayidx1804 = getelementptr inbounds [128 x %struct.__sigset_t], [128 x %struct.__sigset_t]* @signal_mask_queue, i32 0, i32 %1003
  call void @signal_setmask(%struct.__sigset_t* sret %tmp, %struct.__sigset_t* byval align 4 %arrayidx1804)
  %1004 = bitcast %struct.__sigset_t* %oset to i8*
  %1005 = bitcast %struct.__sigset_t* %tmp to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %1004, i8* %1005, i32 128, i32 4, i1 false)
  %1006 = load i32, i32* @queue_front, align 4
  %arrayidx1805 = getelementptr inbounds [128 x i32], [128 x i32]* @signal_queue, i32 0, i32 %1006
  %1007 = load i32, i32* %arrayidx1805, align 4
  call void @zhandler(i32 %1007)
  call void @signal_setmask(%struct.__sigset_t* sret %tmp1806, %struct.__sigset_t* byval align 4 %oset)
  br label %while.cond1799

while.end1807:                                    ; preds = %while.cond1799
  br label %do.end1808

do.end1808:                                       ; preds = %while.end1807
  br label %do.end1809

do.end1809:                                       ; preds = %do.end1808
  %1008 = load %struct.estate*, %struct.estate** %state.addr, align 4
  %1009 = load %struct.eprog*, %struct.eprog** %redir_prog, align 4
  %call1810 = call i32 @execfuncdef(%struct.estate* %1008, %struct.eprog* %1009)
  store i32 %call1810, i32* @lastval, align 4
  %1010 = load i32, i32* %q, align 4
  store i32 %1010, i32* @queueing_enabled, align 4
  br label %if.end2228

if.else1811:                                      ; preds = %if.end1775
  %1011 = load i32, i32* %type, align 4
  %cmp1812 = icmp sge i32 %1011, 9
  br i1 %cmp1812, label %if.then1814, label %if.else1845

if.then1814:                                      ; preds = %if.else1811
  %1012 = load i32, i32* %last1.addr, align 4
  %cmp1815 = icmp eq i32 %1012, 1
  br i1 %cmp1815, label %if.then1817, label %if.end1818

if.then1817:                                      ; preds = %if.then1814
  store i32 1, i32* %do_exec, align 4
  br label %if.end1818

if.end1818:                                       ; preds = %if.then1817, %if.then1814
  br label %do.body1819

do.body1819:                                      ; preds = %if.end1818
  store i32 0, i32* @queueing_enabled, align 4
  br label %do.body1820

do.body1820:                                      ; preds = %do.body1819
  br label %while.cond1821

while.cond1821:                                   ; preds = %while.body1824, %do.body1820
  %1013 = load i32, i32* @queue_front, align 4
  %1014 = load i32, i32* @queue_rear, align 4
  %cmp1822 = icmp ne i32 %1013, %1014
  br i1 %cmp1822, label %while.body1824, label %while.end1833

while.body1824:                                   ; preds = %while.cond1821
  %1015 = load i32, i32* @queue_front, align 4
  %add1827 = add nsw i32 %1015, 1
  %rem1828 = srem i32 %add1827, 128
  store i32 %rem1828, i32* @queue_front, align 4
  %1016 = load i32, i32* @queue_front, align 4
  %arrayidx1829 = getelementptr inbounds [128 x %struct.__sigset_t], [128 x %struct.__sigset_t]* @signal_mask_queue, i32 0, i32 %1016
  call void @signal_setmask(%struct.__sigset_t* sret %tmp1830, %struct.__sigset_t* byval align 4 %arrayidx1829)
  %1017 = bitcast %struct.__sigset_t* %oset1826 to i8*
  %1018 = bitcast %struct.__sigset_t* %tmp1830 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %1017, i8* %1018, i32 128, i32 4, i1 false)
  %1019 = load i32, i32* @queue_front, align 4
  %arrayidx1831 = getelementptr inbounds [128 x i32], [128 x i32]* @signal_queue, i32 0, i32 %1019
  %1020 = load i32, i32* %arrayidx1831, align 4
  call void @zhandler(i32 %1020)
  call void @signal_setmask(%struct.__sigset_t* sret %tmp1832, %struct.__sigset_t* byval align 4 %oset1826)
  br label %while.cond1821

while.end1833:                                    ; preds = %while.cond1821
  br label %do.end1834

do.end1834:                                       ; preds = %while.end1833
  br label %do.end1835

do.end1835:                                       ; preds = %do.end1834
  %1021 = load i32, i32* %type, align 4
  %cmp1836 = icmp eq i32 %1021, 20
  br i1 %cmp1836, label %if.then1838, label %if.else1840

if.then1838:                                      ; preds = %do.end1835
  %1022 = load %struct.estate*, %struct.estate** %state.addr, align 4
  %1023 = load i32, i32* %do_exec, align 4
  %call1839 = call i32 @execautofn_basic(%struct.estate* %1022, i32 %1023)
  store i32 %call1839, i32* @lastval, align 4
  br label %if.end1844

if.else1840:                                      ; preds = %do.end1835
  %1024 = load i32, i32* %type, align 4
  %sub1841 = sub nsw i32 %1024, 9
  %arrayidx1842 = getelementptr inbounds [13 x i32 (%struct.estate*, i32)*], [13 x i32 (%struct.estate*, i32)*]* @execfuncs, i32 0, i32 %sub1841
  %1025 = load i32 (%struct.estate*, i32)*, i32 (%struct.estate*, i32)** %arrayidx1842, align 4
  %1026 = load %struct.estate*, %struct.estate** %state.addr, align 4
  %1027 = load i32, i32* %do_exec, align 4
  %call1843 = call i32 %1025(%struct.estate* %1026, i32 %1027)
  store i32 %call1843, i32* @lastval, align 4
  br label %if.end1844

if.end1844:                                       ; preds = %if.else1840, %if.then1838
  %1028 = load i32, i32* %q, align 4
  store i32 %1028, i32* @queueing_enabled, align 4
  br label %if.end2227

if.else1845:                                      ; preds = %if.else1811
  %1029 = load i32, i32* %is_builtin, align 4
  %tobool1846 = icmp ne i32 %1029, 0
  br i1 %tobool1846, label %if.then1849, label %lor.lhs.false1847

lor.lhs.false1847:                                ; preds = %if.else1845
  %1030 = load i32, i32* %is_shfunc, align 4
  %tobool1848 = icmp ne i32 %1030, 0
  br i1 %tobool1848, label %if.then1849, label %if.else2167

if.then1849:                                      ; preds = %lor.lhs.false1847, %if.else1845
  store %union.linkroot* null, %union.linkroot** %restorelist1851, align 4
  store %union.linkroot* null, %union.linkroot** %removelist1853, align 4
  store i32 0, i32* %do_save, align 4
  %1031 = load i32, i32* %forked, align 4
  %tobool1855 = icmp ne i32 %1031, 0
  br i1 %tobool1855, label %if.end1881, label %if.then1856

if.then1856:                                      ; preds = %if.then1849
  %1032 = load i8, i8* getelementptr inbounds ([181 x i8], [181 x i8]* @opts, i32 0, i32 132), align 1
  %tobool1857 = icmp ne i8 %1032, 0
  br i1 %tobool1857, label %if.then1858, label %if.else1868

if.then1858:                                      ; preds = %if.then1856
  %1033 = load i32, i32* %is_shfunc, align 4
  %tobool1859 = icmp ne i32 %1033, 0
  br i1 %tobool1859, label %if.then1864, label %lor.lhs.false1860

lor.lhs.false1860:                                ; preds = %if.then1858
  %1034 = load %struct.hashnode*, %struct.hashnode** %hn, align 4
  %flags1861 = getelementptr inbounds %struct.hashnode, %struct.hashnode* %1034, i32 0, i32 2
  %1035 = load i32, i32* %flags1861, align 4
  %and1862 = and i32 %1035, 526336
  %tobool1863 = icmp ne i32 %and1862, 0
  br i1 %tobool1863, label %if.then1864, label %if.else1866

if.then1864:                                      ; preds = %lor.lhs.false1860, %if.then1858
  %1036 = load i32, i32* %orig_cflags, align 4
  %and1865 = and i32 %1036, 256
  store i32 %and1865, i32* %do_save, align 4
  br label %if.end1867

if.else1866:                                      ; preds = %lor.lhs.false1860
  store i32 1, i32* %do_save, align 4
  br label %if.end1867

if.end1867:                                       ; preds = %if.else1866, %if.then1864
  br label %if.end1875

if.else1868:                                      ; preds = %if.then1856
  %1037 = load i32, i32* %cflags, align 4
  %and1869 = and i32 %1037, 524544
  %tobool1870 = icmp ne i32 %and1869, 0
  br i1 %tobool1870, label %if.then1873, label %lor.lhs.false1871

lor.lhs.false1871:                                ; preds = %if.else1868
  %1038 = load i32, i32* %magic_assign, align 4
  %tobool1872 = icmp ne i32 %1038, 0
  br i1 %tobool1872, label %if.end1874, label %if.then1873

if.then1873:                                      ; preds = %lor.lhs.false1871, %if.else1868
  store i32 1, i32* %do_save, align 4
  br label %if.end1874

if.end1874:                                       ; preds = %if.then1873, %lor.lhs.false1871
  br label %if.end1875

if.end1875:                                       ; preds = %if.end1874, %if.end1867
  %1039 = load i32, i32* %do_save, align 4
  %tobool1876 = icmp ne i32 %1039, 0
  br i1 %tobool1876, label %land.lhs.true1877, label %if.end1880

land.lhs.true1877:                                ; preds = %if.end1875
  %1040 = load i32*, i32** %varspc, align 4
  %tobool1878 = icmp ne i32* %1040, null
  br i1 %tobool1878, label %if.then1879, label %if.end1880

if.then1879:                                      ; preds = %land.lhs.true1877
  %1041 = load %struct.estate*, %struct.estate** %state.addr, align 4
  %1042 = load i32*, i32** %varspc, align 4
  call void @save_params(%struct.estate* %1041, i32* %1042, %union.linkroot** %restorelist1851, %union.linkroot** %removelist1853)
  br label %if.end1880

if.end1880:                                       ; preds = %if.then1879, %land.lhs.true1877, %if.end1875
  br label %if.end1881

if.end1881:                                       ; preds = %if.end1880, %if.then1849
  %1043 = load i32*, i32** %varspc, align 4
  %tobool1882 = icmp ne i32* %1043, null
  br i1 %tobool1882, label %if.then1883, label %if.end1901

if.then1883:                                      ; preds = %if.end1881
  store i32 0, i32* %flags1885, align 4
  %1044 = load i32, i32* %is_shfunc, align 4
  %tobool1886 = icmp ne i32 %1044, 0
  br i1 %tobool1886, label %if.then1887, label %if.end1889

if.then1887:                                      ; preds = %if.then1883
  %1045 = load i32, i32* %flags1885, align 4
  %or1888 = or i32 %1045, 1
  store i32 %or1888, i32* %flags1885, align 4
  br label %if.end1889

if.end1889:                                       ; preds = %if.then1887, %if.then1883
  %1046 = load %union.linkroot*, %union.linkroot** %restorelist1851, align 4
  %tobool1890 = icmp ne %union.linkroot* %1046, null
  br i1 %tobool1890, label %if.then1891, label %if.end1893

if.then1891:                                      ; preds = %if.end1889
  %1047 = load i32, i32* %flags1885, align 4
  %or1892 = or i32 %1047, 4
  store i32 %or1892, i32* %flags1885, align 4
  br label %if.end1893

if.end1893:                                       ; preds = %if.then1891, %if.end1889
  %1048 = load %struct.estate*, %struct.estate** %state.addr, align 4
  %1049 = load i32*, i32** %varspc, align 4
  %1050 = load i32, i32* %flags1885, align 4
  call void @addvars(%struct.estate* %1048, i32* %1049, i32 %1050)
  %1051 = load i32, i32* @errflag, align 4
  %tobool1894 = icmp ne i32 %1051, 0
  br i1 %tobool1894, label %if.then1895, label %if.end1900

if.then1895:                                      ; preds = %if.end1893
  %1052 = load %union.linkroot*, %union.linkroot** %restorelist1851, align 4
  %tobool1896 = icmp ne %union.linkroot* %1052, null
  br i1 %tobool1896, label %if.then1897, label %if.end1898

if.then1897:                                      ; preds = %if.then1895
  %1053 = load %union.linkroot*, %union.linkroot** %restorelist1851, align 4
  %1054 = load %union.linkroot*, %union.linkroot** %removelist1853, align 4
  call void @restore_params(%union.linkroot* %1053, %union.linkroot* %1054)
  br label %if.end1898

if.end1898:                                       ; preds = %if.then1897, %if.then1895
  store i32 1, i32* @lastval, align 4
  %arraydecay1899 = getelementptr inbounds [10 x i32], [10 x i32]* %save, i32 0, i32 0
  call void @fixfds(i32* %arraydecay1899)
  br label %done

if.end1900:                                       ; preds = %if.end1893
  br label %if.end1901

if.end1901:                                       ; preds = %if.end1900, %if.end1881
  %1055 = load i32, i32* %is_shfunc, align 4
  %tobool1902 = icmp ne i32 %1055, 0
  br i1 %tobool1902, label %if.then1903, label %if.else1904

if.then1903:                                      ; preds = %if.end1901
  %1056 = load %union.linkroot*, %union.linkroot** %filelist, align 4
  call void @pipecleanfilelist(%union.linkroot* %1056, i32 0)
  %1057 = load %struct.hashnode*, %struct.hashnode** %hn, align 4
  %1058 = bitcast %struct.hashnode* %1057 to %struct.shfunc*
  %1059 = load %union.linkroot*, %union.linkroot** %args, align 4
  call void @execshfunc(%struct.shfunc* %1058, %union.linkroot* %1059)
  br label %if.end2135

if.else1904:                                      ; preds = %if.end1901
  store %union.linkroot* null, %union.linkroot** %assigns, align 4
  %1060 = load %struct.execcmd_params*, %struct.execcmd_params** %eparams.addr, align 4
  %postassigns1907 = getelementptr inbounds %struct.execcmd_params, %struct.execcmd_params* %1060, i32 0, i32 6
  %1061 = load i32, i32* %postassigns1907, align 4
  store i32 %1061, i32* %postassigns, align 4
  %1062 = load i32, i32* %forked, align 4
  %tobool1908 = icmp ne i32 %1062, 0
  br i1 %tobool1908, label %if.then1909, label %if.end1910

if.then1909:                                      ; preds = %if.else1904
  call void @closem(i32 1, i32 0)
  br label %if.end1910

if.end1910:                                       ; preds = %if.then1909, %if.else1904
  %1063 = load i32, i32* %postassigns, align 4
  %tobool1911 = icmp ne i32 %1063, 0
  br i1 %tobool1911, label %if.then1912, label %if.end2091

if.then1912:                                      ; preds = %if.end1910
  %1064 = load %struct.estate*, %struct.estate** %state.addr, align 4
  %pc1914 = getelementptr inbounds %struct.estate, %struct.estate* %1064, i32 0, i32 1
  %1065 = load i32*, i32** %pc1914, align 4
  store i32* %1065, i32** %opc, align 4
  %1066 = load %struct.execcmd_params*, %struct.execcmd_params** %eparams.addr, align 4
  %assignspc = getelementptr inbounds %struct.execcmd_params, %struct.execcmd_params* %1066, i32 0, i32 4
  %1067 = load i32*, i32** %assignspc, align 4
  %1068 = load %struct.estate*, %struct.estate** %state.addr, align 4
  %pc1915 = getelementptr inbounds %struct.estate, %struct.estate* %1068, i32 0, i32 1
  store i32* %1067, i32** %pc1915, align 4
  %call1916 = call %union.linkroot* @newlinklist()
  store %union.linkroot* %call1916, %union.linkroot** %assigns, align 4
  br label %while.cond1917

while.cond1917:                                   ; preds = %if.end2084, %while.end1985, %if.then1912
  %1069 = load i32, i32* %postassigns, align 4
  %dec = add nsw i32 %1069, -1
  store i32 %dec, i32* %postassigns, align 4
  %tobool1918 = icmp ne i32 %1069, 0
  br i1 %tobool1918, label %while.body1919, label %while.end2089

while.body1919:                                   ; preds = %while.cond1917
  %1070 = load %struct.estate*, %struct.estate** %state.addr, align 4
  %pc1923 = getelementptr inbounds %struct.estate, %struct.estate* %1070, i32 0, i32 1
  %1071 = load i32*, i32** %pc1923, align 4
  %incdec.ptr1924 = getelementptr inbounds i32, i32* %1071, i32 1
  store i32* %incdec.ptr1924, i32** %pc1923, align 4
  %1072 = load i32, i32* %1071, align 4
  store i32 %1072, i32* %ac, align 4
  %1073 = load %struct.estate*, %struct.estate** %state.addr, align 4
  %call1927 = call i8* @ecgetstr(%struct.estate* %1073, i32 2, i32* %htok1921)
  store i8* %call1927, i8** %name1926, align 4
  %1074 = load i32, i32* %htok1921, align 4
  %tobool1931 = icmp ne i32 %1074, 0
  br i1 %tobool1931, label %if.then1932, label %if.end1998

if.then1932:                                      ; preds = %while.body1919
  br label %do.body1933

do.body1933:                                      ; preds = %if.then1932
  %list1934 = bitcast %union.linkroot* %svl to %struct.linklist*
  %first1935 = getelementptr inbounds %struct.linklist, %struct.linklist* %list1934, i32 0, i32 0
  store %struct.linknode* %__n0, %struct.linknode** %first1935, align 4
  %list1936 = bitcast %union.linkroot* %svl to %struct.linklist*
  %last1937 = getelementptr inbounds %struct.linklist, %struct.linklist* %list1936, i32 0, i32 1
  store %struct.linknode* %__n0, %struct.linknode** %last1937, align 4
  %list1938 = bitcast %union.linkroot* %svl to %struct.linklist*
  %flags1939 = getelementptr inbounds %struct.linklist, %struct.linklist* %list1938, i32 0, i32 2
  store i32 0, i32* %flags1939, align 4
  %next1940 = getelementptr inbounds %struct.linknode, %struct.linknode* %__n0, i32 0, i32 0
  store %struct.linknode* null, %struct.linknode** %next1940, align 4
  %node1941 = bitcast %union.linkroot* %svl to %struct.linknode*
  %prev = getelementptr inbounds %struct.linknode, %struct.linknode* %__n0, i32 0, i32 1
  store %struct.linknode* %node1941, %struct.linknode** %prev, align 4
  %1075 = load i8*, i8** %name1926, align 4
  %dat1942 = getelementptr inbounds %struct.linknode, %struct.linknode* %__n0, i32 0, i32 2
  store i8* %1075, i8** %dat1942, align 4
  br label %do.end1943

do.end1943:                                       ; preds = %do.body1933
  %1076 = load i32, i32* %ac, align 4
  %shr = lshr i32 %1076, 5
  %and1944 = and i32 %shr, 1
  %cmp1945 = icmp eq i32 %and1944, 0
  br i1 %cmp1945, label %land.lhs.true1947, label %if.end1986

land.lhs.true1947:                                ; preds = %do.end1943
  %1077 = load i32, i32* %ac, align 4
  %shr1948 = lshr i32 %1077, 5
  %and1949 = and i32 %shr1948, 2
  %shr1950 = lshr i32 %and1949, 1
  %cmp1951 = icmp eq i32 %shr1950, 1
  br i1 %cmp1951, label %if.then1953, label %if.end1986

if.then1953:                                      ; preds = %land.lhs.true1947
  %1078 = load %struct.estate*, %struct.estate** %state.addr, align 4
  %call1955 = call i8* @ecgetstr(%struct.estate* %1078, i32 2, i32* %htok1921)
  call void @prefork(%union.linkroot* %svl, i32 1, i32* null)
  %1079 = load i32, i32* @errflag, align 4
  %tobool1956 = icmp ne i32 %1079, 0
  br i1 %tobool1956, label %if.then1957, label %if.end1959

if.then1957:                                      ; preds = %if.then1953
  %1080 = load i32*, i32** %opc, align 4
  %1081 = load %struct.estate*, %struct.estate** %state.addr, align 4
  %pc1958 = getelementptr inbounds %struct.estate, %struct.estate* %1081, i32 0, i32 1
  store i32* %1080, i32** %pc1958, align 4
  br label %while.end2089

if.end1959:                                       ; preds = %if.then1953
  call void @globlist(%union.linkroot* %svl, i32 0)
  %1082 = load i32, i32* @errflag, align 4
  %tobool1960 = icmp ne i32 %1082, 0
  br i1 %tobool1960, label %if.then1961, label %if.end1963

if.then1961:                                      ; preds = %if.end1959
  %1083 = load i32*, i32** %opc, align 4
  %1084 = load %struct.estate*, %struct.estate** %state.addr, align 4
  %pc1962 = getelementptr inbounds %struct.estate, %struct.estate* %1084, i32 0, i32 1
  store i32* %1083, i32** %pc1962, align 4
  br label %while.end2089

if.end1963:                                       ; preds = %if.end1959
  br label %while.cond1964

while.cond1964:                                   ; preds = %if.end1980, %if.end1963
  %call1965 = call i8* @ugetnode(%union.linkroot* %svl)
  store i8* %call1965, i8** %data, align 4
  %tobool1966 = icmp ne i8* %call1965, null
  br i1 %tobool1966, label %while.body1967, label %while.end1985

while.body1967:                                   ; preds = %while.cond1964
  %call1969 = call i8* @zhalloc(i32 24)
  %1085 = bitcast i8* %call1969 to %struct.asgment*
  store %struct.asgment* %1085, %struct.asgment** %asg, align 4
  %1086 = load %struct.asgment*, %struct.asgment** %asg, align 4
  %flags1970 = getelementptr inbounds %struct.asgment, %struct.asgment* %1086, i32 0, i32 2
  store i32 0, i32* %flags1970, align 4
  %1087 = load i8*, i8** %data, align 4
  %call1971 = call i8* @strchr(i8* %1087, i32 61)
  store i8* %call1971, i8** %ptr, align 4
  %tobool1972 = icmp ne i8* %call1971, null
  br i1 %tobool1972, label %if.then1973, label %if.else1976

if.then1973:                                      ; preds = %while.body1967
  %1088 = load i8*, i8** %ptr, align 4
  %incdec.ptr1974 = getelementptr inbounds i8, i8* %1088, i32 1
  store i8* %incdec.ptr1974, i8** %ptr, align 4
  store i8 0, i8* %1088, align 1
  %1089 = load i8*, i8** %data, align 4
  %1090 = load %struct.asgment*, %struct.asgment** %asg, align 4
  %name1975 = getelementptr inbounds %struct.asgment, %struct.asgment* %1090, i32 0, i32 1
  store i8* %1089, i8** %name1975, align 4
  %1091 = load i8*, i8** %ptr, align 4
  %1092 = load %struct.asgment*, %struct.asgment** %asg, align 4
  %value = getelementptr inbounds %struct.asgment, %struct.asgment* %1092, i32 0, i32 3
  %scalar = bitcast %union.anon.4* %value to i8**
  store i8* %1091, i8** %scalar, align 4
  br label %if.end1980

if.else1976:                                      ; preds = %while.body1967
  %1093 = load i8*, i8** %data, align 4
  %1094 = load %struct.asgment*, %struct.asgment** %asg, align 4
  %name1977 = getelementptr inbounds %struct.asgment, %struct.asgment* %1094, i32 0, i32 1
  store i8* %1093, i8** %name1977, align 4
  %1095 = load %struct.asgment*, %struct.asgment** %asg, align 4
  %value1978 = getelementptr inbounds %struct.asgment, %struct.asgment* %1095, i32 0, i32 3
  %scalar1979 = bitcast %union.anon.4* %value1978 to i8**
  store i8* null, i8** %scalar1979, align 4
  br label %if.end1980

if.end1980:                                       ; preds = %if.else1976, %if.then1973
  %1096 = load %union.linkroot*, %union.linkroot** %assigns, align 4
  %1097 = load %union.linkroot*, %union.linkroot** %assigns, align 4
  %list1981 = bitcast %union.linkroot* %1097 to %struct.linklist*
  %last1982 = getelementptr inbounds %struct.linklist, %struct.linklist* %list1981, i32 0, i32 1
  %1098 = load %struct.linknode*, %struct.linknode** %last1982, align 4
  %1099 = load %struct.asgment*, %struct.asgment** %asg, align 4
  %node1983 = getelementptr inbounds %struct.asgment, %struct.asgment* %1099, i32 0, i32 0
  %call1984 = call %struct.linknode* @uinsertlinknode(%union.linkroot* %1096, %struct.linknode* %1098, %struct.linknode* %node1983)
  br label %while.cond1964

while.end1985:                                    ; preds = %while.cond1964
  br label %while.cond1917

if.end1986:                                       ; preds = %land.lhs.true1947, %do.end1943
  call void @prefork(%union.linkroot* %svl, i32 4, i32* null)
  %list1987 = bitcast %union.linkroot* %svl to %struct.linklist*
  %first1988 = getelementptr inbounds %struct.linklist, %struct.linklist* %list1987, i32 0, i32 0
  %1100 = load %struct.linknode*, %struct.linknode** %first1988, align 4
  %cmp1989 = icmp eq %struct.linknode* %1100, null
  br i1 %cmp1989, label %cond.true1991, label %cond.false1992

cond.true1991:                                    ; preds = %if.end1986
  br label %cond.end1996

cond.false1992:                                   ; preds = %if.end1986
  %list1993 = bitcast %union.linkroot* %svl to %struct.linklist*
  %first1994 = getelementptr inbounds %struct.linklist, %struct.linklist* %list1993, i32 0, i32 0
  %1101 = load %struct.linknode*, %struct.linknode** %first1994, align 4
  %dat1995 = getelementptr inbounds %struct.linknode, %struct.linknode* %1101, i32 0, i32 2
  %1102 = load i8*, i8** %dat1995, align 4
  br label %cond.end1996

cond.end1996:                                     ; preds = %cond.false1992, %cond.true1991
  %cond1997 = phi i8* [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i32 0, i32 0), %cond.true1991 ], [ %1102, %cond.false1992 ]
  store i8* %cond1997, i8** %name1926, align 4
  br label %if.end1998

if.end1998:                                       ; preds = %cond.end1996, %while.body1919
  %1103 = load i8*, i8** %name1926, align 4
  call void @untokenize(i8* %1103)
  %call1999 = call i8* @zhalloc(i32 24)
  %1104 = bitcast i8* %call1999 to %struct.asgment*
  store %struct.asgment* %1104, %struct.asgment** %asg, align 4
  %1105 = load i8*, i8** %name1926, align 4
  %1106 = load %struct.asgment*, %struct.asgment** %asg, align 4
  %name2000 = getelementptr inbounds %struct.asgment, %struct.asgment* %1106, i32 0, i32 1
  store i8* %1105, i8** %name2000, align 4
  %1107 = load i32, i32* %ac, align 4
  %shr2001 = lshr i32 %1107, 5
  %and2002 = and i32 %shr2001, 1
  %cmp2003 = icmp eq i32 %and2002, 0
  br i1 %cmp2003, label %if.then2005, label %if.else2051

if.then2005:                                      ; preds = %if.end1998
  %1108 = load %struct.estate*, %struct.estate** %state.addr, align 4
  %call2007 = call i8* @ecgetstr(%struct.estate* %1108, i32 2, i32* %htok1921)
  store i8* %call2007, i8** %val, align 4
  %1109 = load %struct.asgment*, %struct.asgment** %asg, align 4
  %flags2008 = getelementptr inbounds %struct.asgment, %struct.asgment* %1109, i32 0, i32 2
  store i32 0, i32* %flags2008, align 4
  %1110 = load i32, i32* %ac, align 4
  %shr2009 = lshr i32 %1110, 5
  %and2010 = and i32 %shr2009, 2
  %shr2011 = lshr i32 %and2010, 1
  %cmp2012 = icmp eq i32 %shr2011, 1
  br i1 %cmp2012, label %if.then2014, label %if.else2017

if.then2014:                                      ; preds = %if.then2005
  %1111 = load %struct.asgment*, %struct.asgment** %asg, align 4
  %value2015 = getelementptr inbounds %struct.asgment, %struct.asgment* %1111, i32 0, i32 3
  %scalar2016 = bitcast %union.anon.4* %value2015 to i8**
  store i8* null, i8** %scalar2016, align 4
  br label %if.end2050

if.else2017:                                      ; preds = %if.then2005
  %1112 = load i32, i32* %htok1921, align 4
  %tobool2018 = icmp ne i32 %1112, 0
  br i1 %tobool2018, label %if.then2019, label %if.end2047

if.then2019:                                      ; preds = %if.else2017
  br label %do.body2020

do.body2020:                                      ; preds = %if.then2019
  %list2021 = bitcast %union.linkroot* %svl to %struct.linklist*
  %first2022 = getelementptr inbounds %struct.linklist, %struct.linklist* %list2021, i32 0, i32 0
  store %struct.linknode* %__n0, %struct.linknode** %first2022, align 4
  %list2023 = bitcast %union.linkroot* %svl to %struct.linklist*
  %last2024 = getelementptr inbounds %struct.linklist, %struct.linklist* %list2023, i32 0, i32 1
  store %struct.linknode* %__n0, %struct.linknode** %last2024, align 4
  %list2025 = bitcast %union.linkroot* %svl to %struct.linklist*
  %flags2026 = getelementptr inbounds %struct.linklist, %struct.linklist* %list2025, i32 0, i32 2
  store i32 0, i32* %flags2026, align 4
  %next2027 = getelementptr inbounds %struct.linknode, %struct.linknode* %__n0, i32 0, i32 0
  store %struct.linknode* null, %struct.linknode** %next2027, align 4
  %node2028 = bitcast %union.linkroot* %svl to %struct.linknode*
  %prev2029 = getelementptr inbounds %struct.linknode, %struct.linknode* %__n0, i32 0, i32 1
  store %struct.linknode* %node2028, %struct.linknode** %prev2029, align 4
  %1113 = load i8*, i8** %val, align 4
  %dat2030 = getelementptr inbounds %struct.linknode, %struct.linknode* %__n0, i32 0, i32 2
  store i8* %1113, i8** %dat2030, align 4
  br label %do.end2031

do.end2031:                                       ; preds = %do.body2020
  call void @prefork(%union.linkroot* %svl, i32 6, i32* null)
  %1114 = load i32, i32* @errflag, align 4
  %tobool2032 = icmp ne i32 %1114, 0
  br i1 %tobool2032, label %if.then2033, label %if.end2035

if.then2033:                                      ; preds = %do.end2031
  %1115 = load i32*, i32** %opc, align 4
  %1116 = load %struct.estate*, %struct.estate** %state.addr, align 4
  %pc2034 = getelementptr inbounds %struct.estate, %struct.estate* %1116, i32 0, i32 1
  store i32* %1115, i32** %pc2034, align 4
  br label %while.end2089

if.end2035:                                       ; preds = %do.end2031
  %list2036 = bitcast %union.linkroot* %svl to %struct.linklist*
  %first2037 = getelementptr inbounds %struct.linklist, %struct.linklist* %list2036, i32 0, i32 0
  %1117 = load %struct.linknode*, %struct.linknode** %first2037, align 4
  %cmp2038 = icmp eq %struct.linknode* %1117, null
  br i1 %cmp2038, label %cond.true2040, label %cond.false2041

cond.true2040:                                    ; preds = %if.end2035
  br label %cond.end2045

cond.false2041:                                   ; preds = %if.end2035
  %list2042 = bitcast %union.linkroot* %svl to %struct.linklist*
  %first2043 = getelementptr inbounds %struct.linklist, %struct.linklist* %list2042, i32 0, i32 0
  %1118 = load %struct.linknode*, %struct.linknode** %first2043, align 4
  %dat2044 = getelementptr inbounds %struct.linknode, %struct.linknode* %1118, i32 0, i32 2
  %1119 = load i8*, i8** %dat2044, align 4
  br label %cond.end2045

cond.end2045:                                     ; preds = %cond.false2041, %cond.true2040
  %cond2046 = phi i8* [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i32 0, i32 0), %cond.true2040 ], [ %1119, %cond.false2041 ]
  store i8* %cond2046, i8** %val, align 4
  br label %if.end2047

if.end2047:                                       ; preds = %cond.end2045, %if.else2017
  %1120 = load i8*, i8** %val, align 4
  call void @untokenize(i8* %1120)
  %1121 = load i8*, i8** %val, align 4
  %1122 = load %struct.asgment*, %struct.asgment** %asg, align 4
  %value2048 = getelementptr inbounds %struct.asgment, %struct.asgment* %1122, i32 0, i32 3
  %scalar2049 = bitcast %union.anon.4* %value2048 to i8**
  store i8* %1121, i8** %scalar2049, align 4
  br label %if.end2050

if.end2050:                                       ; preds = %if.end2047, %if.then2014
  br label %if.end2084

if.else2051:                                      ; preds = %if.end1998
  %1123 = load %struct.asgment*, %struct.asgment** %asg, align 4
  %flags2052 = getelementptr inbounds %struct.asgment, %struct.asgment* %1123, i32 0, i32 2
  store i32 1, i32* %flags2052, align 4
  %1124 = load %struct.estate*, %struct.estate** %state.addr, align 4
  %1125 = load i32, i32* %ac, align 4
  %shr2053 = lshr i32 %1125, 5
  %shr2054 = lshr i32 %shr2053, 2
  %call2055 = call %union.linkroot* @ecgetlist(%struct.estate* %1124, i32 %shr2054, i32 2, i32* %htok1921)
  %1126 = load %struct.asgment*, %struct.asgment** %asg, align 4
  %value2056 = getelementptr inbounds %struct.asgment, %struct.asgment* %1126, i32 0, i32 3
  %array = bitcast %union.anon.4* %value2056 to %union.linkroot**
  store %union.linkroot* %call2055, %union.linkroot** %array, align 4
  %1127 = load %struct.asgment*, %struct.asgment** %asg, align 4
  %value2057 = getelementptr inbounds %struct.asgment, %struct.asgment* %1127, i32 0, i32 3
  %array2058 = bitcast %union.anon.4* %value2057 to %union.linkroot**
  %1128 = load %union.linkroot*, %union.linkroot** %array2058, align 4
  %tobool2059 = icmp ne %union.linkroot* %1128, null
  br i1 %tobool2059, label %if.then2060, label %if.end2083

if.then2060:                                      ; preds = %if.else2051
  %1129 = load i32, i32* @errflag, align 4
  %tobool2061 = icmp ne i32 %1129, 0
  br i1 %tobool2061, label %if.end2078, label %if.then2062

if.then2062:                                      ; preds = %if.then2060
  store i32 0, i32* %prefork_ret, align 4
  %1130 = load %struct.asgment*, %struct.asgment** %asg, align 4
  %value2064 = getelementptr inbounds %struct.asgment, %struct.asgment* %1130, i32 0, i32 3
  %array2065 = bitcast %union.anon.4* %value2064 to %union.linkroot**
  %1131 = load %union.linkroot*, %union.linkroot** %array2065, align 4
  call void @prefork(%union.linkroot* %1131, i32 2, i32* %prefork_ret)
  %1132 = load i32, i32* @errflag, align 4
  %tobool2066 = icmp ne i32 %1132, 0
  br i1 %tobool2066, label %if.then2067, label %if.end2069

if.then2067:                                      ; preds = %if.then2062
  %1133 = load i32*, i32** %opc, align 4
  %1134 = load %struct.estate*, %struct.estate** %state.addr, align 4
  %pc2068 = getelementptr inbounds %struct.estate, %struct.estate* %1134, i32 0, i32 1
  store i32* %1133, i32** %pc2068, align 4
  br label %while.end2089

if.end2069:                                       ; preds = %if.then2062
  %1135 = load i32, i32* %prefork_ret, align 4
  %and2070 = and i32 %1135, 128
  %tobool2071 = icmp ne i32 %and2070, 0
  br i1 %tobool2071, label %if.then2072, label %if.end2075

if.then2072:                                      ; preds = %if.end2069
  %1136 = load %struct.asgment*, %struct.asgment** %asg, align 4
  %flags2073 = getelementptr inbounds %struct.asgment, %struct.asgment* %1136, i32 0, i32 2
  %1137 = load i32, i32* %flags2073, align 4
  %or2074 = or i32 %1137, 2
  store i32 %or2074, i32* %flags2073, align 4
  br label %if.end2075

if.end2075:                                       ; preds = %if.then2072, %if.end2069
  %1138 = load %struct.asgment*, %struct.asgment** %asg, align 4
  %value2076 = getelementptr inbounds %struct.asgment, %struct.asgment* %1138, i32 0, i32 3
  %array2077 = bitcast %union.anon.4* %value2076 to %union.linkroot**
  %1139 = load %union.linkroot*, %union.linkroot** %array2077, align 4
  %1140 = load i32, i32* %prefork_ret, align 4
  call void @globlist(%union.linkroot* %1139, i32 %1140)
  br label %if.end2078

if.end2078:                                       ; preds = %if.end2075, %if.then2060
  %1141 = load i32, i32* @errflag, align 4
  %tobool2079 = icmp ne i32 %1141, 0
  br i1 %tobool2079, label %if.then2080, label %if.end2082

if.then2080:                                      ; preds = %if.end2078
  %1142 = load i32*, i32** %opc, align 4
  %1143 = load %struct.estate*, %struct.estate** %state.addr, align 4
  %pc2081 = getelementptr inbounds %struct.estate, %struct.estate* %1143, i32 0, i32 1
  store i32* %1142, i32** %pc2081, align 4
  br label %while.end2089

if.end2082:                                       ; preds = %if.end2078
  br label %if.end2083

if.end2083:                                       ; preds = %if.end2082, %if.else2051
  br label %if.end2084

if.end2084:                                       ; preds = %if.end2083, %if.end2050
  %1144 = load %union.linkroot*, %union.linkroot** %assigns, align 4
  %1145 = load %union.linkroot*, %union.linkroot** %assigns, align 4
  %list2085 = bitcast %union.linkroot* %1145 to %struct.linklist*
  %last2086 = getelementptr inbounds %struct.linklist, %struct.linklist* %list2085, i32 0, i32 1
  %1146 = load %struct.linknode*, %struct.linknode** %last2086, align 4
  %1147 = load %struct.asgment*, %struct.asgment** %asg, align 4
  %node2087 = getelementptr inbounds %struct.asgment, %struct.asgment* %1147, i32 0, i32 0
  %call2088 = call %struct.linknode* @uinsertlinknode(%union.linkroot* %1144, %struct.linknode* %1146, %struct.linknode* %node2087)
  br label %while.cond1917

while.end2089:                                    ; preds = %if.then2080, %if.then2067, %if.then2033, %if.then1961, %if.then1957, %while.cond1917
  %1148 = load i32*, i32** %opc, align 4
  %1149 = load %struct.estate*, %struct.estate** %state.addr, align 4
  %pc2090 = getelementptr inbounds %struct.estate, %struct.estate* %1149, i32 0, i32 1
  store i32* %1148, i32** %pc2090, align 4
  br label %if.end2091

if.end2091:                                       ; preds = %while.end2089, %if.end1910
  br label %do.body2092

do.body2092:                                      ; preds = %if.end2091
  store i32 0, i32* @queueing_enabled, align 4
  br label %do.body2093

do.body2093:                                      ; preds = %do.body2092
  br label %while.cond2094

while.cond2094:                                   ; preds = %while.body2097, %do.body2093
  %1150 = load i32, i32* @queue_front, align 4
  %1151 = load i32, i32* @queue_rear, align 4
  %cmp2095 = icmp ne i32 %1150, %1151
  br i1 %cmp2095, label %while.body2097, label %while.end2106

while.body2097:                                   ; preds = %while.cond2094
  %1152 = load i32, i32* @queue_front, align 4
  %add2100 = add nsw i32 %1152, 1
  %rem2101 = srem i32 %add2100, 128
  store i32 %rem2101, i32* @queue_front, align 4
  %1153 = load i32, i32* @queue_front, align 4
  %arrayidx2102 = getelementptr inbounds [128 x %struct.__sigset_t], [128 x %struct.__sigset_t]* @signal_mask_queue, i32 0, i32 %1153
  call void @signal_setmask(%struct.__sigset_t* sret %tmp2103, %struct.__sigset_t* byval align 4 %arrayidx2102)
  %1154 = bitcast %struct.__sigset_t* %oset2099 to i8*
  %1155 = bitcast %struct.__sigset_t* %tmp2103 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %1154, i8* %1155, i32 128, i32 4, i1 false)
  %1156 = load i32, i32* @queue_front, align 4
  %arrayidx2104 = getelementptr inbounds [128 x i32], [128 x i32]* @signal_queue, i32 0, i32 %1156
  %1157 = load i32, i32* %arrayidx2104, align 4
  call void @zhandler(i32 %1157)
  call void @signal_setmask(%struct.__sigset_t* sret %tmp2105, %struct.__sigset_t* byval align 4 %oset2099)
  br label %while.cond2094

while.end2106:                                    ; preds = %while.cond2094
  br label %do.end2107

do.end2107:                                       ; preds = %while.end2106
  br label %do.end2108

do.end2108:                                       ; preds = %do.end2107
  %1158 = load i32, i32* @errflag, align 4
  %tobool2109 = icmp ne i32 %1158, 0
  br i1 %tobool2109, label %if.end2117, label %if.then2110

if.then2110:                                      ; preds = %do.end2108
  %1159 = load %union.linkroot*, %union.linkroot** %args, align 4
  %1160 = load %union.linkroot*, %union.linkroot** %assigns, align 4
  %1161 = load %struct.hashnode*, %struct.hashnode** %hn, align 4
  %1162 = bitcast %struct.hashnode* %1161 to %struct.builtin*
  %call2112 = call i32 @execbuiltin(%union.linkroot* %1159, %union.linkroot* %1160, %struct.builtin* %1162)
  store i32 %call2112, i32* %ret, align 4
  %1163 = load i32, i32* @errflag, align 4
  %and2113 = and i32 %1163, 2
  %tobool2114 = icmp ne i32 %and2113, 0
  br i1 %tobool2114, label %if.end2116, label %if.then2115

if.then2115:                                      ; preds = %if.then2110
  %1164 = load i32, i32* %ret, align 4
  store i32 %1164, i32* @lastval, align 4
  br label %if.end2116

if.end2116:                                       ; preds = %if.then2115, %if.then2110
  br label %if.end2117

if.end2117:                                       ; preds = %if.end2116, %do.end2108
  %1165 = load i32, i32* %do_save, align 4
  %and2118 = and i32 %1165, 256
  %tobool2119 = icmp ne i32 %and2118, 0
  br i1 %tobool2119, label %if.then2120, label %if.end2122

if.then2120:                                      ; preds = %if.end2117
  %1166 = load i32, i32* @errflag, align 4
  %and2121 = and i32 %1166, -2
  store i32 %and2121, i32* @errflag, align 4
  br label %if.end2122

if.end2122:                                       ; preds = %if.then2120, %if.end2117
  %1167 = load i32, i32* %q, align 4
  store i32 %1167, i32* @queueing_enabled, align 4
  %1168 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 4
  %call2123 = call i32 @fflush(%struct._IO_FILE* %1168)
  %arrayidx2124 = getelementptr inbounds [10 x i32], [10 x i32]* %save, i32 0, i32 1
  %1169 = load i32, i32* %arrayidx2124, align 4
  %cmp2125 = icmp eq i32 %1169, -2
  br i1 %cmp2125, label %if.then2127, label %if.else2133

if.then2127:                                      ; preds = %if.end2122
  %1170 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 4
  %call2128 = call i32 @ferror(%struct._IO_FILE* %1170)
  %tobool2129 = icmp ne i32 %call2128, 0
  br i1 %tobool2129, label %if.then2130, label %if.end2132

if.then2130:                                      ; preds = %if.then2127
  %call2131 = call i32* @__errno_location()
  %1171 = load i32, i32* %call2131, align 4
  call void (i8*, ...) @zwarn(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.74, i32 0, i32 0), i32 %1171)
  %1172 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 4
  call void @clearerr(%struct._IO_FILE* %1172)
  br label %if.end2132

if.end2132:                                       ; preds = %if.then2130, %if.then2127
  br label %if.end2134

if.else2133:                                      ; preds = %if.end2122
  %1173 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 4
  call void @clearerr(%struct._IO_FILE* %1173)
  br label %if.end2134

if.end2134:                                       ; preds = %if.else2133, %if.end2132
  br label %if.end2135

if.end2135:                                       ; preds = %if.end2134, %if.then1903
  %1174 = load i8, i8* getelementptr inbounds ([181 x i8], [181 x i8]* @opts, i32 0, i32 139), align 1
  %conv2136 = sext i8 %1174 to i32
  %tobool2137 = icmp ne i32 %conv2136, 0
  br i1 %tobool2137, label %land.lhs.true2138, label %if.end2148

land.lhs.true2138:                                ; preds = %if.end2135
  %1175 = load i8, i8* getelementptr inbounds ([181 x i8], [181 x i8]* @opts, i32 0, i32 161), align 1
  %conv2139 = sext i8 %1175 to i32
  %tobool2140 = icmp ne i32 %conv2139, 0
  br i1 %tobool2140, label %land.lhs.true2141, label %if.end2148

land.lhs.true2141:                                ; preds = %land.lhs.true2138
  %1176 = load i32, i32* @lastval, align 4
  %tobool2142 = icmp ne i32 %1176, 0
  br i1 %tobool2142, label %land.lhs.true2143, label %if.end2148

land.lhs.true2143:                                ; preds = %land.lhs.true2141
  %1177 = load i32, i32* @subsh, align 4
  %tobool2144 = icmp ne i32 %1177, 0
  br i1 %tobool2144, label %if.end2148, label %if.then2145

if.then2145:                                      ; preds = %land.lhs.true2143
  %1178 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 4
  %1179 = load i32, i32* @lastval, align 4
  %call2146 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1178, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.37, i32 0, i32 0), i32 %1179)
  %1180 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 4
  %call2147 = call i32 @fflush(%struct._IO_FILE* %1180)
  br label %if.end2148

if.end2148:                                       ; preds = %if.then2145, %land.lhs.true2143, %land.lhs.true2141, %land.lhs.true2138, %if.end2135
  %1181 = load i32, i32* %do_exec, align 4
  %tobool2149 = icmp ne i32 %1181, 0
  br i1 %tobool2149, label %if.then2150, label %if.end2163

if.then2150:                                      ; preds = %if.end2148
  %1182 = load i32, i32* @subsh, align 4
  %tobool2151 = icmp ne i32 %1182, 0
  br i1 %tobool2151, label %if.then2152, label %if.end2153

if.then2152:                                      ; preds = %if.then2150
  %1183 = load i32, i32* @lastval, align 4
  call void @_exit(i32 %1183) #4
  unreachable

if.end2153:                                       ; preds = %if.then2150
  %1184 = load i8, i8* getelementptr inbounds ([181 x i8], [181 x i8]* @opts, i32 0, i32 152), align 1
  %conv2154 = sext i8 %1184 to i32
  %tobool2155 = icmp ne i32 %conv2154, 0
  br i1 %tobool2155, label %land.lhs.true2156, label %if.end2162

land.lhs.true2156:                                ; preds = %if.end2153
  %1185 = load i8, i8* getelementptr inbounds ([181 x i8], [181 x i8]* @opts, i32 0, i32 94), align 1
  %conv2157 = sext i8 %1185 to i32
  %tobool2158 = icmp ne i32 %conv2157, 0
  br i1 %tobool2158, label %land.lhs.true2159, label %if.end2162

land.lhs.true2159:                                ; preds = %land.lhs.true2156
  %1186 = load i32, i32* @nohistsave, align 4
  %tobool2160 = icmp ne i32 %1186, 0
  br i1 %tobool2160, label %if.end2162, label %if.then2161

if.then2161:                                      ; preds = %land.lhs.true2159
  call void @savehistfile(i8* null, i32 1, i32 32768)
  br label %if.end2162

if.end2162:                                       ; preds = %if.then2161, %land.lhs.true2159, %land.lhs.true2156, %if.end2153
  %1187 = load i32, i32* @lastval, align 4
  call void @exit(i32 %1187) #4
  unreachable

if.end2163:                                       ; preds = %if.end2148
  %1188 = load %union.linkroot*, %union.linkroot** %restorelist1851, align 4
  %tobool2164 = icmp ne %union.linkroot* %1188, null
  br i1 %tobool2164, label %if.then2165, label %if.end2166

if.then2165:                                      ; preds = %if.end2163
  %1189 = load %union.linkroot*, %union.linkroot** %restorelist1851, align 4
  %1190 = load %union.linkroot*, %union.linkroot** %removelist1853, align 4
  call void @restore_params(%union.linkroot* %1189, %union.linkroot* %1190)
  br label %if.end2166

if.end2166:                                       ; preds = %if.then2165, %if.end2163
  br label %if.end2226

if.else2167:                                      ; preds = %lor.lhs.false1847
  %1191 = load i32, i32* @subsh, align 4
  %tobool2168 = icmp ne i32 %1191, 0
  br i1 %tobool2168, label %if.end2186, label %if.then2169

if.then2169:                                      ; preds = %if.else2167
  %1192 = load i32, i32* %forked, align 4
  %tobool2170 = icmp ne i32 %1192, 0
  br i1 %tobool2170, label %if.end2174, label %if.then2171

if.then2171:                                      ; preds = %if.then2169
  %1193 = load i32, i32* @shlvl, align 4
  %dec2172 = add nsw i32 %1193, -1
  store i32 %dec2172, i32* @shlvl, align 4
  %call2173 = call %struct.param* @setiparam(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.75, i32 0, i32 0), i32 %dec2172)
  br label %if.end2174

if.end2174:                                       ; preds = %if.then2171, %if.then2169
  %1194 = load i32, i32* %do_exec, align 4
  %tobool2175 = icmp ne i32 %1194, 0
  br i1 %tobool2175, label %land.lhs.true2176, label %if.end2185

land.lhs.true2176:                                ; preds = %if.end2174
  %1195 = load i8, i8* getelementptr inbounds ([181 x i8], [181 x i8]* @opts, i32 0, i32 152), align 1
  %conv2177 = sext i8 %1195 to i32
  %tobool2178 = icmp ne i32 %conv2177, 0
  br i1 %tobool2178, label %land.lhs.true2179, label %if.end2185

land.lhs.true2179:                                ; preds = %land.lhs.true2176
  %1196 = load i8, i8* getelementptr inbounds ([181 x i8], [181 x i8]* @opts, i32 0, i32 94), align 1
  %conv2180 = sext i8 %1196 to i32
  %tobool2181 = icmp ne i32 %conv2180, 0
  br i1 %tobool2181, label %land.lhs.true2182, label %if.end2185

land.lhs.true2182:                                ; preds = %land.lhs.true2179
  %1197 = load i32, i32* @nohistsave, align 4
  %tobool2183 = icmp ne i32 %1197, 0
  br i1 %tobool2183, label %if.end2185, label %if.then2184

if.then2184:                                      ; preds = %land.lhs.true2182
  call void @savehistfile(i8* null, i32 1, i32 32768)
  br label %if.end2185

if.end2185:                                       ; preds = %if.then2184, %land.lhs.true2182, %land.lhs.true2179, %land.lhs.true2176, %if.end2174
  br label %if.end2186

if.end2186:                                       ; preds = %if.end2185, %if.else2167
  %1198 = load i32, i32* %type, align 4
  %cmp2187 = icmp eq i32 %1198, 6
  br i1 %cmp2187, label %if.then2192, label %lor.lhs.false2189

lor.lhs.false2189:                                ; preds = %if.end2186
  %1199 = load i32, i32* %type, align 4
  %cmp2190 = icmp eq i32 %1199, 7
  br i1 %cmp2190, label %if.then2192, label %if.else2222

if.then2192:                                      ; preds = %lor.lhs.false2189, %if.end2186
  %1200 = load i32*, i32** %varspc, align 4
  %tobool2193 = icmp ne i32* %1200, null
  br i1 %tobool2193, label %if.then2194, label %if.end2203

if.then2194:                                      ; preds = %if.then2192
  store i32 3, i32* %addflags, align 4
  %1201 = load i32, i32* %forked, align 4
  %tobool2196 = icmp ne i32 %1201, 0
  br i1 %tobool2196, label %if.then2197, label %if.end2199

if.then2197:                                      ; preds = %if.then2194
  %1202 = load i32, i32* %addflags, align 4
  %or2198 = or i32 %1202, 4
  store i32 %or2198, i32* %addflags, align 4
  br label %if.end2199

if.end2199:                                       ; preds = %if.then2197, %if.then2194
  %1203 = load %struct.estate*, %struct.estate** %state.addr, align 4
  %1204 = load i32*, i32** %varspc, align 4
  %1205 = load i32, i32* %addflags, align 4
  call void @addvars(%struct.estate* %1203, i32* %1204, i32 %1205)
  %1206 = load i32, i32* @errflag, align 4
  %tobool2200 = icmp ne i32 %1206, 0
  br i1 %tobool2200, label %if.then2201, label %if.end2202

if.then2201:                                      ; preds = %if.end2199
  call void @_exit(i32 1) #4
  unreachable

if.end2202:                                       ; preds = %if.end2199
  br label %if.end2203

if.end2203:                                       ; preds = %if.end2202, %if.then2192
  call void @closem(i32 1, i32 0)
  %1207 = load i32, i32* @coprocin, align 4
  %cmp2204 = icmp ne i32 %1207, -1
  br i1 %cmp2204, label %if.then2206, label %if.end2208

if.then2206:                                      ; preds = %if.end2203
  %1208 = load i32, i32* @coprocin, align 4
  %call2207 = call i32 @zclose(i32 %1208)
  store i32 -1, i32* @coprocin, align 4
  br label %if.end2208

if.end2208:                                       ; preds = %if.then2206, %if.end2203
  %1209 = load i32, i32* @coprocout, align 4
  %cmp2209 = icmp ne i32 %1209, -1
  br i1 %cmp2209, label %if.then2211, label %if.end2213

if.then2211:                                      ; preds = %if.end2208
  %1210 = load i32, i32* @coprocout, align 4
  %call2212 = call i32 @zclose(i32 %1210)
  store i32 -1, i32* @coprocout, align 4
  br label %if.end2213

if.end2213:                                       ; preds = %if.then2211, %if.end2208
  %1211 = load i32, i32* %forked, align 4
  %tobool2214 = icmp ne i32 %1211, 0
  br i1 %tobool2214, label %if.end2217, label %if.then2215

if.then2215:                                      ; preds = %if.end2213
  %call2216 = call i32 @setlimits(i8* null)
  br label %if.end2217

if.end2217:                                       ; preds = %if.then2215, %if.end2213
  %1212 = load i32, i32* %how.addr, align 4
  %and2218 = and i32 %1212, 4
  %tobool2219 = icmp ne i32 %and2218, 0
  br i1 %tobool2219, label %if.then2220, label %if.end2221

if.then2220:                                      ; preds = %if.end2217
  %1213 = load i8*, i8** @STTYval, align 4
  call void @zsfree(i8* %1213)
  store i8* null, i8** @STTYval, align 4
  br label %if.end2221

if.end2221:                                       ; preds = %if.then2220, %if.end2217
  %1214 = load %union.linkroot*, %union.linkroot** %args, align 4
  %1215 = load i32, i32* %cflags, align 4
  %1216 = load i32, i32* %use_defpath, align 4
  call void @execute(%union.linkroot* %1214, i32 %1215, i32 %1216)
  br label %if.end2225

if.else2222:                                      ; preds = %lor.lhs.false2189
  store i32 0, i32* @list_pipe, align 4
  %1217 = load %union.linkroot*, %union.linkroot** %filelist, align 4
  call void @pipecleanfilelist(%union.linkroot* %1217, i32 0)
  %1218 = load %struct.estate*, %struct.estate** %state.addr, align 4
  %pc2223 = getelementptr inbounds %struct.estate, %struct.estate* %1218, i32 0, i32 1
  %1219 = load i32*, i32** %pc2223, align 4
  %incdec.ptr2224 = getelementptr inbounds i32, i32* %1219, i32 1
  store i32* %incdec.ptr2224, i32** %pc2223, align 4
  %1220 = load %struct.estate*, %struct.estate** %state.addr, align 4
  call void @execlist(%struct.estate* %1220, i32 0, i32 1)
  br label %if.end2225

if.end2225:                                       ; preds = %if.else2222, %if.end2221
  br label %if.end2226

if.end2226:                                       ; preds = %if.end2225, %if.end2166
  br label %if.end2227

if.end2227:                                       ; preds = %if.end2226, %if.end1844
  br label %if.end2228

if.end2228:                                       ; preds = %if.end2227, %do.end1809
  br label %if.end2229

if.end2229:                                       ; preds = %if.end2228, %land.lhs.true1747, %if.else1744
  br label %if.end2230

if.end2230:                                       ; preds = %if.end2229, %if.end1743
  br label %err

err:                                              ; preds = %if.end2230, %if.then1102
  %1221 = load i32, i32* %forked, align 4
  %tobool2231 = icmp ne i32 %1221, 0
  br i1 %tobool2231, label %if.then2232, label %if.end2251

if.then2232:                                      ; preds = %err
  store i32 0, i32* %i, align 4
  br label %for.cond2233

for.cond2233:                                     ; preds = %for.inc2244, %if.then2232
  %1222 = load i32, i32* %i, align 4
  %cmp2234 = icmp slt i32 %1222, 10
  br i1 %cmp2234, label %for.body2236, label %for.end2246

for.body2236:                                     ; preds = %for.cond2233
  %1223 = load i8*, i8** @fdtable, align 4
  %1224 = load i32, i32* %i, align 4
  %arrayidx2237 = getelementptr inbounds i8, i8* %1223, i32 %1224
  %1225 = load i8, i8* %arrayidx2237, align 1
  %conv2238 = zext i8 %1225 to i32
  %cmp2239 = icmp ne i32 %conv2238, 0
  br i1 %cmp2239, label %if.then2241, label %if.end2243

if.then2241:                                      ; preds = %for.body2236
  %1226 = load i32, i32* %i, align 4
  %call2242 = call i32 @close(i32 %1226)
  br label %if.end2243

if.end2243:                                       ; preds = %if.then2241, %for.body2236
  br label %for.inc2244

for.inc2244:                                      ; preds = %if.end2243
  %1227 = load i32, i32* %i, align 4
  %inc2245 = add nsw i32 %1227, 1
  store i32 %inc2245, i32* %i, align 4
  br label %for.cond2233

for.end2246:                                      ; preds = %for.cond2233
  call void @closem(i32 0, i32 1)
  %1228 = load i32, i32* @thisjob, align 4
  %cmp2247 = icmp ne i32 %1228, -1
  br i1 %cmp2247, label %if.then2249, label %if.end2250

if.then2249:                                      ; preds = %for.end2246
  call void @waitjobs()
  br label %if.end2250

if.end2250:                                       ; preds = %if.then2249, %for.end2246
  %1229 = load i32, i32* @lastval, align 4
  call void @_exit(i32 %1229) #4
  unreachable

if.end2251:                                       ; preds = %err
  %arraydecay2252 = getelementptr inbounds [10 x i32], [10 x i32]* %save, i32 0, i32 0
  call void @fixfds(i32* %arraydecay2252)
  br label %done

done:                                             ; preds = %if.end2251, %if.end1898, %for.end1737, %if.then1679, %if.then1653, %if.then1556, %if.then1422, %if.then1310, %if.then1271, %if.then1240, %if.then1223, %if.then1199, %if.then1170, %if.then356, %if.then346, %if.then303
  %1230 = load i8, i8* getelementptr inbounds ([181 x i8], [181 x i8]* @opts, i32 0, i32 132), align 1
  %conv2253 = sext i8 %1230 to i32
  %tobool2254 = icmp ne i32 %conv2253, 0
  br i1 %tobool2254, label %land.lhs.true2255, label %if.end2275

land.lhs.true2255:                                ; preds = %done
  %1231 = load i32, i32* %cflags, align 4
  %and2256 = and i32 %1231, 2560
  %tobool2257 = icmp ne i32 %and2256, 0
  br i1 %tobool2257, label %land.lhs.true2258, label %if.end2275

land.lhs.true2258:                                ; preds = %land.lhs.true2255
  %1232 = load i32, i32* %orig_cflags, align 4
  %and2259 = and i32 %1232, 256
  %tobool2260 = icmp ne i32 %and2259, 0
  br i1 %tobool2260, label %if.end2275, label %if.then2261

if.then2261:                                      ; preds = %land.lhs.true2258
  %1233 = load i32, i32* @zsh_subshell, align 4
  %1234 = load i32, i32* %forked, align 4
  %or2262 = or i32 %1234, %1233
  store i32 %or2262, i32* %forked, align 4
  br label %fatal

fatal:                                            ; preds = %if.then2261, %sw.bb1060, %sw.bb
  %1235 = load i32, i32* %redir_err, align 4
  %tobool2263 = icmp ne i32 %1235, 0
  br i1 %tobool2263, label %if.then2266, label %lor.lhs.false2264

lor.lhs.false2264:                                ; preds = %fatal
  %1236 = load i32, i32* @errflag, align 4
  %tobool2265 = icmp ne i32 %1236, 0
  br i1 %tobool2265, label %if.then2266, label %if.end2274

if.then2266:                                      ; preds = %lor.lhs.false2264, %fatal
  %1237 = load i8, i8* getelementptr inbounds ([181 x i8], [181 x i8]* @opts, i32 0, i32 94), align 1
  %tobool2267 = icmp ne i8 %1237, 0
  br i1 %tobool2267, label %if.end2272, label %if.then2268

if.then2268:                                      ; preds = %if.then2266
  %1238 = load i32, i32* %forked, align 4
  %tobool2269 = icmp ne i32 %1238, 0
  br i1 %tobool2269, label %if.then2270, label %if.else2271

if.then2270:                                      ; preds = %if.then2268
  call void @_exit(i32 1) #4
  unreachable

if.else2271:                                      ; preds = %if.then2268
  call void @exit(i32 1) #4
  unreachable

if.end2272:                                       ; preds = %if.then2266
  %1239 = load i32, i32* @errflag, align 4
  %or2273 = or i32 %1239, 1
  store i32 %or2273, i32* @errflag, align 4
  br label %if.end2274

if.end2274:                                       ; preds = %if.end2272, %lor.lhs.false2264
  br label %if.end2275

if.end2275:                                       ; preds = %if.end2274, %land.lhs.true2258, %land.lhs.true2255, %done
  %1240 = load %struct._IO_FILE*, %struct._IO_FILE** %newxtrerr, align 4
  %tobool2276 = icmp ne %struct._IO_FILE* %1240, null
  br i1 %tobool2276, label %if.then2277, label %if.end2281

if.then2277:                                      ; preds = %if.end2275
  %1241 = load %struct._IO_FILE*, %struct._IO_FILE** %newxtrerr, align 4
  %call2278 = call i32 @fileno(%struct._IO_FILE* %1241)
  store i32 %call2278, i32* %fil, align 4
  %1242 = load %struct._IO_FILE*, %struct._IO_FILE** %newxtrerr, align 4
  %call2279 = call i32 @fclose(%struct._IO_FILE* %1242)
  %1243 = load %struct._IO_FILE*, %struct._IO_FILE** %oxtrerr, align 4
  store %struct._IO_FILE* %1243, %struct._IO_FILE** @xtrerr, align 4
  %1244 = load i32, i32* %fil, align 4
  %call2280 = call i32 @zclose(i32 %1244)
  br label %if.end2281

if.end2281:                                       ; preds = %if.then2277, %if.end2275
  %1245 = load i8*, i8** @STTYval, align 4
  call void @zsfree(i8* %1245)
  store i8* null, i8** @STTYval, align 4
  %1246 = load i32, i32* %oautocont, align 4
  %cmp2282 = icmp sge i32 %1246, 0
  br i1 %cmp2282, label %if.then2284, label %if.end2286

if.then2284:                                      ; preds = %if.end2281
  %1247 = load i32, i32* %oautocont, align 4
  %conv2285 = trunc i32 %1247 to i8
  store i8 %conv2285, i8* getelementptr inbounds ([181 x i8], [181 x i8]* @opts, i32 0, i32 8), align 1
  br label %if.end2286

if.end2286:                                       ; preds = %sw.default, %if.end156, %if.end372, %if.end522, %if.end587, %if.end594, %if.end615, %if.end631, %if.end675, %if.end687, %if.end710, %if.end864, %if.end907, %sw.default1062, %if.then2284, %if.end2281
  ret void
}

declare %union.linkroot* @ecgetredirs(%struct.estate*) #1

declare void @scanjobs() #1

declare i32 @findjobnam(i8*) #1

; Function Attrs: noinline nounwind
define internal i32 @execcmd_fork(%struct.estate* %state, i32 %how, i32 %type, i32* %varspc, %union.linkroot** %filelistp, i8* %text, i32 %oautocont, i32 %close_if_forked) #0 {
entry:
  %retval = alloca i32, align 4
  %state.addr = alloca %struct.estate*, align 4
  %how.addr = alloca i32, align 4
  %type.addr = alloca i32, align 4
  %varspc.addr = alloca i32*, align 4
  %filelistp.addr = alloca %union.linkroot**, align 4
  %text.addr = alloca i8*, align 4
  %oautocont.addr = alloca i32, align 4
  %close_if_forked.addr = alloca i32, align 4
  %pid = alloca i32, align 4
  %synch = alloca [2 x i32], align 4
  %flags = alloca i32, align 4
  %dummy = alloca i8, align 1
  %bgtime = alloca %struct.timeval, align 4
  %tmp = alloca %struct.__sigset_t, align 4
  %p = alloca i32*, align 4
  %ac = alloca i32, align 4
  store %struct.estate* %state, %struct.estate** %state.addr, align 4
  store i32 %how, i32* %how.addr, align 4
  store i32 %type, i32* %type.addr, align 4
  store i32* %varspc, i32** %varspc.addr, align 4
  store %union.linkroot** %filelistp, %union.linkroot*** %filelistp.addr, align 4
  store i8* %text, i8** %text.addr, align 4
  store i32 %oautocont, i32* %oautocont.addr, align 4
  store i32 %close_if_forked, i32* %close_if_forked.addr, align 4
  call void @signal_block(%struct.__sigset_t* sret %tmp, %struct.__sigset_t* byval align 4 @sigchld_mask)
  %arraydecay = getelementptr inbounds [2 x i32], [2 x i32]* %synch, i32 0, i32 0
  %call = call i32 @pipe(i32* %arraydecay)
  %cmp = icmp slt i32 %call, 0
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %call1 = call i32* @__errno_location()
  %0 = load i32, i32* %call1, align 4
  call void (i8*, ...) @zerr(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.45, i32 0, i32 0), i32 %0)
  store i32 -1, i32* %retval, align 4
  br label %return

if.else:                                          ; preds = %entry
  %call2 = call i32 @zfork(%struct.timeval* %bgtime)
  store i32 %call2, i32* %pid, align 4
  %cmp3 = icmp eq i32 %call2, -1
  br i1 %cmp3, label %if.then4, label %if.end

if.then4:                                         ; preds = %if.else
  %arrayidx = getelementptr inbounds [2 x i32], [2 x i32]* %synch, i32 0, i32 0
  %1 = load i32, i32* %arrayidx, align 4
  %call5 = call i32 @close(i32 %1)
  %arrayidx6 = getelementptr inbounds [2 x i32], [2 x i32]* %synch, i32 0, i32 1
  %2 = load i32, i32* %arrayidx6, align 4
  %call7 = call i32 @close(i32 %2)
  store i32 1, i32* @lastval, align 4
  %3 = load i32, i32* @errflag, align 4
  %or = or i32 %3, 1
  store i32 %or, i32* @errflag, align 4
  store i32 -1, i32* %retval, align 4
  br label %return

if.end:                                           ; preds = %if.else
  br label %if.end8

if.end8:                                          ; preds = %if.end
  %4 = load i32, i32* %pid, align 4
  %tobool = icmp ne i32 %4, 0
  br i1 %tobool, label %if.then9, label %if.end45

if.then9:                                         ; preds = %if.end8
  %arrayidx10 = getelementptr inbounds [2 x i32], [2 x i32]* %synch, i32 0, i32 1
  %5 = load i32, i32* %arrayidx10, align 4
  %call11 = call i32 @close(i32 %5)
  %arrayidx12 = getelementptr inbounds [2 x i32], [2 x i32]* %synch, i32 0, i32 0
  %6 = load i32, i32* %arrayidx12, align 4
  %call13 = call i32 @read_loop(i32 %6, i8* %dummy, i32 1)
  %arrayidx14 = getelementptr inbounds [2 x i32], [2 x i32]* %synch, i32 0, i32 0
  %7 = load i32, i32* %arrayidx14, align 4
  %call15 = call i32 @close(i32 %7)
  %8 = load i32, i32* %how.addr, align 4
  %and = and i32 %8, 4
  %tobool16 = icmp ne i32 %and, 0
  br i1 %tobool16, label %if.then17, label %if.else18

if.then17:                                        ; preds = %if.then9
  %9 = load i32, i32* %pid, align 4
  store i32 %9, i32* @lastpid, align 4
  br label %if.end40

if.else18:                                        ; preds = %if.then9
  %10 = load %struct.job*, %struct.job** @jobtab, align 4
  %11 = load i32, i32* @thisjob, align 4
  %arrayidx19 = getelementptr inbounds %struct.job, %struct.job* %10, i32 %11
  %stty_in_env = getelementptr inbounds %struct.job, %struct.job* %arrayidx19, i32 0, i32 7
  %12 = load i32, i32* %stty_in_env, align 4
  %tobool20 = icmp ne i32 %12, 0
  br i1 %tobool20, label %if.end39, label %land.lhs.true

land.lhs.true:                                    ; preds = %if.else18
  %13 = load i32*, i32** %varspc.addr, align 4
  %tobool21 = icmp ne i32* %13, null
  br i1 %tobool21, label %if.then22, label %if.end39

if.then22:                                        ; preds = %land.lhs.true
  %14 = load i32*, i32** %varspc.addr, align 4
  store i32* %14, i32** %p, align 4
  br label %while.cond

while.cond:                                       ; preds = %cond.end, %if.then22
  %15 = load i32*, i32** %p, align 4
  %16 = load i32, i32* %15, align 4
  store i32 %16, i32* %ac, align 4
  %and25 = and i32 %16, 31
  %cmp26 = icmp eq i32 %and25, 5
  br i1 %cmp26, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %17 = load %struct.estate*, %struct.estate** %state.addr, align 4
  %prog = getelementptr inbounds %struct.estate, %struct.estate* %17, i32 0, i32 0
  %18 = load %struct.eprog*, %struct.eprog** %prog, align 4
  %19 = load i32*, i32** %p, align 4
  %add.ptr = getelementptr inbounds i32, i32* %19, i32 1
  %call27 = call i8* @ecrawstr(%struct.eprog* %18, i32* %add.ptr, i32* null)
  %call28 = call i32 @strcmp(i8* %call27, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.34, i32 0, i32 0))
  %tobool29 = icmp ne i32 %call28, 0
  br i1 %tobool29, label %if.end33, label %if.then30

if.then30:                                        ; preds = %while.body
  %20 = load %struct.job*, %struct.job** @jobtab, align 4
  %21 = load i32, i32* @thisjob, align 4
  %arrayidx31 = getelementptr inbounds %struct.job, %struct.job* %20, i32 %21
  %stty_in_env32 = getelementptr inbounds %struct.job, %struct.job* %arrayidx31, i32 0, i32 7
  store i32 1, i32* %stty_in_env32, align 4
  br label %while.end

if.end33:                                         ; preds = %while.body
  %22 = load i32, i32* %ac, align 4
  %shr = lshr i32 %22, 5
  %and34 = and i32 %shr, 1
  %cmp35 = icmp eq i32 %and34, 0
  br i1 %cmp35, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end33
  br label %cond.end

cond.false:                                       ; preds = %if.end33
  %23 = load i32, i32* %ac, align 4
  %shr36 = lshr i32 %23, 5
  %shr37 = lshr i32 %shr36, 2
  %add = add i32 %shr37, 2
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 3, %cond.true ], [ %add, %cond.false ]
  %24 = load i32*, i32** %p, align 4
  %add.ptr38 = getelementptr inbounds i32, i32* %24, i32 %cond
  store i32* %add.ptr38, i32** %p, align 4
  br label %while.cond

while.end:                                        ; preds = %if.then30, %while.cond
  br label %if.end39

if.end39:                                         ; preds = %while.end, %land.lhs.true, %if.else18
  br label %if.end40

if.end40:                                         ; preds = %if.end39, %if.then17
  %25 = load i32, i32* %pid, align 4
  %26 = load i8*, i8** %text.addr, align 4
  call void @addproc(i32 %25, i8* %26, i32 0, %struct.timeval* %bgtime)
  %27 = load i32, i32* %oautocont.addr, align 4
  %cmp41 = icmp sge i32 %27, 0
  br i1 %cmp41, label %if.then42, label %if.end43

if.then42:                                        ; preds = %if.end40
  %28 = load i32, i32* %oautocont.addr, align 4
  %conv = trunc i32 %28 to i8
  store i8 %conv, i8* getelementptr inbounds ([181 x i8], [181 x i8]* @opts, i32 0, i32 8), align 1
  br label %if.end43

if.end43:                                         ; preds = %if.then42, %if.end40
  %29 = load %struct.job*, %struct.job** @jobtab, align 4
  %30 = load i32, i32* @thisjob, align 4
  %arrayidx44 = getelementptr inbounds %struct.job, %struct.job* %29, i32 %30
  %filelist = getelementptr inbounds %struct.job, %struct.job* %arrayidx44, i32 0, i32 6
  %31 = load %union.linkroot*, %union.linkroot** %filelist, align 4
  call void @pipecleanfilelist(%union.linkroot* %31, i32 1)
  %32 = load i32, i32* %pid, align 4
  store i32 %32, i32* %retval, align 4
  br label %return

if.end45:                                         ; preds = %if.end8
  %arrayidx46 = getelementptr inbounds [2 x i32], [2 x i32]* %synch, i32 0, i32 0
  %33 = load i32, i32* %arrayidx46, align 4
  %call47 = call i32 @close(i32 %33)
  %34 = load i32, i32* %how.addr, align 4
  %and48 = and i32 %34, 4
  %tobool49 = icmp ne i32 %and48, 0
  %cond50 = select i1 %tobool49, i32 1, i32 0
  %or51 = or i32 %cond50, 2
  store i32 %or51, i32* %flags, align 4
  %35 = load i32, i32* %type.addr, align 4
  %cmp52 = icmp ne i32 %35, 8
  br i1 %cmp52, label %land.lhs.true54, label %if.end59

land.lhs.true54:                                  ; preds = %if.end45
  %36 = load i32, i32* %how.addr, align 4
  %and55 = and i32 %36, 4
  %tobool56 = icmp ne i32 %and55, 0
  br i1 %tobool56, label %if.end59, label %if.then57

if.then57:                                        ; preds = %land.lhs.true54
  %37 = load i32, i32* %flags, align 4
  %or58 = or i32 %37, 4
  store i32 %or58, i32* %flags, align 4
  br label %if.end59

if.end59:                                         ; preds = %if.then57, %land.lhs.true54, %if.end45
  %38 = load i32, i32* %type.addr, align 4
  %cmp60 = icmp eq i32 %38, 8
  br i1 %cmp60, label %land.lhs.true62, label %if.end67

land.lhs.true62:                                  ; preds = %if.end59
  %39 = load i32, i32* %how.addr, align 4
  %and63 = and i32 %39, 4
  %tobool64 = icmp ne i32 %and63, 0
  br i1 %tobool64, label %if.end67, label %if.then65

if.then65:                                        ; preds = %land.lhs.true62
  %40 = load i32, i32* %flags, align 4
  %or66 = or i32 %40, 64
  store i32 %or66, i32* %flags, align 4
  br label %if.end67

if.end67:                                         ; preds = %if.then65, %land.lhs.true62, %if.end59
  %41 = load %struct.job*, %struct.job** @jobtab, align 4
  %42 = load i32, i32* @thisjob, align 4
  %arrayidx68 = getelementptr inbounds %struct.job, %struct.job* %41, i32 %42
  %filelist69 = getelementptr inbounds %struct.job, %struct.job* %arrayidx68, i32 0, i32 6
  %43 = load %union.linkroot*, %union.linkroot** %filelist69, align 4
  %44 = load %union.linkroot**, %union.linkroot*** %filelistp.addr, align 4
  store %union.linkroot* %43, %union.linkroot** %44, align 4
  %45 = load i32, i32* %flags, align 4
  call void @entersubsh(i32 %45)
  %arrayidx70 = getelementptr inbounds [2 x i32], [2 x i32]* %synch, i32 0, i32 1
  %46 = load i32, i32* %arrayidx70, align 4
  %call71 = call i32 @close(i32 %46)
  %47 = load i32, i32* %close_if_forked.addr, align 4
  %call72 = call i32 @zclose(i32 %47)
  %48 = load i32, i32* getelementptr inbounds ([34 x i32], [34 x i32]* @sigtrapped, i32 0, i32 2), align 4
  %and73 = and i32 %48, 2
  %tobool74 = icmp ne i32 %and73, 0
  br i1 %tobool74, label %if.then75, label %if.end76

if.then75:                                        ; preds = %if.end67
  call void @holdintr()
  br label %if.end76

if.end76:                                         ; preds = %if.then75, %if.end67
  %49 = load i32, i32* %how.addr, align 4
  %and77 = and i32 %49, 4
  %tobool78 = icmp ne i32 %and77, 0
  br i1 %tobool78, label %land.lhs.true79, label %if.end89

land.lhs.true79:                                  ; preds = %if.end76
  %50 = load i8, i8* getelementptr inbounds ([181 x i8], [181 x i8]* @opts, i32 0, i32 23), align 1
  %conv80 = sext i8 %50 to i32
  %tobool81 = icmp ne i32 %conv80, 0
  br i1 %tobool81, label %if.then82, label %if.end89

if.then82:                                        ; preds = %land.lhs.true79
  %call83 = call i32 @nice(i32 5)
  %cmp84 = icmp slt i32 %call83, 0
  br i1 %cmp84, label %if.then86, label %if.end88

if.then86:                                        ; preds = %if.then82
  %call87 = call i32* @__errno_location()
  %51 = load i32, i32* %call87, align 4
  call void (i8*, ...) @zwarn(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.76, i32 0, i32 0), i32 %51)
  br label %if.end88

if.end88:                                         ; preds = %if.then86, %if.then82
  br label %if.end89

if.end89:                                         ; preds = %if.end88, %land.lhs.true79, %if.end76
  store i32 0, i32* %retval, align 4
  br label %return

return:                                           ; preds = %if.end89, %if.end43, %if.then4, %if.then
  %52 = load i32, i32* %retval, align 4
  ret i32 %52
}

; Function Attrs: noinline nounwind
define internal void @execcmd_getargs(%union.linkroot* %preargs, %union.linkroot* %args, i32 %expand) #0 {
entry:
  %preargs.addr = alloca %union.linkroot*, align 4
  %args.addr = alloca %union.linkroot*, align 4
  %expand.addr = alloca i32, align 4
  %svl = alloca %union.linkroot, align 4
  store %union.linkroot* %preargs, %union.linkroot** %preargs.addr, align 4
  store %union.linkroot* %args, %union.linkroot** %args.addr, align 4
  store i32 %expand, i32* %expand.addr, align 4
  %0 = load %union.linkroot*, %union.linkroot** %args.addr, align 4
  %list = bitcast %union.linkroot* %0 to %struct.linklist*
  %first = getelementptr inbounds %struct.linklist, %struct.linklist* %list, i32 0, i32 0
  %1 = load %struct.linknode*, %struct.linknode** %first, align 4
  %tobool = icmp ne %struct.linknode* %1, null
  br i1 %tobool, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  br label %if.end20

if.else:                                          ; preds = %entry
  %2 = load i32, i32* %expand.addr, align 4
  %tobool1 = icmp ne i32 %2, 0
  br i1 %tobool1, label %if.then2, label %if.else13

if.then2:                                         ; preds = %if.else
  br label %do.body

do.body:                                          ; preds = %if.then2
  %list3 = bitcast %union.linkroot* %svl to %struct.linklist*
  %first4 = getelementptr inbounds %struct.linklist, %struct.linklist* %list3, i32 0, i32 0
  store %struct.linknode* null, %struct.linknode** %first4, align 4
  %node = bitcast %union.linkroot* %svl to %struct.linknode*
  %list5 = bitcast %union.linkroot* %svl to %struct.linklist*
  %last = getelementptr inbounds %struct.linklist, %struct.linklist* %list5, i32 0, i32 1
  store %struct.linknode* %node, %struct.linknode** %last, align 4
  %list6 = bitcast %union.linkroot* %svl to %struct.linklist*
  %flags = getelementptr inbounds %struct.linklist, %struct.linklist* %list6, i32 0, i32 2
  store i32 0, i32* %flags, align 4
  br label %do.end

do.end:                                           ; preds = %do.body
  %list7 = bitcast %union.linkroot* %svl to %struct.linklist*
  %last8 = getelementptr inbounds %struct.linklist, %struct.linklist* %list7, i32 0, i32 1
  %3 = load %struct.linknode*, %struct.linknode** %last8, align 4
  %4 = load %union.linkroot*, %union.linkroot** %args.addr, align 4
  %5 = load %union.linkroot*, %union.linkroot** %args.addr, align 4
  %list9 = bitcast %union.linkroot* %5 to %struct.linklist*
  %first10 = getelementptr inbounds %struct.linklist, %struct.linklist* %list9, i32 0, i32 0
  %6 = load %struct.linknode*, %struct.linknode** %first10, align 4
  %call = call i8* @uremnode(%union.linkroot* %4, %struct.linknode* %6)
  %call11 = call %struct.linknode* @insertlinknode(%union.linkroot* %svl, %struct.linknode* %3, i8* %call)
  call void @prefork(%union.linkroot* %svl, i32 0, i32* null)
  %7 = load %union.linkroot*, %union.linkroot** %preargs.addr, align 4
  %call12 = call %union.linkroot* @joinlists(%union.linkroot* %7, %union.linkroot* %svl)
  br label %if.end

if.else13:                                        ; preds = %if.else
  %8 = load %union.linkroot*, %union.linkroot** %preargs.addr, align 4
  %9 = load %union.linkroot*, %union.linkroot** %preargs.addr, align 4
  %list14 = bitcast %union.linkroot* %9 to %struct.linklist*
  %last15 = getelementptr inbounds %struct.linklist, %struct.linklist* %list14, i32 0, i32 1
  %10 = load %struct.linknode*, %struct.linknode** %last15, align 4
  %11 = load %union.linkroot*, %union.linkroot** %args.addr, align 4
  %12 = load %union.linkroot*, %union.linkroot** %args.addr, align 4
  %list16 = bitcast %union.linkroot* %12 to %struct.linklist*
  %first17 = getelementptr inbounds %struct.linklist, %struct.linklist* %list16, i32 0, i32 0
  %13 = load %struct.linknode*, %struct.linknode** %first17, align 4
  %call18 = call i8* @uremnode(%union.linkroot* %11, %struct.linknode* %13)
  %call19 = call %struct.linknode* @insertlinknode(%union.linkroot* %8, %struct.linknode* %10, i8* %call18)
  br label %if.end

if.end:                                           ; preds = %if.else13, %do.end
  br label %if.end20

if.end20:                                         ; preds = %if.then, %if.end
  ret void
}

declare i32 @has_token(i8*) #1

; Function Attrs: noinline nounwind
define internal %struct.hashnode* @resolvebuiltin(i8* %cmdarg, %struct.hashnode* %hn) #0 {
entry:
  %retval = alloca %struct.hashnode*, align 4
  %cmdarg.addr = alloca i8*, align 4
  %hn.addr = alloca %struct.hashnode*, align 4
  %modname = alloca i8*, align 4
  store i8* %cmdarg, i8** %cmdarg.addr, align 4
  store %struct.hashnode* %hn, %struct.hashnode** %hn.addr, align 4
  %0 = load %struct.hashnode*, %struct.hashnode** %hn.addr, align 4
  %1 = bitcast %struct.hashnode* %0 to %struct.builtin*
  %handlerfunc = getelementptr inbounds %struct.builtin, %struct.builtin* %1, i32 0, i32 1
  %2 = load i32 (i8*, i8**, %struct.options*, i32)*, i32 (i8*, i8**, %struct.options*, i32)** %handlerfunc, align 4
  %tobool = icmp ne i32 (i8*, i8**, %struct.options*, i32)* %2, null
  br i1 %tobool, label %if.end6, label %if.then

if.then:                                          ; preds = %entry
  %3 = load %struct.hashnode*, %struct.hashnode** %hn.addr, align 4
  %4 = bitcast %struct.hashnode* %3 to %struct.builtin*
  %optstr = getelementptr inbounds %struct.builtin, %struct.builtin* %4, i32 0, i32 5
  %5 = load i8*, i8** %optstr, align 4
  %call = call i8* @dupstring(i8* %5)
  store i8* %call, i8** %modname, align 4
  %6 = load i8*, i8** %modname, align 4
  %7 = load %struct.hashnode*, %struct.hashnode** %hn.addr, align 4
  %flags = getelementptr inbounds %struct.hashnode, %struct.hashnode* %7, i32 0, i32 2
  %8 = load i32, i32* %flags, align 4
  %and = and i32 %8, 131072
  %tobool1 = icmp ne i32 %and, 0
  br i1 %tobool1, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.then
  br label %cond.end

cond.false:                                       ; preds = %if.then
  %9 = load %struct.hashnode*, %struct.hashnode** %hn.addr, align 4
  %nam = getelementptr inbounds %struct.hashnode, %struct.hashnode* %9, i32 0, i32 1
  %10 = load i8*, i8** %nam, align 4
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ null, %cond.true ], [ %10, %cond.false ]
  %call2 = call i32 @ensurefeature(i8* %6, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.77, i32 0, i32 0), i8* %cond)
  %11 = load %struct.hashtable*, %struct.hashtable** @builtintab, align 4
  %getnode = getelementptr inbounds %struct.hashtable, %struct.hashtable* %11, i32 0, i32 9
  %12 = load %struct.hashnode* (%struct.hashtable*, i8*)*, %struct.hashnode* (%struct.hashtable*, i8*)** %getnode, align 4
  %13 = load %struct.hashtable*, %struct.hashtable** @builtintab, align 4
  %14 = load i8*, i8** %cmdarg.addr, align 4
  %call3 = call %struct.hashnode* %12(%struct.hashtable* %13, i8* %14)
  store %struct.hashnode* %call3, %struct.hashnode** %hn.addr, align 4
  %15 = load %struct.hashnode*, %struct.hashnode** %hn.addr, align 4
  %tobool4 = icmp ne %struct.hashnode* %15, null
  br i1 %tobool4, label %if.end, label %if.then5

if.then5:                                         ; preds = %cond.end
  store i32 1, i32* @lastval, align 4
  %16 = load i8*, i8** %modname, align 4
  %17 = load i8*, i8** %cmdarg.addr, align 4
  call void (i8*, ...) @zerr(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.78, i32 0, i32 0), i8* %16, i8* %17)
  store %struct.hashnode* null, %struct.hashnode** %retval, align 4
  br label %return

if.end:                                           ; preds = %cond.end
  br label %if.end6

if.end6:                                          ; preds = %if.end, %entry
  %18 = load %struct.hashnode*, %struct.hashnode** %hn.addr, align 4
  store %struct.hashnode* %18, %struct.hashnode** %retval, align 4
  br label %return

return:                                           ; preds = %if.end6, %if.then5
  %19 = load %struct.hashnode*, %struct.hashnode** %retval, align 4
  ret %struct.hashnode* %19
}

declare i8* @uremnode(%union.linkroot*, %struct.linknode*) #1

declare void @remnulargs(i8*) #1

declare i32 @zputenv(i8*) #1

declare %union.linkroot* @joinlists(%union.linkroot*, %union.linkroot*) #1

declare void @zglob(%union.linkroot*, %struct.linknode*, i32) #1

declare void @zerrnam(i8*, i8*, ...) #1

declare i32 @checkrmall(i8*) #1

; Function Attrs: noinline nounwind
define internal i8* @cancd(i8* %s) #0 {
entry:
  %retval = alloca i8*, align 4
  %s.addr = alloca i8*, align 4
  %nocdpath = alloca i32, align 4
  %t = alloca i8*, align 4
  %sbuf = alloca [4097 x i8], align 1
  %cp = alloca i8**, align 4
  store i8* %s, i8** %s.addr, align 4
  %0 = load i8*, i8** %s.addr, align 4
  %arrayidx = getelementptr inbounds i8, i8* %0, i32 0
  %1 = load i8, i8* %arrayidx, align 1
  %conv = sext i8 %1 to i32
  %cmp = icmp eq i32 %conv, 46
  br i1 %cmp, label %land.rhs, label %land.end20

land.rhs:                                         ; preds = %entry
  %2 = load i8*, i8** %s.addr, align 4
  %arrayidx2 = getelementptr inbounds i8, i8* %2, i32 1
  %3 = load i8, i8* %arrayidx2, align 1
  %conv3 = sext i8 %3 to i32
  %cmp4 = icmp eq i32 %conv3, 47
  br i1 %cmp4, label %lor.end19, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.rhs
  %4 = load i8*, i8** %s.addr, align 4
  %arrayidx6 = getelementptr inbounds i8, i8* %4, i32 1
  %5 = load i8, i8* %arrayidx6, align 1
  %tobool = icmp ne i8 %5, 0
  br i1 %tobool, label %lor.rhs, label %lor.end19

lor.rhs:                                          ; preds = %lor.lhs.false
  %6 = load i8*, i8** %s.addr, align 4
  %arrayidx7 = getelementptr inbounds i8, i8* %6, i32 1
  %7 = load i8, i8* %arrayidx7, align 1
  %conv8 = sext i8 %7 to i32
  %cmp9 = icmp eq i32 %conv8, 46
  br i1 %cmp9, label %land.rhs11, label %land.end

land.rhs11:                                       ; preds = %lor.rhs
  %8 = load i8*, i8** %s.addr, align 4
  %arrayidx12 = getelementptr inbounds i8, i8* %8, i32 2
  %9 = load i8, i8* %arrayidx12, align 1
  %conv13 = sext i8 %9 to i32
  %cmp14 = icmp eq i32 %conv13, 47
  br i1 %cmp14, label %lor.end, label %lor.rhs16

lor.rhs16:                                        ; preds = %land.rhs11
  %10 = load i8*, i8** %s.addr, align 4
  %arrayidx17 = getelementptr inbounds i8, i8* %10, i32 1
  %11 = load i8, i8* %arrayidx17, align 1
  %tobool18 = icmp ne i8 %11, 0
  %lnot = xor i1 %tobool18, true
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs16, %land.rhs11
  %12 = phi i1 [ true, %land.rhs11 ], [ %lnot, %lor.rhs16 ]
  br label %land.end

land.end:                                         ; preds = %lor.end, %lor.rhs
  %13 = phi i1 [ false, %lor.rhs ], [ %12, %lor.end ]
  br label %lor.end19

lor.end19:                                        ; preds = %land.end, %lor.lhs.false, %land.rhs
  %14 = phi i1 [ true, %lor.lhs.false ], [ true, %land.rhs ], [ %13, %land.end ]
  br label %land.end20

land.end20:                                       ; preds = %lor.end19, %entry
  %15 = phi i1 [ false, %entry ], [ %14, %lor.end19 ]
  %land.ext = zext i1 %15 to i32
  store i32 %land.ext, i32* %nocdpath, align 4
  %16 = load i8*, i8** %s.addr, align 4
  %17 = load i8, i8* %16, align 1
  %conv21 = sext i8 %17 to i32
  %cmp22 = icmp ne i32 %conv21, 47
  br i1 %cmp22, label %if.then, label %if.end64

if.then:                                          ; preds = %land.end20
  %18 = load i8*, i8** %s.addr, align 4
  %call = call i32 @cancd2(i8* %18)
  %tobool24 = icmp ne i32 %call, 0
  br i1 %tobool24, label %if.then25, label %if.end

if.then25:                                        ; preds = %if.then
  %19 = load i8*, i8** %s.addr, align 4
  store i8* %19, i8** %retval, align 4
  br label %return

if.end:                                           ; preds = %if.then
  %20 = load i8*, i8** %s.addr, align 4
  %call26 = call i8* @unmeta(i8* %20)
  %call27 = call i32 @access(i8* %call26, i32 1)
  %cmp28 = icmp eq i32 %call27, 0
  br i1 %cmp28, label %if.then30, label %if.end31

if.then30:                                        ; preds = %if.end
  store i8* null, i8** %retval, align 4
  br label %return

if.end31:                                         ; preds = %if.end
  %21 = load i32, i32* %nocdpath, align 4
  %tobool32 = icmp ne i32 %21, 0
  br i1 %tobool32, label %if.end55, label %if.then33

if.then33:                                        ; preds = %if.end31
  %22 = load i8**, i8*** @cdpath, align 4
  store i8** %22, i8*** %cp, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then33
  %23 = load i8**, i8*** %cp, align 4
  %24 = load i8*, i8** %23, align 4
  %tobool34 = icmp ne i8* %24, null
  br i1 %tobool34, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %25 = load i8**, i8*** %cp, align 4
  %26 = load i8*, i8** %25, align 4
  %call35 = call i32 @strlen(i8* %26)
  %27 = load i8*, i8** %s.addr, align 4
  %call36 = call i32 @strlen(i8* %27)
  %add = add i32 %call35, %call36
  %add37 = add i32 %add, 1
  %cmp38 = icmp uge i32 %add37, 4096
  br i1 %cmp38, label %if.then40, label %if.end41

if.then40:                                        ; preds = %for.body
  br label %for.inc

if.end41:                                         ; preds = %for.body
  %28 = load i8**, i8*** %cp, align 4
  %29 = load i8*, i8** %28, align 4
  %30 = load i8, i8* %29, align 1
  %tobool42 = icmp ne i8 %30, 0
  br i1 %tobool42, label %if.then43, label %if.else

if.then43:                                        ; preds = %if.end41
  %arraydecay = getelementptr inbounds [4097 x i8], [4097 x i8]* %sbuf, i32 0, i32 0
  %31 = load i8**, i8*** %cp, align 4
  %32 = load i8*, i8** %31, align 4
  %33 = load i8*, i8** %s.addr, align 4
  %call44 = call i32 (i8*, i8*, ...) @sprintf(i8* %arraydecay, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.29, i32 0, i32 0), i8* %32, i8* %33)
  br label %if.end47

if.else:                                          ; preds = %if.end41
  %arraydecay45 = getelementptr inbounds [4097 x i8], [4097 x i8]* %sbuf, i32 0, i32 0
  %34 = load i8*, i8** %s.addr, align 4
  %call46 = call i8* @strcpy(i8* %arraydecay45, i8* %34)
  br label %if.end47

if.end47:                                         ; preds = %if.else, %if.then43
  %arraydecay48 = getelementptr inbounds [4097 x i8], [4097 x i8]* %sbuf, i32 0, i32 0
  %call49 = call i32 @cancd2(i8* %arraydecay48)
  %tobool50 = icmp ne i32 %call49, 0
  br i1 %tobool50, label %if.then51, label %if.end54

if.then51:                                        ; preds = %if.end47
  store i32 -1, i32* @doprintdir, align 4
  %arraydecay52 = getelementptr inbounds [4097 x i8], [4097 x i8]* %sbuf, i32 0, i32 0
  %call53 = call i8* @dupstring(i8* %arraydecay52)
  store i8* %call53, i8** %retval, align 4
  br label %return

if.end54:                                         ; preds = %if.end47
  br label %for.inc

for.inc:                                          ; preds = %if.end54, %if.then40
  %35 = load i8**, i8*** %cp, align 4
  %incdec.ptr = getelementptr inbounds i8*, i8** %35, i32 1
  store i8** %incdec.ptr, i8*** %cp, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  br label %if.end55

if.end55:                                         ; preds = %for.end, %if.end31
  %36 = load i8*, i8** %s.addr, align 4
  %call56 = call i8* @cd_able_vars(i8* %36)
  store i8* %call56, i8** %t, align 4
  %tobool57 = icmp ne i8* %call56, null
  br i1 %tobool57, label %if.then58, label %if.end63

if.then58:                                        ; preds = %if.end55
  %37 = load i8*, i8** %t, align 4
  %call59 = call i32 @cancd2(i8* %37)
  %tobool60 = icmp ne i32 %call59, 0
  br i1 %tobool60, label %if.then61, label %if.end62

if.then61:                                        ; preds = %if.then58
  store i32 -1, i32* @doprintdir, align 4
  %38 = load i8*, i8** %t, align 4
  store i8* %38, i8** %retval, align 4
  br label %return

if.end62:                                         ; preds = %if.then58
  br label %if.end63

if.end63:                                         ; preds = %if.end62, %if.end55
  store i8* null, i8** %retval, align 4
  br label %return

if.end64:                                         ; preds = %land.end20
  %39 = load i8*, i8** %s.addr, align 4
  %call65 = call i32 @cancd2(i8* %39)
  %tobool66 = icmp ne i32 %call65, 0
  br i1 %tobool66, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end64
  %40 = load i8*, i8** %s.addr, align 4
  br label %cond.end

cond.false:                                       ; preds = %if.end64
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %40, %cond.true ], [ null, %cond.false ]
  store i8* %cond, i8** %retval, align 4
  br label %return

return:                                           ; preds = %cond.end, %if.end63, %if.then61, %if.then51, %if.then30, %if.then25
  %41 = load i8*, i8** %retval, align 4
  ret i8* %41
}

declare i32 @havefiles() #1

declare i32 @movefd(i32) #1

declare i32 @dup(i32) #1

declare i32 @fileno(%struct._IO_FILE*) #1

; Function Attrs: noinline nounwind
define internal void @addfd(i32 %forked, i32* %save, %struct.multio** %mfds, i32 %fd1, i32 %fd2, i32 %rflag, i8* %varid) #0 {
entry:
  %forked.addr = alloca i32, align 4
  %save.addr = alloca i32*, align 4
  %mfds.addr = alloca %struct.multio**, align 4
  %fd1.addr = alloca i32, align 4
  %fd2.addr = alloca i32, align 4
  %rflag.addr = alloca i32, align 4
  %varid.addr = alloca i8*, align 4
  %pipes = alloca [2 x i32], align 4
  %fdN = alloca i32, align 4
  %fdN64 = alloca i32, align 4
  %fdN96 = alloca i32, align 4
  %new = alloca i32, align 4
  %old = alloca i32, align 4
  store i32 %forked, i32* %forked.addr, align 4
  store i32* %save, i32** %save.addr, align 4
  store %struct.multio** %mfds, %struct.multio*** %mfds.addr, align 4
  store i32 %fd1, i32* %fd1.addr, align 4
  store i32 %fd2, i32* %fd2.addr, align 4
  store i32 %rflag, i32* %rflag.addr, align 4
  store i8* %varid, i8** %varid.addr, align 4
  %0 = load i8*, i8** %varid.addr, align 4
  %tobool = icmp ne i8* %0, null
  br i1 %tobool, label %if.then, label %if.else8

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %fd2.addr, align 4
  %call = call i32 @movefd(i32 %1)
  store i32 %call, i32* %fd1.addr, align 4
  %2 = load i32, i32* %fd1.addr, align 4
  %cmp = icmp eq i32 %2, -1
  br i1 %cmp, label %if.then1, label %if.else

if.then1:                                         ; preds = %if.then
  %3 = load i32, i32* %fd2.addr, align 4
  %call2 = call i32* @__errno_location()
  %4 = load i32, i32* %call2, align 4
  call void (i8*, ...) @zerr(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.80, i32 0, i32 0), i32 %3, i32 %4)
  br label %if.end121

if.else:                                          ; preds = %if.then
  %5 = load i8*, i8** @fdtable, align 4
  %6 = load i32, i32* %fd1.addr, align 4
  %arrayidx = getelementptr inbounds i8, i8* %5, i32 %6
  store i8 2, i8* %arrayidx, align 1
  %7 = load i8*, i8** %varid.addr, align 4
  %8 = load i32, i32* %fd1.addr, align 4
  %call3 = call %struct.param* @setiparam(i8* %7, i32 %8)
  %9 = load i32, i32* @errflag, align 4
  %tobool4 = icmp ne i32 %9, 0
  br i1 %tobool4, label %if.then5, label %if.end

if.then5:                                         ; preds = %if.else
  %10 = load i32, i32* %fd1.addr, align 4
  %call6 = call i32 @zclose(i32 %10)
  br label %if.end

if.end:                                           ; preds = %if.then5, %if.else
  br label %if.end7

if.end7:                                          ; preds = %if.end
  br label %if.end121

if.else8:                                         ; preds = %entry
  %11 = load %struct.multio**, %struct.multio*** %mfds.addr, align 4
  %12 = load i32, i32* %fd1.addr, align 4
  %arrayidx9 = getelementptr inbounds %struct.multio*, %struct.multio** %11, i32 %12
  %13 = load %struct.multio*, %struct.multio** %arrayidx9, align 4
  %tobool10 = icmp ne %struct.multio* %13, null
  br i1 %tobool10, label %lor.lhs.false, label %if.then12

lor.lhs.false:                                    ; preds = %if.else8
  %14 = load i8, i8* getelementptr inbounds ([181 x i8], [181 x i8]* @opts, i32 0, i32 120), align 1
  %tobool11 = icmp ne i8 %14, 0
  br i1 %tobool11, label %if.else52, label %if.then12

if.then12:                                        ; preds = %lor.lhs.false, %if.else8
  %15 = load %struct.multio**, %struct.multio*** %mfds.addr, align 4
  %16 = load i32, i32* %fd1.addr, align 4
  %arrayidx13 = getelementptr inbounds %struct.multio*, %struct.multio** %15, i32 %16
  %17 = load %struct.multio*, %struct.multio** %arrayidx13, align 4
  %tobool14 = icmp ne %struct.multio* %17, null
  br i1 %tobool14, label %if.end42, label %if.then15

if.then15:                                        ; preds = %if.then12
  %call16 = call i8* @zhalloc(i32 44)
  %18 = bitcast i8* %call16 to %struct.multio*
  %19 = load %struct.multio**, %struct.multio*** %mfds.addr, align 4
  %20 = load i32, i32* %fd1.addr, align 4
  %arrayidx17 = getelementptr inbounds %struct.multio*, %struct.multio** %19, i32 %20
  store %struct.multio* %18, %struct.multio** %arrayidx17, align 4
  %21 = load i32, i32* %forked.addr, align 4
  %tobool18 = icmp ne i32 %21, 0
  br i1 %tobool18, label %if.end41, label %land.lhs.true

land.lhs.true:                                    ; preds = %if.then15
  %22 = load i32*, i32** %save.addr, align 4
  %23 = load i32, i32* %fd1.addr, align 4
  %arrayidx19 = getelementptr inbounds i32, i32* %22, i32 %23
  %24 = load i32, i32* %arrayidx19, align 4
  %cmp20 = icmp eq i32 %24, -2
  br i1 %cmp20, label %if.then21, label %if.end41

if.then21:                                        ; preds = %land.lhs.true
  %25 = load i32, i32* %fd1.addr, align 4
  %26 = load i32, i32* %fd2.addr, align 4
  %cmp22 = icmp eq i32 %25, %26
  br i1 %cmp22, label %if.then23, label %if.else25

if.then23:                                        ; preds = %if.then21
  %27 = load i32*, i32** %save.addr, align 4
  %28 = load i32, i32* %fd1.addr, align 4
  %arrayidx24 = getelementptr inbounds i32, i32* %27, i32 %28
  store i32 -1, i32* %arrayidx24, align 4
  br label %if.end40

if.else25:                                        ; preds = %if.then21
  %29 = load i32, i32* %fd1.addr, align 4
  %call26 = call i32 @movefd(i32 %29)
  store i32 %call26, i32* %fdN, align 4
  %30 = load i32, i32* %fdN, align 4
  %cmp27 = icmp slt i32 %30, 0
  br i1 %cmp27, label %if.then28, label %if.else35

if.then28:                                        ; preds = %if.else25
  %call29 = call i32* @__errno_location()
  %31 = load i32, i32* %call29, align 4
  %cmp30 = icmp ne i32 %31, 9
  br i1 %cmp30, label %if.then31, label %if.end34

if.then31:                                        ; preds = %if.then28
  %32 = load i32, i32* %fd1.addr, align 4
  %call32 = call i32* @__errno_location()
  %33 = load i32, i32* %call32, align 4
  call void (i8*, ...) @zerr(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.81, i32 0, i32 0), i32 %32, i32 %33)
  %34 = load %struct.multio**, %struct.multio*** %mfds.addr, align 4
  %35 = load i32, i32* %fd1.addr, align 4
  %arrayidx33 = getelementptr inbounds %struct.multio*, %struct.multio** %34, i32 %35
  store %struct.multio* null, %struct.multio** %arrayidx33, align 4
  %36 = load %struct.multio**, %struct.multio*** %mfds.addr, align 4
  call void @closemnodes(%struct.multio** %36)
  br label %if.end121

if.end34:                                         ; preds = %if.then28
  br label %if.end38

if.else35:                                        ; preds = %if.else25
  %37 = load i8*, i8** @fdtable, align 4
  %38 = load i32, i32* %fdN, align 4
  %arrayidx36 = getelementptr inbounds i8, i8* %37, i32 %38
  %39 = load i8, i8* %arrayidx36, align 1
  %conv = zext i8 %39 to i32
  %or = or i32 %conv, 16
  %conv37 = trunc i32 %or to i8
  store i8 %conv37, i8* %arrayidx36, align 1
  br label %if.end38

if.end38:                                         ; preds = %if.else35, %if.end34
  %40 = load i32, i32* %fdN, align 4
  %41 = load i32*, i32** %save.addr, align 4
  %42 = load i32, i32* %fd1.addr, align 4
  %arrayidx39 = getelementptr inbounds i32, i32* %41, i32 %42
  store i32 %40, i32* %arrayidx39, align 4
  br label %if.end40

if.end40:                                         ; preds = %if.end38, %if.then23
  br label %if.end41

if.end41:                                         ; preds = %if.end40, %land.lhs.true, %if.then15
  br label %if.end42

if.end42:                                         ; preds = %if.end41, %if.then12
  %43 = load i8*, i8** %varid.addr, align 4
  %tobool43 = icmp ne i8* %43, null
  br i1 %tobool43, label %if.end46, label %if.then44

if.then44:                                        ; preds = %if.end42
  %44 = load i32, i32* %fd2.addr, align 4
  %45 = load i32, i32* %fd1.addr, align 4
  %call45 = call i32 @redup(i32 %44, i32 %45)
  br label %if.end46

if.end46:                                         ; preds = %if.then44, %if.end42
  %46 = load %struct.multio**, %struct.multio*** %mfds.addr, align 4
  %47 = load i32, i32* %fd1.addr, align 4
  %arrayidx47 = getelementptr inbounds %struct.multio*, %struct.multio** %46, i32 %47
  %48 = load %struct.multio*, %struct.multio** %arrayidx47, align 4
  %ct = getelementptr inbounds %struct.multio, %struct.multio* %48, i32 0, i32 0
  store i32 1, i32* %ct, align 4
  %49 = load i32, i32* %fd1.addr, align 4
  %50 = load %struct.multio**, %struct.multio*** %mfds.addr, align 4
  %51 = load i32, i32* %fd1.addr, align 4
  %arrayidx48 = getelementptr inbounds %struct.multio*, %struct.multio** %50, i32 %51
  %52 = load %struct.multio*, %struct.multio** %arrayidx48, align 4
  %fds = getelementptr inbounds %struct.multio, %struct.multio* %52, i32 0, i32 3
  %arrayidx49 = getelementptr inbounds [8 x i32], [8 x i32]* %fds, i32 0, i32 0
  store i32 %49, i32* %arrayidx49, align 4
  %53 = load i32, i32* %rflag.addr, align 4
  %54 = load %struct.multio**, %struct.multio*** %mfds.addr, align 4
  %55 = load i32, i32* %fd1.addr, align 4
  %arrayidx50 = getelementptr inbounds %struct.multio*, %struct.multio** %54, i32 %55
  %56 = load %struct.multio*, %struct.multio** %arrayidx50, align 4
  %rflag51 = getelementptr inbounds %struct.multio, %struct.multio* %56, i32 0, i32 1
  store i32 %53, i32* %rflag51, align 4
  br label %if.end120

if.else52:                                        ; preds = %lor.lhs.false
  %57 = load %struct.multio**, %struct.multio*** %mfds.addr, align 4
  %58 = load i32, i32* %fd1.addr, align 4
  %arrayidx53 = getelementptr inbounds %struct.multio*, %struct.multio** %57, i32 %58
  %59 = load %struct.multio*, %struct.multio** %arrayidx53, align 4
  %rflag54 = getelementptr inbounds %struct.multio, %struct.multio* %59, i32 0, i32 1
  %60 = load i32, i32* %rflag54, align 4
  %61 = load i32, i32* %rflag.addr, align 4
  %cmp55 = icmp ne i32 %60, %61
  br i1 %cmp55, label %if.then57, label %if.end58

if.then57:                                        ; preds = %if.else52
  %62 = load i32, i32* %fd1.addr, align 4
  call void (i8*, ...) @zerr(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.82, i32 0, i32 0), i32 %62)
  %63 = load %struct.multio**, %struct.multio*** %mfds.addr, align 4
  call void @closemnodes(%struct.multio** %63)
  br label %if.end121

if.end58:                                         ; preds = %if.else52
  %64 = load %struct.multio**, %struct.multio*** %mfds.addr, align 4
  %65 = load i32, i32* %fd1.addr, align 4
  %arrayidx59 = getelementptr inbounds %struct.multio*, %struct.multio** %64, i32 %65
  %66 = load %struct.multio*, %struct.multio** %arrayidx59, align 4
  %ct60 = getelementptr inbounds %struct.multio, %struct.multio* %66, i32 0, i32 0
  %67 = load i32, i32* %ct60, align 4
  %cmp61 = icmp eq i32 %67, 1
  br i1 %cmp61, label %if.then63, label %if.else95

if.then63:                                        ; preds = %if.end58
  %68 = load i32, i32* %fd1.addr, align 4
  %call65 = call i32 @movefd(i32 %68)
  store i32 %call65, i32* %fdN64, align 4
  %69 = load i32, i32* %fdN64, align 4
  %cmp66 = icmp slt i32 %69, 0
  br i1 %cmp66, label %if.then68, label %if.end70

if.then68:                                        ; preds = %if.then63
  %70 = load i32, i32* %fd1.addr, align 4
  %call69 = call i32* @__errno_location()
  %71 = load i32, i32* %call69, align 4
  call void (i8*, ...) @zerr(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.83, i32 0, i32 0), i32 %70, i32 %71)
  %72 = load %struct.multio**, %struct.multio*** %mfds.addr, align 4
  call void @closemnodes(%struct.multio** %72)
  br label %if.end121

if.end70:                                         ; preds = %if.then63
  %73 = load i32, i32* %fdN64, align 4
  %74 = load %struct.multio**, %struct.multio*** %mfds.addr, align 4
  %75 = load i32, i32* %fd1.addr, align 4
  %arrayidx71 = getelementptr inbounds %struct.multio*, %struct.multio** %74, i32 %75
  %76 = load %struct.multio*, %struct.multio** %arrayidx71, align 4
  %fds72 = getelementptr inbounds %struct.multio, %struct.multio* %76, i32 0, i32 3
  %arrayidx73 = getelementptr inbounds [8 x i32], [8 x i32]* %fds72, i32 0, i32 0
  store i32 %73, i32* %arrayidx73, align 4
  %77 = load i32, i32* %fd2.addr, align 4
  %call74 = call i32 @movefd(i32 %77)
  store i32 %call74, i32* %fdN64, align 4
  %78 = load i32, i32* %fdN64, align 4
  %cmp75 = icmp slt i32 %78, 0
  br i1 %cmp75, label %if.then77, label %if.end79

if.then77:                                        ; preds = %if.end70
  %79 = load i32, i32* %fd2.addr, align 4
  %call78 = call i32* @__errno_location()
  %80 = load i32, i32* %call78, align 4
  call void (i8*, ...) @zerr(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.83, i32 0, i32 0), i32 %79, i32 %80)
  %81 = load %struct.multio**, %struct.multio*** %mfds.addr, align 4
  call void @closemnodes(%struct.multio** %81)
  br label %if.end121

if.end79:                                         ; preds = %if.end70
  %82 = load i32, i32* %fdN64, align 4
  %83 = load %struct.multio**, %struct.multio*** %mfds.addr, align 4
  %84 = load i32, i32* %fd1.addr, align 4
  %arrayidx80 = getelementptr inbounds %struct.multio*, %struct.multio** %83, i32 %84
  %85 = load %struct.multio*, %struct.multio** %arrayidx80, align 4
  %fds81 = getelementptr inbounds %struct.multio, %struct.multio* %85, i32 0, i32 3
  %arrayidx82 = getelementptr inbounds [8 x i32], [8 x i32]* %fds81, i32 0, i32 1
  store i32 %82, i32* %arrayidx82, align 4
  %arraydecay = getelementptr inbounds [2 x i32], [2 x i32]* %pipes, i32 0, i32 0
  %call83 = call i32 @mpipe(i32* %arraydecay)
  %cmp84 = icmp slt i32 %call83, 0
  br i1 %cmp84, label %if.then86, label %if.end88

if.then86:                                        ; preds = %if.end79
  %86 = load i32, i32* %fd2.addr, align 4
  %call87 = call i32* @__errno_location()
  %87 = load i32, i32* %call87, align 4
  call void (i8*, ...) @zerr(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.83, i32 0, i32 0), i32 %86, i32 %87)
  %88 = load %struct.multio**, %struct.multio*** %mfds.addr, align 4
  call void @closemnodes(%struct.multio** %88)
  br label %if.end121

if.end88:                                         ; preds = %if.end79
  %89 = load i32, i32* %rflag.addr, align 4
  %sub = sub nsw i32 1, %89
  %arrayidx89 = getelementptr inbounds [2 x i32], [2 x i32]* %pipes, i32 0, i32 %sub
  %90 = load i32, i32* %arrayidx89, align 4
  %91 = load %struct.multio**, %struct.multio*** %mfds.addr, align 4
  %92 = load i32, i32* %fd1.addr, align 4
  %arrayidx90 = getelementptr inbounds %struct.multio*, %struct.multio** %91, i32 %92
  %93 = load %struct.multio*, %struct.multio** %arrayidx90, align 4
  %pipe = getelementptr inbounds %struct.multio, %struct.multio* %93, i32 0, i32 2
  store i32 %90, i32* %pipe, align 4
  %94 = load i32, i32* %rflag.addr, align 4
  %arrayidx91 = getelementptr inbounds [2 x i32], [2 x i32]* %pipes, i32 0, i32 %94
  %95 = load i32, i32* %arrayidx91, align 4
  %96 = load i32, i32* %fd1.addr, align 4
  %call92 = call i32 @redup(i32 %95, i32 %96)
  %97 = load %struct.multio**, %struct.multio*** %mfds.addr, align 4
  %98 = load i32, i32* %fd1.addr, align 4
  %arrayidx93 = getelementptr inbounds %struct.multio*, %struct.multio** %97, i32 %98
  %99 = load %struct.multio*, %struct.multio** %arrayidx93, align 4
  %ct94 = getelementptr inbounds %struct.multio, %struct.multio* %99, i32 0, i32 0
  store i32 2, i32* %ct94, align 4
  br label %if.end119

if.else95:                                        ; preds = %if.end58
  %100 = load %struct.multio**, %struct.multio*** %mfds.addr, align 4
  %101 = load i32, i32* %fd1.addr, align 4
  %arrayidx97 = getelementptr inbounds %struct.multio*, %struct.multio** %100, i32 %101
  %102 = load %struct.multio*, %struct.multio** %arrayidx97, align 4
  %ct98 = getelementptr inbounds %struct.multio, %struct.multio* %102, i32 0, i32 0
  %103 = load i32, i32* %ct98, align 4
  %rem = srem i32 %103, 8
  %tobool99 = icmp ne i32 %rem, 0
  br i1 %tobool99, label %if.end107, label %if.then100

if.then100:                                       ; preds = %if.else95
  %104 = load %struct.multio**, %struct.multio*** %mfds.addr, align 4
  %105 = load i32, i32* %fd1.addr, align 4
  %arrayidx101 = getelementptr inbounds %struct.multio*, %struct.multio** %104, i32 %105
  %106 = load %struct.multio*, %struct.multio** %arrayidx101, align 4
  %ct102 = getelementptr inbounds %struct.multio, %struct.multio* %106, i32 0, i32 0
  %107 = load i32, i32* %ct102, align 4
  %mul = mul i32 4, %107
  %add = add i32 44, %mul
  store i32 %add, i32* %new, align 4
  %108 = load i32, i32* %new, align 4
  %sub103 = sub i32 %108, 32
  store i32 %sub103, i32* %old, align 4
  %109 = load %struct.multio**, %struct.multio*** %mfds.addr, align 4
  %110 = load i32, i32* %fd1.addr, align 4
  %arrayidx104 = getelementptr inbounds %struct.multio*, %struct.multio** %109, i32 %110
  %111 = load %struct.multio*, %struct.multio** %arrayidx104, align 4
  %112 = bitcast %struct.multio* %111 to i8*
  %113 = load i32, i32* %old, align 4
  %114 = load i32, i32* %new, align 4
  %call105 = call i8* @hrealloc(i8* %112, i32 %113, i32 %114)
  %115 = bitcast i8* %call105 to %struct.multio*
  %116 = load %struct.multio**, %struct.multio*** %mfds.addr, align 4
  %117 = load i32, i32* %fd1.addr, align 4
  %arrayidx106 = getelementptr inbounds %struct.multio*, %struct.multio** %116, i32 %117
  store %struct.multio* %115, %struct.multio** %arrayidx106, align 4
  br label %if.end107

if.end107:                                        ; preds = %if.then100, %if.else95
  %118 = load i32, i32* %fd2.addr, align 4
  %call108 = call i32 @movefd(i32 %118)
  store i32 %call108, i32* %fdN96, align 4
  %cmp109 = icmp slt i32 %call108, 0
  br i1 %cmp109, label %if.then111, label %if.end113

if.then111:                                       ; preds = %if.end107
  %119 = load i32, i32* %fd2.addr, align 4
  %call112 = call i32* @__errno_location()
  %120 = load i32, i32* %call112, align 4
  call void (i8*, ...) @zerr(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.83, i32 0, i32 0), i32 %119, i32 %120)
  %121 = load %struct.multio**, %struct.multio*** %mfds.addr, align 4
  call void @closemnodes(%struct.multio** %121)
  br label %if.end121

if.end113:                                        ; preds = %if.end107
  %122 = load i32, i32* %fdN96, align 4
  %123 = load %struct.multio**, %struct.multio*** %mfds.addr, align 4
  %124 = load i32, i32* %fd1.addr, align 4
  %arrayidx114 = getelementptr inbounds %struct.multio*, %struct.multio** %123, i32 %124
  %125 = load %struct.multio*, %struct.multio** %arrayidx114, align 4
  %fds115 = getelementptr inbounds %struct.multio, %struct.multio* %125, i32 0, i32 3
  %126 = load %struct.multio**, %struct.multio*** %mfds.addr, align 4
  %127 = load i32, i32* %fd1.addr, align 4
  %arrayidx116 = getelementptr inbounds %struct.multio*, %struct.multio** %126, i32 %127
  %128 = load %struct.multio*, %struct.multio** %arrayidx116, align 4
  %ct117 = getelementptr inbounds %struct.multio, %struct.multio* %128, i32 0, i32 0
  %129 = load i32, i32* %ct117, align 4
  %inc = add nsw i32 %129, 1
  store i32 %inc, i32* %ct117, align 4
  %arrayidx118 = getelementptr inbounds [8 x i32], [8 x i32]* %fds115, i32 0, i32 %129
  store i32 %122, i32* %arrayidx118, align 4
  br label %if.end119

if.end119:                                        ; preds = %if.end113, %if.end88
  br label %if.end120

if.end120:                                        ; preds = %if.end119, %if.end46
  br label %if.end121

if.end121:                                        ; preds = %if.then1, %if.then31, %if.then57, %if.then68, %if.then77, %if.then86, %if.then111, %if.end120, %if.end7
  ret void
}

; Function Attrs: noinline nounwind
define internal void @spawnpipes(%union.linkroot* %l, i32 %nullexec) #0 {
entry:
  %l.addr = alloca %union.linkroot*, align 4
  %nullexec.addr = alloca i32, align 4
  %n = alloca %struct.linknode*, align 4
  %f = alloca %struct.redir*, align 4
  %str = alloca i8*, align 4
  store %union.linkroot* %l, %union.linkroot** %l.addr, align 4
  store i32 %nullexec, i32* %nullexec.addr, align 4
  %0 = load %union.linkroot*, %union.linkroot** %l.addr, align 4
  %list = bitcast %union.linkroot* %0 to %struct.linklist*
  %first = getelementptr inbounds %struct.linklist, %struct.linklist* %list, i32 0, i32 0
  %1 = load %struct.linknode*, %struct.linknode** %first, align 4
  store %struct.linknode* %1, %struct.linknode** %n, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load %struct.linknode*, %struct.linknode** %n, align 4
  %tobool = icmp ne %struct.linknode* %2, null
  br i1 %tobool, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %3 = load %struct.linknode*, %struct.linknode** %n, align 4
  %dat = getelementptr inbounds %struct.linknode, %struct.linknode* %3, i32 0, i32 2
  %4 = load i8*, i8** %dat, align 4
  %5 = bitcast i8* %4 to %struct.redir*
  store %struct.redir* %5, %struct.redir** %f, align 4
  %6 = load %struct.redir*, %struct.redir** %f, align 4
  %type = getelementptr inbounds %struct.redir, %struct.redir* %6, i32 0, i32 0
  %7 = load i32, i32* %type, align 4
  %cmp = icmp eq i32 %7, 17
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %for.body
  %8 = load %struct.redir*, %struct.redir** %f, align 4
  %type1 = getelementptr inbounds %struct.redir, %struct.redir* %8, i32 0, i32 0
  %9 = load i32, i32* %type1, align 4
  %cmp2 = icmp eq i32 %9, 16
  br i1 %cmp2, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false, %for.body
  %10 = load %struct.redir*, %struct.redir** %f, align 4
  %name = getelementptr inbounds %struct.redir, %struct.redir* %10, i32 0, i32 4
  %11 = load i8*, i8** %name, align 4
  store i8* %11, i8** %str, align 4
  %12 = load i8*, i8** %str, align 4
  %13 = load i32, i32* %nullexec.addr, align 4
  %tobool3 = icmp ne i32 %13, 0
  br i1 %tobool3, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %if.then
  %14 = load %struct.redir*, %struct.redir** %f, align 4
  %varid = getelementptr inbounds %struct.redir, %struct.redir* %14, i32 0, i32 5
  %15 = load i8*, i8** %varid, align 4
  %tobool4 = icmp ne i8* %15, null
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %if.then
  %16 = phi i1 [ true, %if.then ], [ %tobool4, %lor.rhs ]
  %lor.ext = zext i1 %16 to i32
  %call = call i32 @getpipe(i8* %12, i32 %lor.ext)
  %17 = load %struct.redir*, %struct.redir** %f, align 4
  %fd2 = getelementptr inbounds %struct.redir, %struct.redir* %17, i32 0, i32 3
  store i32 %call, i32* %fd2, align 4
  br label %if.end

if.end:                                           ; preds = %lor.end, %lor.lhs.false
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %18 = load %struct.linknode*, %struct.linknode** %n, align 4
  %next = getelementptr inbounds %struct.linknode, %struct.linknode* %18, i32 0, i32 0
  %19 = load %struct.linknode*, %struct.linknode** %next, align 4
  store %struct.linknode* %19, %struct.linknode** %n, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  ret void
}

; Function Attrs: noinline nounwind
define internal i32 @checkclobberparam(%struct.redir* %f) #0 {
entry:
  %retval = alloca i32, align 4
  %f.addr = alloca %struct.redir*, align 4
  %vbuf = alloca %struct.value, align 4
  %v = alloca %struct.value*, align 4
  %s = alloca i8*, align 4
  %fd = alloca i32, align 4
  store %struct.redir* %f, %struct.redir** %f.addr, align 4
  %0 = load %struct.redir*, %struct.redir** %f.addr, align 4
  %varid = getelementptr inbounds %struct.redir, %struct.redir* %0, i32 0, i32 5
  %1 = load i8*, i8** %varid, align 4
  store i8* %1, i8** %s, align 4
  %2 = load i8*, i8** %s, align 4
  %tobool = icmp ne i8* %2, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i32 1, i32* %retval, align 4
  br label %return

if.end:                                           ; preds = %entry
  %call = call %struct.value* @getvalue(%struct.value* %vbuf, i8** %s, i32 0)
  store %struct.value* %call, %struct.value** %v, align 4
  %tobool1 = icmp ne %struct.value* %call, null
  br i1 %tobool1, label %if.end3, label %if.then2

if.then2:                                         ; preds = %if.end
  store i32 1, i32* %retval, align 4
  br label %return

if.end3:                                          ; preds = %if.end
  %3 = load %struct.value*, %struct.value** %v, align 4
  %pm = getelementptr inbounds %struct.value, %struct.value* %3, i32 0, i32 1
  %4 = load %struct.param*, %struct.param** %pm, align 4
  %node = getelementptr inbounds %struct.param, %struct.param* %4, i32 0, i32 0
  %flags = getelementptr inbounds %struct.hashnode, %struct.hashnode* %node, i32 0, i32 2
  %5 = load i32, i32* %flags, align 8
  %and = and i32 %5, 1024
  %tobool4 = icmp ne i32 %and, 0
  br i1 %tobool4, label %if.then5, label %if.end8

if.then5:                                         ; preds = %if.end3
  %6 = load %struct.redir*, %struct.redir** %f.addr, align 4
  %varid6 = getelementptr inbounds %struct.redir, %struct.redir* %6, i32 0, i32 5
  %7 = load i8*, i8** %varid6, align 4
  call void (i8*, ...) @zwarn(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.85, i32 0, i32 0), i8* %7)
  %call7 = call i32* @__errno_location()
  store i32 0, i32* %call7, align 4
  store i32 0, i32* %retval, align 4
  br label %return

if.end8:                                          ; preds = %if.end3
  %8 = load i8, i8* getelementptr inbounds ([181 x i8], [181 x i8]* @opts, i32 0, i32 34), align 1
  %tobool9 = icmp ne i8 %8, 0
  br i1 %tobool9, label %if.end24, label %land.lhs.true

land.lhs.true:                                    ; preds = %if.end8
  %9 = load %struct.value*, %struct.value** %v, align 4
  %call10 = call i8* @getstrvalue(%struct.value* %9)
  store i8* %call10, i8** %s, align 4
  %tobool11 = icmp ne i8* %call10, null
  br i1 %tobool11, label %land.lhs.true12, label %if.end24

land.lhs.true12:                                  ; preds = %land.lhs.true
  %10 = load i8*, i8** %s, align 4
  %call13 = call i32 @zstrtol(i8* %10, i8** %s, i32 10)
  store i32 %call13, i32* %fd, align 4
  %cmp = icmp sge i32 %call13, 0
  br i1 %cmp, label %land.lhs.true14, label %if.end24

land.lhs.true14:                                  ; preds = %land.lhs.true12
  %11 = load i8*, i8** %s, align 4
  %12 = load i8, i8* %11, align 1
  %tobool15 = icmp ne i8 %12, 0
  br i1 %tobool15, label %if.end24, label %land.lhs.true16

land.lhs.true16:                                  ; preds = %land.lhs.true14
  %13 = load i32, i32* %fd, align 4
  %14 = load i32, i32* @max_zsh_fd, align 4
  %cmp17 = icmp sle i32 %13, %14
  br i1 %cmp17, label %land.lhs.true18, label %if.end24

land.lhs.true18:                                  ; preds = %land.lhs.true16
  %15 = load i8*, i8** @fdtable, align 4
  %16 = load i32, i32* %fd, align 4
  %arrayidx = getelementptr inbounds i8, i8* %15, i32 %16
  %17 = load i8, i8* %arrayidx, align 1
  %conv = zext i8 %17 to i32
  %cmp19 = icmp eq i32 %conv, 2
  br i1 %cmp19, label %if.then21, label %if.end24

if.then21:                                        ; preds = %land.lhs.true18
  %18 = load %struct.redir*, %struct.redir** %f.addr, align 4
  %varid22 = getelementptr inbounds %struct.redir, %struct.redir* %18, i32 0, i32 5
  %19 = load i8*, i8** %varid22, align 4
  %20 = load i32, i32* %fd, align 4
  call void (i8*, ...) @zwarn(i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.86, i32 0, i32 0), i8* %19, i32 %20)
  %call23 = call i32* @__errno_location()
  store i32 0, i32* %call23, align 4
  store i32 0, i32* %retval, align 4
  br label %return

if.end24:                                         ; preds = %land.lhs.true18, %land.lhs.true16, %land.lhs.true14, %land.lhs.true12, %land.lhs.true, %if.end8
  store i32 1, i32* %retval, align 4
  br label %return

return:                                           ; preds = %if.end24, %if.then21, %if.then5, %if.then2, %if.then
  %21 = load i32, i32* %retval, align 4
  ret i32 %21
}

; Function Attrs: noinline nounwind
define internal void @closemnodes(%struct.multio** %mfds) #0 {
entry:
  %mfds.addr = alloca %struct.multio**, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store %struct.multio** %mfds, %struct.multio*** %mfds.addr, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc8, %entry
  %0 = load i32, i32* %i, align 4
  %cmp = icmp slt i32 %0, 10
  br i1 %cmp, label %for.body, label %for.end10

for.body:                                         ; preds = %for.cond
  %1 = load %struct.multio**, %struct.multio*** %mfds.addr, align 4
  %2 = load i32, i32* %i, align 4
  %arrayidx = getelementptr inbounds %struct.multio*, %struct.multio** %1, i32 %2
  %3 = load %struct.multio*, %struct.multio** %arrayidx, align 4
  %tobool = icmp ne %struct.multio* %3, null
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  store i32 0, i32* %j, align 4
  br label %for.cond1

for.cond1:                                        ; preds = %for.inc, %if.then
  %4 = load i32, i32* %j, align 4
  %5 = load %struct.multio**, %struct.multio*** %mfds.addr, align 4
  %6 = load i32, i32* %i, align 4
  %arrayidx2 = getelementptr inbounds %struct.multio*, %struct.multio** %5, i32 %6
  %7 = load %struct.multio*, %struct.multio** %arrayidx2, align 4
  %ct = getelementptr inbounds %struct.multio, %struct.multio* %7, i32 0, i32 0
  %8 = load i32, i32* %ct, align 4
  %cmp3 = icmp slt i32 %4, %8
  br i1 %cmp3, label %for.body4, label %for.end

for.body4:                                        ; preds = %for.cond1
  %9 = load %struct.multio**, %struct.multio*** %mfds.addr, align 4
  %10 = load i32, i32* %i, align 4
  %arrayidx5 = getelementptr inbounds %struct.multio*, %struct.multio** %9, i32 %10
  %11 = load %struct.multio*, %struct.multio** %arrayidx5, align 4
  %fds = getelementptr inbounds %struct.multio, %struct.multio* %11, i32 0, i32 3
  %12 = load i32, i32* %j, align 4
  %arrayidx6 = getelementptr inbounds [8 x i32], [8 x i32]* %fds, i32 0, i32 %12
  %13 = load i32, i32* %arrayidx6, align 4
  %call = call i32 @zclose(i32 %13)
  br label %for.inc

for.inc:                                          ; preds = %for.body4
  %14 = load i32, i32* %j, align 4
  %inc = add nsw i32 %14, 1
  store i32 %inc, i32* %j, align 4
  br label %for.cond1

for.end:                                          ; preds = %for.cond1
  %15 = load %struct.multio**, %struct.multio*** %mfds.addr, align 4
  %16 = load i32, i32* %i, align 4
  %arrayidx7 = getelementptr inbounds %struct.multio*, %struct.multio** %15, i32 %16
  store %struct.multio* null, %struct.multio** %arrayidx7, align 4
  br label %if.end

if.end:                                           ; preds = %for.end, %for.body
  br label %for.inc8

for.inc8:                                         ; preds = %if.end
  %17 = load i32, i32* %i, align 4
  %inc9 = add nsw i32 %17, 1
  store i32 %inc9, i32* %i, align 4
  br label %for.cond

for.end10:                                        ; preds = %for.cond
  ret void
}

; Function Attrs: noinline nounwind
define internal void @fixfds(i32* %save) #0 {
entry:
  %save.addr = alloca i32*, align 4
  %old_errno = alloca i32, align 4
  %i = alloca i32, align 4
  store i32* %save, i32** %save.addr, align 4
  %call = call i32* @__errno_location()
  %0 = load i32, i32* %call, align 4
  store i32 %0, i32* %old_errno, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i32, i32* %i, align 4
  %cmp = icmp ne i32 %1, 10
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %2 = load i32*, i32** %save.addr, align 4
  %3 = load i32, i32* %i, align 4
  %arrayidx = getelementptr inbounds i32, i32* %2, i32 %3
  %4 = load i32, i32* %arrayidx, align 4
  %cmp1 = icmp ne i32 %4, -2
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  %5 = load i32*, i32** %save.addr, align 4
  %6 = load i32, i32* %i, align 4
  %arrayidx2 = getelementptr inbounds i32, i32* %5, i32 %6
  %7 = load i32, i32* %arrayidx2, align 4
  %8 = load i32, i32* %i, align 4
  %call3 = call i32 @redup(i32 %7, i32 %8)
  br label %if.end

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %9 = load i32, i32* %i, align 4
  %inc = add nsw i32 %9, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %10 = load i32, i32* %old_errno, align 4
  %call4 = call i32* @__errno_location()
  store i32 %10, i32* %call4, align 4
  ret void
}

declare i32 @xpandredir(%struct.redir*, %union.linkroot*) #1

; Function Attrs: noinline nounwind
define internal i32 @getherestr(%struct.redir* %fn) #0 {
entry:
  %retval = alloca i32, align 4
  %fn.addr = alloca %struct.redir*, align 4
  %s = alloca i8*, align 4
  %t = alloca i8*, align 4
  %fd = alloca i32, align 4
  %len = alloca i32, align 4
  store %struct.redir* %fn, %struct.redir** %fn.addr, align 4
  %0 = load %struct.redir*, %struct.redir** %fn.addr, align 4
  %name = getelementptr inbounds %struct.redir, %struct.redir* %0, i32 0, i32 4
  %1 = load i8*, i8** %name, align 4
  store i8* %1, i8** %t, align 4
  call void @singsub(i8** %t)
  %2 = load i8*, i8** %t, align 4
  call void @untokenize(i8* %2)
  %3 = load i8*, i8** %t, align 4
  %call = call i8* @unmetafy(i8* %3, i32* %len)
  %4 = load %struct.redir*, %struct.redir** %fn.addr, align 4
  %flags = getelementptr inbounds %struct.redir, %struct.redir* %4, i32 0, i32 1
  %5 = load i32, i32* %flags, align 4
  %and = and i32 %5, 1
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %6 = load i8*, i8** %t, align 4
  %7 = load i32, i32* %len, align 4
  %inc = add nsw i32 %7, 1
  store i32 %inc, i32* %len, align 4
  %arrayidx = getelementptr inbounds i8, i8* %6, i32 %7
  store i8 10, i8* %arrayidx, align 1
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %call1 = call i32 @gettempfile(i8* null, i32 1, i8** %s)
  store i32 %call1, i32* %fd, align 4
  %cmp = icmp slt i32 %call1, 0
  br i1 %cmp, label %if.then2, label %if.end3

if.then2:                                         ; preds = %if.end
  store i32 -1, i32* %retval, align 4
  br label %return

if.end3:                                          ; preds = %if.end
  %8 = load i32, i32* %fd, align 4
  %9 = load i8*, i8** %t, align 4
  %10 = load i32, i32* %len, align 4
  %call4 = call i32 @write_loop(i32 %8, i8* %9, i32 %10)
  %11 = load i32, i32* %fd, align 4
  %call5 = call i32 @close(i32 %11)
  %12 = load i8*, i8** %s, align 4
  %call6 = call i32 (i8*, i32, ...) @open(i8* %12, i32 256)
  store i32 %call6, i32* %fd, align 4
  %13 = load i8*, i8** %s, align 4
  %call7 = call i32 @unlink(i8* %13)
  %14 = load i32, i32* %fd, align 4
  store i32 %14, i32* %retval, align 4
  br label %return

return:                                           ; preds = %if.end3, %if.then2
  %15 = load i32, i32* %retval, align 4
  ret i32 %15
}

declare void @init_io(i8*) #1

declare %struct.value* @getvalue(%struct.value*, i8**, i32) #1

declare i8* @getstrvalue(%struct.value*) #1

declare i32 @zstrtol(i8*, i8**, i32) #1

; Function Attrs: noinline nounwind
define internal void @closemn(%struct.multio** %mfds, i32 %fd, i32 %type) #0 {
entry:
  %mfds.addr = alloca %struct.multio**, align 4
  %fd.addr = alloca i32, align 4
  %type.addr = alloca i32, align 4
  %mn = alloca %struct.multio*, align 4
  %buf = alloca [4092 x i8], align 1
  %len = alloca i32, align 4
  %i = alloca i32, align 4
  %pid = alloca i32, align 4
  %bgtime = alloca %struct.timeval, align 4
  %tmp = alloca %struct.__sigset_t, align 4
  %tmp15 = alloca %struct.__sigset_t, align 4
  %tmp19 = alloca %struct.__sigset_t, align 4
  %tmp21 = alloca %struct.__sigset_t, align 4
  store %struct.multio** %mfds, %struct.multio*** %mfds.addr, align 4
  store i32 %fd, i32* %fd.addr, align 4
  store i32 %type, i32* %type.addr, align 4
  %0 = load i32, i32* %fd.addr, align 4
  %cmp = icmp sge i32 %0, 0
  br i1 %cmp, label %land.lhs.true, label %if.else71

land.lhs.true:                                    ; preds = %entry
  %1 = load %struct.multio**, %struct.multio*** %mfds.addr, align 4
  %2 = load i32, i32* %fd.addr, align 4
  %arrayidx = getelementptr inbounds %struct.multio*, %struct.multio** %1, i32 %2
  %3 = load %struct.multio*, %struct.multio** %arrayidx, align 4
  %tobool = icmp ne %struct.multio* %3, null
  br i1 %tobool, label %land.lhs.true1, label %if.else71

land.lhs.true1:                                   ; preds = %land.lhs.true
  %4 = load %struct.multio**, %struct.multio*** %mfds.addr, align 4
  %5 = load i32, i32* %fd.addr, align 4
  %arrayidx2 = getelementptr inbounds %struct.multio*, %struct.multio** %4, i32 %5
  %6 = load %struct.multio*, %struct.multio** %arrayidx2, align 4
  %ct = getelementptr inbounds %struct.multio, %struct.multio* %6, i32 0, i32 0
  %7 = load i32, i32* %ct, align 4
  %cmp3 = icmp sge i32 %7, 2
  br i1 %cmp3, label %if.then, label %if.else71

if.then:                                          ; preds = %land.lhs.true1
  %8 = load %struct.multio**, %struct.multio*** %mfds.addr, align 4
  %9 = load i32, i32* %fd.addr, align 4
  %arrayidx4 = getelementptr inbounds %struct.multio*, %struct.multio** %8, i32 %9
  %10 = load %struct.multio*, %struct.multio** %arrayidx4, align 4
  store %struct.multio* %10, %struct.multio** %mn, align 4
  call void @signal_block(%struct.__sigset_t* sret %tmp, %struct.__sigset_t* byval align 4 @sigchld_mask)
  %call = call i32 @zfork(%struct.timeval* %bgtime)
  store i32 %call, i32* %pid, align 4
  %tobool5 = icmp ne i32 %call, 0
  br i1 %tobool5, label %if.then6, label %if.end20

if.then6:                                         ; preds = %if.then
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then6
  %11 = load i32, i32* %i, align 4
  %12 = load %struct.multio*, %struct.multio** %mn, align 4
  %ct7 = getelementptr inbounds %struct.multio, %struct.multio* %12, i32 0, i32 0
  %13 = load i32, i32* %ct7, align 4
  %cmp8 = icmp slt i32 %11, %13
  br i1 %cmp8, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %14 = load %struct.multio*, %struct.multio** %mn, align 4
  %fds = getelementptr inbounds %struct.multio, %struct.multio* %14, i32 0, i32 3
  %15 = load i32, i32* %i, align 4
  %arrayidx9 = getelementptr inbounds [8 x i32], [8 x i32]* %fds, i32 0, i32 %15
  %16 = load i32, i32* %arrayidx9, align 4
  %call10 = call i32 @zclose(i32 %16)
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %17 = load i32, i32* %i, align 4
  %inc = add nsw i32 %17, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %18 = load %struct.multio*, %struct.multio** %mn, align 4
  %pipe = getelementptr inbounds %struct.multio, %struct.multio* %18, i32 0, i32 2
  %19 = load i32, i32* %pipe, align 4
  %call11 = call i32 @zclose(i32 %19)
  %20 = load i32, i32* %pid, align 4
  %cmp12 = icmp eq i32 %20, -1
  br i1 %cmp12, label %if.then13, label %if.end

if.then13:                                        ; preds = %for.end
  %21 = load %struct.multio**, %struct.multio*** %mfds.addr, align 4
  %22 = load i32, i32* %fd.addr, align 4
  %arrayidx14 = getelementptr inbounds %struct.multio*, %struct.multio** %21, i32 %22
  store %struct.multio* null, %struct.multio** %arrayidx14, align 4
  call void @signal_unblock(%struct.__sigset_t* sret %tmp15, %struct.__sigset_t* byval align 4 @sigchld_mask)
  br label %if.end78

if.end:                                           ; preds = %for.end
  %23 = load %struct.multio*, %struct.multio** %mn, align 4
  %ct16 = getelementptr inbounds %struct.multio, %struct.multio* %23, i32 0, i32 0
  store i32 1, i32* %ct16, align 4
  %24 = load i32, i32* %fd.addr, align 4
  %25 = load %struct.multio*, %struct.multio** %mn, align 4
  %fds17 = getelementptr inbounds %struct.multio, %struct.multio* %25, i32 0, i32 3
  %arrayidx18 = getelementptr inbounds [8 x i32], [8 x i32]* %fds17, i32 0, i32 0
  store i32 %24, i32* %arrayidx18, align 4
  %26 = load i32, i32* %pid, align 4
  call void @addproc(i32 %26, i8* null, i32 1, %struct.timeval* %bgtime)
  call void @signal_unblock(%struct.__sigset_t* sret %tmp19, %struct.__sigset_t* byval align 4 @sigchld_mask)
  br label %if.end78

if.end20:                                         ; preds = %if.then
  call void @signal_unblock(%struct.__sigset_t* sret %tmp21, %struct.__sigset_t* byval align 4 @sigchld_mask)
  %27 = load %struct.multio*, %struct.multio** %mn, align 4
  call void @closeallelse(%struct.multio* %27)
  %28 = load %struct.multio*, %struct.multio** %mn, align 4
  %rflag = getelementptr inbounds %struct.multio, %struct.multio* %28, i32 0, i32 1
  %29 = load i32, i32* %rflag, align 4
  %tobool22 = icmp ne i32 %29, 0
  br i1 %tobool22, label %if.then23, label %if.else44

if.then23:                                        ; preds = %if.end20
  br label %while.cond

while.cond:                                       ; preds = %for.end43, %if.then31, %if.then23
  %30 = load %struct.multio*, %struct.multio** %mn, align 4
  %pipe24 = getelementptr inbounds %struct.multio, %struct.multio* %30, i32 0, i32 2
  %31 = load i32, i32* %pipe24, align 4
  %arraydecay = getelementptr inbounds [4092 x i8], [4092 x i8]* %buf, i32 0, i32 0
  %call25 = call i32 @read(i32 %31, i8* %arraydecay, i32 4092)
  store i32 %call25, i32* %len, align 4
  %cmp26 = icmp ne i32 %call25, 0
  br i1 %cmp26, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %32 = load i32, i32* %len, align 4
  %cmp27 = icmp slt i32 %32, 0
  br i1 %cmp27, label %if.then28, label %if.end32

if.then28:                                        ; preds = %while.body
  %call29 = call i32* @__errno_location()
  %33 = load i32, i32* %call29, align 4
  %cmp30 = icmp eq i32 %33, 4
  br i1 %cmp30, label %if.then31, label %if.else

if.then31:                                        ; preds = %if.then28
  br label %while.cond

if.else:                                          ; preds = %if.then28
  br label %while.end

if.end32:                                         ; preds = %while.body
  store i32 0, i32* %i, align 4
  br label %for.cond33

for.cond33:                                       ; preds = %for.inc41, %if.end32
  %34 = load i32, i32* %i, align 4
  %35 = load %struct.multio*, %struct.multio** %mn, align 4
  %ct34 = getelementptr inbounds %struct.multio, %struct.multio* %35, i32 0, i32 0
  %36 = load i32, i32* %ct34, align 4
  %cmp35 = icmp slt i32 %34, %36
  br i1 %cmp35, label %for.body36, label %for.end43

for.body36:                                       ; preds = %for.cond33
  %37 = load %struct.multio*, %struct.multio** %mn, align 4
  %fds37 = getelementptr inbounds %struct.multio, %struct.multio* %37, i32 0, i32 3
  %38 = load i32, i32* %i, align 4
  %arrayidx38 = getelementptr inbounds [8 x i32], [8 x i32]* %fds37, i32 0, i32 %38
  %39 = load i32, i32* %arrayidx38, align 4
  %arraydecay39 = getelementptr inbounds [4092 x i8], [4092 x i8]* %buf, i32 0, i32 0
  %40 = load i32, i32* %len, align 4
  %call40 = call i32 @write_loop(i32 %39, i8* %arraydecay39, i32 %40)
  br label %for.inc41

for.inc41:                                        ; preds = %for.body36
  %41 = load i32, i32* %i, align 4
  %inc42 = add nsw i32 %41, 1
  store i32 %inc42, i32* %i, align 4
  br label %for.cond33

for.end43:                                        ; preds = %for.cond33
  br label %while.cond

while.end:                                        ; preds = %if.else, %while.cond
  br label %if.end70

if.else44:                                        ; preds = %if.end20
  store i32 0, i32* %i, align 4
  br label %for.cond45

for.cond45:                                       ; preds = %for.inc67, %if.else44
  %42 = load i32, i32* %i, align 4
  %43 = load %struct.multio*, %struct.multio** %mn, align 4
  %ct46 = getelementptr inbounds %struct.multio, %struct.multio* %43, i32 0, i32 0
  %44 = load i32, i32* %ct46, align 4
  %cmp47 = icmp slt i32 %42, %44
  br i1 %cmp47, label %for.body48, label %for.end69

for.body48:                                       ; preds = %for.cond45
  br label %while.cond49

while.cond49:                                     ; preds = %if.end62, %if.then60, %for.body48
  %45 = load %struct.multio*, %struct.multio** %mn, align 4
  %fds50 = getelementptr inbounds %struct.multio, %struct.multio* %45, i32 0, i32 3
  %46 = load i32, i32* %i, align 4
  %arrayidx51 = getelementptr inbounds [8 x i32], [8 x i32]* %fds50, i32 0, i32 %46
  %47 = load i32, i32* %arrayidx51, align 4
  %arraydecay52 = getelementptr inbounds [4092 x i8], [4092 x i8]* %buf, i32 0, i32 0
  %call53 = call i32 @read(i32 %47, i8* %arraydecay52, i32 4092)
  store i32 %call53, i32* %len, align 4
  %cmp54 = icmp ne i32 %call53, 0
  br i1 %cmp54, label %while.body55, label %while.end66

while.body55:                                     ; preds = %while.cond49
  %48 = load i32, i32* %len, align 4
  %cmp56 = icmp slt i32 %48, 0
  br i1 %cmp56, label %if.then57, label %if.end62

if.then57:                                        ; preds = %while.body55
  %call58 = call i32* @__errno_location()
  %49 = load i32, i32* %call58, align 4
  %cmp59 = icmp eq i32 %49, 4
  br i1 %cmp59, label %if.then60, label %if.else61

if.then60:                                        ; preds = %if.then57
  br label %while.cond49

if.else61:                                        ; preds = %if.then57
  br label %while.end66

if.end62:                                         ; preds = %while.body55
  %50 = load %struct.multio*, %struct.multio** %mn, align 4
  %pipe63 = getelementptr inbounds %struct.multio, %struct.multio* %50, i32 0, i32 2
  %51 = load i32, i32* %pipe63, align 4
  %arraydecay64 = getelementptr inbounds [4092 x i8], [4092 x i8]* %buf, i32 0, i32 0
  %52 = load i32, i32* %len, align 4
  %call65 = call i32 @write_loop(i32 %51, i8* %arraydecay64, i32 %52)
  br label %while.cond49

while.end66:                                      ; preds = %if.else61, %while.cond49
  br label %for.inc67

for.inc67:                                        ; preds = %while.end66
  %53 = load i32, i32* %i, align 4
  %inc68 = add nsw i32 %53, 1
  store i32 %inc68, i32* %i, align 4
  br label %for.cond45

for.end69:                                        ; preds = %for.cond45
  br label %if.end70

if.end70:                                         ; preds = %for.end69, %while.end
  call void @_exit(i32 0) #4
  unreachable

if.else71:                                        ; preds = %land.lhs.true1, %land.lhs.true, %entry
  %54 = load i32, i32* %fd.addr, align 4
  %cmp72 = icmp sge i32 %54, 0
  br i1 %cmp72, label %land.lhs.true73, label %if.end77

land.lhs.true73:                                  ; preds = %if.else71
  %55 = load i32, i32* %type.addr, align 4
  %cmp74 = icmp eq i32 %55, 15
  br i1 %cmp74, label %if.then75, label %if.end77

if.then75:                                        ; preds = %land.lhs.true73
  %56 = load %struct.multio**, %struct.multio*** %mfds.addr, align 4
  %57 = load i32, i32* %fd.addr, align 4
  %arrayidx76 = getelementptr inbounds %struct.multio*, %struct.multio** %56, i32 %57
  store %struct.multio* null, %struct.multio** %arrayidx76, align 4
  br label %if.end77

if.end77:                                         ; preds = %if.then75, %land.lhs.true73, %if.else71
  br label %if.end78

if.end78:                                         ; preds = %if.then13, %if.end, %if.end77
  ret void
}

; Function Attrs: noinline nounwind
define internal i32 @clobber_open(%struct.redir* %f) #0 {
entry:
  %retval = alloca i32, align 4
  %f.addr = alloca %struct.redir*, align 4
  %buf = alloca %struct.stat, align 8
  %fd = alloca i32, align 4
  %oerrno = alloca i32, align 4
  store %struct.redir* %f, %struct.redir** %f.addr, align 4
  %0 = load i8, i8* getelementptr inbounds ([181 x i8], [181 x i8]* @opts, i32 0, i32 34), align 1
  %conv = sext i8 %0 to i32
  %tobool = icmp ne i32 %conv, 0
  br i1 %tobool, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %1 = load %struct.redir*, %struct.redir** %f.addr, align 4
  %type = getelementptr inbounds %struct.redir, %struct.redir* %1, i32 0, i32 0
  %2 = load i32, i32* %type, align 4
  %cmp = icmp sge i32 %2, 0
  br i1 %cmp, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %lor.lhs.false
  %3 = load %struct.redir*, %struct.redir** %f.addr, align 4
  %type2 = getelementptr inbounds %struct.redir, %struct.redir* %3, i32 0, i32 0
  %4 = load i32, i32* %type2, align 4
  %cmp3 = icmp sle i32 %4, 8
  br i1 %cmp3, label %land.lhs.true5, label %if.end

land.lhs.true5:                                   ; preds = %land.lhs.true
  %5 = load %struct.redir*, %struct.redir** %f.addr, align 4
  %type6 = getelementptr inbounds %struct.redir, %struct.redir* %5, i32 0, i32 0
  %6 = load i32, i32* %type6, align 4
  %and = and i32 %6, 1
  %tobool7 = icmp ne i32 %and, 0
  br i1 %tobool7, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true5, %entry
  %7 = load %struct.redir*, %struct.redir** %f.addr, align 4
  %name = getelementptr inbounds %struct.redir, %struct.redir* %7, i32 0, i32 4
  %8 = load i8*, i8** %name, align 4
  %call = call i8* @unmeta(i8* %8)
  %call8 = call i32 (i8*, i32, ...) @open(i8* %call, i32 833, i32 438)
  store i32 %call8, i32* %retval, align 4
  br label %return

if.end:                                           ; preds = %land.lhs.true5, %land.lhs.true, %lor.lhs.false
  %9 = load %struct.redir*, %struct.redir** %f.addr, align 4
  %name9 = getelementptr inbounds %struct.redir, %struct.redir* %9, i32 0, i32 4
  %10 = load i8*, i8** %name9, align 4
  %call10 = call i8* @unmeta(i8* %10)
  %call11 = call i32 (i8*, i32, ...) @open(i8* %call10, i32 449, i32 438)
  store i32 %call11, i32* %fd, align 4
  %cmp12 = icmp sge i32 %call11, 0
  br i1 %cmp12, label %if.then14, label %if.end15

if.then14:                                        ; preds = %if.end
  %11 = load i32, i32* %fd, align 4
  store i32 %11, i32* %retval, align 4
  br label %return

if.end15:                                         ; preds = %if.end
  %call16 = call i32* @__errno_location()
  %12 = load i32, i32* %call16, align 4
  store i32 %12, i32* %oerrno, align 4
  %13 = load %struct.redir*, %struct.redir** %f.addr, align 4
  %name17 = getelementptr inbounds %struct.redir, %struct.redir* %13, i32 0, i32 4
  %14 = load i8*, i8** %name17, align 4
  %call18 = call i8* @unmeta(i8* %14)
  %call19 = call i32 (i8*, i32, ...) @open(i8* %call18, i32 257)
  store i32 %call19, i32* %fd, align 4
  %cmp20 = icmp ne i32 %call19, -1
  br i1 %cmp20, label %if.then22, label %if.end32

if.then22:                                        ; preds = %if.end15
  %15 = load i32, i32* %fd, align 4
  %call23 = call i32 @fstat(i32 %15, %struct.stat* %buf)
  %tobool24 = icmp ne i32 %call23, 0
  br i1 %tobool24, label %if.end30, label %land.lhs.true25

land.lhs.true25:                                  ; preds = %if.then22
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %buf, i32 0, i32 6
  %16 = load i32, i32* %st_mode, align 8
  %and26 = and i32 %16, 61440
  %cmp27 = icmp eq i32 %and26, 32768
  br i1 %cmp27, label %if.end30, label %if.then29

if.then29:                                        ; preds = %land.lhs.true25
  %17 = load i32, i32* %fd, align 4
  store i32 %17, i32* %retval, align 4
  br label %return

if.end30:                                         ; preds = %land.lhs.true25, %if.then22
  %18 = load i32, i32* %fd, align 4
  %call31 = call i32 @close(i32 %18)
  br label %if.end32

if.end32:                                         ; preds = %if.end30, %if.end15
  %19 = load i32, i32* %oerrno, align 4
  %call33 = call i32* @__errno_location()
  store i32 %19, i32* %call33, align 4
  store i32 -1, i32* %retval, align 4
  br label %return

return:                                           ; preds = %if.end32, %if.then29, %if.then14, %if.then
  %20 = load i32, i32* %retval, align 4
  ret i32 %20
}

; Function Attrs: noinline nounwind
define internal void @save_params(%struct.estate* %state, i32* %pc, %union.linkroot** %restore_p, %union.linkroot** %remove_p) #0 {
entry:
  %state.addr = alloca %struct.estate*, align 4
  %pc.addr = alloca i32*, align 4
  %restore_p.addr = alloca %union.linkroot**, align 4
  %remove_p.addr = alloca %union.linkroot**, align 4
  %pm = alloca %struct.param*, align 4
  %s = alloca i8*, align 4
  %ac = alloca i32, align 4
  %tpm = alloca %struct.param*, align 4
  store %struct.estate* %state, %struct.estate** %state.addr, align 4
  store i32* %pc, i32** %pc.addr, align 4
  store %union.linkroot** %restore_p, %union.linkroot*** %restore_p.addr, align 4
  store %union.linkroot** %remove_p, %union.linkroot*** %remove_p.addr, align 4
  %call = call %union.linkroot* @newlinklist()
  %0 = load %union.linkroot**, %union.linkroot*** %restore_p.addr, align 4
  store %union.linkroot* %call, %union.linkroot** %0, align 4
  %call1 = call %union.linkroot* @newlinklist()
  %1 = load %union.linkroot**, %union.linkroot*** %remove_p.addr, align 4
  store %union.linkroot* %call1, %union.linkroot** %1, align 4
  br label %while.cond

while.cond:                                       ; preds = %cond.end, %entry
  %2 = load i32*, i32** %pc.addr, align 4
  %3 = load i32, i32* %2, align 4
  store i32 %3, i32* %ac, align 4
  %and = and i32 %3, 31
  %cmp = icmp eq i32 %and, 5
  br i1 %cmp, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %4 = load %struct.estate*, %struct.estate** %state.addr, align 4
  %prog = getelementptr inbounds %struct.estate, %struct.estate* %4, i32 0, i32 0
  %5 = load %struct.eprog*, %struct.eprog** %prog, align 4
  %6 = load i32*, i32** %pc.addr, align 4
  %add.ptr = getelementptr inbounds i32, i32* %6, i32 1
  %call2 = call i8* @ecrawstr(%struct.eprog* %5, i32* %add.ptr, i32* null)
  store i8* %call2, i8** %s, align 4
  %7 = load %struct.hashtable*, %struct.hashtable** @paramtab, align 4
  %getnode = getelementptr inbounds %struct.hashtable, %struct.hashtable* %7, i32 0, i32 9
  %8 = load %struct.hashnode* (%struct.hashtable*, i8*)*, %struct.hashnode* (%struct.hashtable*, i8*)** %getnode, align 4
  %9 = load %struct.hashtable*, %struct.hashtable** @paramtab, align 4
  %10 = load i8*, i8** %s, align 4
  %call3 = call %struct.hashnode* %8(%struct.hashtable* %9, i8* %10)
  %11 = bitcast %struct.hashnode* %call3 to %struct.param*
  store %struct.param* %11, %struct.param** %pm, align 4
  %tobool = icmp ne %struct.param* %11, null
  br i1 %tobool, label %if.then, label %if.else36

if.then:                                          ; preds = %while.body
  %12 = load %struct.param*, %struct.param** %pm, align 4
  %env = getelementptr inbounds %struct.param, %struct.param* %12, i32 0, i32 5
  %13 = load i8*, i8** %env, align 4
  %tobool4 = icmp ne i8* %13, null
  br i1 %tobool4, label %if.then5, label %if.end

if.then5:                                         ; preds = %if.then
  %14 = load %struct.param*, %struct.param** %pm, align 4
  call void @delenv(%struct.param* %14)
  br label %if.end

if.end:                                           ; preds = %if.then5, %if.then
  %15 = load %struct.param*, %struct.param** %pm, align 4
  %node = getelementptr inbounds %struct.param, %struct.param* %15, i32 0, i32 0
  %flags = getelementptr inbounds %struct.hashnode, %struct.hashnode* %node, i32 0, i32 2
  %16 = load i32, i32* %flags, align 8
  %and6 = and i32 %16, 4194304
  %tobool7 = icmp ne i32 %and6, 0
  br i1 %tobool7, label %if.else, label %if.then8

if.then8:                                         ; preds = %if.end
  %call9 = call i8* @zshcalloc(i32 56)
  %17 = bitcast i8* %call9 to %struct.param*
  store %struct.param* %17, %struct.param** %tpm, align 4
  %18 = load %struct.param*, %struct.param** %pm, align 4
  %node10 = getelementptr inbounds %struct.param, %struct.param* %18, i32 0, i32 0
  %nam = getelementptr inbounds %struct.hashnode, %struct.hashnode* %node10, i32 0, i32 1
  %19 = load i8*, i8** %nam, align 4
  %call11 = call i8* @ztrdup(i8* %19)
  %20 = load %struct.param*, %struct.param** %tpm, align 4
  %node12 = getelementptr inbounds %struct.param, %struct.param* %20, i32 0, i32 0
  %nam13 = getelementptr inbounds %struct.hashnode, %struct.hashnode* %node12, i32 0, i32 1
  store i8* %call11, i8** %nam13, align 4
  %21 = load %struct.param*, %struct.param** %tpm, align 4
  %22 = load %struct.param*, %struct.param** %pm, align 4
  call void @copyparam(%struct.param* %21, %struct.param* %22, i32 0)
  %23 = load %struct.param*, %struct.param** %tpm, align 4
  store %struct.param* %23, %struct.param** %pm, align 4
  br label %if.end30

if.else:                                          ; preds = %if.end
  %24 = load %struct.param*, %struct.param** %pm, align 4
  %node14 = getelementptr inbounds %struct.param, %struct.param* %24, i32 0, i32 0
  %flags15 = getelementptr inbounds %struct.hashnode, %struct.hashnode* %node14, i32 0, i32 2
  %25 = load i32, i32* %flags15, align 8
  %and16 = and i32 %25, 1024
  %tobool17 = icmp ne i32 %and16, 0
  br i1 %tobool17, label %if.end29, label %land.lhs.true

land.lhs.true:                                    ; preds = %if.else
  %26 = load i8, i8* getelementptr inbounds ([181 x i8], [181 x i8]* @opts, i32 0, i32 155), align 1
  %tobool18 = icmp ne i8 %26, 0
  br i1 %tobool18, label %lor.lhs.false, label %if.then23

lor.lhs.false:                                    ; preds = %land.lhs.true
  %27 = load %struct.param*, %struct.param** %pm, align 4
  %node19 = getelementptr inbounds %struct.param, %struct.param* %27, i32 0, i32 0
  %flags20 = getelementptr inbounds %struct.hashnode, %struct.hashnode* %node19, i32 0, i32 2
  %28 = load i32, i32* %flags20, align 8
  %and21 = and i32 %28, 16777216
  %tobool22 = icmp ne i32 %and21, 0
  br i1 %tobool22, label %if.end29, label %if.then23

if.then23:                                        ; preds = %lor.lhs.false, %land.lhs.true
  %call24 = call i8* @hcalloc(i32 56)
  %29 = bitcast i8* %call24 to %struct.param*
  store %struct.param* %29, %struct.param** %tpm, align 4
  %30 = load %struct.param*, %struct.param** %pm, align 4
  %node25 = getelementptr inbounds %struct.param, %struct.param* %30, i32 0, i32 0
  %nam26 = getelementptr inbounds %struct.hashnode, %struct.hashnode* %node25, i32 0, i32 1
  %31 = load i8*, i8** %nam26, align 4
  %32 = load %struct.param*, %struct.param** %tpm, align 4
  %node27 = getelementptr inbounds %struct.param, %struct.param* %32, i32 0, i32 0
  %nam28 = getelementptr inbounds %struct.hashnode, %struct.hashnode* %node27, i32 0, i32 1
  store i8* %31, i8** %nam28, align 4
  %33 = load %struct.param*, %struct.param** %tpm, align 4
  %34 = load %struct.param*, %struct.param** %pm, align 4
  call void @copyparam(%struct.param* %33, %struct.param* %34, i32 1)
  %35 = load %struct.param*, %struct.param** %tpm, align 4
  store %struct.param* %35, %struct.param** %pm, align 4
  br label %if.end29

if.end29:                                         ; preds = %if.then23, %lor.lhs.false, %if.else
  br label %if.end30

if.end30:                                         ; preds = %if.end29, %if.then8
  %36 = load %union.linkroot**, %union.linkroot*** %remove_p.addr, align 4
  %37 = load %union.linkroot*, %union.linkroot** %36, align 4
  %38 = load %union.linkroot**, %union.linkroot*** %remove_p.addr, align 4
  %39 = load %union.linkroot*, %union.linkroot** %38, align 4
  %list = bitcast %union.linkroot* %39 to %struct.linklist*
  %last = getelementptr inbounds %struct.linklist, %struct.linklist* %list, i32 0, i32 1
  %40 = load %struct.linknode*, %struct.linknode** %last, align 4
  %41 = load i8*, i8** %s, align 4
  %call31 = call i8* @dupstring(i8* %41)
  %call32 = call %struct.linknode* @insertlinknode(%union.linkroot* %37, %struct.linknode* %40, i8* %call31)
  %42 = load %union.linkroot**, %union.linkroot*** %restore_p.addr, align 4
  %43 = load %union.linkroot*, %union.linkroot** %42, align 4
  %44 = load %union.linkroot**, %union.linkroot*** %restore_p.addr, align 4
  %45 = load %union.linkroot*, %union.linkroot** %44, align 4
  %list33 = bitcast %union.linkroot* %45 to %struct.linklist*
  %last34 = getelementptr inbounds %struct.linklist, %struct.linklist* %list33, i32 0, i32 1
  %46 = load %struct.linknode*, %struct.linknode** %last34, align 4
  %47 = load %struct.param*, %struct.param** %pm, align 4
  %48 = bitcast %struct.param* %47 to i8*
  %call35 = call %struct.linknode* @insertlinknode(%union.linkroot* %43, %struct.linknode* %46, i8* %48)
  br label %if.end41

if.else36:                                        ; preds = %while.body
  %49 = load %union.linkroot**, %union.linkroot*** %remove_p.addr, align 4
  %50 = load %union.linkroot*, %union.linkroot** %49, align 4
  %51 = load %union.linkroot**, %union.linkroot*** %remove_p.addr, align 4
  %52 = load %union.linkroot*, %union.linkroot** %51, align 4
  %list37 = bitcast %union.linkroot* %52 to %struct.linklist*
  %last38 = getelementptr inbounds %struct.linklist, %struct.linklist* %list37, i32 0, i32 1
  %53 = load %struct.linknode*, %struct.linknode** %last38, align 4
  %54 = load i8*, i8** %s, align 4
  %call39 = call i8* @dupstring(i8* %54)
  %call40 = call %struct.linknode* @insertlinknode(%union.linkroot* %50, %struct.linknode* %53, i8* %call39)
  br label %if.end41

if.end41:                                         ; preds = %if.else36, %if.end30
  %55 = load i32, i32* %ac, align 4
  %shr = lshr i32 %55, 5
  %and42 = and i32 %shr, 1
  %cmp43 = icmp eq i32 %and42, 0
  br i1 %cmp43, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end41
  br label %cond.end

cond.false:                                       ; preds = %if.end41
  %56 = load i32, i32* %ac, align 4
  %shr44 = lshr i32 %56, 5
  %shr45 = lshr i32 %shr44, 2
  %add = add i32 %shr45, 2
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 3, %cond.true ], [ %add, %cond.false ]
  %57 = load i32*, i32** %pc.addr, align 4
  %add.ptr46 = getelementptr inbounds i32, i32* %57, i32 %cond
  store i32* %add.ptr46, i32** %pc.addr, align 4
  br label %while.cond

while.end:                                        ; preds = %while.cond
  ret void
}

; Function Attrs: noinline nounwind
define internal void @restore_params(%union.linkroot* %restorelist, %union.linkroot* %removelist) #0 {
entry:
  %restorelist.addr = alloca %union.linkroot*, align 4
  %removelist.addr = alloca %union.linkroot*, align 4
  %pm = alloca %struct.param*, align 4
  %s = alloca i8*, align 4
  %tpm = alloca %struct.param*, align 4
  store %union.linkroot* %restorelist, %union.linkroot** %restorelist.addr, align 4
  store %union.linkroot* %removelist, %union.linkroot** %removelist.addr, align 4
  br label %while.cond

while.cond:                                       ; preds = %if.end, %entry
  %0 = load %union.linkroot*, %union.linkroot** %removelist.addr, align 4
  %call = call i8* @ugetnode(%union.linkroot* %0)
  store i8* %call, i8** %s, align 4
  %tobool = icmp ne i8* %call, null
  br i1 %tobool, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %1 = load %struct.hashtable*, %struct.hashtable** @paramtab, align 4
  %getnode = getelementptr inbounds %struct.hashtable, %struct.hashtable* %1, i32 0, i32 9
  %2 = load %struct.hashnode* (%struct.hashtable*, i8*)*, %struct.hashnode* (%struct.hashtable*, i8*)** %getnode, align 4
  %3 = load %struct.hashtable*, %struct.hashtable** @paramtab, align 4
  %4 = load i8*, i8** %s, align 4
  %call1 = call %struct.hashnode* %2(%struct.hashtable* %3, i8* %4)
  %5 = bitcast %struct.hashnode* %call1 to %struct.param*
  store %struct.param* %5, %struct.param** %pm, align 4
  %tobool2 = icmp ne %struct.param* %5, null
  br i1 %tobool2, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %while.body
  %6 = load %struct.param*, %struct.param** %pm, align 4
  %node = getelementptr inbounds %struct.param, %struct.param* %6, i32 0, i32 0
  %flags = getelementptr inbounds %struct.hashnode, %struct.hashnode* %node, i32 0, i32 2
  %7 = load i32, i32* %flags, align 8
  %and = and i32 %7, 4194304
  %tobool3 = icmp ne i32 %and, 0
  br i1 %tobool3, label %if.end, label %if.then

if.then:                                          ; preds = %land.lhs.true
  %8 = load %struct.param*, %struct.param** %pm, align 4
  %node4 = getelementptr inbounds %struct.param, %struct.param* %8, i32 0, i32 0
  %flags5 = getelementptr inbounds %struct.hashnode, %struct.hashnode* %node4, i32 0, i32 2
  %9 = load i32, i32* %flags5, align 8
  %and6 = and i32 %9, -1025
  store i32 %and6, i32* %flags5, align 8
  %10 = load %struct.param*, %struct.param** %pm, align 4
  %call7 = call i32 @unsetparam_pm(%struct.param* %10, i32 0, i32 0)
  br label %if.end

if.end:                                           ; preds = %if.then, %land.lhs.true, %while.body
  br label %while.cond

while.end:                                        ; preds = %while.cond
  %11 = load %union.linkroot*, %union.linkroot** %restorelist.addr, align 4
  %tobool8 = icmp ne %union.linkroot* %11, null
  br i1 %tobool8, label %if.then9, label %if.end67

if.then9:                                         ; preds = %while.end
  br label %while.cond10

while.cond10:                                     ; preds = %if.end65, %if.then9
  %12 = load %union.linkroot*, %union.linkroot** %restorelist.addr, align 4
  %call11 = call i8* @ugetnode(%union.linkroot* %12)
  %13 = bitcast i8* %call11 to %struct.param*
  store %struct.param* %13, %struct.param** %pm, align 4
  %tobool12 = icmp ne %struct.param* %13, null
  br i1 %tobool12, label %while.body13, label %while.end66

while.body13:                                     ; preds = %while.cond10
  %14 = load %struct.param*, %struct.param** %pm, align 4
  %node14 = getelementptr inbounds %struct.param, %struct.param* %14, i32 0, i32 0
  %flags15 = getelementptr inbounds %struct.hashnode, %struct.hashnode* %node14, i32 0, i32 2
  %15 = load i32, i32* %flags15, align 8
  %and16 = and i32 %15, 4194304
  %tobool17 = icmp ne i32 %and16, 0
  br i1 %tobool17, label %if.then18, label %if.else

if.then18:                                        ; preds = %while.body13
  %16 = load %struct.hashtable*, %struct.hashtable** @paramtab, align 4
  %getnode19 = getelementptr inbounds %struct.hashtable, %struct.hashtable* %16, i32 0, i32 9
  %17 = load %struct.hashnode* (%struct.hashtable*, i8*)*, %struct.hashnode* (%struct.hashtable*, i8*)** %getnode19, align 4
  %18 = load %struct.hashtable*, %struct.hashtable** @paramtab, align 4
  %19 = load %struct.param*, %struct.param** %pm, align 4
  %node20 = getelementptr inbounds %struct.param, %struct.param* %19, i32 0, i32 0
  %nam = getelementptr inbounds %struct.hashnode, %struct.hashnode* %node20, i32 0, i32 1
  %20 = load i8*, i8** %nam, align 4
  %call21 = call %struct.hashnode* %17(%struct.hashtable* %18, i8* %20)
  %21 = bitcast %struct.hashnode* %call21 to %struct.param*
  store %struct.param* %21, %struct.param** %tpm, align 4
  %22 = load %struct.param*, %struct.param** %pm, align 4
  %env = getelementptr inbounds %struct.param, %struct.param* %22, i32 0, i32 5
  %23 = load i8*, i8** %env, align 4
  %tobool22 = icmp ne i8* %23, null
  br i1 %tobool22, label %if.end27, label %land.lhs.true23

land.lhs.true23:                                  ; preds = %if.then18
  %24 = load %struct.param*, %struct.param** %tpm, align 4
  %env24 = getelementptr inbounds %struct.param, %struct.param* %24, i32 0, i32 5
  %25 = load i8*, i8** %env24, align 4
  %tobool25 = icmp ne i8* %25, null
  br i1 %tobool25, label %if.then26, label %if.end27

if.then26:                                        ; preds = %land.lhs.true23
  %26 = load %struct.param*, %struct.param** %tpm, align 4
  call void @delenv(%struct.param* %26)
  br label %if.end27

if.end27:                                         ; preds = %if.then26, %land.lhs.true23, %if.then18
  %27 = load %struct.param*, %struct.param** %pm, align 4
  %node28 = getelementptr inbounds %struct.param, %struct.param* %27, i32 0, i32 0
  %flags29 = getelementptr inbounds %struct.hashnode, %struct.hashnode* %node28, i32 0, i32 2
  %28 = load i32, i32* %flags29, align 8
  %29 = load %struct.param*, %struct.param** %tpm, align 4
  %node30 = getelementptr inbounds %struct.param, %struct.param* %29, i32 0, i32 0
  %flags31 = getelementptr inbounds %struct.hashnode, %struct.hashnode* %node30, i32 0, i32 2
  store i32 %28, i32* %flags31, align 8
  %30 = load %struct.param*, %struct.param** %pm, align 4
  %node32 = getelementptr inbounds %struct.param, %struct.param* %30, i32 0, i32 0
  %flags33 = getelementptr inbounds %struct.hashnode, %struct.hashnode* %node32, i32 0, i32 2
  %31 = load i32, i32* %flags33, align 8
  %and34 = and i32 %31, 31
  switch i32 %and34, label %sw.epilog [
    i32 0, label %sw.bb
    i32 2, label %sw.bb36
    i32 4, label %sw.bb40
    i32 8, label %sw.bb40
    i32 1, label %sw.bb44
    i32 16, label %sw.bb48
  ]

sw.bb:                                            ; preds = %if.end27
  %32 = load %struct.param*, %struct.param** %tpm, align 4
  %gsu = getelementptr inbounds %struct.param, %struct.param* %32, i32 0, i32 2
  %s35 = bitcast %union.anon.1* %gsu to %struct.gsu_scalar**
  %33 = load %struct.gsu_scalar*, %struct.gsu_scalar** %s35, align 8
  %setfn = getelementptr inbounds %struct.gsu_scalar, %struct.gsu_scalar* %33, i32 0, i32 1
  %34 = load void (%struct.param*, i8*)*, void (%struct.param*, i8*)** %setfn, align 4
  %35 = load %struct.param*, %struct.param** %tpm, align 4
  %36 = load %struct.param*, %struct.param** %pm, align 4
  %u = getelementptr inbounds %struct.param, %struct.param* %36, i32 0, i32 1
  %str = bitcast %union.anon.0* %u to i8**
  %37 = load i8*, i8** %str, align 8
  call void %34(%struct.param* %35, i8* %37)
  br label %sw.epilog

sw.bb36:                                          ; preds = %if.end27
  %38 = load %struct.param*, %struct.param** %tpm, align 4
  %gsu37 = getelementptr inbounds %struct.param, %struct.param* %38, i32 0, i32 2
  %i = bitcast %union.anon.1* %gsu37 to %struct.gsu_integer**
  %39 = load %struct.gsu_integer*, %struct.gsu_integer** %i, align 8
  %setfn38 = getelementptr inbounds %struct.gsu_integer, %struct.gsu_integer* %39, i32 0, i32 1
  %40 = load void (%struct.param*, i32)*, void (%struct.param*, i32)** %setfn38, align 4
  %41 = load %struct.param*, %struct.param** %tpm, align 4
  %42 = load %struct.param*, %struct.param** %pm, align 4
  %u39 = getelementptr inbounds %struct.param, %struct.param* %42, i32 0, i32 1
  %val = bitcast %union.anon.0* %u39 to i32*
  %43 = load i32, i32* %val, align 8
  call void %40(%struct.param* %41, i32 %43)
  br label %sw.epilog

sw.bb40:                                          ; preds = %if.end27, %if.end27
  %44 = load %struct.param*, %struct.param** %tpm, align 4
  %gsu41 = getelementptr inbounds %struct.param, %struct.param* %44, i32 0, i32 2
  %f = bitcast %union.anon.1* %gsu41 to %struct.gsu_float**
  %45 = load %struct.gsu_float*, %struct.gsu_float** %f, align 8
  %setfn42 = getelementptr inbounds %struct.gsu_float, %struct.gsu_float* %45, i32 0, i32 1
  %46 = load void (%struct.param*, double)*, void (%struct.param*, double)** %setfn42, align 4
  %47 = load %struct.param*, %struct.param** %tpm, align 4
  %48 = load %struct.param*, %struct.param** %pm, align 4
  %u43 = getelementptr inbounds %struct.param, %struct.param* %48, i32 0, i32 1
  %dval = bitcast %union.anon.0* %u43 to double*
  %49 = load double, double* %dval, align 8
  call void %46(%struct.param* %47, double %49)
  br label %sw.epilog

sw.bb44:                                          ; preds = %if.end27
  %50 = load %struct.param*, %struct.param** %tpm, align 4
  %gsu45 = getelementptr inbounds %struct.param, %struct.param* %50, i32 0, i32 2
  %a = bitcast %union.anon.1* %gsu45 to %struct.gsu_array**
  %51 = load %struct.gsu_array*, %struct.gsu_array** %a, align 8
  %setfn46 = getelementptr inbounds %struct.gsu_array, %struct.gsu_array* %51, i32 0, i32 1
  %52 = load void (%struct.param*, i8**)*, void (%struct.param*, i8**)** %setfn46, align 4
  %53 = load %struct.param*, %struct.param** %tpm, align 4
  %54 = load %struct.param*, %struct.param** %pm, align 4
  %u47 = getelementptr inbounds %struct.param, %struct.param* %54, i32 0, i32 1
  %arr = bitcast %union.anon.0* %u47 to i8***
  %55 = load i8**, i8*** %arr, align 8
  call void %52(%struct.param* %53, i8** %55)
  br label %sw.epilog

sw.bb48:                                          ; preds = %if.end27
  %56 = load %struct.param*, %struct.param** %tpm, align 4
  %gsu49 = getelementptr inbounds %struct.param, %struct.param* %56, i32 0, i32 2
  %h = bitcast %union.anon.1* %gsu49 to %struct.gsu_hash**
  %57 = load %struct.gsu_hash*, %struct.gsu_hash** %h, align 8
  %setfn50 = getelementptr inbounds %struct.gsu_hash, %struct.gsu_hash* %57, i32 0, i32 1
  %58 = load void (%struct.param*, %struct.hashtable*)*, void (%struct.param*, %struct.hashtable*)** %setfn50, align 4
  %59 = load %struct.param*, %struct.param** %tpm, align 4
  %60 = load %struct.param*, %struct.param** %pm, align 4
  %u51 = getelementptr inbounds %struct.param, %struct.param* %60, i32 0, i32 1
  %hash = bitcast %union.anon.0* %u51 to %struct.hashtable**
  %61 = load %struct.hashtable*, %struct.hashtable** %hash, align 8
  call void %58(%struct.param* %59, %struct.hashtable* %61)
  br label %sw.epilog

sw.epilog:                                        ; preds = %if.end27, %sw.bb48, %sw.bb44, %sw.bb40, %sw.bb36, %sw.bb
  %62 = load %struct.param*, %struct.param** %tpm, align 4
  store %struct.param* %62, %struct.param** %pm, align 4
  br label %if.end54

if.else:                                          ; preds = %while.body13
  %63 = load %struct.hashtable*, %struct.hashtable** @paramtab, align 4
  %addnode = getelementptr inbounds %struct.hashtable, %struct.hashtable* %63, i32 0, i32 8
  %64 = load void (%struct.hashtable*, i8*, i8*)*, void (%struct.hashtable*, i8*, i8*)** %addnode, align 4
  %65 = load %struct.hashtable*, %struct.hashtable** @paramtab, align 4
  %66 = load %struct.param*, %struct.param** %pm, align 4
  %node52 = getelementptr inbounds %struct.param, %struct.param* %66, i32 0, i32 0
  %nam53 = getelementptr inbounds %struct.hashnode, %struct.hashnode* %node52, i32 0, i32 1
  %67 = load i8*, i8** %nam53, align 4
  %68 = load %struct.param*, %struct.param** %pm, align 4
  %69 = bitcast %struct.param* %68 to i8*
  call void %64(%struct.hashtable* %65, i8* %67, i8* %69)
  br label %if.end54

if.end54:                                         ; preds = %if.else, %sw.epilog
  %70 = load %struct.param*, %struct.param** %pm, align 4
  %node55 = getelementptr inbounds %struct.param, %struct.param* %70, i32 0, i32 0
  %flags56 = getelementptr inbounds %struct.hashnode, %struct.hashnode* %node55, i32 0, i32 2
  %71 = load i32, i32* %flags56, align 8
  %and57 = and i32 %71, 4096
  %tobool58 = icmp ne i32 %and57, 0
  br i1 %tobool58, label %land.lhs.true59, label %if.end65

land.lhs.true59:                                  ; preds = %if.end54
  %72 = load %struct.param*, %struct.param** %pm, align 4
  %node60 = getelementptr inbounds %struct.param, %struct.param* %72, i32 0, i32 0
  %nam61 = getelementptr inbounds %struct.hashnode, %struct.hashnode* %node60, i32 0, i32 1
  %73 = load i8*, i8** %nam61, align 4
  %call62 = call i8* @getsparam(i8* %73)
  store i8* %call62, i8** %s, align 4
  %tobool63 = icmp ne i8* %call62, null
  br i1 %tobool63, label %if.then64, label %if.end65

if.then64:                                        ; preds = %land.lhs.true59
  %74 = load %struct.param*, %struct.param** %pm, align 4
  %75 = load i8*, i8** %s, align 4
  call void @addenv(%struct.param* %74, i8* %75)
  br label %if.end65

if.end65:                                         ; preds = %if.then64, %land.lhs.true59, %if.end54
  br label %while.cond10

while.end66:                                      ; preds = %while.cond10
  br label %if.end67

if.end67:                                         ; preds = %while.end66, %while.end
  ret void
}

declare %struct.eprog* @eccopyredirs(%struct.estate*) #1

declare %struct.linknode* @uinsertlinknode(%union.linkroot*, %struct.linknode*, %struct.linknode*) #1

declare i32 @execbuiltin(%union.linkroot*, %union.linkroot*, %struct.builtin*) #1

declare void @savehistfile(i8*, i32, i32) #1

declare %struct.param* @setiparam(i8*, i32) #1

; Function Attrs: noinline nounwind
define internal void @execute(%union.linkroot* %args, i32 %flags, i32 %defpath) #0 {
entry:
  %args.addr = alloca %union.linkroot*, align 4
  %flags.addr = alloca i32, align 4
  %defpath.addr = alloca i32, align 4
  %cn = alloca %struct.cmdnam*, align 4
  %buf = alloca [16385 x i8], align 1
  %buf2 = alloca [16385 x i8], align 1
  %s = alloca i8*, align 4
  %z = alloca i8*, align 4
  %arg0 = alloca i8*, align 4
  %argv = alloca i8**, align 4
  %pp = alloca i8**, align 4
  %newenvp = alloca i8**, align 4
  %eno = alloca i32, align 4
  %ee = alloca i32, align 4
  %t = alloca i8*, align 4
  %tmp = alloca %struct.__sigset_t, align 4
  %lerrno = alloca i32, align 4
  %pbuf = alloca [4097 x i8], align 1
  %dptr = alloca i8*, align 4
  %nn = alloca [4097 x i8], align 1
  %dptr118 = alloca i8*, align 4
  store %union.linkroot* %args, %union.linkroot** %args.addr, align 4
  store i32 %flags, i32* %flags.addr, align 4
  store i32 %defpath, i32* %defpath.addr, align 4
  store i8** null, i8*** %newenvp, align 4
  store i32 0, i32* %eno, align 4
  %0 = load %union.linkroot*, %union.linkroot** %args.addr, align 4
  %list = bitcast %union.linkroot* %0 to %struct.linklist*
  %first = getelementptr inbounds %struct.linklist, %struct.linklist* %list, i32 0, i32 0
  %1 = load %struct.linknode*, %struct.linknode** %first, align 4
  %dat = getelementptr inbounds %struct.linknode, %struct.linknode* %1, i32 0, i32 2
  %2 = load i8*, i8** %dat, align 4
  store i8* %2, i8** %arg0, align 4
  %3 = load i8, i8* getelementptr inbounds ([181 x i8], [181 x i8]* @opts, i32 0, i32 155), align 1
  %conv = sext i8 %3 to i32
  %tobool = icmp ne i32 %conv, 0
  br i1 %tobool, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %entry
  %4 = load i8*, i8** %arg0, align 4
  %call = call i8* @strchr(i8* %4, i32 47)
  %tobool1 = icmp ne i8* %call, null
  br i1 %tobool1, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true
  %5 = load i32, i32* %defpath.addr, align 4
  %tobool2 = icmp ne i32 %5, 0
  br i1 %tobool2, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false, %land.lhs.true
  %6 = load i8*, i8** %arg0, align 4
  call void (i8*, ...) @zerr(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.33, i32 0, i32 0), i8* %6)
  call void @_exit(i32 1) #4
  unreachable

if.end:                                           ; preds = %lor.lhs.false, %entry
  %7 = load i8*, i8** @STTYval, align 4
  store i8* %7, i8** %s, align 4
  %tobool3 = icmp ne i8* %7, null
  br i1 %tobool3, label %land.lhs.true4, label %if.else

land.lhs.true4:                                   ; preds = %if.end
  %call5 = call i32 @isatty(i32 0)
  %tobool6 = icmp ne i32 %call5, 0
  br i1 %tobool6, label %land.lhs.true7, label %if.else

land.lhs.true7:                                   ; preds = %land.lhs.true4
  %call8 = call i32 @getpgrp()
  %call9 = call i32 @getpid()
  %cmp = icmp eq i32 %call8, %call9
  br i1 %cmp, label %if.then11, label %if.else

if.then11:                                        ; preds = %land.lhs.true7
  %8 = load i8*, i8** %s, align 4
  %call12 = call i8* @tricat(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.87, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.88, i32 0, i32 0), i8* %8)
  store i8* %call12, i8** %t, align 4
  store i8* null, i8** @STTYval, align 4
  %9 = load i8*, i8** %s, align 4
  call void @zsfree(i8* %9)
  %10 = load i8*, i8** %t, align 4
  call void @execstring(i8* %10, i32 1, i32 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.87, i32 0, i32 0))
  %11 = load i8*, i8** %t, align 4
  call void @zsfree(i8* %11)
  br label %if.end16

if.else:                                          ; preds = %land.lhs.true7, %land.lhs.true4, %if.end
  %12 = load i8*, i8** %s, align 4
  %tobool13 = icmp ne i8* %12, null
  br i1 %tobool13, label %if.then14, label %if.end15

if.then14:                                        ; preds = %if.else
  store i8* null, i8** @STTYval, align 4
  %13 = load i8*, i8** %s, align 4
  call void @zsfree(i8* %13)
  br label %if.end15

if.end15:                                         ; preds = %if.then14, %if.else
  br label %if.end16

if.end16:                                         ; preds = %if.end15, %if.then11
  %14 = load i8, i8* getelementptr inbounds ([181 x i8], [181 x i8]* @opts, i32 0, i32 155), align 1
  %tobool17 = icmp ne i8 %14, 0
  br i1 %tobool17, label %if.else27, label %land.lhs.true18

land.lhs.true18:                                  ; preds = %if.end16
  %call19 = call i8* @zgetenv(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.89, i32 0, i32 0))
  store i8* %call19, i8** %z, align 4
  %tobool20 = icmp ne i8* %call19, null
  br i1 %tobool20, label %if.then21, label %if.else27

if.then21:                                        ; preds = %land.lhs.true18
  %15 = load i8*, i8** %z, align 4
  %call22 = call i8* @ztrdup(i8* %15)
  %16 = load %union.linkroot*, %union.linkroot** %args.addr, align 4
  %list23 = bitcast %union.linkroot* %16 to %struct.linklist*
  %first24 = getelementptr inbounds %struct.linklist, %struct.linklist* %list23, i32 0, i32 0
  %17 = load %struct.linknode*, %struct.linknode** %first24, align 4
  %dat25 = getelementptr inbounds %struct.linknode, %struct.linknode* %17, i32 0, i32 2
  store i8* %call22, i8** %dat25, align 4
  %call26 = call i32 @unsetenv(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.89, i32 0, i32 0))
  br label %if.end37

if.else27:                                        ; preds = %land.lhs.true18, %if.end16
  %18 = load i32, i32* %flags.addr, align 4
  %and = and i32 %18, 64
  %tobool28 = icmp ne i32 %and, 0
  br i1 %tobool28, label %if.then29, label %if.end36

if.then29:                                        ; preds = %if.else27
  %arraydecay = getelementptr inbounds [16385 x i8], [16385 x i8]* %buf2, i32 0, i32 0
  %19 = load i8*, i8** %arg0, align 4
  %call30 = call i32 (i8*, i8*, ...) @sprintf(i8* %arraydecay, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.90, i32 0, i32 0), i8* %19)
  %arraydecay31 = getelementptr inbounds [16385 x i8], [16385 x i8]* %buf2, i32 0, i32 0
  %call32 = call i8* @ztrdup(i8* %arraydecay31)
  %20 = load %union.linkroot*, %union.linkroot** %args.addr, align 4
  %list33 = bitcast %union.linkroot* %20 to %struct.linklist*
  %first34 = getelementptr inbounds %struct.linklist, %struct.linklist* %list33, i32 0, i32 0
  %21 = load %struct.linknode*, %struct.linknode** %first34, align 4
  %dat35 = getelementptr inbounds %struct.linknode, %struct.linknode* %21, i32 0, i32 2
  store i8* %call32, i8** %dat35, align 4
  br label %if.end36

if.end36:                                         ; preds = %if.then29, %if.else27
  br label %if.end37

if.end37:                                         ; preds = %if.end36, %if.then21
  %22 = load %union.linkroot*, %union.linkroot** %args.addr, align 4
  %call38 = call i8** @makecline(%union.linkroot* %22)
  store i8** %call38, i8*** %argv, align 4
  %23 = load i32, i32* %flags.addr, align 4
  %and39 = and i32 %23, 65536
  %tobool40 = icmp ne i32 %and39, 0
  br i1 %tobool40, label %if.then41, label %if.end42

if.then41:                                        ; preds = %if.end37
  store i8** getelementptr inbounds ([1 x i8*], [1 x i8*]* @blank_env, i32 0, i32 0), i8*** %newenvp, align 4
  br label %if.end42

if.end42:                                         ; preds = %if.then41, %if.end37
  call void @closem(i32 4, i32 0)
  call void @signal_unblock(%struct.__sigset_t* sret %tmp, %struct.__sigset_t* byval align 4 @sigchld_mask)
  %24 = load i8*, i8** %arg0, align 4
  %call43 = call i32 @strlen(i8* %24)
  %cmp44 = icmp sge i32 %call43, 4096
  br i1 %cmp44, label %if.then46, label %if.end47

if.then46:                                        ; preds = %if.end42
  %25 = load i8*, i8** %arg0, align 4
  call void (i8*, ...) @zerr(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.91, i32 0, i32 0), i8* %25)
  call void @_exit(i32 1) #4
  unreachable

if.end47:                                         ; preds = %if.end42
  %26 = load i8*, i8** %arg0, align 4
  store i8* %26, i8** %s, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end47
  %27 = load i8*, i8** %s, align 4
  %28 = load i8, i8* %27, align 1
  %tobool48 = icmp ne i8 %28, 0
  br i1 %tobool48, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %29 = load i8*, i8** %s, align 4
  %30 = load i8, i8* %29, align 1
  %conv49 = sext i8 %30 to i32
  %cmp50 = icmp eq i32 %conv49, 47
  br i1 %cmp50, label %if.then52, label %if.end81

if.then52:                                        ; preds = %for.body
  %31 = load i8*, i8** %arg0, align 4
  %32 = load i8**, i8*** %argv, align 4
  %33 = load i8**, i8*** %newenvp, align 4
  %call54 = call i32 @zexecve(i8* %31, i8** %32, i8** %33)
  store i32 %call54, i32* %lerrno, align 4
  %34 = load i8*, i8** %arg0, align 4
  %35 = load i8*, i8** %s, align 4
  %cmp55 = icmp eq i8* %34, %35
  br i1 %cmp55, label %if.then75, label %lor.lhs.false57

lor.lhs.false57:                                  ; preds = %if.then52
  %36 = load i8, i8* getelementptr inbounds ([181 x i8], [181 x i8]* @opts, i32 0, i32 127), align 1
  %tobool58 = icmp ne i8 %36, 0
  br i1 %tobool58, label %lor.lhs.false59, label %if.then75

lor.lhs.false59:                                  ; preds = %lor.lhs.false57
  %37 = load i8*, i8** %arg0, align 4
  %arrayidx = getelementptr inbounds i8, i8* %37, i32 0
  %38 = load i8, i8* %arrayidx, align 1
  %conv60 = sext i8 %38 to i32
  %cmp61 = icmp eq i32 %conv60, 46
  br i1 %cmp61, label %land.lhs.true63, label %if.end80

land.lhs.true63:                                  ; preds = %lor.lhs.false59
  %39 = load i8*, i8** %arg0, align 4
  %add.ptr = getelementptr inbounds i8, i8* %39, i32 1
  %40 = load i8*, i8** %s, align 4
  %cmp64 = icmp eq i8* %add.ptr, %40
  br i1 %cmp64, label %if.then75, label %lor.lhs.false66

lor.lhs.false66:                                  ; preds = %land.lhs.true63
  %41 = load i8*, i8** %arg0, align 4
  %arrayidx67 = getelementptr inbounds i8, i8* %41, i32 1
  %42 = load i8, i8* %arrayidx67, align 1
  %conv68 = sext i8 %42 to i32
  %cmp69 = icmp eq i32 %conv68, 46
  br i1 %cmp69, label %land.lhs.true71, label %if.end80

land.lhs.true71:                                  ; preds = %lor.lhs.false66
  %43 = load i8*, i8** %arg0, align 4
  %add.ptr72 = getelementptr inbounds i8, i8* %43, i32 2
  %44 = load i8*, i8** %s, align 4
  %cmp73 = icmp eq i8* %add.ptr72, %44
  br i1 %cmp73, label %if.then75, label %if.end80

if.then75:                                        ; preds = %land.lhs.true71, %land.lhs.true63, %lor.lhs.false57, %if.then52
  %45 = load i32, i32* %lerrno, align 4
  %46 = load i8*, i8** %arg0, align 4
  call void (i8*, ...) @zerr(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.9, i32 0, i32 0), i32 %45, i8* %46)
  %47 = load i32, i32* %lerrno, align 4
  %cmp76 = icmp eq i32 %47, 13
  br i1 %cmp76, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %if.then75
  %48 = load i32, i32* %lerrno, align 4
  %cmp78 = icmp eq i32 %48, 8
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %if.then75
  %49 = phi i1 [ true, %if.then75 ], [ %cmp78, %lor.rhs ]
  %cond = select i1 %49, i32 126, i32 127
  call void @_exit(i32 %cond) #4
  unreachable

if.end80:                                         ; preds = %land.lhs.true71, %lor.lhs.false66, %lor.lhs.false59
  br label %for.end

if.end81:                                         ; preds = %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end81
  %50 = load i8*, i8** %s, align 4
  %incdec.ptr = getelementptr inbounds i8, i8* %50, i32 1
  store i8* %incdec.ptr, i8** %s, align 4
  br label %for.cond

for.end:                                          ; preds = %if.end80, %for.cond
  %51 = load i32, i32* %defpath.addr, align 4
  %tobool82 = icmp ne i32 %51, 0
  br i1 %tobool82, label %if.then83, label %if.else112

if.then83:                                        ; preds = %for.end
  %52 = load i8*, i8** %arg0, align 4
  %arraydecay86 = getelementptr inbounds [4097 x i8], [4097 x i8]* %pbuf, i32 0, i32 0
  %call87 = call i8* @search_defpath(i8* %52, i8* %arraydecay86, i32 4096)
  %tobool88 = icmp ne i8* %call87, null
  br i1 %tobool88, label %if.end95, label %if.then89

if.then89:                                        ; preds = %if.then83
  %53 = load i8*, i8** %arg0, align 4
  %54 = load %union.linkroot*, %union.linkroot** %args.addr, align 4
  %call90 = call i32 @commandnotfound(i8* %53, %union.linkroot* %54)
  %cmp91 = icmp eq i32 %call90, 0
  br i1 %cmp91, label %if.then93, label %if.end94

if.then93:                                        ; preds = %if.then89
  %55 = load i32, i32* @lastval, align 4
  call void @_exit(i32 %55) #4
  unreachable

if.end94:                                         ; preds = %if.then89
  %56 = load i8*, i8** %arg0, align 4
  call void (i8*, ...) @zerr(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.92, i32 0, i32 0), i8* %56)
  call void @_exit(i32 127) #4
  unreachable

if.end95:                                         ; preds = %if.then83
  %arraydecay96 = getelementptr inbounds [4097 x i8], [4097 x i8]* %pbuf, i32 0, i32 0
  %57 = load i8**, i8*** %argv, align 4
  %58 = load i8**, i8*** %newenvp, align 4
  %call97 = call i32 @zexecve(i8* %arraydecay96, i8** %57, i8** %58)
  store i32 %call97, i32* %ee, align 4
  %arraydecay98 = getelementptr inbounds [4097 x i8], [4097 x i8]* %pbuf, i32 0, i32 0
  %call99 = call i8* @strrchr(i8* %arraydecay98, i32 47)
  store i8* %call99, i8** %dptr, align 4
  %tobool100 = icmp ne i8* %call99, null
  br i1 %tobool100, label %if.then101, label %if.end102

if.then101:                                       ; preds = %if.end95
  %59 = load i8*, i8** %dptr, align 4
  store i8 0, i8* %59, align 1
  br label %if.end102

if.end102:                                        ; preds = %if.then101, %if.end95
  %60 = load i32, i32* %ee, align 4
  %arraydecay103 = getelementptr inbounds [4097 x i8], [4097 x i8]* %pbuf, i32 0, i32 0
  %61 = load i8, i8* %arraydecay103, align 1
  %conv104 = sext i8 %61 to i32
  %tobool105 = icmp ne i32 %conv104, 0
  br i1 %tobool105, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end102
  %arraydecay106 = getelementptr inbounds [4097 x i8], [4097 x i8]* %pbuf, i32 0, i32 0
  br label %cond.end

cond.false:                                       ; preds = %if.end102
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond107 = phi i8* [ %arraydecay106, %cond.true ], [ getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i32 0, i32 0), %cond.false ]
  %call108 = call i32 @isgooderr(i32 %60, i8* %cond107)
  %tobool109 = icmp ne i32 %call108, 0
  br i1 %tobool109, label %if.then110, label %if.end111

if.then110:                                       ; preds = %cond.end
  %62 = load i32, i32* %ee, align 4
  store i32 %62, i32* %eno, align 4
  br label %if.end111

if.end111:                                        ; preds = %if.then110, %cond.end
  br label %if.end236

if.else112:                                       ; preds = %for.end
  %63 = load %struct.hashtable*, %struct.hashtable** @cmdnamtab, align 4
  %getnode = getelementptr inbounds %struct.hashtable, %struct.hashtable* %63, i32 0, i32 9
  %64 = load %struct.hashnode* (%struct.hashtable*, i8*)*, %struct.hashnode* (%struct.hashtable*, i8*)** %getnode, align 4
  %65 = load %struct.hashtable*, %struct.hashtable** @cmdnamtab, align 4
  %66 = load i8*, i8** %arg0, align 4
  %call113 = call %struct.hashnode* %64(%struct.hashtable* %65, i8* %66)
  %67 = bitcast %struct.hashnode* %call113 to %struct.cmdnam*
  store %struct.cmdnam* %67, %struct.cmdnam** %cn, align 4
  %tobool114 = icmp ne %struct.cmdnam* %67, null
  br i1 %tobool114, label %if.then115, label %if.end202

if.then115:                                       ; preds = %if.else112
  %68 = load %struct.cmdnam*, %struct.cmdnam** %cn, align 4
  %node = getelementptr inbounds %struct.cmdnam, %struct.cmdnam* %68, i32 0, i32 0
  %flags119 = getelementptr inbounds %struct.hashnode, %struct.hashnode* %node, i32 0, i32 2
  %69 = load i32, i32* %flags119, align 4
  %and120 = and i32 %69, 2
  %tobool121 = icmp ne i32 %and120, 0
  br i1 %tobool121, label %if.then122, label %if.else125

if.then122:                                       ; preds = %if.then115
  %arraydecay123 = getelementptr inbounds [4097 x i8], [4097 x i8]* %nn, i32 0, i32 0
  %70 = load %struct.cmdnam*, %struct.cmdnam** %cn, align 4
  %u = getelementptr inbounds %struct.cmdnam, %struct.cmdnam* %70, i32 0, i32 1
  %cmd = bitcast %union.anon* %u to i8**
  %71 = load i8*, i8** %cmd, align 4
  %call124 = call i8* @strcpy(i8* %arraydecay123, i8* %71)
  br label %if.end182

if.else125:                                       ; preds = %if.then115
  %72 = load i8**, i8*** @path, align 4
  store i8** %72, i8*** %pp, align 4
  br label %for.cond126

for.cond126:                                      ; preds = %for.inc163, %if.else125
  %73 = load i8**, i8*** %pp, align 4
  %74 = load %struct.cmdnam*, %struct.cmdnam** %cn, align 4
  %u127 = getelementptr inbounds %struct.cmdnam, %struct.cmdnam* %74, i32 0, i32 1
  %name = bitcast %union.anon* %u127 to i8***
  %75 = load i8**, i8*** %name, align 4
  %cmp128 = icmp ult i8** %73, %75
  br i1 %cmp128, label %for.body130, label %for.end165

for.body130:                                      ; preds = %for.cond126
  %76 = load i8**, i8*** %pp, align 4
  %77 = load i8*, i8** %76, align 4
  %78 = load i8, i8* %77, align 1
  %tobool131 = icmp ne i8 %78, 0
  br i1 %tobool131, label %lor.lhs.false132, label %if.then141

lor.lhs.false132:                                 ; preds = %for.body130
  %79 = load i8**, i8*** %pp, align 4
  %80 = load i8*, i8** %79, align 4
  %81 = load i8, i8* %80, align 1
  %conv133 = sext i8 %81 to i32
  %cmp134 = icmp eq i32 %conv133, 46
  br i1 %cmp134, label %land.lhs.true136, label %if.else147

land.lhs.true136:                                 ; preds = %lor.lhs.false132
  %82 = load i8**, i8*** %pp, align 4
  %83 = load i8*, i8** %82, align 4
  %arrayidx137 = getelementptr inbounds i8, i8* %83, i32 1
  %84 = load i8, i8* %arrayidx137, align 1
  %conv138 = sext i8 %84 to i32
  %cmp139 = icmp eq i32 %conv138, 0
  br i1 %cmp139, label %if.then141, label %if.else147

if.then141:                                       ; preds = %land.lhs.true136, %for.body130
  %85 = load i8*, i8** %arg0, align 4
  %86 = load i8**, i8*** %argv, align 4
  %87 = load i8**, i8*** %newenvp, align 4
  %call142 = call i32 @zexecve(i8* %85, i8** %86, i8** %87)
  store i32 %call142, i32* %ee, align 4
  %88 = load i32, i32* %ee, align 4
  %89 = load i8**, i8*** %pp, align 4
  %90 = load i8*, i8** %89, align 4
  %call143 = call i32 @isgooderr(i32 %88, i8* %90)
  %tobool144 = icmp ne i32 %call143, 0
  br i1 %tobool144, label %if.then145, label %if.end146

if.then145:                                       ; preds = %if.then141
  %91 = load i32, i32* %ee, align 4
  store i32 %91, i32* %eno, align 4
  br label %if.end146

if.end146:                                        ; preds = %if.then145, %if.then141
  br label %if.end162

if.else147:                                       ; preds = %land.lhs.true136, %lor.lhs.false132
  %92 = load i8**, i8*** %pp, align 4
  %93 = load i8*, i8** %92, align 4
  %94 = load i8, i8* %93, align 1
  %conv148 = sext i8 %94 to i32
  %cmp149 = icmp ne i32 %conv148, 47
  br i1 %cmp149, label %if.then151, label %if.end161

if.then151:                                       ; preds = %if.else147
  %arraydecay152 = getelementptr inbounds [16385 x i8], [16385 x i8]* %buf, i32 0, i32 0
  store i8* %arraydecay152, i8** %z, align 4
  %95 = load i8**, i8*** %pp, align 4
  %96 = load i8*, i8** %95, align 4
  call void @strucpy(i8** %z, i8* %96)
  %97 = load i8*, i8** %z, align 4
  %incdec.ptr153 = getelementptr inbounds i8, i8* %97, i32 1
  store i8* %incdec.ptr153, i8** %z, align 4
  store i8 47, i8* %97, align 1
  %98 = load i8*, i8** %z, align 4
  %99 = load i8*, i8** %arg0, align 4
  %call154 = call i8* @strcpy(i8* %98, i8* %99)
  %arraydecay155 = getelementptr inbounds [16385 x i8], [16385 x i8]* %buf, i32 0, i32 0
  %100 = load i8**, i8*** %argv, align 4
  %101 = load i8**, i8*** %newenvp, align 4
  %call156 = call i32 @zexecve(i8* %arraydecay155, i8** %100, i8** %101)
  store i32 %call156, i32* %ee, align 4
  %102 = load i32, i32* %ee, align 4
  %103 = load i8**, i8*** %pp, align 4
  %104 = load i8*, i8** %103, align 4
  %call157 = call i32 @isgooderr(i32 %102, i8* %104)
  %tobool158 = icmp ne i32 %call157, 0
  br i1 %tobool158, label %if.then159, label %if.end160

if.then159:                                       ; preds = %if.then151
  %105 = load i32, i32* %ee, align 4
  store i32 %105, i32* %eno, align 4
  br label %if.end160

if.end160:                                        ; preds = %if.then159, %if.then151
  br label %if.end161

if.end161:                                        ; preds = %if.end160, %if.else147
  br label %if.end162

if.end162:                                        ; preds = %if.end161, %if.end146
  br label %for.inc163

for.inc163:                                       ; preds = %if.end162
  %106 = load i8**, i8*** %pp, align 4
  %incdec.ptr164 = getelementptr inbounds i8*, i8** %106, i32 1
  store i8** %incdec.ptr164, i8*** %pp, align 4
  br label %for.cond126

for.end165:                                       ; preds = %for.cond126
  %arraydecay166 = getelementptr inbounds [4097 x i8], [4097 x i8]* %nn, i32 0, i32 0
  %107 = load %struct.cmdnam*, %struct.cmdnam** %cn, align 4
  %u167 = getelementptr inbounds %struct.cmdnam, %struct.cmdnam* %107, i32 0, i32 1
  %name168 = bitcast %union.anon* %u167 to i8***
  %108 = load i8**, i8*** %name168, align 4
  %tobool169 = icmp ne i8** %108, null
  br i1 %tobool169, label %cond.true170, label %cond.false173

cond.true170:                                     ; preds = %for.end165
  %109 = load %struct.cmdnam*, %struct.cmdnam** %cn, align 4
  %u171 = getelementptr inbounds %struct.cmdnam, %struct.cmdnam* %109, i32 0, i32 1
  %name172 = bitcast %union.anon* %u171 to i8***
  %110 = load i8**, i8*** %name172, align 4
  %111 = load i8*, i8** %110, align 4
  br label %cond.end174

cond.false173:                                    ; preds = %for.end165
  br label %cond.end174

cond.end174:                                      ; preds = %cond.false173, %cond.true170
  %cond175 = phi i8* [ %111, %cond.true170 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i32 0, i32 0), %cond.false173 ]
  %call176 = call i8* @strcpy(i8* %arraydecay166, i8* %cond175)
  %arraydecay177 = getelementptr inbounds [4097 x i8], [4097 x i8]* %nn, i32 0, i32 0
  %call178 = call i8* @strcat(i8* %arraydecay177, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i32 0, i32 0))
  %arraydecay179 = getelementptr inbounds [4097 x i8], [4097 x i8]* %nn, i32 0, i32 0
  %112 = load %struct.cmdnam*, %struct.cmdnam** %cn, align 4
  %node180 = getelementptr inbounds %struct.cmdnam, %struct.cmdnam* %112, i32 0, i32 0
  %nam = getelementptr inbounds %struct.hashnode, %struct.hashnode* %node180, i32 0, i32 1
  %113 = load i8*, i8** %nam, align 4
  %call181 = call i8* @strcat(i8* %arraydecay179, i8* %113)
  br label %if.end182

if.end182:                                        ; preds = %cond.end174, %if.then122
  %arraydecay183 = getelementptr inbounds [4097 x i8], [4097 x i8]* %nn, i32 0, i32 0
  %114 = load i8**, i8*** %argv, align 4
  %115 = load i8**, i8*** %newenvp, align 4
  %call184 = call i32 @zexecve(i8* %arraydecay183, i8** %114, i8** %115)
  store i32 %call184, i32* %ee, align 4
  %arraydecay185 = getelementptr inbounds [4097 x i8], [4097 x i8]* %nn, i32 0, i32 0
  %call186 = call i8* @strrchr(i8* %arraydecay185, i32 47)
  store i8* %call186, i8** %dptr118, align 4
  %tobool187 = icmp ne i8* %call186, null
  br i1 %tobool187, label %if.then188, label %if.end189

if.then188:                                       ; preds = %if.end182
  %116 = load i8*, i8** %dptr118, align 4
  store i8 0, i8* %116, align 1
  br label %if.end189

if.end189:                                        ; preds = %if.then188, %if.end182
  %117 = load i32, i32* %ee, align 4
  %arraydecay190 = getelementptr inbounds [4097 x i8], [4097 x i8]* %nn, i32 0, i32 0
  %118 = load i8, i8* %arraydecay190, align 1
  %conv191 = sext i8 %118 to i32
  %tobool192 = icmp ne i32 %conv191, 0
  br i1 %tobool192, label %cond.true193, label %cond.false195

cond.true193:                                     ; preds = %if.end189
  %arraydecay194 = getelementptr inbounds [4097 x i8], [4097 x i8]* %nn, i32 0, i32 0
  br label %cond.end196

cond.false195:                                    ; preds = %if.end189
  br label %cond.end196

cond.end196:                                      ; preds = %cond.false195, %cond.true193
  %cond197 = phi i8* [ %arraydecay194, %cond.true193 ], [ getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i32 0, i32 0), %cond.false195 ]
  %call198 = call i32 @isgooderr(i32 %117, i8* %cond197)
  %tobool199 = icmp ne i32 %call198, 0
  br i1 %tobool199, label %if.then200, label %if.end201

if.then200:                                       ; preds = %cond.end196
  %119 = load i32, i32* %ee, align 4
  store i32 %119, i32* %eno, align 4
  br label %if.end201

if.end201:                                        ; preds = %if.then200, %cond.end196
  br label %if.end202

if.end202:                                        ; preds = %if.end201, %if.else112
  %120 = load i8**, i8*** @path, align 4
  store i8** %120, i8*** %pp, align 4
  br label %for.cond203

for.cond203:                                      ; preds = %for.inc233, %if.end202
  %121 = load i8**, i8*** %pp, align 4
  %122 = load i8*, i8** %121, align 4
  %tobool204 = icmp ne i8* %122, null
  br i1 %tobool204, label %for.body205, label %for.end235

for.body205:                                      ; preds = %for.cond203
  %123 = load i8**, i8*** %pp, align 4
  %124 = load i8*, i8** %123, align 4
  %arrayidx206 = getelementptr inbounds i8, i8* %124, i32 0
  %125 = load i8, i8* %arrayidx206, align 1
  %tobool207 = icmp ne i8 %125, 0
  br i1 %tobool207, label %lor.lhs.false208, label %if.then216

lor.lhs.false208:                                 ; preds = %for.body205
  %126 = load i8**, i8*** %pp, align 4
  %127 = load i8*, i8** %126, align 4
  %arrayidx209 = getelementptr inbounds i8, i8* %127, i32 0
  %128 = load i8, i8* %arrayidx209, align 1
  %conv210 = sext i8 %128 to i32
  %cmp211 = icmp eq i32 %conv210, 46
  br i1 %cmp211, label %land.lhs.true213, label %if.else222

land.lhs.true213:                                 ; preds = %lor.lhs.false208
  %129 = load i8**, i8*** %pp, align 4
  %130 = load i8*, i8** %129, align 4
  %arrayidx214 = getelementptr inbounds i8, i8* %130, i32 1
  %131 = load i8, i8* %arrayidx214, align 1
  %tobool215 = icmp ne i8 %131, 0
  br i1 %tobool215, label %if.else222, label %if.then216

if.then216:                                       ; preds = %land.lhs.true213, %for.body205
  %132 = load i8*, i8** %arg0, align 4
  %133 = load i8**, i8*** %argv, align 4
  %134 = load i8**, i8*** %newenvp, align 4
  %call217 = call i32 @zexecve(i8* %132, i8** %133, i8** %134)
  store i32 %call217, i32* %ee, align 4
  %135 = load i32, i32* %ee, align 4
  %136 = load i8**, i8*** %pp, align 4
  %137 = load i8*, i8** %136, align 4
  %call218 = call i32 @isgooderr(i32 %135, i8* %137)
  %tobool219 = icmp ne i32 %call218, 0
  br i1 %tobool219, label %if.then220, label %if.end221

if.then220:                                       ; preds = %if.then216
  %138 = load i32, i32* %ee, align 4
  store i32 %138, i32* %eno, align 4
  br label %if.end221

if.end221:                                        ; preds = %if.then220, %if.then216
  br label %if.end232

if.else222:                                       ; preds = %land.lhs.true213, %lor.lhs.false208
  %arraydecay223 = getelementptr inbounds [16385 x i8], [16385 x i8]* %buf, i32 0, i32 0
  store i8* %arraydecay223, i8** %z, align 4
  %139 = load i8**, i8*** %pp, align 4
  %140 = load i8*, i8** %139, align 4
  call void @strucpy(i8** %z, i8* %140)
  %141 = load i8*, i8** %z, align 4
  %incdec.ptr224 = getelementptr inbounds i8, i8* %141, i32 1
  store i8* %incdec.ptr224, i8** %z, align 4
  store i8 47, i8* %141, align 1
  %142 = load i8*, i8** %z, align 4
  %143 = load i8*, i8** %arg0, align 4
  %call225 = call i8* @strcpy(i8* %142, i8* %143)
  %arraydecay226 = getelementptr inbounds [16385 x i8], [16385 x i8]* %buf, i32 0, i32 0
  %144 = load i8**, i8*** %argv, align 4
  %145 = load i8**, i8*** %newenvp, align 4
  %call227 = call i32 @zexecve(i8* %arraydecay226, i8** %144, i8** %145)
  store i32 %call227, i32* %ee, align 4
  %146 = load i32, i32* %ee, align 4
  %147 = load i8**, i8*** %pp, align 4
  %148 = load i8*, i8** %147, align 4
  %call228 = call i32 @isgooderr(i32 %146, i8* %148)
  %tobool229 = icmp ne i32 %call228, 0
  br i1 %tobool229, label %if.then230, label %if.end231

if.then230:                                       ; preds = %if.else222
  %149 = load i32, i32* %ee, align 4
  store i32 %149, i32* %eno, align 4
  br label %if.end231

if.end231:                                        ; preds = %if.then230, %if.else222
  br label %if.end232

if.end232:                                        ; preds = %if.end231, %if.end221
  br label %for.inc233

for.inc233:                                       ; preds = %if.end232
  %150 = load i8**, i8*** %pp, align 4
  %incdec.ptr234 = getelementptr inbounds i8*, i8** %150, i32 1
  store i8** %incdec.ptr234, i8*** %pp, align 4
  br label %for.cond203

for.end235:                                       ; preds = %for.cond203
  br label %if.end236

if.end236:                                        ; preds = %for.end235, %if.end111
  %151 = load i32, i32* %eno, align 4
  %tobool237 = icmp ne i32 %151, 0
  br i1 %tobool237, label %if.then238, label %if.else239

if.then238:                                       ; preds = %if.end236
  %152 = load i32, i32* %eno, align 4
  %153 = load i8*, i8** %arg0, align 4
  call void (i8*, ...) @zerr(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.9, i32 0, i32 0), i32 %152, i8* %153)
  br label %if.end246

if.else239:                                       ; preds = %if.end236
  %154 = load i8*, i8** %arg0, align 4
  %155 = load %union.linkroot*, %union.linkroot** %args.addr, align 4
  %call240 = call i32 @commandnotfound(i8* %154, %union.linkroot* %155)
  %cmp241 = icmp eq i32 %call240, 0
  br i1 %cmp241, label %if.then243, label %if.else244

if.then243:                                       ; preds = %if.else239
  %156 = load i32, i32* @lastval, align 4
  call void @_exit(i32 %156) #4
  unreachable

if.else244:                                       ; preds = %if.else239
  %157 = load i8*, i8** %arg0, align 4
  call void (i8*, ...) @zerr(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.92, i32 0, i32 0), i8* %157)
  br label %if.end245

if.end245:                                        ; preds = %if.else244
  br label %if.end246

if.end246:                                        ; preds = %if.end245, %if.then238
  %158 = load i32, i32* %eno, align 4
  %cmp247 = icmp eq i32 %158, 13
  br i1 %cmp247, label %lor.end252, label %lor.rhs249

lor.rhs249:                                       ; preds = %if.end246
  %159 = load i32, i32* %eno, align 4
  %cmp250 = icmp eq i32 %159, 8
  br label %lor.end252

lor.end252:                                       ; preds = %lor.rhs249, %if.end246
  %160 = phi i1 [ true, %if.end246 ], [ %cmp250, %lor.rhs249 ]
  %cond253 = select i1 %160, i32 126, i32 127
  call void @_exit(i32 %cond253) #4
  unreachable

return:                                           ; No predecessors!
  ret void
}

declare void @holdintr() #1

declare i32 @nice(i32) #1

declare i32 @ensurefeature(i8*, i8*, i8*) #1

declare i32 @bin_whence(i8*, i8**, %struct.options*, i32) #1

; Function Attrs: noinline nounwind
define internal i32 @cancd2(i8* %s) #0 {
entry:
  %s.addr = alloca i8*, align 4
  %buf = alloca %struct.stat, align 8
  %us = alloca i8*, align 4
  %us2 = alloca i8*, align 4
  %ret = alloca i32, align 4
  store i8* %s, i8** %s.addr, align 4
  store i8* null, i8** %us2, align 4
  %0 = load i8, i8* getelementptr inbounds ([181 x i8], [181 x i8]* @opts, i32 0, i32 30), align 1
  %tobool = icmp ne i8 %0, 0
  br i1 %tobool, label %if.else8, label %land.lhs.true

land.lhs.true:                                    ; preds = %entry
  %1 = load i8, i8* getelementptr inbounds ([181 x i8], [181 x i8]* @opts, i32 0, i32 31), align 1
  %tobool1 = icmp ne i8 %1, 0
  br i1 %tobool1, label %if.else8, label %if.then

if.then:                                          ; preds = %land.lhs.true
  %2 = load i8*, i8** %s.addr, align 4
  %3 = load i8, i8* %2, align 1
  %conv = sext i8 %3 to i32
  %cmp = icmp ne i32 %conv, 47
  br i1 %cmp, label %if.then3, label %if.else

if.then3:                                         ; preds = %if.then
  %4 = load i8*, i8** @pwd, align 4
  %arrayidx = getelementptr inbounds i8, i8* %4, i32 1
  %5 = load i8, i8* %arrayidx, align 1
  %conv4 = sext i8 %5 to i32
  %tobool5 = icmp ne i32 %conv4, 0
  br i1 %tobool5, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.then3
  %6 = load i8*, i8** @pwd, align 4
  br label %cond.end

cond.false:                                       ; preds = %if.then3
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %6, %cond.true ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i32 0, i32 0), %cond.false ]
  %7 = load i8*, i8** %s.addr, align 4
  %call = call i8* @tricat(i8* %cond, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i32 0, i32 0), i8* %7)
  store i8* %call, i8** %us, align 4
  br label %if.end

if.else:                                          ; preds = %if.then
  %8 = load i8*, i8** %s.addr, align 4
  %call6 = call i8* @ztrdup(i8* %8)
  store i8* %call6, i8** %us, align 4
  br label %if.end

if.end:                                           ; preds = %if.else, %cond.end
  %9 = load i8*, i8** %us, align 4
  store i8* %9, i8** %us2, align 4
  %call7 = call i32 @fixdir(i8* %9)
  br label %if.end10

if.else8:                                         ; preds = %land.lhs.true, %entry
  %10 = load i8*, i8** %s.addr, align 4
  %call9 = call i8* @unmeta(i8* %10)
  store i8* %call9, i8** %us, align 4
  br label %if.end10

if.end10:                                         ; preds = %if.else8, %if.end
  %11 = load i8*, i8** %us, align 4
  %call11 = call i32 @access(i8* %11, i32 1)
  %tobool12 = icmp ne i32 %call11, 0
  br i1 %tobool12, label %lor.end, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end10
  %12 = load i8*, i8** %us, align 4
  %call13 = call i32 @stat(i8* %12, %struct.stat* %buf)
  %tobool14 = icmp ne i32 %call13, 0
  br i1 %tobool14, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %lor.lhs.false
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %buf, i32 0, i32 6
  %13 = load i32, i32* %st_mode, align 8
  %and = and i32 %13, 61440
  %cmp15 = icmp eq i32 %and, 16384
  %lnot = xor i1 %cmp15, true
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false, %if.end10
  %14 = phi i1 [ true, %lor.lhs.false ], [ true, %if.end10 ], [ %lnot, %lor.rhs ]
  %lnot17 = xor i1 %14, true
  %lnot.ext = zext i1 %lnot17 to i32
  store i32 %lnot.ext, i32* %ret, align 4
  %15 = load i8*, i8** %us2, align 4
  %tobool18 = icmp ne i8* %15, null
  br i1 %tobool18, label %if.then19, label %if.end20

if.then19:                                        ; preds = %lor.end
  %16 = load i8*, i8** %us2, align 4
  call void @free(i8* %16)
  br label %if.end20

if.end20:                                         ; preds = %if.then19, %lor.end
  %17 = load i32, i32* %ret, align 4
  ret i32 %17
}

declare i8* @cd_able_vars(i8*) #1

declare i8* @tricat(i8*, i8*, i8*) #1

declare i32 @fixdir(i8*) #1

declare i8* @hrealloc(i8*, i32, i32) #1

; Function Attrs: noinline nounwind
define internal i32 @getpipe(i8* %cmd, i32 %nullexec) #0 {
entry:
  %retval = alloca i32, align 4
  %cmd.addr = alloca i8*, align 4
  %nullexec.addr = alloca i32, align 4
  %prog = alloca %struct.eprog*, align 4
  %pipes = alloca [2 x i32], align 4
  %out = alloca i32, align 4
  %pid = alloca i32, align 4
  %bgtime = alloca %struct.timeval, align 4
  %ends = alloca i8*, align 4
  store i8* %cmd, i8** %cmd.addr, align 4
  store i32 %nullexec, i32* %nullexec.addr, align 4
  %0 = load i8*, i8** %cmd.addr, align 4
  %1 = load i8, i8* %0, align 1
  %conv = sext i8 %1 to i32
  %cmp = icmp eq i32 %conv, -108
  %conv1 = zext i1 %cmp to i32
  store i32 %conv1, i32* %out, align 4
  %2 = load i8*, i8** %cmd.addr, align 4
  %call = call %struct.eprog* @parsecmd(i8* %2, i8** %ends)
  store %struct.eprog* %call, %struct.eprog** %prog, align 4
  %tobool = icmp ne %struct.eprog* %call, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval, align 4
  br label %return

if.end:                                           ; preds = %entry
  %3 = load i8*, i8** %ends, align 4
  %4 = load i8, i8* %3, align 1
  %tobool2 = icmp ne i8 %4, 0
  br i1 %tobool2, label %if.then3, label %if.end4

if.then3:                                         ; preds = %if.end
  call void (i8*, ...) @zerr(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.84, i32 0, i32 0))
  store i32 -1, i32* %retval, align 4
  br label %return

if.end4:                                          ; preds = %if.end
  %arraydecay = getelementptr inbounds [2 x i32], [2 x i32]* %pipes, i32 0, i32 0
  %call5 = call i32 @mpipe(i32* %arraydecay)
  %cmp6 = icmp slt i32 %call5, 0
  br i1 %cmp6, label %if.then8, label %if.end9

if.then8:                                         ; preds = %if.end4
  store i32 -1, i32* %retval, align 4
  br label %return

if.end9:                                          ; preds = %if.end4
  %call10 = call i32 @zfork(%struct.timeval* %bgtime)
  store i32 %call10, i32* %pid, align 4
  %tobool11 = icmp ne i32 %call10, 0
  br i1 %tobool11, label %if.then12, label %if.end28

if.then12:                                        ; preds = %if.end9
  %5 = load i32, i32* %out, align 4
  %arrayidx = getelementptr inbounds [2 x i32], [2 x i32]* %pipes, i32 0, i32 %5
  %6 = load i32, i32* %arrayidx, align 4
  %call13 = call i32 @zclose(i32 %6)
  %7 = load i32, i32* %pid, align 4
  %cmp14 = icmp eq i32 %7, -1
  br i1 %cmp14, label %if.then16, label %if.end20

if.then16:                                        ; preds = %if.then12
  %8 = load i32, i32* %out, align 4
  %tobool17 = icmp ne i32 %8, 0
  %lnot = xor i1 %tobool17, true
  %lnot.ext = zext i1 %lnot to i32
  %arrayidx18 = getelementptr inbounds [2 x i32], [2 x i32]* %pipes, i32 0, i32 %lnot.ext
  %9 = load i32, i32* %arrayidx18, align 4
  %call19 = call i32 @zclose(i32 %9)
  store i32 -1, i32* %retval, align 4
  br label %return

if.end20:                                         ; preds = %if.then12
  %10 = load i32, i32* %nullexec.addr, align 4
  %tobool21 = icmp ne i32 %10, 0
  br i1 %tobool21, label %if.end23, label %if.then22

if.then22:                                        ; preds = %if.end20
  %11 = load i32, i32* %pid, align 4
  call void @addproc(i32 %11, i8* null, i32 1, %struct.timeval* %bgtime)
  br label %if.end23

if.end23:                                         ; preds = %if.then22, %if.end20
  %12 = load i32, i32* %out, align 4
  %tobool24 = icmp ne i32 %12, 0
  %lnot25 = xor i1 %tobool24, true
  %lnot.ext26 = zext i1 %lnot25 to i32
  %arrayidx27 = getelementptr inbounds [2 x i32], [2 x i32]* %pipes, i32 0, i32 %lnot.ext26
  %13 = load i32, i32* %arrayidx27, align 4
  store i32 %13, i32* %retval, align 4
  br label %return

if.end28:                                         ; preds = %if.end9
  call void @entersubsh(i32 2)
  %14 = load i32, i32* %out, align 4
  %arrayidx29 = getelementptr inbounds [2 x i32], [2 x i32]* %pipes, i32 0, i32 %14
  %15 = load i32, i32* %arrayidx29, align 4
  %16 = load i32, i32* %out, align 4
  %call30 = call i32 @redup(i32 %15, i32 %16)
  call void @closem(i32 0, i32 0)
  call void @cmdpush(i32 24)
  %17 = load %struct.eprog*, %struct.eprog** %prog, align 4
  %18 = load i32, i32* %out, align 4
  %tobool31 = icmp ne i32 %18, 0
  %cond = select i1 %tobool31, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.19, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.20, i32 0, i32 0)
  call void @execode(%struct.eprog* %17, i32 0, i32 1, i8* %cond)
  call void @cmdpop()
  %19 = load i32, i32* @lastval, align 4
  call void @_exit(i32 %19) #4
  unreachable

return:                                           ; preds = %if.end23, %if.then16, %if.then8, %if.then3, %if.then
  %20 = load i32, i32* %retval, align 4
  ret i32 %20
}

declare i32 @gettempfile(i8*, i32, i8**) #1

declare i32 @unlink(i8*) #1

; Function Attrs: noinline nounwind
define internal void @closeallelse(%struct.multio* %mn) #0 {
entry:
  %mn.addr = alloca %struct.multio*, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %openmax = alloca i32, align 4
  store %struct.multio* %mn, %struct.multio** %mn.addr, align 4
  %0 = load i32, i32* @fdtable_size, align 4
  store i32 %0, i32* %openmax, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc12, %entry
  %1 = load i32, i32* %i, align 4
  %2 = load i32, i32* %openmax, align 4
  %cmp = icmp slt i32 %1, %2
  br i1 %cmp, label %for.body, label %for.end14

for.body:                                         ; preds = %for.cond
  %3 = load %struct.multio*, %struct.multio** %mn.addr, align 4
  %pipe = getelementptr inbounds %struct.multio, %struct.multio* %3, i32 0, i32 2
  %4 = load i32, i32* %pipe, align 4
  %5 = load i32, i32* %i, align 4
  %cmp1 = icmp ne i32 %4, %5
  br i1 %cmp1, label %if.then, label %if.end11

if.then:                                          ; preds = %for.body
  store i32 0, i32* %j, align 4
  br label %for.cond2

for.cond2:                                        ; preds = %for.inc, %if.then
  %6 = load i32, i32* %j, align 4
  %7 = load %struct.multio*, %struct.multio** %mn.addr, align 4
  %ct = getelementptr inbounds %struct.multio, %struct.multio* %7, i32 0, i32 0
  %8 = load i32, i32* %ct, align 4
  %cmp3 = icmp slt i32 %6, %8
  br i1 %cmp3, label %for.body4, label %for.end

for.body4:                                        ; preds = %for.cond2
  %9 = load %struct.multio*, %struct.multio** %mn.addr, align 4
  %fds = getelementptr inbounds %struct.multio, %struct.multio* %9, i32 0, i32 3
  %10 = load i32, i32* %j, align 4
  %arrayidx = getelementptr inbounds [8 x i32], [8 x i32]* %fds, i32 0, i32 %10
  %11 = load i32, i32* %arrayidx, align 4
  %12 = load i32, i32* %i, align 4
  %cmp5 = icmp eq i32 %11, %12
  br i1 %cmp5, label %if.then6, label %if.end

if.then6:                                         ; preds = %for.body4
  br label %for.end

if.end:                                           ; preds = %for.body4
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %13 = load i32, i32* %j, align 4
  %inc = add nsw i32 %13, 1
  store i32 %inc, i32* %j, align 4
  br label %for.cond2

for.end:                                          ; preds = %if.then6, %for.cond2
  %14 = load i32, i32* %j, align 4
  %15 = load %struct.multio*, %struct.multio** %mn.addr, align 4
  %ct7 = getelementptr inbounds %struct.multio, %struct.multio* %15, i32 0, i32 0
  %16 = load i32, i32* %ct7, align 4
  %cmp8 = icmp eq i32 %14, %16
  br i1 %cmp8, label %if.then9, label %if.end10

if.then9:                                         ; preds = %for.end
  %17 = load i32, i32* %i, align 4
  %call = call i32 @zclose(i32 %17)
  br label %if.end10

if.end10:                                         ; preds = %if.then9, %for.end
  br label %if.end11

if.end11:                                         ; preds = %if.end10, %for.body
  br label %for.inc12

for.inc12:                                        ; preds = %if.end11
  %18 = load i32, i32* %i, align 4
  %inc13 = add nsw i32 %18, 1
  store i32 %inc13, i32* %i, align 4
  br label %for.cond

for.end14:                                        ; preds = %for.cond
  ret void
}

declare void @delenv(%struct.param*) #1

declare void @copyparam(%struct.param*, %struct.param*, i32) #1

declare void @addenv(%struct.param*, i8*) #1

declare i32 @isatty(i32) #1

declare i32 @getpgrp() #1

declare i8* @zgetenv(i8*) #1

declare i32 @unsetenv(i8*) #1

; Function Attrs: noinline nounwind
define internal i8** @makecline(%union.linkroot* %list) #0 {
entry:
  %list.addr = alloca %union.linkroot*, align 4
  %node = alloca %struct.linknode*, align 4
  %argv = alloca i8**, align 4
  %ptr = alloca i8**, align 4
  store %union.linkroot* %list, %union.linkroot** %list.addr, align 4
  %0 = load %union.linkroot*, %union.linkroot** %list.addr, align 4
  %call = call i32 @countlinknodes(%union.linkroot* %0)
  %add = add nsw i32 %call, 4
  %mul = mul i32 %add, 4
  %call1 = call i8* @hcalloc(i32 %mul)
  %1 = bitcast i8* %call1 to i8**
  %add.ptr = getelementptr inbounds i8*, i8** %1, i32 2
  store i8** %add.ptr, i8*** %argv, align 4
  store i8** %add.ptr, i8*** %ptr, align 4
  %2 = load i8, i8* getelementptr inbounds ([181 x i8], [181 x i8]* @opts, i32 0, i32 178), align 1
  %tobool = icmp ne i8 %2, 0
  br i1 %tobool, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %3 = load i32, i32* @doneps4, align 4
  %tobool2 = icmp ne i32 %3, 0
  br i1 %tobool2, label %if.end, label %if.then3

if.then3:                                         ; preds = %if.then
  call void @printprompt4()
  br label %if.end

if.end:                                           ; preds = %if.then3, %if.then
  %4 = load %union.linkroot*, %union.linkroot** %list.addr, align 4
  %list4 = bitcast %union.linkroot* %4 to %struct.linklist*
  %first = getelementptr inbounds %struct.linklist, %struct.linklist* %list4, i32 0, i32 0
  %5 = load %struct.linknode*, %struct.linknode** %first, align 4
  store %struct.linknode* %5, %struct.linknode** %node, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end
  %6 = load %struct.linknode*, %struct.linknode** %node, align 4
  %tobool5 = icmp ne %struct.linknode* %6, null
  br i1 %tobool5, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %7 = load %struct.linknode*, %struct.linknode** %node, align 4
  %dat = getelementptr inbounds %struct.linknode, %struct.linknode* %7, i32 0, i32 2
  %8 = load i8*, i8** %dat, align 4
  %9 = load i8**, i8*** %ptr, align 4
  %incdec.ptr = getelementptr inbounds i8*, i8** %9, i32 1
  store i8** %incdec.ptr, i8*** %ptr, align 4
  store i8* %8, i8** %9, align 4
  %10 = load %struct.linknode*, %struct.linknode** %node, align 4
  %dat6 = getelementptr inbounds %struct.linknode, %struct.linknode* %10, i32 0, i32 2
  %11 = load i8*, i8** %dat6, align 4
  %12 = load %struct._IO_FILE*, %struct._IO_FILE** @xtrerr, align 4
  %call7 = call i8* @quotedzputs(i8* %11, %struct._IO_FILE* %12)
  %13 = load %struct.linknode*, %struct.linknode** %node, align 4
  %next = getelementptr inbounds %struct.linknode, %struct.linknode* %13, i32 0, i32 0
  %14 = load %struct.linknode*, %struct.linknode** %next, align 4
  %tobool8 = icmp ne %struct.linknode* %14, null
  br i1 %tobool8, label %if.then9, label %if.end11

if.then9:                                         ; preds = %for.body
  %15 = load %struct._IO_FILE*, %struct._IO_FILE** @xtrerr, align 4
  %call10 = call i32 @fputc(i32 32, %struct._IO_FILE* %15)
  br label %if.end11

if.end11:                                         ; preds = %if.then9, %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end11
  %16 = load %struct.linknode*, %struct.linknode** %node, align 4
  %next12 = getelementptr inbounds %struct.linknode, %struct.linknode* %16, i32 0, i32 0
  %17 = load %struct.linknode*, %struct.linknode** %next12, align 4
  store %struct.linknode* %17, %struct.linknode** %node, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %18 = load %struct._IO_FILE*, %struct._IO_FILE** @xtrerr, align 4
  %call13 = call i32 @fputc(i32 10, %struct._IO_FILE* %18)
  %19 = load %struct._IO_FILE*, %struct._IO_FILE** @xtrerr, align 4
  %call14 = call i32 @fflush(%struct._IO_FILE* %19)
  br label %if.end25

if.else:                                          ; preds = %entry
  %20 = load %union.linkroot*, %union.linkroot** %list.addr, align 4
  %list15 = bitcast %union.linkroot* %20 to %struct.linklist*
  %first16 = getelementptr inbounds %struct.linklist, %struct.linklist* %list15, i32 0, i32 0
  %21 = load %struct.linknode*, %struct.linknode** %first16, align 4
  store %struct.linknode* %21, %struct.linknode** %node, align 4
  br label %for.cond17

for.cond17:                                       ; preds = %for.inc22, %if.else
  %22 = load %struct.linknode*, %struct.linknode** %node, align 4
  %tobool18 = icmp ne %struct.linknode* %22, null
  br i1 %tobool18, label %for.body19, label %for.end24

for.body19:                                       ; preds = %for.cond17
  %23 = load %struct.linknode*, %struct.linknode** %node, align 4
  %dat20 = getelementptr inbounds %struct.linknode, %struct.linknode* %23, i32 0, i32 2
  %24 = load i8*, i8** %dat20, align 4
  %25 = load i8**, i8*** %ptr, align 4
  %incdec.ptr21 = getelementptr inbounds i8*, i8** %25, i32 1
  store i8** %incdec.ptr21, i8*** %ptr, align 4
  store i8* %24, i8** %25, align 4
  br label %for.inc22

for.inc22:                                        ; preds = %for.body19
  %26 = load %struct.linknode*, %struct.linknode** %node, align 4
  %next23 = getelementptr inbounds %struct.linknode, %struct.linknode* %26, i32 0, i32 0
  %27 = load %struct.linknode*, %struct.linknode** %next23, align 4
  store %struct.linknode* %27, %struct.linknode** %node, align 4
  br label %for.cond17

for.end24:                                        ; preds = %for.cond17
  br label %if.end25

if.end25:                                         ; preds = %for.end24, %for.end
  %28 = load i8**, i8*** %ptr, align 4
  store i8* null, i8** %28, align 4
  %29 = load i8**, i8*** %argv, align 4
  ret i8** %29
}

; Function Attrs: noinline nounwind
define internal i32 @zexecve(i8* %pth, i8** %argv, i8** %newenvp) #0 {
entry:
  %pth.addr = alloca i8*, align 4
  %argv.addr = alloca i8**, align 4
  %newenvp.addr = alloca i8**, align 4
  %eno = alloca i32, align 4
  %eep = alloca i8**, align 4
  %agg.tmp = alloca %struct.__sigset_t, align 4
  %tmp = alloca %struct.__sigset_t, align 4
  %execvebuf = alloca [65 x i8], align 1
  %ptr = alloca i8*, align 4
  %ptr2 = alloca i8*, align 4
  %argv0 = alloca i8*, align 4
  %fd = alloca i32, align 4
  %ct = alloca i32, align 4
  %t0 = alloca i32, align 4
  %pprog = alloca i8*, align 4
  %agg.tmp103 = alloca %struct.__sigset_t, align 4
  %tmp104 = alloca %struct.__sigset_t, align 4
  %agg.tmp114 = alloca %struct.__sigset_t, align 4
  %tmp115 = alloca %struct.__sigset_t, align 4
  %agg.tmp120 = alloca %struct.__sigset_t, align 4
  %tmp121 = alloca %struct.__sigset_t, align 4
  %agg.tmp131 = alloca %struct.__sigset_t, align 4
  %tmp132 = alloca %struct.__sigset_t, align 4
  %agg.tmp156 = alloca %struct.__sigset_t, align 4
  %tmp157 = alloca %struct.__sigset_t, align 4
  store i8* %pth, i8** %pth.addr, align 4
  store i8** %argv, i8*** %argv.addr, align 4
  store i8** %newenvp, i8*** %newenvp.addr, align 4
  %0 = load i8*, i8** %pth.addr, align 4
  %call = call i8* @unmetafy(i8* %0, i32* null)
  %1 = load i8**, i8*** %argv.addr, align 4
  store i8** %1, i8*** %eep, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load i8**, i8*** %eep, align 4
  %3 = load i8*, i8** %2, align 4
  %tobool = icmp ne i8* %3, null
  br i1 %tobool, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %4 = load i8**, i8*** %eep, align 4
  %5 = load i8*, i8** %4, align 4
  %6 = load i8*, i8** %pth.addr, align 4
  %cmp = icmp ne i8* %5, %6
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  %7 = load i8**, i8*** %eep, align 4
  %8 = load i8*, i8** %7, align 4
  %call1 = call i8* @unmetafy(i8* %8, i32* null)
  br label %if.end

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %9 = load i8**, i8*** %eep, align 4
  %incdec.ptr = getelementptr inbounds i8*, i8** %9, i32 1
  store i8** %incdec.ptr, i8*** %eep, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store i8 95, i8* getelementptr inbounds ([8193 x i8], [8193 x i8]* @zexecve.buf, i32 0, i32 0), align 1
  store i8 61, i8* getelementptr inbounds ([8193 x i8], [8193 x i8]* @zexecve.buf, i32 0, i32 1), align 1
  %10 = load i8*, i8** %pth.addr, align 4
  %11 = load i8, i8* %10, align 1
  %conv = sext i8 %11 to i32
  %cmp2 = icmp eq i32 %conv, 47
  br i1 %cmp2, label %if.then4, label %if.else

if.then4:                                         ; preds = %for.end
  %12 = load i8*, i8** %pth.addr, align 4
  %call5 = call i8* @strcpy(i8* getelementptr inbounds ([8193 x i8], [8193 x i8]* @zexecve.buf, i32 0, i32 2), i8* %12)
  br label %if.end7

if.else:                                          ; preds = %for.end
  %13 = load i8*, i8** @pwd, align 4
  %14 = load i8*, i8** %pth.addr, align 4
  %call6 = call i32 (i8*, i8*, ...) @sprintf(i8* getelementptr inbounds ([8193 x i8], [8193 x i8]* @zexecve.buf, i32 0, i32 2), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.29, i32 0, i32 0), i8* %13, i8* %14)
  br label %if.end7

if.end7:                                          ; preds = %if.else, %if.then4
  %call8 = call i32 @zputenv(i8* getelementptr inbounds ([8193 x i8], [8193 x i8]* @zexecve.buf, i32 0, i32 0))
  %15 = load i8**, i8*** %newenvp.addr, align 4
  %cmp9 = icmp eq i8** %15, null
  br i1 %cmp9, label %if.then11, label %if.end12

if.then11:                                        ; preds = %if.end7
  %16 = load i8**, i8*** @environ, align 4
  store i8** %16, i8*** %newenvp.addr, align 4
  br label %if.end12

if.end12:                                         ; preds = %if.then11, %if.end7
  call void @signal_mask(%struct.__sigset_t* sret %agg.tmp, i32 28)
  call void @signal_unblock(%struct.__sigset_t* sret %tmp, %struct.__sigset_t* byval align 4 %agg.tmp)
  %17 = load i8*, i8** %pth.addr, align 4
  %18 = load i8**, i8*** %argv.addr, align 4
  %19 = load i8**, i8*** %newenvp.addr, align 4
  %call13 = call i32 @execve(i8* %17, i8** %18, i8** %19)
  %call14 = call i32* @__errno_location()
  %20 = load i32, i32* %call14, align 4
  store i32 %20, i32* %eno, align 4
  %cmp15 = icmp eq i32 %20, 8
  br i1 %cmp15, label %if.then19, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end12
  %21 = load i32, i32* %eno, align 4
  %cmp17 = icmp eq i32 %21, 2
  br i1 %cmp17, label %if.then19, label %if.end169

if.then19:                                        ; preds = %lor.lhs.false, %if.end12
  %22 = load i8*, i8** %pth.addr, align 4
  %call27 = call i32 (i8*, i32, ...) @open(i8* %22, i32 256)
  store i32 %call27, i32* %fd, align 4
  %cmp28 = icmp sge i32 %call27, 0
  br i1 %cmp28, label %if.then30, label %if.else166

if.then30:                                        ; preds = %if.then19
  %23 = load i8**, i8*** %argv.addr, align 4
  %24 = load i8*, i8** %23, align 4
  store i8* %24, i8** %argv0, align 4
  %25 = load i8*, i8** %pth.addr, align 4
  %26 = load i8**, i8*** %argv.addr, align 4
  store i8* %25, i8** %26, align 4
  %arrayidx = getelementptr inbounds [65 x i8], [65 x i8]* %execvebuf, i32 0, i32 0
  store i8 0, i8* %arrayidx, align 1
  %27 = load i32, i32* %fd, align 4
  %arraydecay = getelementptr inbounds [65 x i8], [65 x i8]* %execvebuf, i32 0, i32 0
  %call31 = call i32 @read(i32 %27, i8* %arraydecay, i32 64)
  store i32 %call31, i32* %ct, align 4
  %28 = load i32, i32* %fd, align 4
  %call32 = call i32 @close(i32 %28)
  %29 = load i32, i32* %ct, align 4
  %cmp33 = icmp sge i32 %29, 0
  br i1 %cmp33, label %if.then35, label %if.else163

if.then35:                                        ; preds = %if.then30
  %arrayidx36 = getelementptr inbounds [65 x i8], [65 x i8]* %execvebuf, i32 0, i32 0
  %30 = load i8, i8* %arrayidx36, align 1
  %conv37 = sext i8 %30 to i32
  %cmp38 = icmp eq i32 %conv37, 35
  br i1 %cmp38, label %if.then40, label %if.else137

if.then40:                                        ; preds = %if.then35
  %arrayidx41 = getelementptr inbounds [65 x i8], [65 x i8]* %execvebuf, i32 0, i32 1
  %31 = load i8, i8* %arrayidx41, align 1
  %conv42 = sext i8 %31 to i32
  %cmp43 = icmp eq i32 %conv42, 33
  br i1 %cmp43, label %if.then45, label %if.else126

if.then45:                                        ; preds = %if.then40
  store i32 0, i32* %t0, align 4
  br label %for.cond46

for.cond46:                                       ; preds = %for.inc56, %if.then45
  %32 = load i32, i32* %t0, align 4
  %33 = load i32, i32* %ct, align 4
  %cmp47 = icmp ne i32 %32, %33
  br i1 %cmp47, label %for.body49, label %for.end57

for.body49:                                       ; preds = %for.cond46
  %34 = load i32, i32* %t0, align 4
  %arrayidx50 = getelementptr inbounds [65 x i8], [65 x i8]* %execvebuf, i32 0, i32 %34
  %35 = load i8, i8* %arrayidx50, align 1
  %conv51 = sext i8 %35 to i32
  %cmp52 = icmp eq i32 %conv51, 10
  br i1 %cmp52, label %if.then54, label %if.end55

if.then54:                                        ; preds = %for.body49
  br label %for.end57

if.end55:                                         ; preds = %for.body49
  br label %for.inc56

for.inc56:                                        ; preds = %if.end55
  %36 = load i32, i32* %t0, align 4
  %inc = add nsw i32 %36, 1
  store i32 %inc, i32* %t0, align 4
  br label %for.cond46

for.end57:                                        ; preds = %if.then54, %for.cond46
  br label %while.cond

while.cond:                                       ; preds = %while.body, %for.end57
  %37 = load i32, i32* %t0, align 4
  %arrayidx58 = getelementptr inbounds [65 x i8], [65 x i8]* %execvebuf, i32 0, i32 %37
  %38 = load i8, i8* %arrayidx58, align 1
  %idxprom = zext i8 %38 to i32
  %arrayidx59 = getelementptr inbounds [256 x i16], [256 x i16]* @typtab, i32 0, i32 %idxprom
  %39 = load i16, i16* %arrayidx59, align 2
  %conv60 = sext i16 %39 to i32
  %and = and i32 %conv60, 8
  %tobool61 = icmp ne i32 %and, 0
  br i1 %tobool61, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %40 = load i32, i32* %t0, align 4
  %dec = add nsw i32 %40, -1
  store i32 %dec, i32* %t0, align 4
  %arrayidx62 = getelementptr inbounds [65 x i8], [65 x i8]* %execvebuf, i32 0, i32 %40
  store i8 0, i8* %arrayidx62, align 1
  br label %while.cond

while.end:                                        ; preds = %while.cond
  %arrayidx63 = getelementptr inbounds [65 x i8], [65 x i8]* %execvebuf, i32 0, i32 64
  store i8 0, i8* %arrayidx63, align 1
  %arraydecay64 = getelementptr inbounds [65 x i8], [65 x i8]* %execvebuf, i32 0, i32 0
  %add.ptr = getelementptr inbounds i8, i8* %arraydecay64, i32 2
  store i8* %add.ptr, i8** %ptr, align 4
  br label %for.cond65

for.cond65:                                       ; preds = %for.inc72, %while.end
  %41 = load i8*, i8** %ptr, align 4
  %42 = load i8, i8* %41, align 1
  %conv66 = sext i8 %42 to i32
  %tobool67 = icmp ne i32 %conv66, 0
  br i1 %tobool67, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %for.cond65
  %43 = load i8*, i8** %ptr, align 4
  %44 = load i8, i8* %43, align 1
  %conv68 = sext i8 %44 to i32
  %cmp69 = icmp eq i32 %conv68, 32
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond65
  %45 = phi i1 [ false, %for.cond65 ], [ %cmp69, %land.rhs ]
  br i1 %45, label %for.body71, label %for.end74

for.body71:                                       ; preds = %land.end
  br label %for.inc72

for.inc72:                                        ; preds = %for.body71
  %46 = load i8*, i8** %ptr, align 4
  %incdec.ptr73 = getelementptr inbounds i8, i8* %46, i32 1
  store i8* %incdec.ptr73, i8** %ptr, align 4
  br label %for.cond65

for.end74:                                        ; preds = %land.end
  %47 = load i8*, i8** %ptr, align 4
  store i8* %47, i8** %ptr2, align 4
  br label %for.cond75

for.cond75:                                       ; preds = %for.inc84, %for.end74
  %48 = load i8*, i8** %ptr, align 4
  %49 = load i8, i8* %48, align 1
  %conv76 = sext i8 %49 to i32
  %tobool77 = icmp ne i32 %conv76, 0
  br i1 %tobool77, label %land.rhs78, label %land.end82

land.rhs78:                                       ; preds = %for.cond75
  %50 = load i8*, i8** %ptr, align 4
  %51 = load i8, i8* %50, align 1
  %conv79 = sext i8 %51 to i32
  %cmp80 = icmp ne i32 %conv79, 32
  br label %land.end82

land.end82:                                       ; preds = %land.rhs78, %for.cond75
  %52 = phi i1 [ false, %for.cond75 ], [ %cmp80, %land.rhs78 ]
  br i1 %52, label %for.body83, label %for.end86

for.body83:                                       ; preds = %land.end82
  br label %for.inc84

for.inc84:                                        ; preds = %for.body83
  %53 = load i8*, i8** %ptr, align 4
  %incdec.ptr85 = getelementptr inbounds i8, i8* %53, i32 1
  store i8* %incdec.ptr85, i8** %ptr, align 4
  br label %for.cond75

for.end86:                                        ; preds = %land.end82
  %54 = load i32, i32* %eno, align 4
  %cmp87 = icmp eq i32 %54, 2
  br i1 %cmp87, label %if.then89, label %if.else108

if.then89:                                        ; preds = %for.end86
  %55 = load i8*, i8** %ptr, align 4
  %56 = load i8, i8* %55, align 1
  %tobool91 = icmp ne i8 %56, 0
  br i1 %tobool91, label %if.then92, label %if.end93

if.then92:                                        ; preds = %if.then89
  %57 = load i8*, i8** %ptr, align 4
  store i8 0, i8* %57, align 1
  br label %if.end93

if.end93:                                         ; preds = %if.then92, %if.then89
  %58 = load i8*, i8** %ptr2, align 4
  %59 = load i8, i8* %58, align 1
  %conv94 = sext i8 %59 to i32
  %cmp95 = icmp ne i32 %conv94, 47
  br i1 %cmp95, label %land.lhs.true, label %if.end107

land.lhs.true:                                    ; preds = %if.end93
  %60 = load i8*, i8** %ptr2, align 4
  %call97 = call i8* @pathprog(i8* %60, i8** null)
  store i8* %call97, i8** %pprog, align 4
  %tobool98 = icmp ne i8* %call97, null
  br i1 %tobool98, label %if.then99, label %if.end107

if.then99:                                        ; preds = %land.lhs.true
  %61 = load i8*, i8** %ptr2, align 4
  %62 = load i8**, i8*** %argv.addr, align 4
  %arrayidx100 = getelementptr inbounds i8*, i8** %62, i32 -2
  store i8* %61, i8** %arrayidx100, align 4
  %63 = load i8*, i8** %ptr, align 4
  %add.ptr101 = getelementptr inbounds i8, i8* %63, i32 1
  %64 = load i8**, i8*** %argv.addr, align 4
  %arrayidx102 = getelementptr inbounds i8*, i8** %64, i32 -1
  store i8* %add.ptr101, i8** %arrayidx102, align 4
  call void @signal_mask(%struct.__sigset_t* sret %agg.tmp103, i32 28)
  call void @signal_unblock(%struct.__sigset_t* sret %tmp104, %struct.__sigset_t* byval align 4 %agg.tmp103)
  %65 = load i8*, i8** %pprog, align 4
  %66 = load i8**, i8*** %argv.addr, align 4
  %add.ptr105 = getelementptr inbounds i8*, i8** %66, i32 -2
  %67 = load i8**, i8*** %newenvp.addr, align 4
  %call106 = call i32 @execve(i8* %65, i8** %add.ptr105, i8** %67)
  br label %if.end107

if.end107:                                        ; preds = %if.then99, %land.lhs.true, %if.end93
  %68 = load i8*, i8** %pth.addr, align 4
  %69 = load i8*, i8** %ptr2, align 4
  %70 = load i32, i32* %eno, align 4
  call void (i8*, ...) @zerr(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.93, i32 0, i32 0), i8* %68, i8* %69, i32 %70)
  br label %if.end125

if.else108:                                       ; preds = %for.end86
  %71 = load i8*, i8** %ptr, align 4
  %72 = load i8, i8* %71, align 1
  %tobool109 = icmp ne i8 %72, 0
  br i1 %tobool109, label %if.then110, label %if.else118

if.then110:                                       ; preds = %if.else108
  %73 = load i8*, i8** %ptr, align 4
  store i8 0, i8* %73, align 1
  %74 = load i8*, i8** %ptr2, align 4
  %75 = load i8**, i8*** %argv.addr, align 4
  %arrayidx111 = getelementptr inbounds i8*, i8** %75, i32 -2
  store i8* %74, i8** %arrayidx111, align 4
  %76 = load i8*, i8** %ptr, align 4
  %add.ptr112 = getelementptr inbounds i8, i8* %76, i32 1
  %77 = load i8**, i8*** %argv.addr, align 4
  %arrayidx113 = getelementptr inbounds i8*, i8** %77, i32 -1
  store i8* %add.ptr112, i8** %arrayidx113, align 4
  call void @signal_mask(%struct.__sigset_t* sret %agg.tmp114, i32 28)
  call void @signal_unblock(%struct.__sigset_t* sret %tmp115, %struct.__sigset_t* byval align 4 %agg.tmp114)
  %78 = load i8*, i8** %ptr2, align 4
  %79 = load i8**, i8*** %argv.addr, align 4
  %add.ptr116 = getelementptr inbounds i8*, i8** %79, i32 -2
  %80 = load i8**, i8*** %newenvp.addr, align 4
  %call117 = call i32 @execve(i8* %78, i8** %add.ptr116, i8** %80)
  br label %if.end124

if.else118:                                       ; preds = %if.else108
  %81 = load i8*, i8** %ptr2, align 4
  %82 = load i8**, i8*** %argv.addr, align 4
  %arrayidx119 = getelementptr inbounds i8*, i8** %82, i32 -1
  store i8* %81, i8** %arrayidx119, align 4
  call void @signal_mask(%struct.__sigset_t* sret %agg.tmp120, i32 28)
  call void @signal_unblock(%struct.__sigset_t* sret %tmp121, %struct.__sigset_t* byval align 4 %agg.tmp120)
  %83 = load i8*, i8** %ptr2, align 4
  %84 = load i8**, i8*** %argv.addr, align 4
  %add.ptr122 = getelementptr inbounds i8*, i8** %84, i32 -1
  %85 = load i8**, i8*** %newenvp.addr, align 4
  %call123 = call i32 @execve(i8* %83, i8** %add.ptr122, i8** %85)
  br label %if.end124

if.end124:                                        ; preds = %if.else118, %if.then110
  br label %if.end125

if.end125:                                        ; preds = %if.end124, %if.end107
  br label %if.end136

if.else126:                                       ; preds = %if.then40
  %86 = load i32, i32* %eno, align 4
  %cmp127 = icmp eq i32 %86, 8
  br i1 %cmp127, label %if.then129, label %if.end135

if.then129:                                       ; preds = %if.else126
  %87 = load i8**, i8*** %argv.addr, align 4
  %arrayidx130 = getelementptr inbounds i8*, i8** %87, i32 -1
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.94, i32 0, i32 0), i8** %arrayidx130, align 4
  call void @signal_mask(%struct.__sigset_t* sret %agg.tmp131, i32 28)
  call void @signal_unblock(%struct.__sigset_t* sret %tmp132, %struct.__sigset_t* byval align 4 %agg.tmp131)
  %88 = load i8**, i8*** %argv.addr, align 4
  %add.ptr133 = getelementptr inbounds i8*, i8** %88, i32 -1
  %89 = load i8**, i8*** %newenvp.addr, align 4
  %call134 = call i32 @execve(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.95, i32 0, i32 0), i8** %add.ptr133, i8** %89)
  br label %if.end135

if.end135:                                        ; preds = %if.then129, %if.else126
  br label %if.end136

if.end136:                                        ; preds = %if.end135, %if.end125
  br label %if.end162

if.else137:                                       ; preds = %if.then35
  %90 = load i32, i32* %eno, align 4
  %cmp138 = icmp eq i32 %90, 8
  br i1 %cmp138, label %if.then140, label %if.end161

if.then140:                                       ; preds = %if.else137
  store i32 0, i32* %t0, align 4
  br label %for.cond141

for.cond141:                                      ; preds = %for.inc149, %if.then140
  %91 = load i32, i32* %t0, align 4
  %92 = load i32, i32* %ct, align 4
  %cmp142 = icmp ne i32 %91, %92
  br i1 %cmp142, label %for.body144, label %for.end151

for.body144:                                      ; preds = %for.cond141
  %93 = load i32, i32* %t0, align 4
  %arrayidx145 = getelementptr inbounds [65 x i8], [65 x i8]* %execvebuf, i32 0, i32 %93
  %94 = load i8, i8* %arrayidx145, align 1
  %tobool146 = icmp ne i8 %94, 0
  br i1 %tobool146, label %if.end148, label %if.then147

if.then147:                                       ; preds = %for.body144
  br label %for.end151

if.end148:                                        ; preds = %for.body144
  br label %for.inc149

for.inc149:                                       ; preds = %if.end148
  %95 = load i32, i32* %t0, align 4
  %inc150 = add nsw i32 %95, 1
  store i32 %inc150, i32* %t0, align 4
  br label %for.cond141

for.end151:                                       ; preds = %if.then147, %for.cond141
  %96 = load i32, i32* %t0, align 4
  %97 = load i32, i32* %ct, align 4
  %cmp152 = icmp eq i32 %96, %97
  br i1 %cmp152, label %if.then154, label %if.end160

if.then154:                                       ; preds = %for.end151
  %98 = load i8**, i8*** %argv.addr, align 4
  %arrayidx155 = getelementptr inbounds i8*, i8** %98, i32 -1
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.94, i32 0, i32 0), i8** %arrayidx155, align 4
  call void @signal_mask(%struct.__sigset_t* sret %agg.tmp156, i32 28)
  call void @signal_unblock(%struct.__sigset_t* sret %tmp157, %struct.__sigset_t* byval align 4 %agg.tmp156)
  %99 = load i8**, i8*** %argv.addr, align 4
  %add.ptr158 = getelementptr inbounds i8*, i8** %99, i32 -1
  %100 = load i8**, i8*** %newenvp.addr, align 4
  %call159 = call i32 @execve(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.95, i32 0, i32 0), i8** %add.ptr158, i8** %100)
  br label %if.end160

if.end160:                                        ; preds = %if.then154, %for.end151
  br label %if.end161

if.end161:                                        ; preds = %if.end160, %if.else137
  br label %if.end162

if.end162:                                        ; preds = %if.end161, %if.end136
  br label %if.end165

if.else163:                                       ; preds = %if.then30
  %call164 = call i32* @__errno_location()
  %101 = load i32, i32* %call164, align 4
  store i32 %101, i32* %eno, align 4
  br label %if.end165

if.end165:                                        ; preds = %if.else163, %if.end162
  %102 = load i8*, i8** %argv0, align 4
  %103 = load i8**, i8*** %argv.addr, align 4
  store i8* %102, i8** %103, align 4
  br label %if.end168

if.else166:                                       ; preds = %if.then19
  %call167 = call i32* @__errno_location()
  %104 = load i32, i32* %call167, align 4
  store i32 %104, i32* %eno, align 4
  br label %if.end168

if.end168:                                        ; preds = %if.else166, %if.end165
  br label %if.end169

if.end169:                                        ; preds = %if.end168, %lor.lhs.false
  %105 = load i8*, i8** %pth.addr, align 4
  %call170 = call i8* @metafy(i8* %105, i32 -1, i32 5)
  store i8* %call170, i8** %pth.addr, align 4
  %106 = load i8**, i8*** %argv.addr, align 4
  store i8** %106, i8*** %eep, align 4
  br label %for.cond171

for.cond171:                                      ; preds = %for.inc179, %if.end169
  %107 = load i8**, i8*** %eep, align 4
  %108 = load i8*, i8** %107, align 4
  %tobool172 = icmp ne i8* %108, null
  br i1 %tobool172, label %for.body173, label %for.end181

for.body173:                                      ; preds = %for.cond171
  %109 = load i8**, i8*** %eep, align 4
  %110 = load i8*, i8** %109, align 4
  %111 = load i8*, i8** %pth.addr, align 4
  %cmp174 = icmp ne i8* %110, %111
  br i1 %cmp174, label %if.then176, label %if.end178

if.then176:                                       ; preds = %for.body173
  %112 = load i8**, i8*** %eep, align 4
  %113 = load i8*, i8** %112, align 4
  %call177 = call i8* @metafy(i8* %113, i32 -1, i32 5)
  br label %if.end178

if.end178:                                        ; preds = %if.then176, %for.body173
  br label %for.inc179

for.inc179:                                       ; preds = %if.end178
  %114 = load i8**, i8*** %eep, align 4
  %incdec.ptr180 = getelementptr inbounds i8*, i8** %114, i32 1
  store i8** %incdec.ptr180, i8*** %eep, align 4
  br label %for.cond171

for.end181:                                       ; preds = %for.cond171
  %115 = load i32, i32* %eno, align 4
  ret i32 %115
}

; Function Attrs: noinline nounwind
define internal i32 @commandnotfound(i8* %arg0, %union.linkroot* %args) #0 {
entry:
  %retval = alloca i32, align 4
  %arg0.addr = alloca i8*, align 4
  %args.addr = alloca %union.linkroot*, align 4
  %shf = alloca %struct.shfunc*, align 4
  store i8* %arg0, i8** %arg0.addr, align 4
  store %union.linkroot* %args, %union.linkroot** %args.addr, align 4
  %0 = load %struct.hashtable*, %struct.hashtable** @shfunctab, align 4
  %getnode = getelementptr inbounds %struct.hashtable, %struct.hashtable* %0, i32 0, i32 9
  %1 = load %struct.hashnode* (%struct.hashtable*, i8*)*, %struct.hashnode* (%struct.hashtable*, i8*)** %getnode, align 4
  %2 = load %struct.hashtable*, %struct.hashtable** @shfunctab, align 4
  %call = call %struct.hashnode* %1(%struct.hashtable* %2, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.96, i32 0, i32 0))
  %3 = bitcast %struct.hashnode* %call to %struct.shfunc*
  store %struct.shfunc* %3, %struct.shfunc** %shf, align 4
  %4 = load %struct.shfunc*, %struct.shfunc** %shf, align 4
  %tobool = icmp ne %struct.shfunc* %4, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i32 127, i32* @lastval, align 4
  store i32 1, i32* %retval, align 4
  br label %return

if.end:                                           ; preds = %entry
  %5 = load %union.linkroot*, %union.linkroot** %args.addr, align 4
  %6 = load %union.linkroot*, %union.linkroot** %args.addr, align 4
  %node = bitcast %union.linkroot* %6 to %struct.linknode*
  %7 = load i8*, i8** %arg0.addr, align 4
  %call1 = call %struct.linknode* @insertlinknode(%union.linkroot* %5, %struct.linknode* %node, i8* %7)
  %8 = load %struct.shfunc*, %struct.shfunc** %shf, align 4
  %9 = load %union.linkroot*, %union.linkroot** %args.addr, align 4
  %call2 = call i32 @doshfunc(%struct.shfunc* %8, %union.linkroot* %9, i32 1)
  store i32 %call2, i32* @lastval, align 4
  store i32 0, i32* %retval, align 4
  br label %return

return:                                           ; preds = %if.end, %if.then
  %10 = load i32, i32* %retval, align 4
  ret i32 %10
}

declare i8* @strrchr(i8*, i32) #1

; Function Attrs: noinline nounwind
define internal i32 @isgooderr(i32 %e, i8* %dir) #0 {
entry:
  %e.addr = alloca i32, align 4
  %dir.addr = alloca i8*, align 4
  store i32 %e, i32* %e.addr, align 4
  store i8* %dir, i8** %dir.addr, align 4
  %0 = load i32, i32* %e.addr, align 4
  %cmp = icmp ne i32 %0, 13
  br i1 %cmp, label %land.lhs.true, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %1 = load i8*, i8** %dir.addr, align 4
  %call = call i32 @access(i8* %1, i32 1)
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %land.end, label %land.lhs.true

land.lhs.true:                                    ; preds = %lor.lhs.false, %entry
  %2 = load i32, i32* %e.addr, align 4
  %cmp1 = icmp ne i32 %2, 2
  br i1 %cmp1, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %land.lhs.true
  %3 = load i32, i32* %e.addr, align 4
  %cmp2 = icmp ne i32 %3, 20
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true, %lor.lhs.false
  %4 = phi i1 [ false, %land.lhs.true ], [ false, %lor.lhs.false ], [ %cmp2, %land.rhs ]
  %land.ext = zext i1 %4 to i32
  ret i32 %land.ext
}

declare void @signal_mask(%struct.__sigset_t* sret, i32) #1

declare i32 @execve(i8*, i8**, i8**) #1

declare i8* @pathprog(i8*, i8**) #1

declare i32 @expandjobtab() #1

declare i32 @gettimeofday(%struct.timeval*, i8*) #1

declare i32 @fork() #1

declare void @unsettrap(i32) #1

declare void @attachtty(i32) #1

declare void @release_pgrp() #1

declare void (i32)* @signal(i32, void (i32)*) #1

declare void @clearjobtab(i32) #1

declare void @get_usage() #1

declare i8* @dupstrpfx(i8*, i32) #1

attributes #0 = { noinline nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn }

!llvm.ident = !{!0}

!0 = !{!"clang version 4.0.0  (emscripten 1.37.22 : 1.37.22)"}
